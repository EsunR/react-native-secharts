!(function(t, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? e(exports)
    : 'function' == typeof define && define.amd
    ? define(['exports'], e)
    : e((t.echarts = {}));
})(this, function(t) {
  'use strict';
  var e;
  'undefined' != typeof window
    ? (e = window.__DEV__)
    : 'undefined' != typeof global && (e = global.__DEV__),
    void 0 === e && (e = !0);
  var D = e,
    i = 2311,
    n = function() {
      return i++;
    },
    v =
      'object' == typeof wx && 'function' == typeof wx.getSystemInfoSync
        ? {
            browser: {},
            os: {},
            node: !1,
            wxa: !0,
            canvasSupported: !0,
            svgSupported: !1,
            touchEventsSupported: !0,
            domSupported: !1,
          }
        : 'undefined' == typeof document && 'undefined' != typeof self
        ? {
            browser: {},
            os: {},
            node: !1,
            worker: !0,
            canvasSupported: !0,
            domSupported: !1,
          }
        : 'undefined' == typeof navigator
        ? {
            browser: {},
            os: {},
            node: !0,
            worker: !1,
            canvasSupported: !0,
            svgSupported: !0,
            domSupported: !1,
          }
        : (function(t) {
            var e = {},
              i = t.match(/Firefox\/([\d.]+)/),
              n =
                t.match(/MSIE\s([\d.]+)/) ||
                t.match(/Trident\/.+?rv:(([\d.]+))/),
              o = t.match(/Edge\/([\d.]+)/),
              a = /micromessenger/i.test(t);
            i && ((e.firefox = !0), (e.version = i[1]));
            n && ((e.ie = !0), (e.version = n[1]));
            o && ((e.edge = !0), (e.version = o[1]));
            a && (e.weChat = !0);
            return {
              browser: e,
              os: {},
              node: !1,
              canvasSupported: !!document.createElement('canvas').getContext,
              svgSupported: 'undefined' != typeof SVGRect,
              touchEventsSupported:
                'ontouchstart' in window && !e.ie && !e.edge,
              pointerEventsSupported:
                'onpointerdown' in window &&
                (e.edge || (e.ie && 11 <= e.version)),
              domSupported: 'undefined' != typeof document,
            };
          })(navigator.userAgent);
  var s = {
      '[object Function]': 1,
      '[object RegExp]': 1,
      '[object Date]': 1,
      '[object Error]': 1,
      '[object CanvasGradient]': 1,
      '[object CanvasPattern]': 1,
      '[object Image]': 1,
      '[object Canvas]': 1,
    },
    l = {
      '[object Int8Array]': 1,
      '[object Uint8Array]': 1,
      '[object Uint8ClampedArray]': 1,
      '[object Int16Array]': 1,
      '[object Uint16Array]': 1,
      '[object Int32Array]': 1,
      '[object Uint32Array]': 1,
      '[object Float32Array]': 1,
      '[object Float64Array]': 1,
    },
    u = Object.prototype.toString,
    o = Array.prototype,
    r = o.forEach,
    h = o.filter,
    a = o.slice,
    c = o.map,
    d = o.reduce,
    f = {};
  function p(t, e) {
    'createCanvas' === t && (x = null), (f[t] = e);
  }
  function k(t) {
    if (null == t || 'object' != typeof t) return t;
    var e = t,
      i = u.call(t);
    if ('[object Array]' === i) {
      if (!Q(t)) {
        e = [];
        for (var n = 0, o = t.length; n < o; n++) e[n] = k(t[n]);
      }
    } else if (l[i]) {
      if (!Q(t)) {
        var a = t.constructor;
        if (t.constructor.from) e = a.from(t);
        else {
          e = new a(t.length);
          for (n = 0, o = t.length; n < o; n++) e[n] = k(t[n]);
        }
      }
    } else if (!s[i] && !Q(t) && !W(t))
      for (var r in ((e = {}), t)) t.hasOwnProperty(r) && (e[r] = k(t[r]));
    return e;
  }
  function m(t, e, i) {
    if (!V(e) || !V(t)) return i ? k(e) : t;
    for (var n in e)
      if (e.hasOwnProperty(n)) {
        var o = t[n],
          a = e[n];
        !V(a) ||
        !V(o) ||
        R(a) ||
        R(o) ||
        W(a) ||
        W(o) ||
        G(a) ||
        G(o) ||
        Q(a) ||
        Q(o)
          ? (!i && n in t) || (t[n] = k(e[n]))
          : m(o, a, i);
      }
    return t;
  }
  function g(t, e) {
    for (var i = t[0], n = 1, o = t.length; n < o; n++) i = m(i, t[n], e);
    return i;
  }
  function P(t, e) {
    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
    return t;
  }
  function C(t, e, i) {
    for (var n in e)
      e.hasOwnProperty(n) && (i ? null != e[n] : null == t[n]) && (t[n] = e[n]);
    return t;
  }
  function y() {
    return f.createCanvas();
  }
  var x;
  function _() {
    return (x = x || y().getContext('2d'));
  }
  function w(t, e) {
    if (t) {
      if (t.indexOf) return t.indexOf(e);
      for (var i = 0, n = t.length; i < n; i++) if (t[i] === e) return i;
    }
    return -1;
  }
  function b(t, e) {
    var i = t.prototype;
    function n() {}
    for (var o in ((n.prototype = e.prototype), (t.prototype = new n()), i))
      i.hasOwnProperty(o) && (t.prototype[o] = i[o]);
    (t.prototype.constructor = t).superClass = e;
  }
  function S(t, e, i) {
    C(
      (t = 'prototype' in t ? t.prototype : t),
      (e = 'prototype' in e ? e.prototype : e),
      i,
    );
  }
  function N(t) {
    if (t) return 'string' != typeof t && 'number' == typeof t.length;
  }
  function E(t, e, i) {
    if (t && e)
      if (t.forEach && t.forEach === r) t.forEach(e, i);
      else if (t.length === +t.length)
        for (var n = 0, o = t.length; n < o; n++) e.call(i, t[n], n, t);
      else for (var a in t) t.hasOwnProperty(a) && e.call(i, t[a], a, t);
  }
  function O(t, e, i) {
    if (t && e) {
      if (t.map && t.map === c) return t.map(e, i);
      for (var n = [], o = 0, a = t.length; o < a; o++)
        n.push(e.call(i, t[o], o, t));
      return n;
    }
  }
  function M(t, e, i, n) {
    if (t && e) {
      if (t.reduce && t.reduce === d) return t.reduce(e, i, n);
      for (var o = 0, a = t.length; o < a; o++) i = e.call(n, i, t[o], o, t);
      return i;
    }
  }
  function I(t, e, i) {
    if (t && e) {
      if (t.filter && t.filter === h) return t.filter(e, i);
      for (var n = [], o = 0, a = t.length; o < a; o++)
        e.call(i, t[o], o, t) && n.push(t[o]);
      return n;
    }
  }
  function T(t, e, i) {
    if (t && e)
      for (var n = 0, o = t.length; n < o; n++)
        if (e.call(i, t[n], n, t)) return t[n];
  }
  function A(t, e) {
    var i = a.call(arguments, 2);
    return function() {
      return t.apply(e, i.concat(a.call(arguments)));
    };
  }
  function L(t) {
    var e = a.call(arguments, 1);
    return function() {
      return t.apply(this, e.concat(a.call(arguments)));
    };
  }
  function R(t) {
    return '[object Array]' === u.call(t);
  }
  function z(t) {
    return 'function' == typeof t;
  }
  function B(t) {
    return '[object String]' === u.call(t);
  }
  function V(t) {
    var e = typeof t;
    return 'function' == e || (!!t && 'object' == e);
  }
  function G(t) {
    return !!s[u.call(t)];
  }
  function F(t) {
    return !!l[u.call(t)];
  }
  function W(t) {
    return (
      'object' == typeof t &&
      'number' == typeof t.nodeType &&
      'object' == typeof t.ownerDocument
    );
  }
  function H(t) {
    return t != t;
  }
  function Z(t) {
    for (var e = 0, i = arguments.length; e < i; e++)
      if (null != arguments[e]) return arguments[e];
  }
  function U(t, e) {
    return null != t ? t : e;
  }
  function X(t, e, i) {
    return null != t ? t : null != e ? e : i;
  }
  function Y() {
    return Function.call.apply(a, arguments);
  }
  function j(t) {
    if ('number' == typeof t) return [t, t, t, t];
    var e = t.length;
    return 2 === e
      ? [t[0], t[1], t[0], t[1]]
      : 3 === e
      ? [t[0], t[1], t[2], t[1]]
      : t;
  }
  function q(t, e) {
    if (!t) throw new Error(e);
  }
  function K(t) {
    return null == t
      ? null
      : 'function' == typeof t.trim
      ? t.trim()
      : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  }
  f.createCanvas = function() {
    return document.createElement('canvas');
  };
  var $ = '__ec_primitive__';
  function J(t) {
    t[$] = !0;
  }
  function Q(t) {
    return t[$];
  }
  function tt(t) {
    var i = R(t);
    this.data = {};
    var n = this;
    function e(t, e) {
      i ? n.set(t, e) : n.set(e, t);
    }
    t instanceof tt ? t.each(e) : t && E(t, e);
  }
  function et(t) {
    return new tt(t);
  }
  function it(t, e) {
    for (
      var i = new t.constructor(t.length + e.length), n = 0;
      n < t.length;
      n++
    )
      i[n] = t[n];
    var o = t.length;
    for (n = 0; n < e.length; n++) i[n + o] = e[n];
    return i;
  }
  function nt() {}
  tt.prototype = {
    constructor: tt,
    get: function(t) {
      return this.data.hasOwnProperty(t) ? this.data[t] : null;
    },
    set: function(t, e) {
      return (this.data[t] = e);
    },
    each: function(t, e) {
      for (var i in (void 0 !== e && (t = A(t, e)), this.data))
        this.data.hasOwnProperty(i) && t(this.data[i], i);
    },
    removeKey: function(t) {
      delete this.data[t];
    },
  };
  var ot = (Object.freeze || Object)({
      $override: p,
      clone: k,
      merge: m,
      mergeAll: g,
      extend: P,
      defaults: C,
      createCanvas: y,
      getContext: _,
      indexOf: w,
      inherits: b,
      mixin: S,
      isArrayLike: N,
      each: E,
      map: O,
      reduce: M,
      filter: I,
      find: T,
      bind: A,
      curry: L,
      isArray: R,
      isFunction: z,
      isString: B,
      isObject: V,
      isBuiltInObject: G,
      isTypedArray: F,
      isDom: W,
      eqNaN: H,
      retrieve: Z,
      retrieve2: U,
      retrieve3: X,
      slice: Y,
      normalizeCssArray: j,
      assert: q,
      trim: K,
      setAsPrimitive: J,
      isPrimitive: Q,
      createHashMap: et,
      concatArray: it,
      noop: nt,
    }),
    at = 'undefined' == typeof Float32Array ? Array : Float32Array;
  function rt(t, e) {
    var i = new at(2);
    return (
      null == t && (t = 0), null == e && (e = 0), (i[0] = t), (i[1] = e), i
    );
  }
  function st(t, e) {
    return (t[0] = e[0]), (t[1] = e[1]), t;
  }
  function lt(t) {
    var e = new at(2);
    return (e[0] = t[0]), (e[1] = t[1]), e;
  }
  function ut(t, e, i) {
    return (t[0] = e), (t[1] = i), t;
  }
  function ht(t, e, i) {
    return (t[0] = e[0] + i[0]), (t[1] = e[1] + i[1]), t;
  }
  function ct(t, e, i, n) {
    return (t[0] = e[0] + i[0] * n), (t[1] = e[1] + i[1] * n), t;
  }
  function dt(t, e, i) {
    return (t[0] = e[0] - i[0]), (t[1] = e[1] - i[1]), t;
  }
  function ft(t) {
    return Math.sqrt(gt(t));
  }
  var pt = ft;
  function gt(t) {
    return t[0] * t[0] + t[1] * t[1];
  }
  var mt = gt;
  function vt(t, e, i) {
    return (t[0] = e[0] * i), (t[1] = e[1] * i), t;
  }
  function yt(t, e) {
    var i = ft(e);
    return (
      0 === i
        ? ((t[0] = 0), (t[1] = 0))
        : ((t[0] = e[0] / i), (t[1] = e[1] / i)),
      t
    );
  }
  function xt(t, e) {
    return Math.sqrt(
      (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]),
    );
  }
  var _t = xt;
  function wt(t, e) {
    return (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]);
  }
  var bt = wt;
  function St(t, e, i, n) {
    return (
      (t[0] = e[0] + n * (i[0] - e[0])), (t[1] = e[1] + n * (i[1] - e[1])), t
    );
  }
  function Mt(t, e, i) {
    var n = e[0],
      o = e[1];
    return (
      (t[0] = i[0] * n + i[2] * o + i[4]),
      (t[1] = i[1] * n + i[3] * o + i[5]),
      t
    );
  }
  function It(t, e, i) {
    return (t[0] = Math.min(e[0], i[0])), (t[1] = Math.min(e[1], i[1])), t;
  }
  function Tt(t, e, i) {
    return (t[0] = Math.max(e[0], i[0])), (t[1] = Math.max(e[1], i[1])), t;
  }
  var At = (Object.freeze || Object)({
    create: rt,
    copy: st,
    clone: lt,
    set: ut,
    add: ht,
    scaleAndAdd: ct,
    sub: dt,
    len: ft,
    length: pt,
    lenSquare: gt,
    lengthSquare: mt,
    mul: function(t, e, i) {
      return (t[0] = e[0] * i[0]), (t[1] = e[1] * i[1]), t;
    },
    div: function(t, e, i) {
      return (t[0] = e[0] / i[0]), (t[1] = e[1] / i[1]), t;
    },
    dot: function(t, e) {
      return t[0] * e[0] + t[1] * e[1];
    },
    scale: vt,
    normalize: yt,
    distance: xt,
    dist: _t,
    distanceSquare: wt,
    distSquare: bt,
    negate: function(t, e) {
      return (t[0] = -e[0]), (t[1] = -e[1]), t;
    },
    lerp: St,
    applyTransform: Mt,
    min: It,
    max: Tt,
  });
  function Dt() {
    this.on('mousedown', this._dragStart, this),
      this.on('mousemove', this._drag, this),
      this.on('mouseup', this._dragEnd, this);
  }
  function Ct(t, e) {
    return {target: t, topTarget: e && e.topTarget};
  }
  Dt.prototype = {
    constructor: Dt,
    _dragStart: function(t) {
      for (var e = t.target; e && !e.draggable; ) e = e.parent;
      e &&
        (((this._draggingTarget = e).dragging = !0),
        (this._x = t.offsetX),
        (this._y = t.offsetY),
        this.dispatchToElement(Ct(e, t), 'dragstart', t.event));
    },
    _drag: function(t) {
      var e = this._draggingTarget;
      if (e) {
        var i = t.offsetX,
          n = t.offsetY,
          o = i - this._x,
          a = n - this._y;
        (this._x = i),
          (this._y = n),
          e.drift(o, a, t),
          this.dispatchToElement(Ct(e, t), 'drag', t.event);
        var r = this.findHover(i, n, e).target,
          s = this._dropTarget;
        e !== (this._dropTarget = r) &&
          (s &&
            r !== s &&
            this.dispatchToElement(Ct(s, t), 'dragleave', t.event),
          r &&
            r !== s &&
            this.dispatchToElement(Ct(r, t), 'dragenter', t.event));
      }
    },
    _dragEnd: function(t) {
      var e = this._draggingTarget;
      e && (e.dragging = !1),
        this.dispatchToElement(Ct(e, t), 'dragend', t.event),
        this._dropTarget &&
          this.dispatchToElement(Ct(this._dropTarget, t), 'drop', t.event),
        (this._draggingTarget = null),
        (this._dropTarget = null);
    },
  };
  var Lt = Array.prototype.slice,
    kt = function(t) {
      (this._$handlers = {}), (this._$eventProcessor = t);
    };
  function Pt(t, e, i, n, o, a) {
    var r = t._$handlers;
    if (('function' == typeof i && ((o = n), (n = i), (i = null)), !n || !e))
      return t;
    (i = (function(t, e) {
      var i = t._$eventProcessor;
      return null != e && i && i.normalizeQuery && (e = i.normalizeQuery(e)), e;
    })(t, i)),
      r[e] || (r[e] = []);
    for (var s = 0; s < r[e].length; s++) if (r[e][s].h === n) return t;
    var l = {
        h: n,
        one: a,
        query: i,
        ctx: o || t,
        callAtLast: n.zrEventfulCallAtLast,
      },
      u = r[e].length - 1,
      h = r[e][u];
    return h && h.callAtLast ? r[e].splice(u, 0, l) : r[e].push(l), t;
  }
  kt.prototype = {
    constructor: kt,
    one: function(t, e, i, n) {
      return Pt(this, t, e, i, n, !0);
    },
    on: function(t, e, i, n) {
      return Pt(this, t, e, i, n, !1);
    },
    isSilent: function(t) {
      var e = this._$handlers;
      return !e[t] || !e[t].length;
    },
    off: function(t, e) {
      var i = this._$handlers;
      if (!t) return (this._$handlers = {}), this;
      if (e) {
        if (i[t]) {
          for (var n = [], o = 0, a = i[t].length; o < a; o++)
            i[t][o].h !== e && n.push(i[t][o]);
          i[t] = n;
        }
        i[t] && 0 === i[t].length && delete i[t];
      } else delete i[t];
      return this;
    },
    trigger: function(t) {
      var e = this._$handlers[t],
        i = this._$eventProcessor;
      if (e) {
        var n = arguments,
          o = n.length;
        3 < o && (n = Lt.call(n, 1));
        for (var a = e.length, r = 0; r < a; ) {
          var s = e[r];
          if (i && i.filter && null != s.query && !i.filter(t, s.query)) r++;
          else {
            switch (o) {
              case 1:
                s.h.call(s.ctx);
                break;
              case 2:
                s.h.call(s.ctx, n[1]);
                break;
              case 3:
                s.h.call(s.ctx, n[1], n[2]);
                break;
              default:
                s.h.apply(s.ctx, n);
            }
            s.one ? (e.splice(r, 1), a--) : r++;
          }
        }
      }
      return i && i.afterTrigger && i.afterTrigger(t), this;
    },
    triggerWithContext: function(t) {
      var e = this._$handlers[t],
        i = this._$eventProcessor;
      if (e) {
        var n = arguments,
          o = n.length;
        4 < o && (n = Lt.call(n, 1, n.length - 1));
        for (var a = n[n.length - 1], r = e.length, s = 0; s < r; ) {
          var l = e[s];
          if (i && i.filter && null != l.query && !i.filter(t, l.query)) s++;
          else {
            switch (o) {
              case 1:
                l.h.call(a);
                break;
              case 2:
                l.h.call(a, n[1]);
                break;
              case 3:
                l.h.call(a, n[1], n[2]);
                break;
              default:
                l.h.apply(a, n);
            }
            l.one ? (e.splice(s, 1), r--) : s++;
          }
        }
      }
      return i && i.afterTrigger && i.afterTrigger(t), this;
    },
  };
  var Nt = Math.log(2);
  function Ot(t, e, i, n, o, a) {
    var r = n + '-' + o,
      s = t.length;
    if (a.hasOwnProperty(r)) return a[r];
    if (1 === e) {
      var l = Math.round(Math.log(((1 << s) - 1) & ~o) / Nt);
      return t[i][l];
    }
    for (var u = n | (1 << i), h = i + 1; n & (1 << h); ) h++;
    for (var c = 0, d = 0, f = 0; d < s; d++) {
      var p = 1 << d;
      p & o ||
        ((c += (f % 2 ? -1 : 1) * t[i][d] * Ot(t, e - 1, h, u, o | p, a)), f++);
    }
    return (a[r] = c);
  }
  function Et(t, e) {
    var i = [
        [t[0], t[1], 1, 0, 0, 0, -e[0] * t[0], -e[0] * t[1]],
        [0, 0, 0, t[0], t[1], 1, -e[1] * t[0], -e[1] * t[1]],
        [t[2], t[3], 1, 0, 0, 0, -e[2] * t[2], -e[2] * t[3]],
        [0, 0, 0, t[2], t[3], 1, -e[3] * t[2], -e[3] * t[3]],
        [t[4], t[5], 1, 0, 0, 0, -e[4] * t[4], -e[4] * t[5]],
        [0, 0, 0, t[4], t[5], 1, -e[5] * t[4], -e[5] * t[5]],
        [t[6], t[7], 1, 0, 0, 0, -e[6] * t[6], -e[6] * t[7]],
        [0, 0, 0, t[6], t[7], 1, -e[7] * t[6], -e[7] * t[7]],
      ],
      n = {},
      o = Ot(i, 8, 0, 0, 0, n);
    if (0 !== o) {
      for (var a = [], r = 0; r < 8; r++)
        for (var s = 0; s < 8; s++)
          null == a[s] && (a[s] = 0),
            (a[s] +=
              ((((r + s) % 2 ? -1 : 1) *
                Ot(i, 7, 0 === r ? 1 : 0, 1 << r, 1 << s, n)) /
                o) *
              e[r]);
      return function(t, e, i) {
        var n = e * a[6] + i * a[7] + 1;
        (t[0] = (e * a[0] + i * a[1] + a[2]) / n),
          (t[1] = (e * a[3] + i * a[4] + a[5]) / n);
      };
    }
  }
  var Rt = '___zrEVENTSAVED',
    zt = [];
  function Bt(t, e, i, n, o) {
    if (e.getBoundingClientRect && v.domSupported && !Vt(e)) {
      var a = e[Rt] || (e[Rt] = {}),
        r = (function(t, e, i) {
          for (
            var n = i ? 'invTrans' : 'trans',
              o = e[n],
              a = e.srcCoords,
              r = !0,
              s = [],
              l = [],
              u = 0;
            u < 4;
            u++
          ) {
            var h = t[u].getBoundingClientRect(),
              c = 2 * u,
              d = h.left,
              f = h.top;
            s.push(d, f),
              (r = r && a && d === a[c] && f === a[1 + c]),
              l.push(t[u].offsetLeft, t[u].offsetTop);
          }
          return r && o
            ? o
            : ((e.srcCoords = s), (e[n] = i ? Et(l, s) : Et(s, l)));
        })(
          (function(t, e) {
            var i = e.markers;
            if (i) return i;
            i = e.markers = [];
            for (
              var n = ['left', 'right'], o = ['top', 'bottom'], a = 0;
              a < 4;
              a++
            ) {
              var r = document.createElement('div'),
                s = r.style,
                l = a % 2,
                u = (a >> 1) % 2;
              (s.cssText = [
                'position: absolute',
                'visibility: hidden',
                'padding: 0',
                'margin: 0',
                'border-width: 0',
                'user-select: none',
                'width:0',
                'height:0',
                n[l] + ':0',
                o[u] + ':0',
                n[1 - l] + ':auto',
                o[1 - u] + ':auto',
                '',
              ].join('!important;')),
                t.appendChild(r),
                i.push(r);
            }
            return i;
          })(e, a),
          a,
          o,
        );
      if (r) return r(t, i, n), !0;
    }
    return !1;
  }
  function Vt(t) {
    return 'CANVAS' === t.nodeName.toUpperCase();
  }
  var Gt = 'undefined' != typeof window && !!window.addEventListener,
    Ft = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
    Wt = [];
  function Ht(t, e, i, n) {
    return (
      (i = i || {}),
      n || !v.canvasSupported
        ? Zt(t, e, i)
        : v.browser.firefox && null != e.layerX && e.layerX !== e.offsetX
        ? ((i.zrX = e.layerX), (i.zrY = e.layerY))
        : null != e.offsetX
        ? ((i.zrX = e.offsetX), (i.zrY = e.offsetY))
        : Zt(t, e, i),
      i
    );
  }
  function Zt(t, e, i) {
    if (v.domSupported && t.getBoundingClientRect) {
      var n = e.clientX,
        o = e.clientY;
      if (Vt(t)) {
        var a = t.getBoundingClientRect();
        return (i.zrX = n - a.left), void (i.zrY = o - a.top);
      }
      if (Bt(Wt, t, n, o)) return (i.zrX = Wt[0]), void (i.zrY = Wt[1]);
    }
    i.zrX = i.zrY = 0;
  }
  function Ut(t) {
    return t || window.event;
  }
  function Xt(t, e, i) {
    if (null != (e = Ut(e)).zrX) return e;
    var n = e.type;
    if (n && 0 <= n.indexOf('touch')) {
      var o = 'touchend' !== n ? e.targetTouches[0] : e.changedTouches[0];
      o && Ht(t, o, e, i);
    } else Ht(t, e, e, i), (e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3);
    var a = e.button;
    return (
      null == e.which &&
        void 0 !== a &&
        Ft.test(e.type) &&
        (e.which = 1 & a ? 1 : 2 & a ? 3 : 4 & a ? 2 : 0),
      e
    );
  }
  function Yt(t, e, i, n) {
    Gt ? t.addEventListener(e, i, n) : t.attachEvent('on' + e, i);
  }
  var jt = Gt
    ? function(t) {
        t.preventDefault(), t.stopPropagation(), (t.cancelBubble = !0);
      }
    : function(t) {
        (t.returnValue = !1), (t.cancelBubble = !0);
      };
  function qt(t) {
    return 2 === t.which || 3 === t.which;
  }
  function Kt() {
    this._track = [];
  }
  function $t(t) {
    var e = t[1][0] - t[0][0],
      i = t[1][1] - t[0][1];
    return Math.sqrt(e * e + i * i);
  }
  Kt.prototype = {
    constructor: Kt,
    recognize: function(t, e, i) {
      return this._doTrack(t, e, i), this._recognize(t);
    },
    clear: function() {
      return (this._track.length = 0), this;
    },
    _doTrack: function(t, e, i) {
      var n = t.touches;
      if (n) {
        for (
          var o = {points: [], touches: [], target: e, event: t},
            a = 0,
            r = n.length;
          a < r;
          a++
        ) {
          var s = n[a],
            l = Ht(i, s, {});
          o.points.push([l.zrX, l.zrY]), o.touches.push(s);
        }
        this._track.push(o);
      }
    },
    _recognize: function(t) {
      for (var e in Jt)
        if (Jt.hasOwnProperty(e)) {
          var i = Jt[e](this._track, t);
          if (i) return i;
        }
    },
  };
  var Jt = {
      pinch: function(t, e) {
        var i = t.length;
        if (i) {
          var n = (t[i - 1] || {}).points,
            o = (t[i - 2] || {}).points || n;
          if (o && 1 < o.length && n && 1 < n.length) {
            var a = $t(n) / $t(o);
            isFinite(a) || (a = 1), (e.pinchScale = a);
            var r = (function(t) {
              return [(t[0][0] + t[1][0]) / 2, (t[0][1] + t[1][1]) / 2];
            })(n);
            return (
              (e.pinchX = r[0]),
              (e.pinchY = r[1]),
              {type: 'pinch', target: t[0].target, event: e}
            );
          }
        }
      },
    },
    Qt = 'silent';
  function te() {
    jt(this.event);
  }
  function ee() {}
  ee.prototype.dispose = function() {};
  function ie(t, e, i, n) {
    kt.call(this),
      (this.storage = t),
      (this.painter = e),
      (this.painterRoot = n),
      (i = i || new ee()),
      (this.proxy = null),
      (this._hovered = {}),
      this._lastTouchMoment,
      this._lastX,
      this._lastY,
      this._gestureMgr,
      Dt.call(this),
      this.setHandlerProxy(i);
  }
  var ne = [
    'click',
    'dblclick',
    'mousewheel',
    'mouseout',
    'mouseup',
    'mousedown',
    'mousemove',
    'contextmenu',
  ];
  function oe(t, e, i) {
    if (t[t.rectHover ? 'rectContain' : 'contain'](e, i)) {
      for (var n, o = t; o; ) {
        if (o.clipPath && !o.clipPath.contain(e, i)) return !1;
        o.silent && (n = !0), (o = o.parent);
      }
      return !n || Qt;
    }
    return !1;
  }
  function ae(t, e, i) {
    var n = t.painter;
    return e < 0 || e > n.getWidth() || i < 0 || i > n.getHeight();
  }
  (ie.prototype = {
    constructor: ie,
    setHandlerProxy: function(e) {
      this.proxy && this.proxy.dispose(),
        e &&
          (E(
            ne,
            function(t) {
              e.on && e.on(t, this[t], this);
            },
            this,
          ),
          (e.handler = this)),
        (this.proxy = e);
    },
    mousemove: function(t) {
      var e = t.zrX,
        i = t.zrY,
        n = ae(this, e, i),
        o = this._hovered,
        a = o.target;
      a && !a.__zr && (a = (o = this.findHover(o.x, o.y)).target);
      var r = (this._hovered = n ? {x: e, y: i} : this.findHover(e, i)),
        s = r.target,
        l = this.proxy;
      l.setCursor && l.setCursor(s ? s.cursor : 'default'),
        a && s !== a && this.dispatchToElement(o, 'mouseout', t),
        this.dispatchToElement(r, 'mousemove', t),
        s && s !== a && this.dispatchToElement(r, 'mouseover', t);
    },
    mouseout: function(t) {
      var e = t.zrEventControl,
        i = t.zrIsToLocalDOM;
      'only_globalout' !== e &&
        this.dispatchToElement(this._hovered, 'mouseout', t),
        'no_globalout' !== e &&
          (i || this.trigger('globalout', {type: 'globalout', event: t}));
    },
    resize: function(t) {
      this._hovered = {};
    },
    dispatch: function(t, e) {
      var i = this[t];
      i && i.call(this, e);
    },
    dispose: function() {
      this.proxy.dispose(), (this.storage = this.proxy = this.painter = null);
    },
    setCursorStyle: function(t) {
      var e = this.proxy;
      e.setCursor && e.setCursor(t);
    },
    dispatchToElement: function(t, e, i) {
      var n = (t = t || {}).target;
      if (!n || !n.silent) {
        for (
          var o = 'on' + e,
            a = (function(t, e, i) {
              return {
                type: t,
                event: i,
                target: e.target,
                topTarget: e.topTarget,
                cancelBubble: !1,
                offsetX: i.zrX,
                offsetY: i.zrY,
                gestureEvent: i.gestureEvent,
                pinchX: i.pinchX,
                pinchY: i.pinchY,
                pinchScale: i.pinchScale,
                wheelDelta: i.zrDelta,
                zrByTouch: i.zrByTouch,
                which: i.which,
                stop: te,
              };
            })(e, t, i);
          n &&
          (n[o] && (a.cancelBubble = n[o].call(n, a)),
          n.trigger(e, a),
          (n = n.parent),
          !a.cancelBubble);

        );
        a.cancelBubble ||
          (this.trigger(e, a),
          this.painter &&
            this.painter.eachOtherLayer(function(t) {
              'function' == typeof t[o] && t[o].call(t, a),
                t.trigger && t.trigger(e, a);
            }));
      }
    },
    findHover: function(t, e, i) {
      for (
        var n = this.storage.getDisplayList(),
          o = {x: t, y: e},
          a = n.length - 1;
        0 <= a;
        a--
      ) {
        var r;
        if (
          n[a] !== i &&
          !n[a].ignore &&
          (r = oe(n[a], t, e)) &&
          (o.topTarget || (o.topTarget = n[a]), r !== Qt)
        ) {
          o.target = n[a];
          break;
        }
      }
      return o;
    },
    processGesture: function(t, e) {
      this._gestureMgr || (this._gestureMgr = new Kt());
      var i = this._gestureMgr;
      'start' === e && i.clear();
      var n = i.recognize(
        t,
        this.findHover(t.zrX, t.zrY, null).target,
        this.proxy.dom,
      );
      if (('end' === e && i.clear(), n)) {
        var o = n.type;
        (t.gestureEvent = o),
          this.dispatchToElement({target: n.target}, o, n.event);
      }
    },
  }),
    E(
      [
        'click',
        'mousedown',
        'mouseup',
        'mousewheel',
        'dblclick',
        'contextmenu',
      ],
      function(r) {
        ie.prototype[r] = function(t) {
          var e,
            i,
            n = t.zrX,
            o = t.zrY,
            a = ae(this, n, o);
          if (
            (('mouseup' === r && a) || (i = (e = this.findHover(n, o)).target),
            'mousedown' === r)
          )
            (this._downEl = i),
              (this._downPoint = [t.zrX, t.zrY]),
              (this._upEl = i);
          else if ('mouseup' === r) this._upEl = i;
          else if ('click' === r) {
            if (
              this._downEl !== this._upEl ||
              !this._downPoint ||
              4 < _t(this._downPoint, [t.zrX, t.zrY])
            )
              return;
            this._downPoint = null;
          }
          this.dispatchToElement(e, r, t);
        };
      },
    ),
    S(ie, kt),
    S(ie, Dt);
  var re = 'undefined' == typeof Float32Array ? Array : Float32Array;
  function se() {
    var t = new re(6);
    return le(t), t;
  }
  function le(t) {
    return (
      (t[0] = 1), (t[1] = 0), (t[2] = 0), (t[3] = 1), (t[4] = 0), (t[5] = 0), t
    );
  }
  function ue(t, e) {
    return (
      (t[0] = e[0]),
      (t[1] = e[1]),
      (t[2] = e[2]),
      (t[3] = e[3]),
      (t[4] = e[4]),
      (t[5] = e[5]),
      t
    );
  }
  function he(t, e, i) {
    var n = e[0] * i[0] + e[2] * i[1],
      o = e[1] * i[0] + e[3] * i[1],
      a = e[0] * i[2] + e[2] * i[3],
      r = e[1] * i[2] + e[3] * i[3],
      s = e[0] * i[4] + e[2] * i[5] + e[4],
      l = e[1] * i[4] + e[3] * i[5] + e[5];
    return (
      (t[0] = n), (t[1] = o), (t[2] = a), (t[3] = r), (t[4] = s), (t[5] = l), t
    );
  }
  function ce(t, e, i) {
    return (
      (t[0] = e[0]),
      (t[1] = e[1]),
      (t[2] = e[2]),
      (t[3] = e[3]),
      (t[4] = e[4] + i[0]),
      (t[5] = e[5] + i[1]),
      t
    );
  }
  function de(t, e, i) {
    var n = e[0],
      o = e[2],
      a = e[4],
      r = e[1],
      s = e[3],
      l = e[5],
      u = Math.sin(i),
      h = Math.cos(i);
    return (
      (t[0] = n * h + r * u),
      (t[1] = -n * u + r * h),
      (t[2] = o * h + s * u),
      (t[3] = -o * u + h * s),
      (t[4] = h * a + u * l),
      (t[5] = h * l - u * a),
      t
    );
  }
  function fe(t, e, i) {
    var n = i[0],
      o = i[1];
    return (
      (t[0] = e[0] * n),
      (t[1] = e[1] * o),
      (t[2] = e[2] * n),
      (t[3] = e[3] * o),
      (t[4] = e[4] * n),
      (t[5] = e[5] * o),
      t
    );
  }
  function pe(t, e) {
    var i = e[0],
      n = e[2],
      o = e[4],
      a = e[1],
      r = e[3],
      s = e[5],
      l = i * r - a * n;
    return l
      ? ((l = 1 / l),
        (t[0] = r * l),
        (t[1] = -a * l),
        (t[2] = -n * l),
        (t[3] = i * l),
        (t[4] = (n * s - r * o) * l),
        (t[5] = (a * o - i * s) * l),
        t)
      : null;
  }
  function ge(t) {
    var e = se();
    return ue(e, t), e;
  }
  var me = (Object.freeze || Object)({
      create: se,
      identity: le,
      copy: ue,
      mul: he,
      translate: ce,
      rotate: de,
      scale: fe,
      invert: pe,
      clone: ge,
    }),
    ve = le;
  function ye(t) {
    return 5e-5 < t || t < -5e-5;
  }
  var xe = function(t) {
      (t = t || {}).position || (this.position = [0, 0]),
        null == t.rotation && (this.rotation = 0),
        t.scale || (this.scale = [1, 1]),
        (this.origin = this.origin || null);
    },
    _e = xe.prototype;
  (_e.transform = null),
    (_e.needLocalTransform = function() {
      return (
        ye(this.rotation) ||
        ye(this.position[0]) ||
        ye(this.position[1]) ||
        ye(this.scale[0] - 1) ||
        ye(this.scale[1] - 1)
      );
    });
  var we = [];
  (_e.updateTransform = function() {
    var t = this.parent,
      e = t && t.transform,
      i = this.needLocalTransform(),
      n = this.transform;
    if (i || e) {
      (n = n || se()),
        i ? this.getLocalTransform(n) : ve(n),
        e && (i ? he(n, t.transform, n) : ue(n, t.transform)),
        (this.transform = n);
      var o = this.globalScaleRatio;
      if (null != o && 1 !== o) {
        this.getGlobalScale(we);
        var a = we[0] < 0 ? -1 : 1,
          r = we[1] < 0 ? -1 : 1,
          s = ((we[0] - a) * o + a) / we[0] || 0,
          l = ((we[1] - r) * o + r) / we[1] || 0;
        (n[0] *= s), (n[1] *= s), (n[2] *= l), (n[3] *= l);
      }
      (this.invTransform = this.invTransform || se()), pe(this.invTransform, n);
    } else n && ve(n);
  }),
    (_e.getLocalTransform = function(t) {
      return xe.getLocalTransform(this, t);
    }),
    (_e.setTransform = function(t) {
      var e = this.transform,
        i = t.dpr || 1;
      e
        ? t.setTransform(
            i * e[0],
            i * e[1],
            i * e[2],
            i * e[3],
            i * e[4],
            i * e[5],
          )
        : t.setTransform(i, 0, 0, i, 0, 0);
    }),
    (_e.restoreTransform = function(t) {
      var e = t.dpr || 1;
      t.setTransform(e, 0, 0, e, 0, 0);
    });
  var be = [],
    Se = se();
  (_e.setLocalTransform = function(t) {
    if (t) {
      var e = t[0] * t[0] + t[1] * t[1],
        i = t[2] * t[2] + t[3] * t[3],
        n = this.position,
        o = this.scale;
      ye(e - 1) && (e = Math.sqrt(e)),
        ye(i - 1) && (i = Math.sqrt(i)),
        t[0] < 0 && (e = -e),
        t[3] < 0 && (i = -i),
        (n[0] = t[4]),
        (n[1] = t[5]),
        (o[0] = e),
        (o[1] = i),
        (this.rotation = Math.atan2(-t[1] / i, t[0] / e));
    }
  }),
    (_e.decomposeTransform = function() {
      if (this.transform) {
        var t = this.parent,
          e = this.transform;
        t && t.transform && (he(be, t.invTransform, e), (e = be));
        var i = this.origin;
        i &&
          (i[0] || i[1]) &&
          ((Se[4] = i[0]),
          (Se[5] = i[1]),
          he(be, e, Se),
          (be[4] -= i[0]),
          (be[5] -= i[1]),
          (e = be)),
          this.setLocalTransform(e);
      }
    }),
    (_e.getGlobalScale = function(t) {
      var e = this.transform;
      return (
        (t = t || []),
        e
          ? ((t[0] = Math.sqrt(e[0] * e[0] + e[1] * e[1])),
            (t[1] = Math.sqrt(e[2] * e[2] + e[3] * e[3])),
            e[0] < 0 && (t[0] = -t[0]),
            e[3] < 0 && (t[1] = -t[1]))
          : ((t[0] = 1), (t[1] = 1)),
        t
      );
    }),
    (_e.transformCoordToLocal = function(t, e) {
      var i = [t, e],
        n = this.invTransform;
      return n && Mt(i, i, n), i;
    }),
    (_e.transformCoordToGlobal = function(t, e) {
      var i = [t, e],
        n = this.transform;
      return n && Mt(i, i, n), i;
    }),
    (xe.getLocalTransform = function(t, e) {
      ve((e = e || []));
      var i = t.origin,
        n = t.scale || [1, 1],
        o = t.rotation || 0,
        a = t.position || [0, 0];
      return (
        i && ((e[4] -= i[0]), (e[5] -= i[1])),
        fe(e, e, n),
        o && de(e, e, o),
        i && ((e[4] += i[0]), (e[5] += i[1])),
        (e[4] += a[0]),
        (e[5] += a[1]),
        e
      );
    });
  var Me = {
    linear: function(t) {
      return t;
    },
    quadraticIn: function(t) {
      return t * t;
    },
    quadraticOut: function(t) {
      return t * (2 - t);
    },
    quadraticInOut: function(t) {
      return (t *= 2) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);
    },
    cubicIn: function(t) {
      return t * t * t;
    },
    cubicOut: function(t) {
      return --t * t * t + 1;
    },
    cubicInOut: function(t) {
      return (t *= 2) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);
    },
    quarticIn: function(t) {
      return t * t * t * t;
    },
    quarticOut: function(t) {
      return 1 - --t * t * t * t;
    },
    quarticInOut: function(t) {
      return (t *= 2) < 1
        ? 0.5 * t * t * t * t
        : -0.5 * ((t -= 2) * t * t * t - 2);
    },
    quinticIn: function(t) {
      return t * t * t * t * t;
    },
    quinticOut: function(t) {
      return --t * t * t * t * t + 1;
    },
    quinticInOut: function(t) {
      return (t *= 2) < 1
        ? 0.5 * t * t * t * t * t
        : 0.5 * ((t -= 2) * t * t * t * t + 2);
    },
    sinusoidalIn: function(t) {
      return 1 - Math.cos((t * Math.PI) / 2);
    },
    sinusoidalOut: function(t) {
      return Math.sin((t * Math.PI) / 2);
    },
    sinusoidalInOut: function(t) {
      return 0.5 * (1 - Math.cos(Math.PI * t));
    },
    exponentialIn: function(t) {
      return 0 === t ? 0 : Math.pow(1024, t - 1);
    },
    exponentialOut: function(t) {
      return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
    },
    exponentialInOut: function(t) {
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : (t *= 2) < 1
        ? 0.5 * Math.pow(1024, t - 1)
        : 0.5 * (2 - Math.pow(2, -10 * (t - 1)));
    },
    circularIn: function(t) {
      return 1 - Math.sqrt(1 - t * t);
    },
    circularOut: function(t) {
      return Math.sqrt(1 - --t * t);
    },
    circularInOut: function(t) {
      return (t *= 2) < 1
        ? -0.5 * (Math.sqrt(1 - t * t) - 1)
        : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
    },
    elasticIn: function(t) {
      var e,
        i = 0.1;
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : ((e =
            !i || i < 1
              ? ((i = 1), 0.1)
              : (0.4 * Math.asin(1 / i)) / (2 * Math.PI)),
          -i *
            Math.pow(2, 10 * (t -= 1)) *
            Math.sin(((t - e) * (2 * Math.PI)) / 0.4));
    },
    elasticOut: function(t) {
      var e,
        i = 0.1;
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : ((e =
            !i || i < 1
              ? ((i = 1), 0.1)
              : (0.4 * Math.asin(1 / i)) / (2 * Math.PI)),
          i * Math.pow(2, -10 * t) * Math.sin(((t - e) * (2 * Math.PI)) / 0.4) +
            1);
    },
    elasticInOut: function(t) {
      var e,
        i = 0.1;
      return 0 === t
        ? 0
        : 1 === t
        ? 1
        : ((e =
            !i || i < 1
              ? ((i = 1), 0.1)
              : (0.4 * Math.asin(1 / i)) / (2 * Math.PI)),
          (t *= 2) < 1
            ? i *
              Math.pow(2, 10 * (t -= 1)) *
              Math.sin(((t - e) * (2 * Math.PI)) / 0.4) *
              -0.5
            : i *
                Math.pow(2, -10 * (t -= 1)) *
                Math.sin(((t - e) * (2 * Math.PI)) / 0.4) *
                0.5 +
              1);
    },
    backIn: function(t) {
      return t * t * (2.70158 * t - 1.70158);
    },
    backOut: function(t) {
      return --t * t * (2.70158 * t + 1.70158) + 1;
    },
    backInOut: function(t) {
      var e = 2.5949095;
      return (t *= 2) < 1
        ? t * t * ((1 + e) * t - e) * 0.5
        : 0.5 * ((t -= 2) * t * ((1 + e) * t + e) + 2);
    },
    bounceIn: function(t) {
      return 1 - Me.bounceOut(1 - t);
    },
    bounceOut: function(t) {
      return t < 1 / 2.75
        ? 7.5625 * t * t
        : t < 2 / 2.75
        ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
        : t < 2.5 / 2.75
        ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
        : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
    },
    bounceInOut: function(t) {
      return t < 0.5
        ? 0.5 * Me.bounceIn(2 * t)
        : 0.5 * Me.bounceOut(2 * t - 1) + 0.5;
    },
  };
  function Ie(t) {
    (this._target = t.target),
      (this._life = t.life || 1e3),
      (this._delay = t.delay || 0),
      (this._initialized = !1),
      (this.loop = null != t.loop && t.loop),
      (this.gap = t.gap || 0),
      (this.easing = t.easing || 'Linear'),
      (this.onframe = t.onframe),
      (this.ondestroy = t.ondestroy),
      (this.onrestart = t.onrestart),
      (this._pausedTime = 0),
      (this._paused = !1);
  }
  Ie.prototype = {
    constructor: Ie,
    step: function(t, e) {
      if (
        (this._initialized ||
          ((this._startTime = t + this._delay), (this._initialized = !0)),
        this._paused)
      )
        this._pausedTime += e;
      else {
        var i = (t - this._startTime - this._pausedTime) / this._life;
        if (!(i < 0)) {
          i = Math.min(i, 1);
          var n = this.easing,
            o = 'string' == typeof n ? Me[n] : n,
            a = 'function' == typeof o ? o(i) : i;
          return (
            this.fire('frame', a),
            1 === i
              ? this.loop
                ? (this.restart(t), 'restart')
                : ((this._needsRemove = !0), 'destroy')
              : null
          );
        }
      }
    },
    restart: function(t) {
      var e = (t - this._startTime - this._pausedTime) % this._life;
      (this._startTime = t - e + this.gap),
        (this._pausedTime = 0),
        (this._needsRemove = !1);
    },
    fire: function(t, e) {
      this[(t = 'on' + t)] && this[t](this._target, e);
    },
    pause: function() {
      this._paused = !0;
    },
    resume: function() {
      this._paused = !1;
    },
  };
  function Te() {
    (this.head = null), (this.tail = null), (this._len = 0);
  }
  var Ae = Te.prototype;
  (Ae.insert = function(t) {
    var e = new Ce(t);
    return this.insertEntry(e), e;
  }),
    (Ae.insertEntry = function(t) {
      this.head
        ? (((this.tail.next = t).prev = this.tail),
          (t.next = null),
          (this.tail = t))
        : (this.head = this.tail = t),
        this._len++;
    }),
    (Ae.remove = function(t) {
      var e = t.prev,
        i = t.next;
      e ? (e.next = i) : (this.head = i),
        i ? (i.prev = e) : (this.tail = e),
        (t.next = t.prev = null),
        this._len--;
    }),
    (Ae.len = function() {
      return this._len;
    }),
    (Ae.clear = function() {
      (this.head = this.tail = null), (this._len = 0);
    });
  function De(t) {
    (this._list = new Te()),
      (this._map = {}),
      (this._maxSize = t || 10),
      (this._lastRemovedEntry = null);
  }
  var Ce = function(t) {
      (this.value = t), this.next, this.prev;
    },
    Le = De.prototype;
  (Le.put = function(t, e) {
    var i = this._list,
      n = this._map,
      o = null;
    if (null == n[t]) {
      var a = i.len(),
        r = this._lastRemovedEntry;
      if (a >= this._maxSize && 0 < a) {
        var s = i.head;
        i.remove(s),
          delete n[s.key],
          (o = s.value),
          (this._lastRemovedEntry = s);
      }
      r ? (r.value = e) : (r = new Ce(e)),
        (r.key = t),
        i.insertEntry(r),
        (n[t] = r);
    }
    return o;
  }),
    (Le.get = function(t) {
      var e = this._map[t],
        i = this._list;
      if (null != e)
        return e !== i.tail && (i.remove(e), i.insertEntry(e)), e.value;
    }),
    (Le.clear = function() {
      this._list.clear(), (this._map = {});
    });
  var ke = {
    transparent: [0, 0, 0, 0],
    aliceblue: [240, 248, 255, 1],
    antiquewhite: [250, 235, 215, 1],
    aqua: [0, 255, 255, 1],
    aquamarine: [127, 255, 212, 1],
    azure: [240, 255, 255, 1],
    beige: [245, 245, 220, 1],
    bisque: [255, 228, 196, 1],
    black: [0, 0, 0, 1],
    blanchedalmond: [255, 235, 205, 1],
    blue: [0, 0, 255, 1],
    blueviolet: [138, 43, 226, 1],
    brown: [165, 42, 42, 1],
    burlywood: [222, 184, 135, 1],
    cadetblue: [95, 158, 160, 1],
    chartreuse: [127, 255, 0, 1],
    chocolate: [210, 105, 30, 1],
    coral: [255, 127, 80, 1],
    cornflowerblue: [100, 149, 237, 1],
    cornsilk: [255, 248, 220, 1],
    crimson: [220, 20, 60, 1],
    cyan: [0, 255, 255, 1],
    darkblue: [0, 0, 139, 1],
    darkcyan: [0, 139, 139, 1],
    darkgoldenrod: [184, 134, 11, 1],
    darkgray: [169, 169, 169, 1],
    darkgreen: [0, 100, 0, 1],
    darkgrey: [169, 169, 169, 1],
    darkkhaki: [189, 183, 107, 1],
    darkmagenta: [139, 0, 139, 1],
    darkolivegreen: [85, 107, 47, 1],
    darkorange: [255, 140, 0, 1],
    darkorchid: [153, 50, 204, 1],
    darkred: [139, 0, 0, 1],
    darksalmon: [233, 150, 122, 1],
    darkseagreen: [143, 188, 143, 1],
    darkslateblue: [72, 61, 139, 1],
    darkslategray: [47, 79, 79, 1],
    darkslategrey: [47, 79, 79, 1],
    darkturquoise: [0, 206, 209, 1],
    darkviolet: [148, 0, 211, 1],
    deeppink: [255, 20, 147, 1],
    deepskyblue: [0, 191, 255, 1],
    dimgray: [105, 105, 105, 1],
    dimgrey: [105, 105, 105, 1],
    dodgerblue: [30, 144, 255, 1],
    firebrick: [178, 34, 34, 1],
    floralwhite: [255, 250, 240, 1],
    forestgreen: [34, 139, 34, 1],
    fuchsia: [255, 0, 255, 1],
    gainsboro: [220, 220, 220, 1],
    ghostwhite: [248, 248, 255, 1],
    gold: [255, 215, 0, 1],
    goldenrod: [218, 165, 32, 1],
    gray: [128, 128, 128, 1],
    green: [0, 128, 0, 1],
    greenyellow: [173, 255, 47, 1],
    grey: [128, 128, 128, 1],
    honeydew: [240, 255, 240, 1],
    hotpink: [255, 105, 180, 1],
    indianred: [205, 92, 92, 1],
    indigo: [75, 0, 130, 1],
    ivory: [255, 255, 240, 1],
    khaki: [240, 230, 140, 1],
    lavender: [230, 230, 250, 1],
    lavenderblush: [255, 240, 245, 1],
    lawngreen: [124, 252, 0, 1],
    lemonchiffon: [255, 250, 205, 1],
    lightblue: [173, 216, 230, 1],
    lightcoral: [240, 128, 128, 1],
    lightcyan: [224, 255, 255, 1],
    lightgoldenrodyellow: [250, 250, 210, 1],
    lightgray: [211, 211, 211, 1],
    lightgreen: [144, 238, 144, 1],
    lightgrey: [211, 211, 211, 1],
    lightpink: [255, 182, 193, 1],
    lightsalmon: [255, 160, 122, 1],
    lightseagreen: [32, 178, 170, 1],
    lightskyblue: [135, 206, 250, 1],
    lightslategray: [119, 136, 153, 1],
    lightslategrey: [119, 136, 153, 1],
    lightsteelblue: [176, 196, 222, 1],
    lightyellow: [255, 255, 224, 1],
    lime: [0, 255, 0, 1],
    limegreen: [50, 205, 50, 1],
    linen: [250, 240, 230, 1],
    magenta: [255, 0, 255, 1],
    maroon: [128, 0, 0, 1],
    mediumaquamarine: [102, 205, 170, 1],
    mediumblue: [0, 0, 205, 1],
    mediumorchid: [186, 85, 211, 1],
    mediumpurple: [147, 112, 219, 1],
    mediumseagreen: [60, 179, 113, 1],
    mediumslateblue: [123, 104, 238, 1],
    mediumspringgreen: [0, 250, 154, 1],
    mediumturquoise: [72, 209, 204, 1],
    mediumvioletred: [199, 21, 133, 1],
    midnightblue: [25, 25, 112, 1],
    mintcream: [245, 255, 250, 1],
    mistyrose: [255, 228, 225, 1],
    moccasin: [255, 228, 181, 1],
    navajowhite: [255, 222, 173, 1],
    navy: [0, 0, 128, 1],
    oldlace: [253, 245, 230, 1],
    olive: [128, 128, 0, 1],
    olivedrab: [107, 142, 35, 1],
    orange: [255, 165, 0, 1],
    orangered: [255, 69, 0, 1],
    orchid: [218, 112, 214, 1],
    palegoldenrod: [238, 232, 170, 1],
    palegreen: [152, 251, 152, 1],
    paleturquoise: [175, 238, 238, 1],
    palevioletred: [219, 112, 147, 1],
    papayawhip: [255, 239, 213, 1],
    peachpuff: [255, 218, 185, 1],
    peru: [205, 133, 63, 1],
    pink: [255, 192, 203, 1],
    plum: [221, 160, 221, 1],
    powderblue: [176, 224, 230, 1],
    purple: [128, 0, 128, 1],
    red: [255, 0, 0, 1],
    rosybrown: [188, 143, 143, 1],
    royalblue: [65, 105, 225, 1],
    saddlebrown: [139, 69, 19, 1],
    salmon: [250, 128, 114, 1],
    sandybrown: [244, 164, 96, 1],
    seagreen: [46, 139, 87, 1],
    seashell: [255, 245, 238, 1],
    sienna: [160, 82, 45, 1],
    silver: [192, 192, 192, 1],
    skyblue: [135, 206, 235, 1],
    slateblue: [106, 90, 205, 1],
    slategray: [112, 128, 144, 1],
    slategrey: [112, 128, 144, 1],
    snow: [255, 250, 250, 1],
    springgreen: [0, 255, 127, 1],
    steelblue: [70, 130, 180, 1],
    tan: [210, 180, 140, 1],
    teal: [0, 128, 128, 1],
    thistle: [216, 191, 216, 1],
    tomato: [255, 99, 71, 1],
    turquoise: [64, 224, 208, 1],
    violet: [238, 130, 238, 1],
    wheat: [245, 222, 179, 1],
    white: [255, 255, 255, 1],
    whitesmoke: [245, 245, 245, 1],
    yellow: [255, 255, 0, 1],
    yellowgreen: [154, 205, 50, 1],
  };
  function Pe(t) {
    return (t = Math.round(t)) < 0 ? 0 : 255 < t ? 255 : t;
  }
  function Ne(t) {
    return t < 0 ? 0 : 1 < t ? 1 : t;
  }
  function Oe(t) {
    return t.length && '%' === t.charAt(t.length - 1)
      ? Pe((parseFloat(t) / 100) * 255)
      : Pe(parseInt(t, 10));
  }
  function Ee(t) {
    return t.length && '%' === t.charAt(t.length - 1)
      ? Ne(parseFloat(t) / 100)
      : Ne(parseFloat(t));
  }
  function Re(t, e, i) {
    return (
      i < 0 ? (i += 1) : 1 < i && (i -= 1),
      6 * i < 1
        ? t + (e - t) * i * 6
        : 2 * i < 1
        ? e
        : 3 * i < 2
        ? t + (e - t) * (2 / 3 - i) * 6
        : t
    );
  }
  function ze(t, e, i) {
    return t + (e - t) * i;
  }
  function Be(t, e, i, n, o) {
    return (t[0] = e), (t[1] = i), (t[2] = n), (t[3] = o), t;
  }
  function Ve(t, e) {
    return (t[0] = e[0]), (t[1] = e[1]), (t[2] = e[2]), (t[3] = e[3]), t;
  }
  var Ge = new De(20),
    Fe = null;
  function We(t, e) {
    Fe && Ve(Fe, e), (Fe = Ge.put(t, Fe || e.slice()));
  }
  function He(t, e) {
    if (t) {
      e = e || [];
      var i = Ge.get(t);
      if (i) return Ve(e, i);
      var n,
        o = (t += '').replace(/ /g, '').toLowerCase();
      if (o in ke) return Ve(e, ke[o]), We(t, e), e;
      if ('#' === o.charAt(0))
        return 4 === o.length
          ? 0 <= (n = parseInt(o.substr(1), 16)) && n <= 4095
            ? (Be(
                e,
                ((3840 & n) >> 4) | ((3840 & n) >> 8),
                (240 & n) | ((240 & n) >> 4),
                (15 & n) | ((15 & n) << 4),
                1,
              ),
              We(t, e),
              e)
            : void Be(e, 0, 0, 0, 1)
          : 7 === o.length
          ? 0 <= (n = parseInt(o.substr(1), 16)) && n <= 16777215
            ? (Be(e, (16711680 & n) >> 16, (65280 & n) >> 8, 255 & n, 1),
              We(t, e),
              e)
            : void Be(e, 0, 0, 0, 1)
          : void 0;
      var a = o.indexOf('('),
        r = o.indexOf(')');
      if (-1 !== a && r + 1 === o.length) {
        var s = o.substr(0, a),
          l = o.substr(a + 1, r - (a + 1)).split(','),
          u = 1;
        switch (s) {
          case 'rgba':
            if (4 !== l.length) return void Be(e, 0, 0, 0, 1);
            u = Ee(l.pop());
          case 'rgb':
            return 3 !== l.length
              ? void Be(e, 0, 0, 0, 1)
              : (Be(e, Oe(l[0]), Oe(l[1]), Oe(l[2]), u), We(t, e), e);
          case 'hsla':
            return 4 !== l.length
              ? void Be(e, 0, 0, 0, 1)
              : ((l[3] = Ee(l[3])), Ze(l, e), We(t, e), e);
          case 'hsl':
            return 3 !== l.length
              ? void Be(e, 0, 0, 0, 1)
              : (Ze(l, e), We(t, e), e);
          default:
            return;
        }
      }
      Be(e, 0, 0, 0, 1);
    }
  }
  function Ze(t, e) {
    var i = (((parseFloat(t[0]) % 360) + 360) % 360) / 360,
      n = Ee(t[1]),
      o = Ee(t[2]),
      a = o <= 0.5 ? o * (n + 1) : o + n - o * n,
      r = 2 * o - a;
    return (
      Be(
        (e = e || []),
        Pe(255 * Re(r, a, i + 1 / 3)),
        Pe(255 * Re(r, a, i)),
        Pe(255 * Re(r, a, i - 1 / 3)),
        1,
      ),
      4 === t.length && (e[3] = t[3]),
      e
    );
  }
  function Ue(t, e) {
    var i = He(t);
    if (i) {
      for (var n = 0; n < 3; n++)
        (i[n] = e < 0 ? (i[n] * (1 - e)) | 0 : ((255 - i[n]) * e + i[n]) | 0),
          255 < i[n] ? (i[n] = 255) : t[n] < 0 && (i[n] = 0);
      return Qe(i, 4 === i.length ? 'rgba' : 'rgb');
    }
  }
  function Xe(t) {
    var e = He(t);
    if (e)
      return ((1 << 24) + (e[0] << 16) + (e[1] << 8) + +e[2])
        .toString(16)
        .slice(1);
  }
  function Ye(t, e, i) {
    if (e && e.length && 0 <= t && t <= 1) {
      i = i || [];
      var n = t * (e.length - 1),
        o = Math.floor(n),
        a = Math.ceil(n),
        r = e[o],
        s = e[a],
        l = n - o;
      return (
        (i[0] = Pe(ze(r[0], s[0], l))),
        (i[1] = Pe(ze(r[1], s[1], l))),
        (i[2] = Pe(ze(r[2], s[2], l))),
        (i[3] = Ne(ze(r[3], s[3], l))),
        i
      );
    }
  }
  var je = Ye;
  function qe(t, e, i) {
    if (e && e.length && 0 <= t && t <= 1) {
      var n = t * (e.length - 1),
        o = Math.floor(n),
        a = Math.ceil(n),
        r = He(e[o]),
        s = He(e[a]),
        l = n - o,
        u = Qe(
          [
            Pe(ze(r[0], s[0], l)),
            Pe(ze(r[1], s[1], l)),
            Pe(ze(r[2], s[2], l)),
            Ne(ze(r[3], s[3], l)),
          ],
          'rgba',
        );
      return i ? {color: u, leftIndex: o, rightIndex: a, value: n} : u;
    }
  }
  var Ke = qe;
  function $e(t, e, i, n) {
    if ((t = He(t)))
      return (
        (t = (function(t) {
          if (t) {
            var e,
              i,
              n = t[0] / 255,
              o = t[1] / 255,
              a = t[2] / 255,
              r = Math.min(n, o, a),
              s = Math.max(n, o, a),
              l = s - r,
              u = (s + r) / 2;
            if (0 == l) i = e = 0;
            else {
              i = u < 0.5 ? l / (s + r) : l / (2 - s - r);
              var h = ((s - n) / 6 + l / 2) / l,
                c = ((s - o) / 6 + l / 2) / l,
                d = ((s - a) / 6 + l / 2) / l;
              n === s
                ? (e = d - c)
                : o === s
                ? (e = 1 / 3 + h - d)
                : a === s && (e = 2 / 3 + c - h),
                e < 0 && (e += 1),
                1 < e && (e -= 1);
            }
            var f = [360 * e, i, u];
            return null != t[3] && f.push(t[3]), f;
          }
        })(t)),
        null != e &&
          (t[0] = (function(t) {
            return (t = Math.round(t)) < 0 ? 0 : 360 < t ? 360 : t;
          })(e)),
        null != i && (t[1] = Ee(i)),
        null != n && (t[2] = Ee(n)),
        Qe(Ze(t), 'rgba')
      );
  }
  function Je(t, e) {
    if ((t = He(t)) && null != e) return (t[3] = Ne(e)), Qe(t, 'rgba');
  }
  function Qe(t, e) {
    if (t && t.length) {
      var i = t[0] + ',' + t[1] + ',' + t[2];
      return (
        ('rgba' !== e && 'hsva' !== e && 'hsla' !== e) || (i += ',' + t[3]),
        e + '(' + i + ')'
      );
    }
  }
  var ti = (Object.freeze || Object)({
      parse: He,
      lift: Ue,
      toHex: Xe,
      fastLerp: Ye,
      fastMapToColor: je,
      lerp: qe,
      mapToColor: Ke,
      modifyHSL: $e,
      modifyAlpha: Je,
      stringify: Qe,
    }),
    ei = Array.prototype.slice;
  function ii(t, e) {
    return t[e];
  }
  function ni(t, e, i) {
    t[e] = i;
  }
  function oi(t, e, i) {
    return (e - t) * i + t;
  }
  function ai(t, e, i) {
    return 0.5 < i ? e : t;
  }
  function ri(t, e, i, n, o) {
    var a = t.length;
    if (1 === o) for (var r = 0; r < a; r++) n[r] = oi(t[r], e[r], i);
    else {
      var s = a && t[0].length;
      for (r = 0; r < a; r++)
        for (var l = 0; l < s; l++) n[r][l] = oi(t[r][l], e[r][l], i);
    }
  }
  function si(t, e, i) {
    var n = t.length,
      o = e.length;
    if (n !== o)
      if (o < n) t.length = o;
      else for (var a = n; a < o; a++) t.push(1 === i ? e[a] : ei.call(e[a]));
    var r = t[0] && t[0].length;
    for (a = 0; a < t.length; a++)
      if (1 === i) isNaN(t[a]) && (t[a] = e[a]);
      else for (var s = 0; s < r; s++) isNaN(t[a][s]) && (t[a][s] = e[a][s]);
  }
  function li(t, e, i) {
    if (t === e) return !0;
    var n = t.length;
    if (n !== e.length) return !1;
    if (1 === i) {
      for (var o = 0; o < n; o++) if (t[o] !== e[o]) return !1;
    } else {
      var a = t[0].length;
      for (o = 0; o < n; o++)
        for (var r = 0; r < a; r++) if (t[o][r] !== e[o][r]) return !1;
    }
    return !0;
  }
  function ui(t, e, i, n, o, a, r, s, l) {
    var u = t.length;
    if (1 === l)
      for (var h = 0; h < u; h++) s[h] = hi(t[h], e[h], i[h], n[h], o, a, r);
    else {
      var c = t[0].length;
      for (h = 0; h < u; h++)
        for (var d = 0; d < c; d++)
          s[h][d] = hi(t[h][d], e[h][d], i[h][d], n[h][d], o, a, r);
    }
  }
  function hi(t, e, i, n, o, a, r) {
    var s = 0.5 * (i - t),
      l = 0.5 * (n - e);
    return (
      (2 * (e - i) + s + l) * r + (-3 * (e - i) - 2 * s - l) * a + s * o + e
    );
  }
  function ci(t) {
    if (N(t)) {
      var e = t.length;
      if (N(t[0])) {
        for (var i = [], n = 0; n < e; n++) i.push(ei.call(t[n]));
        return i;
      }
      return ei.call(t);
    }
    return t;
  }
  function di(t) {
    return (
      (t[0] = Math.floor(t[0])),
      (t[1] = Math.floor(t[1])),
      (t[2] = Math.floor(t[2])),
      'rgba(' + t.join(',') + ')'
    );
  }
  function fi(t, e, i, n, a, o) {
    var r = t._getter,
      s = t._setter,
      l = 'spline' === e,
      u = n.length;
    if (u) {
      var h,
        c = N(n[0].value),
        d = !1,
        f = !1,
        p = c
          ? (function(t) {
              var e = t[t.length - 1].value;
              return N(e && e[0]) ? 2 : 1;
            })(n)
          : 0;
      n.sort(function(t, e) {
        return t.time - e.time;
      }),
        (h = n[u - 1].time);
      for (var g = [], m = [], v = n[0].value, y = !0, x = 0; x < u; x++) {
        g.push(n[x].time / h);
        var _ = n[x].value;
        if (
          ((c && li(_, v, p)) || (!c && _ === v) || (y = !1),
          'string' == typeof (v = _))
        ) {
          var w = He(_);
          w ? ((_ = w), (d = !0)) : (f = !0);
        }
        m.push(_);
      }
      if (o || !y) {
        var b = m[u - 1];
        for (x = 0; x < u - 1; x++)
          c ? si(m[x], b, p) : !isNaN(m[x]) || isNaN(b) || f || d || (m[x] = b);
        c && si(r(t._target, a), b, p);
        var S,
          M,
          I,
          T,
          A,
          D = 0,
          C = 0;
        if (d) var L = [0, 0, 0, 0];
        var k = new Ie({
          target: t._target,
          life: h,
          loop: t._loop,
          delay: t._delay,
          onframe: function(t, e) {
            var i;
            if (e < 0) i = 0;
            else if (e < C) {
              for (i = Math.min(D + 1, u - 1); 0 <= i && !(g[i] <= e); i--);
              i = Math.min(i, u - 2);
            } else {
              for (i = D; i < u && !(g[i] > e); i++);
              i = Math.min(i - 1, u - 2);
            }
            C = e;
            var n = g[(D = i) + 1] - g[i];
            if (0 != n)
              if (((S = (e - g[i]) / n), l))
                if (
                  ((I = m[i]),
                  (M = m[0 === i ? i : i - 1]),
                  (T = m[u - 2 < i ? u - 1 : i + 1]),
                  (A = m[u - 3 < i ? u - 1 : i + 2]),
                  c)
                )
                  ui(M, I, T, A, S, S * S, S * S * S, r(t, a), p);
                else {
                  if (d)
                    (o = ui(M, I, T, A, S, S * S, S * S * S, L, 1)),
                      (o = di(L));
                  else {
                    if (f) return ai(I, T, S);
                    o = hi(M, I, T, A, S, S * S, S * S * S);
                  }
                  s(t, a, o);
                }
              else if (c) ri(m[i], m[i + 1], S, r(t, a), p);
              else {
                var o;
                if (d) ri(m[i], m[i + 1], S, L, 1), (o = di(L));
                else {
                  if (f) return ai(m[i], m[i + 1], S);
                  o = oi(m[i], m[i + 1], S);
                }
                s(t, a, o);
              }
          },
          ondestroy: i,
        });
        return e && 'spline' !== e && (k.easing = e), k;
      }
    }
  }
  function pi(t, e, i, n) {
    (this._tracks = {}),
      (this._target = t),
      (this._loop = e || !1),
      (this._getter = i || ii),
      (this._setter = n || ni),
      (this._clipCount = 0),
      (this._delay = 0),
      (this._doneList = []),
      (this._onframeList = []),
      (this._clipList = []);
  }
  pi.prototype = {
    when: function(t, e) {
      var i = this._tracks;
      for (var n in e)
        if (e.hasOwnProperty(n)) {
          if (!i[n]) {
            i[n] = [];
            var o = this._getter(this._target, n);
            if (null == o) continue;
            0 !== t && i[n].push({time: 0, value: ci(o)});
          }
          i[n].push({time: t, value: e[n]});
        }
      return this;
    },
    during: function(t) {
      return this._onframeList.push(t), this;
    },
    pause: function() {
      for (var t = 0; t < this._clipList.length; t++) this._clipList[t].pause();
      this._paused = !0;
    },
    resume: function() {
      for (var t = 0; t < this._clipList.length; t++)
        this._clipList[t].resume();
      this._paused = !1;
    },
    isPaused: function() {
      return !!this._paused;
    },
    _doneCallback: function() {
      (this._tracks = {}), (this._clipList.length = 0);
      for (var t = this._doneList, e = t.length, i = 0; i < e; i++)
        t[i].call(this);
    },
    start: function(t, e) {
      function i() {
        --a || o._doneCallback();
      }
      var n,
        o = this,
        a = 0;
      for (var r in this._tracks)
        if (this._tracks.hasOwnProperty(r)) {
          var s = fi(this, t, i, this._tracks[r], r, e);
          s &&
            (this._clipList.push(s),
            a++,
            this.animation && this.animation.addClip(s),
            (n = s));
        }
      if (n) {
        var l = n.onframe;
        n.onframe = function(t, e) {
          l(t, e);
          for (var i = 0; i < o._onframeList.length; i++)
            o._onframeList[i](t, e);
        };
      }
      return a || this._doneCallback(), this;
    },
    stop: function(t) {
      for (
        var e = this._clipList, i = this.animation, n = 0;
        n < e.length;
        n++
      ) {
        var o = e[n];
        t && o.onframe(this._target, 1), i && i.removeClip(o);
      }
      e.length = 0;
    },
    delay: function(t) {
      return (this._delay = t), this;
    },
    done: function(t) {
      return t && this._doneList.push(t), this;
    },
    getClips: function() {
      return this._clipList;
    },
  };
  var gi = 1;
  'undefined' != typeof window &&
    (gi = Math.max(window.devicePixelRatio || 1, 1));
  var mi = gi,
    vi = function() {};
  function yi() {
    this.animators = [];
  }
  var xi = vi;
  function _i(t, e, i, n, o, a, r, s) {
    B(n)
      ? ((a = o), (o = n), (n = 0))
      : z(o)
      ? ((a = o), (o = 'linear'), (n = 0))
      : z(n)
      ? ((a = n), (n = 0))
      : (i = z(i) ? ((a = i), 500) : i || 500),
      t.stopAnimation(),
      (function t(e, i, n, o, a, r, s) {
        var l = {};
        var u = 0;
        for (var h in o)
          o.hasOwnProperty(h) &&
            (null != n[h]
              ? V(o[h]) && !N(o[h])
                ? t(e, i ? i + '.' + h : h, n[h], o[h], a, r, s)
                : (s ? ((l[h] = n[h]), wi(e, i, h, o[h])) : (l[h] = o[h]), u++)
              : null == o[h] || s || wi(e, i, h, o[h]));
        0 < u &&
          e
            .animate(i, !1)
            .when(null == a ? 500 : a, l)
            .delay(r || 0);
      })(t, '', t, e, i, n, s);
    var l = t.animators.slice(),
      u = l.length;
    function h() {
      --u || (a && a());
    }
    u || (a && a());
    for (var c = 0; c < l.length; c++) l[c].done(h).start(o, r);
  }
  function wi(t, e, i, n) {
    if (e) {
      var o = {};
      (o[e] = {}), (o[e][i] = n), t.attr(o);
    } else t.attr(i, n);
  }
  yi.prototype = {
    constructor: yi,
    animate: function(t, e) {
      var i,
        n = !1,
        o = this,
        a = this.__zr;
      if (t) {
        var r = t.split('.'),
          s = o;
        n = 'shape' === r[0];
        for (var l = 0, u = r.length; l < u; l++) s = s && s[r[l]];
        s && (i = s);
      } else i = o;
      if (i) {
        var h = o.animators,
          c = new pi(i, e);
        return (
          c
            .during(function(t) {
              o.dirty(n);
            })
            .done(function() {
              h.splice(w(h, c), 1);
            }),
          h.push(c),
          a && a.animation.addAnimator(c),
          c
        );
      }
      xi('Property "' + t + '" is not existed in element ' + o.id);
    },
    stopAnimation: function(t) {
      for (var e = this.animators, i = e.length, n = 0; n < i; n++)
        e[n].stop(t);
      return (e.length = 0), this;
    },
    animateTo: function(t, e, i, n, o, a) {
      _i(this, t, e, i, n, o, a);
    },
    animateFrom: function(t, e, i, n, o, a) {
      _i(this, t, e, i, n, o, a, !0);
    },
  };
  var bi = function(t) {
    xe.call(this, t),
      kt.call(this, t),
      yi.call(this, t),
      (this.id = t.id || n());
  };
  (bi.prototype = {
    type: 'element',
    name: '',
    __zr: null,
    ignore: !1,
    clipPath: null,
    isGroup: !1,
    drift: function(t, e) {
      switch (this.draggable) {
        case 'horizontal':
          e = 0;
          break;
        case 'vertical':
          t = 0;
      }
      var i = this.transform;
      ((i = i || (this.transform = [1, 0, 0, 1, 0, 0]))[4] += t),
        (i[5] += e),
        this.decomposeTransform(),
        this.dirty(!1);
    },
    beforeUpdate: function() {},
    afterUpdate: function() {},
    update: function() {
      this.updateTransform();
    },
    traverse: function(t, e) {},
    attrKV: function(t, e) {
      if ('position' === t || 'scale' === t || 'origin' === t) {
        if (e) {
          var i = this[t];
          ((i = i || (this[t] = []))[0] = e[0]), (i[1] = e[1]);
        }
      } else this[t] = e;
    },
    hide: function() {
      (this.ignore = !0), this.__zr && this.__zr.refresh();
    },
    show: function() {
      (this.ignore = !1), this.__zr && this.__zr.refresh();
    },
    attr: function(t, e) {
      if ('string' == typeof t) this.attrKV(t, e);
      else if (V(t))
        for (var i in t) t.hasOwnProperty(i) && this.attrKV(i, t[i]);
      return this.dirty(!1), this;
    },
    setClipPath: function(t) {
      var e = this.__zr;
      e && t.addSelfToZr(e),
        this.clipPath && this.clipPath !== t && this.removeClipPath(),
        ((this.clipPath = t).__zr = e),
        (t.__clipTarget = this).dirty(!1);
    },
    removeClipPath: function() {
      var t = this.clipPath;
      t &&
        (t.__zr && t.removeSelfFromZr(t.__zr),
        (t.__zr = null),
        (t.__clipTarget = null),
        (this.clipPath = null),
        this.dirty(!1));
    },
    addSelfToZr: function(t) {
      this.__zr = t;
      var e = this.animators;
      if (e) for (var i = 0; i < e.length; i++) t.animation.addAnimator(e[i]);
      this.clipPath && this.clipPath.addSelfToZr(t);
    },
    removeSelfFromZr: function(t) {
      this.__zr = null;
      var e = this.animators;
      if (e)
        for (var i = 0; i < e.length; i++) t.animation.removeAnimator(e[i]);
      this.clipPath && this.clipPath.removeSelfFromZr(t);
    },
  }),
    S(bi, yi),
    S(bi, xe),
    S(bi, kt);
  var Si,
    Mi,
    Ii,
    Ti,
    Ai = Mt,
    Di = Math.min,
    Ci = Math.max;
  function Li(t, e, i, n) {
    i < 0 && ((t += i), (i = -i)),
      n < 0 && ((e += n), (n = -n)),
      (this.x = t),
      (this.y = e),
      (this.width = i),
      (this.height = n);
  }
  (Li.prototype = {
    constructor: Li,
    union: function(t) {
      var e = Di(t.x, this.x),
        i = Di(t.y, this.y);
      (this.width = Ci(t.x + t.width, this.x + this.width) - e),
        (this.height = Ci(t.y + t.height, this.y + this.height) - i),
        (this.x = e),
        (this.y = i);
    },
    applyTransform:
      ((Si = []),
      (Mi = []),
      (Ii = []),
      (Ti = []),
      function(t) {
        if (t) {
          (Si[0] = Ii[0] = this.x),
            (Si[1] = Ti[1] = this.y),
            (Mi[0] = Ti[0] = this.x + this.width),
            (Mi[1] = Ii[1] = this.y + this.height),
            Ai(Si, Si, t),
            Ai(Mi, Mi, t),
            Ai(Ii, Ii, t),
            Ai(Ti, Ti, t),
            (this.x = Di(Si[0], Mi[0], Ii[0], Ti[0])),
            (this.y = Di(Si[1], Mi[1], Ii[1], Ti[1]));
          var e = Ci(Si[0], Mi[0], Ii[0], Ti[0]),
            i = Ci(Si[1], Mi[1], Ii[1], Ti[1]);
          (this.width = e - this.x), (this.height = i - this.y);
        }
      }),
    calculateTransform: function(t) {
      var e = t.width / this.width,
        i = t.height / this.height,
        n = se();
      return (
        ce(n, n, [-this.x, -this.y]), fe(n, n, [e, i]), ce(n, n, [t.x, t.y]), n
      );
    },
    intersect: function(t) {
      if (!t) return !1;
      t instanceof Li || (t = Li.create(t));
      var e = this,
        i = e.x,
        n = e.x + e.width,
        o = e.y,
        a = e.y + e.height,
        r = t.x,
        s = t.x + t.width,
        l = t.y,
        u = t.y + t.height;
      return !(n < r || s < i || a < l || u < o);
    },
    contain: function(t, e) {
      var i = this;
      return t >= i.x && t <= i.x + i.width && e >= i.y && e <= i.y + i.height;
    },
    clone: function() {
      return new Li(this.x, this.y, this.width, this.height);
    },
    copy: function(t) {
      (this.x = t.x),
        (this.y = t.y),
        (this.width = t.width),
        (this.height = t.height);
    },
    plain: function() {
      return {x: this.x, y: this.y, width: this.width, height: this.height};
    },
  }),
    (Li.create = function(t) {
      return new Li(t.x, t.y, t.width, t.height);
    });
  var ki = function(t) {
    for (var e in ((t = t || {}), bi.call(this, t), t))
      t.hasOwnProperty(e) && (this[e] = t[e]);
    (this._children = []), (this.__storage = null), (this.__dirty = !0);
  };
  (ki.prototype = {
    constructor: ki,
    isGroup: !0,
    type: 'group',
    silent: !1,
    children: function() {
      return this._children.slice();
    },
    childAt: function(t) {
      return this._children[t];
    },
    childOfName: function(t) {
      for (var e = this._children, i = 0; i < e.length; i++)
        if (e[i].name === t) return e[i];
    },
    childCount: function() {
      return this._children.length;
    },
    add: function(t) {
      return (
        t &&
          t !== this &&
          t.parent !== this &&
          (this._children.push(t), this._doAdd(t)),
        this
      );
    },
    addBefore: function(t, e) {
      if (t && t !== this && t.parent !== this && e && e.parent === this) {
        var i = this._children,
          n = i.indexOf(e);
        0 <= n && (i.splice(n, 0, t), this._doAdd(t));
      }
      return this;
    },
    _doAdd: function(t) {
      t.parent && t.parent.remove(t);
      var e = (t.parent = this).__storage,
        i = this.__zr;
      e &&
        e !== t.__storage &&
        (e.addToStorage(t), t instanceof ki && t.addChildrenToStorage(e)),
        i && i.refresh();
    },
    remove: function(t) {
      var e = this.__zr,
        i = this.__storage,
        n = this._children,
        o = w(n, t);
      return (
        o < 0 ||
          (n.splice(o, 1),
          (t.parent = null),
          i &&
            (i.delFromStorage(t),
            t instanceof ki && t.delChildrenFromStorage(i)),
          e && e.refresh()),
        this
      );
    },
    removeAll: function() {
      var t,
        e,
        i = this._children,
        n = this.__storage;
      for (e = 0; e < i.length; e++)
        (t = i[e]),
          n &&
            (n.delFromStorage(t),
            t instanceof ki && t.delChildrenFromStorage(n)),
          (t.parent = null);
      return (i.length = 0), this;
    },
    eachChild: function(t, e) {
      for (var i = this._children, n = 0; n < i.length; n++) {
        var o = i[n];
        t.call(e, o, n);
      }
      return this;
    },
    traverse: function(t, e) {
      for (var i = 0; i < this._children.length; i++) {
        var n = this._children[i];
        t.call(e, n), 'group' === n.type && n.traverse(t, e);
      }
      return this;
    },
    addChildrenToStorage: function(t) {
      for (var e = 0; e < this._children.length; e++) {
        var i = this._children[e];
        t.addToStorage(i), i instanceof ki && i.addChildrenToStorage(t);
      }
    },
    delChildrenFromStorage: function(t) {
      for (var e = 0; e < this._children.length; e++) {
        var i = this._children[e];
        t.delFromStorage(i), i instanceof ki && i.delChildrenFromStorage(t);
      }
    },
    dirty: function() {
      return (this.__dirty = !0), this.__zr && this.__zr.refresh(), this;
    },
    getBoundingRect: function(t) {
      for (
        var e = null,
          i = new Li(0, 0, 0, 0),
          n = t || this._children,
          o = [],
          a = 0;
        a < n.length;
        a++
      ) {
        var r = n[a];
        if (!r.ignore && !r.invisible) {
          var s = r.getBoundingRect(),
            l = r.getLocalTransform(o);
          l
            ? (i.copy(s), i.applyTransform(l), (e = e || i.clone()).union(i))
            : (e = e || s.clone()).union(s);
        }
      }
      return e || i;
    },
  }),
    b(ki, bi);
  var Pi = 32,
    Ni = 7;
  function Oi(t, e, i, n) {
    var o = e + 1;
    if (o === i) return 1;
    if (n(t[o++], t[e]) < 0) {
      for (; o < i && n(t[o], t[o - 1]) < 0; ) o++;
      !(function(t, e, i) {
        i--;
        for (; e < i; ) {
          var n = t[e];
          (t[e++] = t[i]), (t[i--] = n);
        }
      })(t, e, o);
    } else for (; o < i && 0 <= n(t[o], t[o - 1]); ) o++;
    return o - e;
  }
  function Ei(t, e, i, n, o) {
    for (n === e && n++; n < i; n++) {
      for (var a, r = t[n], s = e, l = n; s < l; )
        o(r, t[(a = (s + l) >>> 1)]) < 0 ? (l = a) : (s = 1 + a);
      var u = n - s;
      switch (u) {
        case 3:
          t[s + 3] = t[s + 2];
        case 2:
          t[s + 2] = t[s + 1];
        case 1:
          t[s + 1] = t[s];
          break;
        default:
          for (; 0 < u; ) (t[s + u] = t[s + u - 1]), u--;
      }
      t[s] = r;
    }
  }
  function Ri(t, e, i, n, o, a) {
    var r = 0,
      s = 0,
      l = 1;
    if (0 < a(t, e[i + o])) {
      for (s = n - o; l < s && 0 < a(t, e[i + o + l]); )
        (l = 1 + ((r = l) << 1)) <= 0 && (l = s);
      s < l && (l = s), (r += o), (l += o);
    } else {
      for (s = o + 1; l < s && a(t, e[i + o - l]) <= 0; )
        (l = 1 + ((r = l) << 1)) <= 0 && (l = s);
      s < l && (l = s);
      var u = r;
      (r = o - l), (l = o - u);
    }
    for (r++; r < l; ) {
      var h = r + ((l - r) >>> 1);
      0 < a(t, e[i + h]) ? (r = h + 1) : (l = h);
    }
    return l;
  }
  function zi(t, e, i, n, o, a) {
    var r = 0,
      s = 0,
      l = 1;
    if (a(t, e[i + o]) < 0) {
      for (s = o + 1; l < s && a(t, e[i + o - l]) < 0; )
        (l = 1 + ((r = l) << 1)) <= 0 && (l = s);
      s < l && (l = s);
      var u = r;
      (r = o - l), (l = o - u);
    } else {
      for (s = n - o; l < s && 0 <= a(t, e[i + o + l]); )
        (l = 1 + ((r = l) << 1)) <= 0 && (l = s);
      s < l && (l = s), (r += o), (l += o);
    }
    for (r++; r < l; ) {
      var h = r + ((l - r) >>> 1);
      a(t, e[i + h]) < 0 ? (l = h) : (r = h + 1);
    }
    return l;
  }
  function Bi(p, g) {
    var r,
      s,
      m = Ni,
      l = 0,
      v = [];
    function e(t) {
      var e = r[t],
        i = s[t],
        n = r[t + 1],
        o = s[t + 1];
      (s[t] = i + o),
        t === l - 3 && ((r[t + 1] = r[t + 2]), (s[t + 1] = s[t + 2])),
        l--;
      var a = zi(p[n], p, e, i, 0, g);
      (e += a),
        0 !== (i -= a) &&
          0 !== (o = Ri(p[e + i - 1], p, n, o, o - 1, g)) &&
          (i <= o
            ? (function(t, e, i, n) {
                var o = 0;
                for (o = 0; o < e; o++) v[o] = p[t + o];
                var a = 0,
                  r = i,
                  s = t;
                if (((p[s++] = p[r++]), 0 == --n)) {
                  for (o = 0; o < e; o++) p[s + o] = v[a + o];
                  return;
                }
                if (1 === e) {
                  for (o = 0; o < n; o++) p[s + o] = p[r + o];
                  return (p[s + n] = v[a]);
                }
                var l,
                  u,
                  h,
                  c = m;
                for (;;) {
                  (u = l = 0), (h = !1);
                  do {
                    if (g(p[r], v[a]) < 0) {
                      if (((p[s++] = p[r++]), u++, (l = 0) == --n)) {
                        h = !0;
                        break;
                      }
                    } else if (((p[s++] = v[a++]), l++, (u = 0), 1 == --e)) {
                      h = !0;
                      break;
                    }
                  } while ((l | u) < c);
                  if (h) break;
                  do {
                    if (0 !== (l = zi(p[r], v, a, e, 0, g))) {
                      for (o = 0; o < l; o++) p[s + o] = v[a + o];
                      if (((s += l), (a += l), (e -= l) <= 1)) {
                        h = !0;
                        break;
                      }
                    }
                    if (((p[s++] = p[r++]), 0 == --n)) {
                      h = !0;
                      break;
                    }
                    if (0 !== (u = Ri(v[a], p, r, n, 0, g))) {
                      for (o = 0; o < u; o++) p[s + o] = p[r + o];
                      if (((s += u), (r += u), 0 === (n -= u))) {
                        h = !0;
                        break;
                      }
                    }
                    if (((p[s++] = v[a++]), 1 == --e)) {
                      h = !0;
                      break;
                    }
                    c--;
                  } while (Ni <= l || Ni <= u);
                  if (h) break;
                  c < 0 && (c = 0), (c += 2);
                }
                if (((m = c) < 1 && (m = 1), 1 === e)) {
                  for (o = 0; o < n; o++) p[s + o] = p[r + o];
                  p[s + n] = v[a];
                } else {
                  if (0 === e) throw new Error();
                  for (o = 0; o < e; o++) p[s + o] = v[a + o];
                }
              })(e, i, n, o)
            : (function(t, e, i, n) {
                var o = 0;
                for (o = 0; o < n; o++) v[o] = p[i + o];
                var a = t + e - 1,
                  r = n - 1,
                  s = i + n - 1,
                  l = 0,
                  u = 0;
                if (((p[s--] = p[a--]), 0 == --e)) {
                  for (l = s - (n - 1), o = 0; o < n; o++) p[l + o] = v[o];
                  return;
                }
                if (1 === n) {
                  for (
                    u = (s -= e) + 1, l = (a -= e) + 1, o = e - 1;
                    0 <= o;
                    o--
                  )
                    p[u + o] = p[l + o];
                  return (p[s] = v[r]);
                }
                var h = m;
                for (;;) {
                  var c = 0,
                    d = 0,
                    f = !1;
                  do {
                    if (g(v[r], p[a]) < 0) {
                      if (((p[s--] = p[a--]), c++, (d = 0) == --e)) {
                        f = !0;
                        break;
                      }
                    } else if (((p[s--] = v[r--]), d++, (c = 0), 1 == --n)) {
                      f = !0;
                      break;
                    }
                  } while ((c | d) < h);
                  if (f) break;
                  do {
                    if (0 !== (c = e - zi(v[r], p, t, e, e - 1, g))) {
                      for (
                        e -= c, u = (s -= c) + 1, l = (a -= c) + 1, o = c - 1;
                        0 <= o;
                        o--
                      )
                        p[u + o] = p[l + o];
                      if (0 === e) {
                        f = !0;
                        break;
                      }
                    }
                    if (((p[s--] = v[r--]), 1 == --n)) {
                      f = !0;
                      break;
                    }
                    if (0 !== (d = n - Ri(p[a], v, 0, n, n - 1, g))) {
                      for (
                        n -= d, u = (s -= d) + 1, l = (r -= d) + 1, o = 0;
                        o < d;
                        o++
                      )
                        p[u + o] = v[l + o];
                      if (n <= 1) {
                        f = !0;
                        break;
                      }
                    }
                    if (((p[s--] = p[a--]), 0 == --e)) {
                      f = !0;
                      break;
                    }
                    h--;
                  } while (Ni <= c || Ni <= d);
                  if (f) break;
                  h < 0 && (h = 0), (h += 2);
                }
                (m = h) < 1 && (m = 1);
                if (1 === n) {
                  for (
                    u = (s -= e) + 1, l = (a -= e) + 1, o = e - 1;
                    0 <= o;
                    o--
                  )
                    p[u + o] = p[l + o];
                  p[s] = v[r];
                } else {
                  if (0 === n) throw new Error();
                  for (l = s - (n - 1), o = 0; o < n; o++) p[l + o] = v[o];
                }
              })(e, i, n, o));
    }
    (r = []),
      (s = []),
      (this.mergeRuns = function() {
        for (; 1 < l; ) {
          var t = l - 2;
          if (
            (1 <= t && s[t - 1] <= s[t] + s[t + 1]) ||
            (2 <= t && s[t - 2] <= s[t] + s[t - 1])
          )
            s[t - 1] < s[t + 1] && t--;
          else if (s[t] > s[t + 1]) break;
          e(t);
        }
      }),
      (this.forceMergeRuns = function() {
        for (; 1 < l; ) {
          var t = l - 2;
          0 < t && s[t - 1] < s[t + 1] && t--, e(t);
        }
      }),
      (this.pushRun = function(t, e) {
        (r[l] = t), (s[l] = e), (l += 1);
      });
  }
  function Vi(t, e, i, n) {
    i = i || 0;
    var o = (n = n || t.length) - i;
    if (!(o < 2)) {
      var a = 0;
      if (o < Pi) Ei(t, i, n, i + (a = Oi(t, i, n, e)), e);
      else {
        var r = new Bi(t, e),
          s = (function(t) {
            for (var e = 0; Pi <= t; ) (e |= 1 & t), (t >>= 1);
            return t + e;
          })(o);
        do {
          if ((a = Oi(t, i, n, e)) < s) {
            var l = o;
            s < l && (l = s), Ei(t, i, i + l, i + a, e), (a = l);
          }
          r.pushRun(i, a), r.mergeRuns(), (o -= a), (i += a);
        } while (0 !== o);
        r.forceMergeRuns();
      }
    }
  }
  function Gi(t, e) {
    return t.zlevel === e.zlevel
      ? t.z === e.z
        ? t.z2 - e.z2
        : t.z - e.z
      : t.zlevel - e.zlevel;
  }
  function Fi() {
    (this._roots = []), (this._displayList = []), (this._displayListLen = 0);
  }
  Fi.prototype = {
    constructor: Fi,
    traverse: function(t, e) {
      for (var i = 0; i < this._roots.length; i++)
        this._roots[i].traverse(t, e);
    },
    getDisplayList: function(t, e) {
      return (e = e || !1), t && this.updateDisplayList(e), this._displayList;
    },
    updateDisplayList: function(t) {
      this._displayListLen = 0;
      for (
        var e = this._roots, i = this._displayList, n = 0, o = e.length;
        n < o;
        n++
      )
        this._updateAndAddDisplayable(e[n], null, t);
      (i.length = this._displayListLen), v.canvasSupported && Vi(i, Gi);
    },
    _updateAndAddDisplayable: function(t, e, i) {
      if (!t.ignore || i) {
        t.beforeUpdate(), t.__dirty && t.update(), t.afterUpdate();
        var n = t.clipPath;
        if (n) {
          e = e ? e.slice() : [];
          for (var o = n, a = t; o; )
            (o.parent = a),
              o.updateTransform(),
              e.push(o),
              (o = (a = o).clipPath);
        }
        if (t.isGroup) {
          for (var r = t._children, s = 0; s < r.length; s++) {
            var l = r[s];
            t.__dirty && (l.__dirty = !0),
              this._updateAndAddDisplayable(l, e, i);
          }
          t.__dirty = !1;
        } else
          (t.__clipPaths = e), (this._displayList[this._displayListLen++] = t);
      }
    },
    addRoot: function(t) {
      t.__storage !== this &&
        (t instanceof ki && t.addChildrenToStorage(this),
        this.addToStorage(t),
        this._roots.push(t));
    },
    delRoot: function(t) {
      if (null == t) {
        for (var e = 0; e < this._roots.length; e++) {
          var i = this._roots[e];
          i instanceof ki && i.delChildrenFromStorage(this);
        }
        return (
          (this._roots = []),
          (this._displayList = []),
          void (this._displayListLen = 0)
        );
      }
      if (t instanceof Array) {
        e = 0;
        for (var n = t.length; e < n; e++) this.delRoot(t[e]);
      } else {
        var o = w(this._roots, t);
        0 <= o &&
          (this.delFromStorage(t),
          this._roots.splice(o, 1),
          t instanceof ki && t.delChildrenFromStorage(this));
      }
    },
    addToStorage: function(t) {
      return t && ((t.__storage = this), t.dirty(!1)), this;
    },
    delFromStorage: function(t) {
      return t && (t.__storage = null), this;
    },
    dispose: function() {
      this._renderList = this._roots = null;
    },
    displayableSortFunc: Gi,
  };
  var Wi = {
      shadowBlur: 1,
      shadowOffsetX: 1,
      shadowOffsetY: 1,
      textShadowBlur: 1,
      textShadowOffsetX: 1,
      textShadowOffsetY: 1,
      textBoxShadowBlur: 1,
      textBoxShadowOffsetX: 1,
      textBoxShadowOffsetY: 1,
    },
    Hi = function(t, e, i) {
      return Wi.hasOwnProperty(e) ? i * t.dpr : i;
    },
    Zi = {NONE: 0, STYLE_BIND: 1, PLAIN_TEXT: 2},
    Ui = 9,
    Xi = [
      ['shadowBlur', 0],
      ['shadowOffsetX', 0],
      ['shadowOffsetY', 0],
      ['shadowColor', '#000'],
      ['lineCap', 'butt'],
      ['lineJoin', 'miter'],
      ['miterLimit', 10],
    ],
    Yi = function(t) {
      this.extendFrom(t, !1);
    };
  function ji(t, e, i) {
    var n = null == e.x ? 0 : e.x,
      o = null == e.x2 ? 1 : e.x2,
      a = null == e.y ? 0 : e.y,
      r = null == e.y2 ? 0 : e.y2;
    return (
      e.global ||
        ((n = n * i.width + i.x),
        (o = o * i.width + i.x),
        (a = a * i.height + i.y),
        (r = r * i.height + i.y)),
      (n = isNaN(n) ? 0 : n),
      (o = isNaN(o) ? 1 : o),
      (a = isNaN(a) ? 0 : a),
      (r = isNaN(r) ? 0 : r),
      t.createLinearGradient(n, a, o, r)
    );
  }
  function qi(t, e, i) {
    var n = i.width,
      o = i.height,
      a = Math.min(n, o),
      r = null == e.x ? 0.5 : e.x,
      s = null == e.y ? 0.5 : e.y,
      l = null == e.r ? 0.5 : e.r;
    return (
      e.global || ((r = r * n + i.x), (s = s * o + i.y), (l *= a)),
      t.createRadialGradient(r, s, 0, r, s, l)
    );
  }
  Yi.prototype = {
    constructor: Yi,
    fill: '#000',
    stroke: null,
    opacity: 1,
    fillOpacity: null,
    strokeOpacity: null,
    lineDash: null,
    lineDashOffset: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    lineWidth: 1,
    strokeNoScale: !1,
    text: null,
    font: null,
    textFont: null,
    fontStyle: null,
    fontWeight: null,
    fontSize: null,
    fontFamily: null,
    textTag: null,
    textFill: '#000',
    textStroke: null,
    textWidth: null,
    textHeight: null,
    textStrokeWidth: 0,
    textLineHeight: null,
    textPosition: 'inside',
    textRect: null,
    textOffset: null,
    textAlign: null,
    textVerticalAlign: null,
    textDistance: 5,
    textShadowColor: 'transparent',
    textShadowBlur: 0,
    textShadowOffsetX: 0,
    textShadowOffsetY: 0,
    textBoxShadowColor: 'transparent',
    textBoxShadowBlur: 0,
    textBoxShadowOffsetX: 0,
    textBoxShadowOffsetY: 0,
    transformText: !1,
    textRotation: 0,
    textOrigin: null,
    textBackgroundColor: null,
    textBorderColor: null,
    textBorderWidth: 0,
    textBorderRadius: 0,
    textPadding: null,
    rich: null,
    truncate: null,
    blend: null,
    bind: function(t, e, i) {
      var n = this,
        o = i && i.style,
        a = !o || t.__attrCachedBy !== Zi.STYLE_BIND;
      t.__attrCachedBy = Zi.STYLE_BIND;
      for (var r = 0; r < Xi.length; r++) {
        var s = Xi[r],
          l = s[0];
        (!a && n[l] === o[l]) || (t[l] = Hi(t, l, n[l] || s[1]));
      }
      if (
        ((!a && n.fill === o.fill) || (t.fillStyle = n.fill),
        (!a && n.stroke === o.stroke) || (t.strokeStyle = n.stroke),
        (!a && n.opacity === o.opacity) ||
          (t.globalAlpha = null == n.opacity ? 1 : n.opacity),
        (!a && n.blend === o.blend) ||
          (t.globalCompositeOperation = n.blend || 'source-over'),
        this.hasStroke())
      ) {
        var u = n.lineWidth;
        t.lineWidth =
          u /
          (this.strokeNoScale && e && e.getLineScale ? e.getLineScale() : 1);
      }
    },
    hasFill: function() {
      var t = this.fill;
      return null != t && 'none' !== t;
    },
    hasStroke: function() {
      var t = this.stroke;
      return null != t && 'none' !== t && 0 < this.lineWidth;
    },
    extendFrom: function(t, e) {
      if (t)
        for (var i in t)
          !t.hasOwnProperty(i) ||
            (!0 !== e && (!1 === e ? this.hasOwnProperty(i) : null == t[i])) ||
            (this[i] = t[i]);
    },
    set: function(t, e) {
      'string' == typeof t ? (this[t] = e) : this.extendFrom(t, !0);
    },
    clone: function() {
      var t = new this.constructor();
      return t.extendFrom(this, !0), t;
    },
    getGradient: function(t, e, i) {
      for (
        var n = ('radial' === e.type ? qi : ji)(t, e, i),
          o = e.colorStops,
          a = 0;
        a < o.length;
        a++
      )
        n.addColorStop(o[a].offset, o[a].color);
      return n;
    },
  };
  for (var Ki = Yi.prototype, $i = 0; $i < Xi.length; $i++) {
    var Ji = Xi[$i];
    Ji[0] in Ki || (Ki[Ji[0]] = Ji[1]);
  }
  Yi.getGradient = Ki.getGradient;
  function Qi(t, e) {
    (this.image = t), (this.repeat = e), (this.type = 'pattern');
  }
  function tn() {
    return !1;
  }
  function en(t, e, i) {
    var n = y(),
      o = e.getWidth(),
      a = e.getHeight(),
      r = n.style;
    return (
      r &&
        ((r.position = 'absolute'),
        (r.left = 0),
        (r.top = 0),
        (r.width = o + 'px'),
        (r.height = a + 'px'),
        n.setAttribute('data-zr-dom-id', t)),
      (n.width = o * i),
      (n.height = a * i),
      n
    );
  }
  function nn(t, e, i) {
    var n;
    (i = i || mi),
      'string' == typeof t ? (n = en(t, e, i)) : V(t) && (t = (n = t).id),
      (this.id = t);
    var o = (this.dom = n).style;
    o &&
      ((n.onselectstart = tn),
      (o['-webkit-user-select'] = 'none'),
      (o['user-select'] = 'none'),
      (o['-webkit-touch-callout'] = 'none'),
      (o['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)'),
      (o.padding = 0),
      (o.margin = 0),
      (o['border-width'] = 0)),
      (this.domBack = null),
      (this.ctxBack = null),
      (this.painter = e),
      (this.config = null),
      (this.clearColor = 0),
      (this.motionBlur = !1),
      (this.lastFrameAlpha = 0.7),
      (this.dpr = i);
  }
  nn.prototype = {
    constructor: nn,
    __dirty: !0,
    __used: !(Qi.prototype.getCanvasPattern = function(t) {
      return t.createPattern(this.image, this.repeat || 'repeat');
    }),
    __drawIndex: 0,
    __startIndex: 0,
    __endIndex: 0,
    incremental: !1,
    getElementCount: function() {
      return this.__endIndex - this.__startIndex;
    },
    initContext: function() {
      (this.ctx = this.dom.getContext('2d')), (this.ctx.dpr = this.dpr);
    },
    createBackBuffer: function() {
      var t = this.dpr;
      (this.domBack = en('back-' + this.id, this.painter, t)),
        (this.ctxBack = this.domBack.getContext('2d')),
        1 !== t && this.ctxBack.scale(t, t);
    },
    resize: function(t, e) {
      var i = this.dpr,
        n = this.dom,
        o = n.style,
        a = this.domBack;
      o && ((o.width = t + 'px'), (o.height = e + 'px')),
        (n.width = t * i),
        (n.height = e * i),
        a &&
          ((a.width = t * i),
          (a.height = e * i),
          1 !== i && this.ctxBack.scale(i, i));
    },
    clear: function(t, e) {
      var i,
        n = this.dom,
        o = this.ctx,
        a = n.width,
        r = n.height,
        s = ((e = e || this.clearColor), this.motionBlur && !t),
        l = this.lastFrameAlpha,
        u = this.dpr;
      s &&
        (this.domBack || this.createBackBuffer(),
        (this.ctxBack.globalCompositeOperation = 'copy'),
        this.ctxBack.drawImage(n, 0, 0, a / u, r / u)),
        o.clearRect(0, 0, a, r),
        e &&
          'transparent' !== e &&
          (e.colorStops
            ? ((i =
                e.__canvasGradient ||
                Yi.getGradient(o, e, {x: 0, y: 0, width: a, height: r})),
              (e.__canvasGradient = i))
            : e.image && (i = Qi.prototype.getCanvasPattern.call(e, o)),
          o.save(),
          (o.fillStyle = i || e),
          o.fillRect(0, 0, a, r),
          o.restore());
      if (s) {
        var h = this.domBack;
        o.save(), (o.globalAlpha = l), o.drawImage(h, 0, 0, a, r), o.restore();
      }
    },
  };
  var on =
      ('undefined' != typeof window &&
        ((window.requestAnimationFrame &&
          window.requestAnimationFrame.bind(window)) ||
          (window.msRequestAnimationFrame &&
            window.msRequestAnimationFrame.bind(window)) ||
          window.mozRequestAnimationFrame ||
          window.webkitRequestAnimationFrame)) ||
      function(t) {
        setTimeout(t, 16);
      },
    an = new De(50);
  function rn(t) {
    if ('string' != typeof t) return t;
    var e = an.get(t);
    return e && e.image;
  }
  function sn(t, e, i, n, o) {
    if (t) {
      if ('string' != typeof t) return t;
      if ((e && e.__zrImageSrc === t) || !i) return e;
      var a = an.get(t),
        r = {hostEl: i, cb: n, cbPayload: o};
      return (
        a
          ? un((e = a.image)) || a.pending.push(r)
          : (((e = new Image()).onload = e.onerror = ln),
            an.put(t, (e.__cachedImgObj = {image: e, pending: [r]})),
            (e.src = e.__zrImageSrc = t)),
        e
      );
    }
    return e;
  }
  function ln() {
    var t = this.__cachedImgObj;
    this.onload = this.onerror = this.__cachedImgObj = null;
    for (var e = 0; e < t.pending.length; e++) {
      var i = t.pending[e],
        n = i.cb;
      n && n(this, i.cbPayload), i.hostEl.dirty();
    }
    t.pending.length = 0;
  }
  function un(t) {
    return t && t.width && t.height;
  }
  var hn = {},
    cn = 0,
    dn = 5e3,
    fn = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g,
    pn = '12px sans-serif',
    gn = {};
  function mn(t, e) {
    var i = t + ':' + (e = e || pn);
    if (hn[i]) return hn[i];
    for (
      var n, o, a = (t + '').split('\n'), r = 0, s = 0, l = a.length;
      s < l;
      s++
    )
      r = Math.max(((n = a[s]), (o = e), gn.measureText(n, o)).width, r);
    return dn < cn && ((cn = 0), (hn = {})), cn++, (hn[i] = r);
  }
  function vn(t, e, i, n, o, a, r, s) {
    return r
      ? (function(t, e, i, n, o, a, r, s) {
          var l = An(t, {
              rich: r,
              truncate: s,
              font: e,
              textAlign: i,
              textPadding: o,
              textLineHeight: a,
            }),
            u = l.outerWidth,
            h = l.outerHeight,
            c = yn(0, u, i),
            d = xn(0, h, n);
          return new Li(c, d, u, h);
        })(t, e, i, n, o, a, r, s)
      : (function(t, e, i, n, o, a, r) {
          var s = Tn(t, e, o, a, r),
            l = mn(t, e);
          o && (l += o[1] + o[3]);
          var u = s.outerHeight,
            h = yn(0, l, i),
            c = xn(0, u, n),
            d = new Li(h, c, l, u);
          return (d.lineHeight = s.lineHeight), d;
        })(t, e, i, n, o, a, s);
  }
  function yn(t, e, i) {
    return 'right' === i ? (t -= e) : 'center' === i && (t -= e / 2), t;
  }
  function xn(t, e, i) {
    return 'middle' === i ? (t -= e / 2) : 'bottom' === i && (t -= e), t;
  }
  function _n(t, e, i) {
    var n = e.textPosition,
      o = e.textDistance,
      a = i.x,
      r = i.y;
    o = o || 0;
    var s = i.height,
      l = i.width,
      u = s / 2,
      h = 'left',
      c = 'top';
    switch (n) {
      case 'left':
        (a -= o), (r += u), (h = 'right'), (c = 'middle');
        break;
      case 'right':
        (a += o + l), (r += u), (c = 'middle');
        break;
      case 'top':
        (a += l / 2), (r -= o), (h = 'center'), (c = 'bottom');
        break;
      case 'bottom':
        (a += l / 2), (r += s + o), (h = 'center');
        break;
      case 'inside':
        (a += l / 2), (r += u), (h = 'center'), (c = 'middle');
        break;
      case 'insideLeft':
        (a += o), (r += u), (c = 'middle');
        break;
      case 'insideRight':
        (a += l - o), (r += u), (h = 'right'), (c = 'middle');
        break;
      case 'insideTop':
        (a += l / 2), (r += o), (h = 'center');
        break;
      case 'insideBottom':
        (a += l / 2), (r += s - o), (h = 'center'), (c = 'bottom');
        break;
      case 'insideTopLeft':
        (a += o), (r += o);
        break;
      case 'insideTopRight':
        (a += l - o), (r += o), (h = 'right');
        break;
      case 'insideBottomLeft':
        (a += o), (r += s - o), (c = 'bottom');
        break;
      case 'insideBottomRight':
        (a += l - o), (r += s - o), (h = 'right'), (c = 'bottom');
    }
    return (
      ((t = t || {}).x = a),
      (t.y = r),
      (t.textAlign = h),
      (t.textVerticalAlign = c),
      t
    );
  }
  function wn(t, e, i, n, o) {
    if (!e) return '';
    var a = (t + '').split('\n');
    o = bn(e, i, n, o);
    for (var r = 0, s = a.length; r < s; r++) a[r] = Sn(a[r], o);
    return a.join('\n');
  }
  function bn(t, e, i, n) {
    (n = P({}, n)).font = e;
    i = U(i, '...');
    n.maxIterations = U(n.maxIterations, 2);
    var o = (n.minChar = U(n.minChar, 0));
    n.cnCharWidth = mn('国', e);
    var a = (n.ascCharWidth = mn('a', e));
    n.placeholder = U(n.placeholder, '');
    for (var r = (t = Math.max(0, t - 1)), s = 0; s < o && a <= r; s++) r -= a;
    var l = mn(i, e);
    return (
      r < l && ((i = ''), (l = 0)),
      (r = t - l),
      (n.ellipsis = i),
      (n.ellipsisWidth = l),
      (n.contentWidth = r),
      (n.containerWidth = t),
      n
    );
  }
  function Sn(t, e) {
    var i = e.containerWidth,
      n = e.font,
      o = e.contentWidth;
    if (!i) return '';
    var a = mn(t, n);
    if (a <= i) return t;
    for (var r = 0; ; r++) {
      if (a <= o || r >= e.maxIterations) {
        t += e.ellipsis;
        break;
      }
      var s =
        0 === r
          ? Mn(t, o, e.ascCharWidth, e.cnCharWidth)
          : 0 < a
          ? Math.floor((t.length * o) / a)
          : 0;
      a = mn((t = t.substr(0, s)), n);
    }
    return '' === t && (t = e.placeholder), t;
  }
  function Mn(t, e, i, n) {
    for (var o = 0, a = 0, r = t.length; a < r && o < e; a++) {
      var s = t.charCodeAt(a);
      o += 0 <= s && s <= 127 ? i : n;
    }
    return a;
  }
  function In(t) {
    return mn('国', t);
  }
  function Tn(t, e, i, n, o) {
    null != t && (t += '');
    var a = U(n, In(e)),
      r = t ? t.split('\n') : [],
      s = r.length * a,
      l = s,
      u = !0;
    if ((i && (l += i[0] + i[2]), t && o)) {
      u = !1;
      var h = o.outerHeight,
        c = o.outerWidth;
      if (null != h && h < l) (t = ''), (r = []);
      else if (null != c)
        for (
          var d = bn(c - (i ? i[1] + i[3] : 0), e, o.ellipsis, {
              minChar: o.minChar,
              placeholder: o.placeholder,
            }),
            f = 0,
            p = r.length;
          f < p;
          f++
        )
          r[f] = Sn(r[f], d);
    }
    return {
      lines: r,
      height: s,
      outerHeight: l,
      lineHeight: a,
      canCacheByTextString: u,
    };
  }
  function An(t, e) {
    var i = {lines: [], width: 0, height: 0};
    if ((null != t && (t += ''), !t)) return i;
    for (var n, o = (fn.lastIndex = 0); null != (n = fn.exec(t)); ) {
      var a = n.index;
      o < a && Dn(i, t.substring(o, a)), Dn(i, n[2], n[1]), (o = fn.lastIndex);
    }
    o < t.length && Dn(i, t.substring(o, t.length));
    var r = i.lines,
      s = 0,
      l = 0,
      u = [],
      h = e.textPadding,
      c = e.truncate,
      d = c && c.outerWidth,
      f = c && c.outerHeight;
    h && (null != d && (d -= h[1] + h[3]), null != f && (f -= h[0] + h[2]));
    for (var p = 0; p < r.length; p++) {
      for (var g = r[p], m = 0, v = 0, y = 0; y < g.tokens.length; y++) {
        var x = ((C = g.tokens[y]).styleName && e.rich[C.styleName]) || {},
          _ = (C.textPadding = x.textPadding),
          w = (C.font = x.font || e.font),
          b = (C.textHeight = U(x.textHeight, In(w)));
        if (
          (_ && (b += _[0] + _[2]),
          (C.height = b),
          (C.lineHeight = X(x.textLineHeight, e.textLineHeight, b)),
          (C.textAlign = (x && x.textAlign) || e.textAlign),
          (C.textVerticalAlign = (x && x.textVerticalAlign) || 'middle'),
          null != f && s + C.lineHeight > f)
        )
          return {lines: [], width: 0, height: 0};
        C.textWidth = mn(C.text, w);
        var S = x.textWidth,
          M = null == S || 'auto' === S;
        if ('string' == typeof S && '%' === S.charAt(S.length - 1))
          (C.percentWidth = S), u.push(C), (S = 0);
        else {
          if (M) {
            S = C.textWidth;
            var I = x.textBackgroundColor,
              T = I && I.image;
            T && un((T = rn(T))) && (S = Math.max(S, (T.width * b) / T.height));
          }
          var A = _ ? _[1] + _[3] : 0;
          S += A;
          var D = null != d ? d - v : null;
          null != D &&
            D < S &&
            (!M || D < A
              ? ((C.text = ''), (C.textWidth = S = 0))
              : ((C.text = wn(C.text, D - A, w, c.ellipsis, {
                  minChar: c.minChar,
                })),
                (C.textWidth = mn(C.text, w)),
                (S = C.textWidth + A)));
        }
        (v += C.width = S), x && (m = Math.max(m, C.lineHeight));
      }
      (g.width = v), (s += g.lineHeight = m), (l = Math.max(l, v));
    }
    (i.outerWidth = i.width = U(e.textWidth, l)),
      (i.outerHeight = i.height = U(e.textHeight, s)),
      h && ((i.outerWidth += h[1] + h[3]), (i.outerHeight += h[0] + h[2]));
    for (p = 0; p < u.length; p++) {
      var C,
        L = (C = u[p]).percentWidth;
      C.width = (parseInt(L, 10) / 100) * l;
    }
    return i;
  }
  function Dn(t, e, i) {
    for (
      var n = '' === e, o = e.split('\n'), a = t.lines, r = 0;
      r < o.length;
      r++
    ) {
      var s = o[r],
        l = {styleName: i, text: s, isLineHolder: !s && !n};
      if (r) a.push({tokens: [l]});
      else {
        var u = (a[a.length - 1] || (a[0] = {tokens: []})).tokens,
          h = u.length;
        1 === h && u[0].isLineHolder
          ? (u[0] = l)
          : (!s && h && !n) || u.push(l);
      }
    }
  }
  function Cn(t) {
    var e =
      (t.fontSize || t.fontFamily) &&
      [
        t.fontStyle,
        t.fontWeight,
        (t.fontSize || 12) + 'px',
        t.fontFamily || 'sans-serif',
      ].join(' ');
    return (e && K(e)) || t.textFont || t.font;
  }
  function Ln(t, e) {
    var i,
      n,
      o,
      a,
      r,
      s = e.x,
      l = e.y,
      u = e.width,
      h = e.height,
      c = e.r;
    u < 0 && ((s += u), (u = -u)),
      h < 0 && ((l += h), (h = -h)),
      'number' == typeof c
        ? (i = n = o = a = c)
        : c instanceof Array
        ? 1 === c.length
          ? (i = n = o = a = c[0])
          : 2 === c.length
          ? ((i = o = c[0]), (n = a = c[1]))
          : 3 === c.length
          ? ((i = c[0]), (n = a = c[1]), (o = c[2]))
          : ((i = c[0]), (n = c[1]), (o = c[2]), (a = c[3]))
        : (i = n = o = a = 0),
      u < i + n && ((i *= u / (r = i + n)), (n *= u / r)),
      u < o + a && ((o *= u / (r = o + a)), (a *= u / r)),
      h < n + o && ((n *= h / (r = n + o)), (o *= h / r)),
      h < i + a && ((i *= h / (r = i + a)), (a *= h / r)),
      t.moveTo(s + i, l),
      t.lineTo(s + u - n, l),
      0 !== n && t.arc(s + u - n, l + n, n, -Math.PI / 2, 0),
      t.lineTo(s + u, l + h - o),
      0 !== o && t.arc(s + u - o, l + h - o, o, 0, Math.PI / 2),
      t.lineTo(s + a, l + h),
      0 !== a && t.arc(s + a, l + h - a, a, Math.PI / 2, Math.PI),
      t.lineTo(s, l + i),
      0 !== i && t.arc(s + i, l + i, i, Math.PI, 1.5 * Math.PI);
  }
  gn.measureText = function(t, e) {
    var i = _();
    return (i.font = e || pn), i.measureText(t);
  };
  var kn = pn,
    Pn = {left: 1, right: 1, center: 1},
    Nn = {top: 1, bottom: 1, middle: 1},
    On = [
      ['textShadowBlur', 'shadowBlur', 0],
      ['textShadowOffsetX', 'shadowOffsetX', 0],
      ['textShadowOffsetY', 'shadowOffsetY', 0],
      ['textShadowColor', 'shadowColor', 'transparent'],
    ],
    En = {},
    Rn = {};
  function zn(t) {
    return Bn(t), E(t.rich, Bn), t;
  }
  function Bn(t) {
    if (t) {
      t.font = Cn(t);
      var e = t.textAlign;
      'middle' === e && (e = 'center'),
        (t.textAlign = null == e || Pn[e] ? e : 'left');
      var i = t.textVerticalAlign || t.textBaseline;
      'center' === i && (i = 'middle'),
        (t.textVerticalAlign = null == i || Nn[i] ? i : 'top'),
        t.textPadding && (t.textPadding = j(t.textPadding));
    }
  }
  function Vn(t, e, i, n, o, a) {
    n.rich
      ? (function(t, e, i, n, o, a) {
          a !== Ui && (e.__attrCachedBy = Zi.NONE);
          var r = t.__textCotentBlock;
          (r && !t.__dirtyText) || (r = t.__textCotentBlock = An(i, n));
          !(function(t, e, i, n, o) {
            var a = i.width,
              r = i.outerWidth,
              s = i.outerHeight,
              l = n.textPadding,
              u = Un(Rn, t, n, o),
              h = u.baseX,
              c = u.baseY,
              d = u.textAlign,
              f = u.textVerticalAlign;
            Gn(e, n, o, h, c);
            var p = yn(h, r, d),
              g = xn(c, s, f),
              m = p,
              v = g;
            l && ((m += l[3]), (v += l[0]));
            var y = m + a;
            Wn(n) && Hn(t, e, n, p, g, r, s);
            for (var x = 0; x < i.lines.length; x++) {
              for (
                var _,
                  w = i.lines[x],
                  b = w.tokens,
                  S = b.length,
                  M = w.lineHeight,
                  I = w.width,
                  T = 0,
                  A = m,
                  D = y,
                  C = S - 1;
                T < S && (!(_ = b[T]).textAlign || 'left' === _.textAlign);

              )
                Fn(t, e, _, n, M, v, A, 'left'),
                  (I -= _.width),
                  (A += _.width),
                  T++;
              for (; 0 <= C && 'right' === (_ = b[C]).textAlign; )
                Fn(t, e, _, n, M, v, D, 'right'),
                  (I -= _.width),
                  (D -= _.width),
                  C--;
              for (A += (a - (A - m) - (y - D) - I) / 2; T <= C; )
                (_ = b[T]),
                  Fn(t, e, _, n, M, v, A + _.width / 2, 'center'),
                  (A += _.width),
                  T++;
              v += M;
            }
          })(t, e, r, n, o);
        })(t, e, i, n, o, a)
      : (function(t, e, i, n, o, a) {
          var r,
            s = Wn(n),
            l = !1,
            u = e.__attrCachedBy === Zi.PLAIN_TEXT;
          a !== Ui
            ? (a && ((r = a.style), (l = !s && u && r)),
              (e.__attrCachedBy = s ? Zi.NONE : Zi.PLAIN_TEXT))
            : u && (e.__attrCachedBy = Zi.NONE);
          var h = n.font || kn;
          (l && h === (r.font || kn)) || (e.font = h);
          var c = t.__computedFont;
          t.__styleFont !== h &&
            ((t.__styleFont = h), (c = t.__computedFont = e.font));
          var d = n.textPadding,
            f = n.textLineHeight,
            p = t.__textCotentBlock;
          (p && !t.__dirtyText) ||
            (p = t.__textCotentBlock = Tn(i, c, d, f, n.truncate));
          var g = p.outerHeight,
            m = p.lines,
            v = p.lineHeight,
            y = Un(Rn, t, n, o),
            x = y.baseX,
            _ = y.baseY,
            w = y.textAlign || 'left',
            b = y.textVerticalAlign;
          Gn(e, n, o, x, _);
          var S = xn(_, g, b),
            M = x,
            I = S;
          if (s || d) {
            var T = mn(i, c);
            d && (T += d[1] + d[3]);
            var A = yn(x, T, w);
            s && Hn(t, e, n, A, S, T, g), d && ((M = Kn(x, w, d)), (I += d[0]));
          }
          (e.textAlign = w),
            (e.textBaseline = 'middle'),
            (e.globalAlpha = n.opacity || 1);
          for (var D = 0; D < On.length; D++) {
            var C = On[D],
              L = C[0],
              k = C[1],
              P = n[L];
            (l && P === r[L]) || (e[k] = Hi(e, k, P || C[2]));
          }
          I += v / 2;
          var N = n.textStrokeWidth,
            O = l ? r.textStrokeWidth : null,
            E = !l || N !== O,
            R = !l || E || n.textStroke !== r.textStroke,
            z = Yn(n.textStroke, N),
            B = jn(n.textFill);
          z && (E && (e.lineWidth = N), R && (e.strokeStyle = z));
          B && ((l && n.textFill === r.textFill) || (e.fillStyle = B));
          if (1 === m.length)
            z && e.strokeText(m[0], M, I), B && e.fillText(m[0], M, I);
          else
            for (D = 0; D < m.length; D++)
              z && e.strokeText(m[D], M, I),
                B && e.fillText(m[D], M, I),
                (I += v);
        })(t, e, i, n, o, a);
  }
  function Gn(t, e, i, n, o) {
    if (i && e.textRotation) {
      var a = e.textOrigin;
      'center' === a
        ? ((n = i.width / 2 + i.x), (o = i.height / 2 + i.y))
        : a && ((n = a[0] + i.x), (o = a[1] + i.y)),
        t.translate(n, o),
        t.rotate(-e.textRotation),
        t.translate(-n, -o);
    }
  }
  function Fn(t, e, i, n, o, a, r, s) {
    var l = n.rich[i.styleName] || {};
    l.text = i.text;
    var u = i.textVerticalAlign,
      h = a + o / 2;
    'top' === u
      ? (h = a + i.height / 2)
      : 'bottom' === u && (h = a + o - i.height / 2),
      !i.isLineHolder &&
        Wn(l) &&
        Hn(
          t,
          e,
          l,
          'right' === s ? r - i.width : 'center' === s ? r - i.width / 2 : r,
          h - i.height / 2,
          i.width,
          i.height,
        );
    var c = i.textPadding;
    c && ((r = Kn(r, s, c)), (h -= i.height / 2 - c[2] - i.textHeight / 2)),
      Xn(e, 'shadowBlur', X(l.textShadowBlur, n.textShadowBlur, 0)),
      Xn(
        e,
        'shadowColor',
        l.textShadowColor || n.textShadowColor || 'transparent',
      ),
      Xn(e, 'shadowOffsetX', X(l.textShadowOffsetX, n.textShadowOffsetX, 0)),
      Xn(e, 'shadowOffsetY', X(l.textShadowOffsetY, n.textShadowOffsetY, 0)),
      Xn(e, 'textAlign', s),
      Xn(e, 'textBaseline', 'middle'),
      Xn(e, 'font', i.font || kn);
    var d = Yn(l.textStroke || n.textStroke, p),
      f = jn(l.textFill || n.textFill),
      p = U(l.textStrokeWidth, n.textStrokeWidth);
    d &&
      (Xn(e, 'lineWidth', p),
      Xn(e, 'strokeStyle', d),
      e.strokeText(i.text, r, h)),
      f && (Xn(e, 'fillStyle', f), e.fillText(i.text, r, h));
  }
  function Wn(t) {
    return !!(
      t.textBackgroundColor ||
      (t.textBorderWidth && t.textBorderColor)
    );
  }
  function Hn(t, e, i, n, o, a, r) {
    var s = i.textBackgroundColor,
      l = i.textBorderWidth,
      u = i.textBorderColor,
      h = B(s);
    if (
      (Xn(e, 'shadowBlur', i.textBoxShadowBlur || 0),
      Xn(e, 'shadowColor', i.textBoxShadowColor || 'transparent'),
      Xn(e, 'shadowOffsetX', i.textBoxShadowOffsetX || 0),
      Xn(e, 'shadowOffsetY', i.textBoxShadowOffsetY || 0),
      h || (l && u))
    ) {
      e.beginPath();
      var c = i.textBorderRadius;
      c ? Ln(e, {x: n, y: o, width: a, height: r, r: c}) : e.rect(n, o, a, r),
        e.closePath();
    }
    if (h)
      if ((Xn(e, 'fillStyle', s), null != i.fillOpacity)) {
        var d = e.globalAlpha;
        (e.globalAlpha = i.fillOpacity * i.opacity),
          e.fill(),
          (e.globalAlpha = d);
      } else e.fill();
    else if (V(s)) {
      var f = s.image;
      (f = sn(f, null, t, Zn, s)) && un(f) && e.drawImage(f, n, o, a, r);
    }
    if (l && u)
      if (
        (Xn(e, 'lineWidth', l),
        Xn(e, 'strokeStyle', u),
        null != i.strokeOpacity)
      ) {
        d = e.globalAlpha;
        (e.globalAlpha = i.strokeOpacity * i.opacity),
          e.stroke(),
          (e.globalAlpha = d);
      } else e.stroke();
  }
  function Zn(t, e) {
    e.image = t;
  }
  function Un(t, e, i, n) {
    var o = i.x || 0,
      a = i.y || 0,
      r = i.textAlign,
      s = i.textVerticalAlign;
    if (n) {
      var l = i.textPosition;
      if (l instanceof Array)
        (o = n.x + qn(l[0], n.width)), (a = n.y + qn(l[1], n.height));
      else {
        var u =
          e && e.calculateTextPosition
            ? e.calculateTextPosition(En, i, n)
            : _n(En, i, n);
        (o = u.x),
          (a = u.y),
          (r = r || u.textAlign),
          (s = s || u.textVerticalAlign);
      }
      var h = i.textOffset;
      h && ((o += h[0]), (a += h[1]));
    }
    return (
      ((t = t || {}).baseX = o),
      (t.baseY = a),
      (t.textAlign = r),
      (t.textVerticalAlign = s),
      t
    );
  }
  function Xn(t, e, i) {
    return (t[e] = Hi(t, e, i)), t[e];
  }
  function Yn(t, e) {
    return null == t || e <= 0 || 'transparent' === t || 'none' === t
      ? null
      : t.image || t.colorStops
      ? '#000'
      : t;
  }
  function jn(t) {
    return null == t || 'none' === t
      ? null
      : t.image || t.colorStops
      ? '#000'
      : t;
  }
  function qn(t, e) {
    return 'string' == typeof t
      ? 0 <= t.lastIndexOf('%')
        ? (parseFloat(t) / 100) * e
        : parseFloat(t)
      : t;
  }
  function Kn(t, e, i) {
    return 'right' === e
      ? t - i[1]
      : 'center' === e
      ? t + i[3] / 2 - i[1] / 2
      : t + i[3];
  }
  function $n(t, e) {
    return (
      null != t &&
      (t ||
        e.textBackgroundColor ||
        (e.textBorderWidth && e.textBorderColor) ||
        e.textPadding)
    );
  }
  function Jn() {}
  var Qn = new Li();
  function to(t) {
    for (var e in ((t = t || {}), bi.call(this, t), t))
      t.hasOwnProperty(e) && 'style' !== e && (this[e] = t[e]);
    (this.style = new Yi(t.style, this)),
      (this._rect = null),
      (this.__clipPaths = null);
  }
  function eo(t) {
    to.call(this, t);
  }
  (to.prototype = {
    constructor: to,
    type: 'displayable',
    __dirty: !0,
    invisible: !(Jn.prototype = {
      constructor: Jn,
      drawRectText: function(t, e) {
        var i = this.style;
        (e = i.textRect || e), this.__dirty && zn(i);
        var n = i.text;
        if ((null != n && (n += ''), $n(n, i))) {
          t.save();
          var o = this.transform;
          i.transformText
            ? this.setTransform(t)
            : o && (Qn.copy(e), Qn.applyTransform(o), (e = Qn)),
            Vn(this, t, n, i, e, Ui),
            t.restore();
        }
      },
    }),
    z: 0,
    z2: 0,
    zlevel: 0,
    draggable: !1,
    dragging: !1,
    silent: !1,
    culling: !1,
    cursor: 'pointer',
    rectHover: !1,
    progressive: !1,
    incremental: !1,
    globalScaleRatio: 1,
    beforeBrush: function(t) {},
    afterBrush: function(t) {},
    brush: function(t, e) {},
    getBoundingRect: function() {},
    contain: function(t, e) {
      return this.rectContain(t, e);
    },
    traverse: function(t, e) {
      t.call(e, this);
    },
    rectContain: function(t, e) {
      var i = this.transformCoordToLocal(t, e);
      return this.getBoundingRect().contain(i[0], i[1]);
    },
    dirty: function() {
      (this.__dirty = this.__dirtyText = !0),
        (this._rect = null),
        this.__zr && this.__zr.refresh();
    },
    animateStyle: function(t) {
      return this.animate('style', t);
    },
    attrKV: function(t, e) {
      'style' !== t ? bi.prototype.attrKV.call(this, t, e) : this.style.set(e);
    },
    setStyle: function(t, e) {
      return this.style.set(t, e), this.dirty(!1), this;
    },
    useStyle: function(t) {
      return (this.style = new Yi(t, this)), this.dirty(!1), this;
    },
    calculateTextPosition: null,
  }),
    b(to, bi),
    S(to, Jn),
    (eo.prototype = {
      constructor: eo,
      type: 'image',
      brush: function(t, e) {
        var i = this.style,
          n = i.image;
        i.bind(t, this, e);
        var o = (this._image = sn(n, this._image, this, this.onload));
        if (o && un(o)) {
          var a = i.x || 0,
            r = i.y || 0,
            s = i.width,
            l = i.height,
            u = o.width / o.height;
          if (
            (null == s && null != l
              ? (s = l * u)
              : null == l && null != s
              ? (l = s / u)
              : null == s && null == l && ((s = o.width), (l = o.height)),
            this.setTransform(t),
            i.sWidth && i.sHeight)
          ) {
            var h = i.sx || 0,
              c = i.sy || 0;
            t.drawImage(o, h, c, i.sWidth, i.sHeight, a, r, s, l);
          } else if (i.sx && i.sy) {
            var d = s - (h = i.sx),
              f = l - (c = i.sy);
            t.drawImage(o, h, c, d, f, a, r, s, l);
          } else t.drawImage(o, a, r, s, l);
          null != i.text &&
            (this.restoreTransform(t),
            this.drawRectText(t, this.getBoundingRect()));
        }
      },
      getBoundingRect: function() {
        var t = this.style;
        return (
          this._rect ||
            (this._rect = new Li(
              t.x || 0,
              t.y || 0,
              t.width || 0,
              t.height || 0,
            )),
          this._rect
        );
      },
    }),
    b(eo, to);
  var io = 314159;
  function no(t) {
    return parseInt(t, 10);
  }
  var oo = new Li(0, 0, 0, 0),
    ao = new Li(0, 0, 0, 0);
  function ro(t, e, i) {
    this.type = 'canvas';
    var n = !t.nodeName || 'CANVAS' === t.nodeName.toUpperCase();
    (this._opts = i = P({}, i || {})),
      (this.dpr = i.devicePixelRatio || mi),
      (this._singleCanvas = n);
    var o = (this.root = t).style;
    o &&
      ((o['-webkit-tap-highlight-color'] = 'transparent'),
      (o['-webkit-user-select'] = o['user-select'] = o[
        '-webkit-touch-callout'
      ] = 'none'),
      (t.innerHTML = '')),
      (this.storage = e);
    var a = (this._zlevelList = []),
      r = (this._layers = {});
    if (((this._layerConfig = {}), (this._needsManuallyCompositing = !1), n)) {
      var s = t.width,
        l = t.height;
      null != i.width && (s = i.width),
        null != i.height && (l = i.height),
        (this.dpr = i.devicePixelRatio || 1),
        (t.width = s * this.dpr),
        (t.height = l * this.dpr),
        (this._width = s),
        (this._height = l);
      var u = new nn(t, this, this.dpr);
      (u.__builtin__ = !0),
        u.initContext(),
        ((r[io] = u).zlevel = io),
        a.push(io),
        (this._domRoot = t);
    } else {
      (this._width = this._getSize(0)), (this._height = this._getSize(1));
      var h = (this._domRoot = (function(t, e) {
        var i = document.createElement('div');
        return (
          (i.style.cssText =
            [
              'position:relative',
              'width:' + t + 'px',
              'height:' + e + 'px',
              'padding:0',
              'margin:0',
              'border-width:0',
            ].join(';') + ';'),
          i
        );
      })(this._width, this._height));
      t.appendChild(h);
    }
    (this._hoverlayer = null), (this._hoverElements = []);
  }
  ro.prototype = {
    constructor: ro,
    getType: function() {
      return 'canvas';
    },
    isSingleCanvas: function() {
      return this._singleCanvas;
    },
    getViewportRoot: function() {
      return this._domRoot;
    },
    getViewportRootOffset: function() {
      var t = this.getViewportRoot();
      if (t)
        return {offsetLeft: t.offsetLeft || 0, offsetTop: t.offsetTop || 0};
    },
    refresh: function(t) {
      var e = this.storage.getDisplayList(!0),
        i = this._zlevelList;
      (this._redrawId = Math.random()), this._paintList(e, t, this._redrawId);
      for (var n = 0; n < i.length; n++) {
        var o = i[n],
          a = this._layers[o];
        if (!a.__builtin__ && a.refresh) {
          var r = 0 === n ? this._backgroundColor : null;
          a.refresh(r);
        }
      }
      return this.refreshHover(), this;
    },
    addHover: function(t, e) {
      if (!t.__hoverMir) {
        var i = new t.constructor({
          style: t.style,
          shape: t.shape,
          z: t.z,
          z2: t.z2,
          silent: t.silent,
        });
        return (
          ((i.__from = t).__hoverMir = i),
          e && i.setStyle(e),
          this._hoverElements.push(i),
          i
        );
      }
    },
    removeHover: function(t) {
      var e = t.__hoverMir,
        i = this._hoverElements,
        n = w(i, e);
      0 <= n && i.splice(n, 1), (t.__hoverMir = null);
    },
    clearHover: function(t) {
      for (var e = this._hoverElements, i = 0; i < e.length; i++) {
        var n = e[i].__from;
        n && (n.__hoverMir = null);
      }
      e.length = 0;
    },
    refreshHover: function() {
      var t = this._hoverElements,
        e = t.length,
        i = this._hoverlayer;
      if ((i && i.clear(), e)) {
        Vi(t, this.storage.displayableSortFunc);
        var n = {};
        (i = i || (this._hoverlayer = this.getLayer(1e5))).ctx.save();
        for (var o = 0; o < e; ) {
          var a = t[o],
            r = a.__from;
          r && r.__zr
            ? (o++,
              r.invisible ||
                ((a.transform = r.transform),
                (a.invTransform = r.invTransform),
                (a.__clipPaths = r.__clipPaths),
                this._doPaintEl(a, i, !0, n)))
            : (t.splice(o, 1), (r.__hoverMir = null), e--);
        }
        i.ctx.restore();
      }
    },
    getHoverLayer: function() {
      return this.getLayer(1e5);
    },
    _paintList: function(t, e, i) {
      if (this._redrawId === i) {
        (e = e || !1), this._updateLayerStatus(t);
        var n = this._doPaintList(t, e);
        if ((this._needsManuallyCompositing && this._compositeManually(), !n)) {
          var o = this;
          on(function() {
            o._paintList(t, e, i);
          });
        }
      }
    },
    _compositeManually: function() {
      var e = this.getLayer(io).ctx,
        i = this._domRoot.width,
        n = this._domRoot.height;
      e.clearRect(0, 0, i, n),
        this.eachBuiltinLayer(function(t) {
          t.virtual && e.drawImage(t.dom, 0, 0, i, n);
        });
    },
    _doPaintList: function(t, e) {
      for (var i = [], n = 0; n < this._zlevelList.length; n++) {
        var o = this._zlevelList[n];
        (s = this._layers[o]).__builtin__ &&
          s !== this._hoverlayer &&
          (s.__dirty || e) &&
          i.push(s);
      }
      for (var a = !0, r = 0; r < i.length; r++) {
        var s,
          l = (s = i[r]).ctx,
          u = {};
        l.save();
        var h = e ? s.__startIndex : s.__drawIndex,
          c = !e && s.incremental && Date.now,
          d = c && Date.now(),
          f = s.zlevel === this._zlevelList[0] ? this._backgroundColor : null;
        if (s.__startIndex === s.__endIndex) s.clear(!1, f);
        else if (h === s.__startIndex) {
          var p = t[h];
          (p.incremental && p.notClear && !e) || s.clear(!1, f);
        }
        -1 === h &&
          (console.error('For some unknown reason. drawIndex is -1'),
          (h = s.__startIndex));
        for (var g = h; g < s.__endIndex; g++) {
          var m = t[g];
          if (
            (this._doPaintEl(m, s, e, u), (m.__dirty = m.__dirtyText = !1), c)
          )
            if (15 < Date.now() - d) break;
        }
        (s.__drawIndex = g),
          s.__drawIndex < s.__endIndex && (a = !1),
          u.prevElClipPaths && l.restore(),
          l.restore();
      }
      return (
        v.wxa &&
          E(this._layers, function(t) {
            t && t.ctx && t.ctx.draw && t.ctx.draw();
          }),
        a
      );
    },
    _doPaintEl: function(t, e, i, n) {
      var o = e.ctx,
        a = t.transform;
      if (
        (e.__dirty || i) &&
        !t.invisible &&
        0 !== t.style.opacity &&
        (!a || a[0] || a[3]) &&
        (!t.culling ||
          !(function(t, e, i) {
            return (
              oo.copy(t.getBoundingRect()),
              t.transform && oo.applyTransform(t.transform),
              (ao.width = e),
              (ao.height = i),
              !oo.intersect(ao)
            );
          })(t, this._width, this._height))
      ) {
        var r = t.__clipPaths,
          s = n.prevElClipPaths;
        (s &&
          !(function(t, e) {
            if (t === e) return !1;
            if (!t || !e || t.length !== e.length) return !0;
            for (var i = 0; i < t.length; i++) if (t[i] !== e[i]) return !0;
            return !1;
          })(r, s)) ||
          (s && (o.restore(), (n.prevElClipPaths = null), (n.prevEl = null)),
          r &&
            (o.save(),
            (function(t, e) {
              for (var i = 0; i < t.length; i++) {
                var n = t[i];
                n.setTransform(e),
                  e.beginPath(),
                  n.buildPath(e, n.shape),
                  e.clip(),
                  n.restoreTransform(e);
              }
            })(r, o),
            (n.prevElClipPaths = r))),
          t.beforeBrush && t.beforeBrush(o),
          t.brush(o, n.prevEl || null),
          (n.prevEl = t).afterBrush && t.afterBrush(o);
      }
    },
    getLayer: function(t, e) {
      this._singleCanvas && !this._needsManuallyCompositing && (t = io);
      var i = this._layers[t];
      return (
        i ||
          (((i = new nn('zr_' + t, this, this.dpr)).zlevel = t),
          (i.__builtin__ = !0),
          this._layerConfig[t]
            ? m(i, this._layerConfig[t], !0)
            : this._layerConfig[t - 0.01] &&
              m(i, this._layerConfig[t - 0.01], !0),
          e && (i.virtual = e),
          this.insertLayer(t, i),
          i.initContext()),
        i
      );
    },
    insertLayer: function(t, e) {
      var i = this._layers,
        n = this._zlevelList,
        o = n.length,
        a = null,
        r = -1,
        s = this._domRoot;
      if (i[t]) xi('ZLevel ' + t + ' has been used already');
      else if (
        (function(t) {
          return (
            !!t &&
            (!!t.__builtin__ ||
              ('function' == typeof t.resize && 'function' == typeof t.refresh))
          );
        })(e)
      ) {
        if (0 < o && t > n[0]) {
          for (r = 0; r < o - 1 && !(n[r] < t && n[r + 1] > t); r++);
          a = i[n[r]];
        }
        if ((n.splice(r + 1, 0, t), !(i[t] = e).virtual))
          if (a) {
            var l = a.dom;
            l.nextSibling
              ? s.insertBefore(e.dom, l.nextSibling)
              : s.appendChild(e.dom);
          } else
            s.firstChild
              ? s.insertBefore(e.dom, s.firstChild)
              : s.appendChild(e.dom);
      } else xi('Layer of zlevel ' + t + ' is not valid');
    },
    eachLayer: function(t, e) {
      var i,
        n,
        o = this._zlevelList;
      for (n = 0; n < o.length; n++) (i = o[n]), t.call(e, this._layers[i], i);
    },
    eachBuiltinLayer: function(t, e) {
      var i,
        n,
        o,
        a = this._zlevelList;
      for (o = 0; o < a.length; o++)
        (n = a[o]), (i = this._layers[n]).__builtin__ && t.call(e, i, n);
    },
    eachOtherLayer: function(t, e) {
      var i,
        n,
        o,
        a = this._zlevelList;
      for (o = 0; o < a.length; o++)
        (n = a[o]), (i = this._layers[n]).__builtin__ || t.call(e, i, n);
    },
    getLayers: function() {
      return this._layers;
    },
    _updateLayerStatus: function(t) {
      function e(t) {
        o && (o.__endIndex !== t && (o.__dirty = !0), (o.__endIndex = t));
      }
      if (
        (this.eachBuiltinLayer(function(t, e) {
          t.__dirty = t.__used = !1;
        }),
        this._singleCanvas)
      )
        for (var i = 1; i < t.length; i++) {
          if ((r = t[i]).zlevel !== t[i - 1].zlevel || r.incremental) {
            this._needsManuallyCompositing = !0;
            break;
          }
        }
      var n,
        o = null,
        a = 0;
      for (i = 0; i < t.length; i++) {
        var r,
          s,
          l = (r = t[i]).zlevel;
        n !== l && ((n = l), (a = 0)),
          r.incremental
            ? (((s = this.getLayer(
                l + 0.001,
                this._needsManuallyCompositing,
              )).incremental = !0),
              (a = 1))
            : (s = this.getLayer(
                l + (0 < a ? 0.01 : 0),
                this._needsManuallyCompositing,
              )),
          s.__builtin__ ||
            xi('ZLevel ' + l + ' has been used by unkown layer ' + s.id),
          s !== o &&
            ((s.__used = !0),
            s.__startIndex !== i && (s.__dirty = !0),
            (s.__startIndex = i),
            s.incremental ? (s.__drawIndex = -1) : (s.__drawIndex = i),
            e(i),
            (o = s)),
          r.__dirty &&
            ((s.__dirty = !0),
            s.incremental && s.__drawIndex < 0 && (s.__drawIndex = i));
      }
      e(i),
        this.eachBuiltinLayer(function(t, e) {
          !t.__used &&
            0 < t.getElementCount() &&
            ((t.__dirty = !0),
            (t.__startIndex = t.__endIndex = t.__drawIndex = 0)),
            t.__dirty && t.__drawIndex < 0 && (t.__drawIndex = t.__startIndex);
        });
    },
    clear: function() {
      return this.eachBuiltinLayer(this._clearLayer), this;
    },
    _clearLayer: function(t) {
      t.clear();
    },
    setBackgroundColor: function(t) {
      this._backgroundColor = t;
    },
    configLayer: function(t, e) {
      if (e) {
        var i = this._layerConfig;
        i[t] ? m(i[t], e, !0) : (i[t] = e);
        for (var n = 0; n < this._zlevelList.length; n++) {
          var o = this._zlevelList[n];
          if (o === t || o === t + 0.01) m(this._layers[o], i[t], !0);
        }
      }
    },
    delLayer: function(t) {
      var e = this._layers,
        i = this._zlevelList,
        n = e[t];
      n &&
        (n.dom.parentNode.removeChild(n.dom),
        delete e[t],
        i.splice(w(i, t), 1));
    },
    resize: function(e, i) {
      if (this._domRoot.style) {
        var t = this._domRoot;
        t.style.display = 'none';
        var n = this._opts;
        if (
          (null != e && (n.width = e),
          null != i && (n.height = i),
          (e = this._getSize(0)),
          (i = this._getSize(1)),
          (t.style.display = ''),
          this._width !== e || i !== this._height)
        ) {
          for (var o in ((t.style.width = e + 'px'),
          (t.style.height = i + 'px'),
          this._layers))
            this._layers.hasOwnProperty(o) && this._layers[o].resize(e, i);
          E(this._progressiveLayers, function(t) {
            t.resize(e, i);
          }),
            this.refresh(!0);
        }
        (this._width = e), (this._height = i);
      } else {
        if (null == e || null == i) return;
        (this._width = e), (this._height = i), this.getLayer(io).resize(e, i);
      }
      return this;
    },
    clearLayer: function(t) {
      var e = this._layers[t];
      e && e.clear();
    },
    dispose: function() {
      (this.root.innerHTML = ''),
        (this.root = this.storage = this._domRoot = this._layers = null);
    },
    getRenderedCanvas: function(t) {
      if (((t = t || {}), this._singleCanvas && !this._compositeManually))
        return this._layers[io].dom;
      var e = new nn('image', this, t.pixelRatio || this.dpr);
      if (
        (e.initContext(),
        e.clear(!1, t.backgroundColor || this._backgroundColor),
        t.pixelRatio <= this.dpr)
      ) {
        this.refresh();
        var i = e.dom.width,
          n = e.dom.height,
          o = e.ctx;
        this.eachLayer(function(t) {
          t.__builtin__
            ? o.drawImage(t.dom, 0, 0, i, n)
            : t.renderToCanvas &&
              (e.ctx.save(), t.renderToCanvas(e.ctx), e.ctx.restore());
        });
      } else
        for (
          var a = {}, r = this.storage.getDisplayList(!0), s = 0;
          s < r.length;
          s++
        ) {
          var l = r[s];
          this._doPaintEl(l, e, !0, a);
        }
      return e.dom;
    },
    getWidth: function() {
      return this._width;
    },
    getHeight: function() {
      return this._height;
    },
    _getSize: function(t) {
      var e = this._opts,
        i = ['width', 'height'][t],
        n = ['clientWidth', 'clientHeight'][t],
        o = ['paddingLeft', 'paddingTop'][t],
        a = ['paddingRight', 'paddingBottom'][t];
      if (null != e[i] && 'auto' !== e[i]) return parseFloat(e[i]);
      var r = this.root,
        s = document.defaultView.getComputedStyle(r);
      return (
        ((r[n] || no(s[i]) || no(r.style[i])) -
          (no(s[o]) || 0) -
          (no(s[a]) || 0)) |
        0
      );
    },
    pathToImage: function(t, e) {
      e = e || this.dpr;
      var i = document.createElement('canvas'),
        n = i.getContext('2d'),
        o = t.getBoundingRect(),
        a = t.style,
        r = a.shadowBlur * e,
        s = a.shadowOffsetX * e,
        l = a.shadowOffsetY * e,
        u = a.hasStroke() ? a.lineWidth : 0,
        h = Math.max(u / 2, r - s),
        c = Math.max(u / 2, s + r),
        d = Math.max(u / 2, r - l),
        f = Math.max(u / 2, l + r),
        p = o.width + h + c,
        g = o.height + d + f;
      (i.width = p * e),
        (i.height = g * e),
        n.scale(e, e),
        n.clearRect(0, 0, p, g),
        (n.dpr = e);
      var m = {position: t.position, rotation: t.rotation, scale: t.scale};
      (t.position = [h - o.x, d - o.y]),
        (t.rotation = 0),
        (t.scale = [1, 1]),
        t.updateTransform(),
        t && t.brush(n);
      var v = new eo({style: {x: 0, y: 0, image: i}});
      return (
        null != m.position && (v.position = t.position = m.position),
        null != m.rotation && (v.rotation = t.rotation = m.rotation),
        null != m.scale && (v.scale = t.scale = m.scale),
        v
      );
    },
  };
  function so(t) {
    (t = t || {}),
      (this.stage = t.stage || {}),
      (this.onframe = t.onframe || function() {}),
      (this._clips = []),
      (this._running = !1),
      this._time,
      this._pausedTime,
      this._pauseStart,
      (this._paused = !1),
      kt.call(this);
  }
  (so.prototype = {
    constructor: so,
    addClip: function(t) {
      this._clips.push(t);
    },
    addAnimator: function(t) {
      t.animation = this;
      for (var e = t.getClips(), i = 0; i < e.length; i++) this.addClip(e[i]);
    },
    removeClip: function(t) {
      var e = w(this._clips, t);
      0 <= e && this._clips.splice(e, 1);
    },
    removeAnimator: function(t) {
      for (var e = t.getClips(), i = 0; i < e.length; i++)
        this.removeClip(e[i]);
      t.animation = null;
    },
    _update: function() {
      for (
        var t = new Date().getTime() - this._pausedTime,
          e = t - this._time,
          i = this._clips,
          n = i.length,
          o = [],
          a = [],
          r = 0;
        r < n;
        r++
      ) {
        var s = i[r],
          l = s.step(t, e);
        l && (o.push(l), a.push(s));
      }
      for (r = 0; r < n; )
        i[r]._needsRemove ? ((i[r] = i[n - 1]), i.pop(), n--) : r++;
      n = o.length;
      for (r = 0; r < n; r++) a[r].fire(o[r]);
      (this._time = t),
        this.onframe(e),
        this.trigger('frame', e),
        this.stage.update && this.stage.update();
    },
    _startLoop: function() {
      var e = this;
      (this._running = !0),
        on(function t() {
          e._running && (on(t), e._paused || e._update());
        });
    },
    start: function() {
      (this._time = new Date().getTime()),
        (this._pausedTime = 0),
        this._startLoop();
    },
    stop: function() {
      this._running = !1;
    },
    pause: function() {
      this._paused ||
        ((this._pauseStart = new Date().getTime()), (this._paused = !0));
    },
    resume: function() {
      this._paused &&
        ((this._pausedTime += new Date().getTime() - this._pauseStart),
        (this._paused = !1));
    },
    clear: function() {
      this._clips = [];
    },
    isFinished: function() {
      return !this._clips.length;
    },
    animate: function(t, e) {
      var i = new pi(t, (e = e || {}).loop, e.getter, e.setter);
      return this.addAnimator(i), i;
    },
  }),
    S(so, kt);
  var lo,
    uo,
    ho = v.domSupported,
    co =
      ((uo = {pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1}),
      {
        mouse: (lo = [
          'click',
          'dblclick',
          'mousewheel',
          'mouseout',
          'mouseup',
          'mousedown',
          'mousemove',
          'contextmenu',
        ]),
        touch: ['touchstart', 'touchend', 'touchmove'],
        pointer: O(lo, function(t) {
          var e = t.replace('mouse', 'pointer');
          return uo.hasOwnProperty(e) ? e : t;
        }),
      }),
    fo = {
      mouse: ['mousemove', 'mouseup'],
      pointer: ['pointermove', 'pointerup'],
    };
  function po(t) {
    return 'mousewheel' === t && v.browser.firefox ? 'DOMMouseScroll' : t;
  }
  function go(t) {
    var e = t.pointerType;
    return 'pen' === e || 'touch' === e;
  }
  function mo(t) {
    t && (t.zrByTouch = !0);
  }
  function vo(t, e) {
    for (
      var i = e, n = !1;
      i &&
      9 !== i.nodeType &&
      !(n = i.domBelongToZr || (i !== e && i === t.painterRoot));

    )
      i = i.parentNode;
    return n;
  }
  function yo(t, e) {
    (this.type = e.type),
      (this.target = this.currentTarget = t.dom),
      (this.pointerType = e.pointerType),
      (this.clientX = e.clientX),
      (this.clientY = e.clientY);
  }
  var xo = yo.prototype;
  xo.stopPropagation = xo.stopImmediatePropagation = xo.preventDefault = nt;
  var _o = {
    mousedown: function(t) {
      (t = Xt(this.dom, t)),
        (this._mayPointerCapture = [t.zrX, t.zrY]),
        this.trigger('mousedown', t);
    },
    mousemove: function(t) {
      t = Xt(this.dom, t);
      var e = this._mayPointerCapture;
      !e || (t.zrX === e[0] && t.zrY === e[1]) || To(this, !0),
        this.trigger('mousemove', t);
    },
    mouseup: function(t) {
      (t = Xt(this.dom, t)), To(this, !1), this.trigger('mouseup', t);
    },
    mouseout: function(t) {
      (t = Xt(this.dom, t)),
        this._pointerCapturing && (t.zrEventControl = 'no_globalout');
      var e = t.toElement || t.relatedTarget;
      (t.zrIsToLocalDOM = vo(this, e)), this.trigger('mouseout', t);
    },
    touchstart: function(t) {
      mo((t = Xt(this.dom, t))),
        (this._lastTouchMoment = new Date()),
        this.handler.processGesture(t, 'start'),
        _o.mousemove.call(this, t),
        _o.mousedown.call(this, t);
    },
    touchmove: function(t) {
      mo((t = Xt(this.dom, t))),
        this.handler.processGesture(t, 'change'),
        _o.mousemove.call(this, t);
    },
    touchend: function(t) {
      mo((t = Xt(this.dom, t))),
        this.handler.processGesture(t, 'end'),
        _o.mouseup.call(this, t),
        +new Date() - this._lastTouchMoment < 300 && _o.click.call(this, t);
    },
    pointerdown: function(t) {
      _o.mousedown.call(this, t);
    },
    pointermove: function(t) {
      go(t) || _o.mousemove.call(this, t);
    },
    pointerup: function(t) {
      _o.mouseup.call(this, t);
    },
    pointerout: function(t) {
      go(t) || _o.mouseout.call(this, t);
    },
  };
  E(['click', 'mousewheel', 'dblclick', 'contextmenu'], function(e) {
    _o[e] = function(t) {
      (t = Xt(this.dom, t)), this.trigger(e, t);
    };
  });
  var wo = {
    pointermove: function(t) {
      go(t) || wo.mousemove.call(this, t);
    },
    pointerup: function(t) {
      wo.mouseup.call(this, t);
    },
    mousemove: function(t) {
      this.trigger('mousemove', t);
    },
    mouseup: function(t) {
      var e = this._pointerCapturing;
      To(this, !1),
        this.trigger('mouseup', t),
        e &&
          ((t.zrEventControl = 'only_globalout'), this.trigger('mouseout', t));
    },
  };
  function bo(i, n) {
    var o = n.domHandlers;
    v.pointerEventsSupported
      ? E(co.pointer, function(e) {
          Mo(n, e, function(t) {
            o[e].call(i, t);
          });
        })
      : (v.touchEventsSupported &&
          E(co.touch, function(e) {
            Mo(n, e, function(t) {
              o[e].call(i, t),
                (function(t) {
                  (t.touching = !0),
                    null != t.touchTimer &&
                      (clearTimeout(t.touchTimer), (t.touchTimer = null)),
                    (t.touchTimer = setTimeout(function() {
                      (t.touching = !1), (t.touchTimer = null);
                    }, 700));
                })(n);
            });
          }),
        E(co.mouse, function(e) {
          Mo(n, e, function(t) {
            (t = Ut(t)), n.touching || o[e].call(i, t);
          });
        }));
  }
  function So(i, n) {
    function t(e) {
      Mo(
        n,
        e,
        function(t) {
          (t = Ut(t)),
            vo(i, t.target) ||
              ((t = (function(t, e) {
                return Xt(t.dom, new yo(t, e), !0);
              })(i, t)),
              n.domHandlers[e].call(i, t));
        },
        {capture: !0},
      );
    }
    v.pointerEventsSupported
      ? E(fo.pointer, t)
      : v.touchEventsSupported || E(fo.mouse, t);
  }
  function Mo(t, e, i, n) {
    (t.mounted[e] = i), (t.listenerOpts[e] = n), Yt(t.domTarget, po(e), i, n);
  }
  function Io(t) {
    var e,
      i,
      n,
      o,
      a = t.mounted;
    for (var r in a)
      a.hasOwnProperty(r) &&
        ((e = t.domTarget),
        (i = po(r)),
        (n = a[r]),
        (o = t.listenerOpts[r]),
        Gt ? e.removeEventListener(i, n, o) : e.detachEvent('on' + i, n));
    t.mounted = {};
  }
  function To(t, e) {
    if (((t._mayPointerCapture = null), ho && t._pointerCapturing ^ e)) {
      t._pointerCapturing = e;
      var i = t._globalHandlerScope;
      e ? So(t, i) : Io(i);
    }
  }
  function Ao(t, e) {
    (this.domTarget = t),
      (this.domHandlers = e),
      (this.mounted = {}),
      (this.listenerOpts = {}),
      (this.touchTimer = null),
      (this.touching = !1);
  }
  function Do(t, e) {
    kt.call(this),
      (this.dom = t),
      (this.painterRoot = e),
      (this._localHandlerScope = new Ao(t, _o)),
      ho && (this._globalHandlerScope = new Ao(document, wo)),
      (this._pointerCapturing = !1),
      (this._mayPointerCapture = null),
      bo(this, this._localHandlerScope);
  }
  var Co = Do.prototype;
  (Co.dispose = function() {
    Io(this._localHandlerScope), ho && Io(this._globalHandlerScope);
  }),
    (Co.setCursor = function(t) {
      this.dom.style && (this.dom.style.cursor = t || 'default');
    }),
    S(Do, kt);
  var Lo = !v.canvasSupported,
    ko = {canvas: ro},
    Po = {},
    No = '4.3.1';
  function Oo(t, e) {
    var i = new Ro(n(), t, e);
    return (Po[i.id] = i);
  }
  function Eo(t, e) {
    ko[t] = e;
  }
  var Ro = function(t, e, i) {
    (i = i || {}), (this.dom = e), (this.id = t);
    var n = this,
      o = new Fi(),
      a = i.renderer;
    if (Lo) {
      if (!ko.vml)
        throw new Error("You need to require 'zrender/vml/vml' to support IE8");
      a = 'vml';
    } else (a && ko[a]) || (a = 'canvas');
    var r = new ko[a](e, o, i, t);
    (this.storage = o), (this.painter = r);
    var s = v.node || v.worker ? null : new Do(r.getViewportRoot(), r.root);
    (this.handler = new ie(o, r, s, r.root)),
      (this.animation = new so({stage: {update: A(this.flush, this)}})),
      this.animation.start(),
      this._needsRefresh;
    var l = o.delFromStorage,
      u = o.addToStorage;
    (o.delFromStorage = function(t) {
      l.call(o, t), t && t.removeSelfFromZr(n);
    }),
      (o.addToStorage = function(t) {
        u.call(o, t), t.addSelfToZr(n);
      });
  };
  Ro.prototype = {
    constructor: Ro,
    getId: function() {
      return this.id;
    },
    add: function(t) {
      this.storage.addRoot(t), (this._needsRefresh = !0);
    },
    remove: function(t) {
      this.storage.delRoot(t), (this._needsRefresh = !0);
    },
    configLayer: function(t, e) {
      this.painter.configLayer && this.painter.configLayer(t, e),
        (this._needsRefresh = !0);
    },
    setBackgroundColor: function(t) {
      this.painter.setBackgroundColor && this.painter.setBackgroundColor(t),
        (this._needsRefresh = !0);
    },
    refreshImmediately: function() {
      (this._needsRefresh = this._needsRefreshHover = !1),
        this.painter.refresh(),
        (this._needsRefresh = this._needsRefreshHover = !1);
    },
    refresh: function() {
      this._needsRefresh = !0;
    },
    flush: function() {
      var t;
      this._needsRefresh && ((t = !0), this.refreshImmediately()),
        this._needsRefreshHover && ((t = !0), this.refreshHoverImmediately()),
        t && this.trigger('rendered');
    },
    addHover: function(t, e) {
      if (this.painter.addHover) {
        var i = this.painter.addHover(t, e);
        return this.refreshHover(), i;
      }
    },
    removeHover: function(t) {
      this.painter.removeHover &&
        (this.painter.removeHover(t), this.refreshHover());
    },
    clearHover: function() {
      this.painter.clearHover &&
        (this.painter.clearHover(), this.refreshHover());
    },
    refreshHover: function() {
      this._needsRefreshHover = !0;
    },
    refreshHoverImmediately: function() {
      (this._needsRefreshHover = !1),
        this.painter.refreshHover && this.painter.refreshHover();
    },
    resize: function(t) {
      (t = t || {}),
        this.painter.resize(t.width, t.height),
        this.handler.resize();
    },
    clearAnimation: function() {
      this.animation.clear();
    },
    getWidth: function() {
      return this.painter.getWidth();
    },
    getHeight: function() {
      return this.painter.getHeight();
    },
    pathToImage: function(t, e) {
      return this.painter.pathToImage(t, e);
    },
    setCursorStyle: function(t) {
      this.handler.setCursorStyle(t);
    },
    findHover: function(t, e) {
      return this.handler.findHover(t, e);
    },
    on: function(t, e, i) {
      this.handler.on(t, e, i);
    },
    off: function(t, e) {
      this.handler.off(t, e);
    },
    trigger: function(t, e) {
      this.handler.trigger(t, e);
    },
    clear: function() {
      this.storage.delRoot(), this.painter.clear();
    },
    dispose: function() {
      this.animation.stop(),
        this.clear(),
        this.storage.dispose(),
        this.painter.dispose(),
        this.handler.dispose(),
        (this.animation = this.storage = this.painter = this.handler = null),
        (function(t) {
          delete Po[t];
        })(this.id);
    },
  };
  var zo = (Object.freeze || Object)({
      version: No,
      init: Oo,
      dispose: function(t) {
        if (t) t.dispose();
        else {
          for (var e in Po) Po.hasOwnProperty(e) && Po[e].dispose();
          Po = {};
        }
        return this;
      },
      getInstance: function(t) {
        return Po[t];
      },
      registerPainter: Eo,
    }),
    Bo = E,
    Vo = V,
    Go = R,
    Fo = 'series\0';
  function Wo(t) {
    return t instanceof Array ? t : null == t ? [] : [t];
  }
  function Ho(t, e, i) {
    if (t) {
      (t[e] = t[e] || {}),
        (t.emphasis = t.emphasis || {}),
        (t.emphasis[e] = t.emphasis[e] || {});
      for (var n = 0, o = i.length; n < o; n++) {
        var a = i[n];
        !t.emphasis[e].hasOwnProperty(a) &&
          t[e].hasOwnProperty(a) &&
          (t.emphasis[e][a] = t[e][a]);
      }
    }
  }
  var Zo = [
    'fontStyle',
    'fontWeight',
    'fontSize',
    'fontFamily',
    'rich',
    'tag',
    'color',
    'textBorderColor',
    'textBorderWidth',
    'width',
    'height',
    'lineHeight',
    'align',
    'verticalAlign',
    'baseline',
    'shadowColor',
    'shadowBlur',
    'shadowOffsetX',
    'shadowOffsetY',
    'textShadowColor',
    'textShadowBlur',
    'textShadowOffsetX',
    'textShadowOffsetY',
    'backgroundColor',
    'borderColor',
    'borderWidth',
    'borderRadius',
    'padding',
  ];
  function Uo(t) {
    return !Vo(t) || Go(t) || t instanceof Date ? t : t.value;
  }
  function Xo(t, o) {
    o = (o || []).slice();
    var a = O(t || [], function(t, e) {
      return {exist: t};
    });
    return (
      Bo(o, function(t, e) {
        if (Vo(t)) {
          for (var i = 0; i < a.length; i++)
            if (!a[i].option && null != t.id && a[i].exist.id === t.id + '')
              return (a[i].option = t), void (o[e] = null);
          for (i = 0; i < a.length; i++) {
            var n = a[i].exist;
            if (
              !(
                a[i].option ||
                (null != n.id && null != t.id) ||
                null == t.name ||
                qo(t) ||
                qo(n) ||
                n.name !== t.name + ''
              )
            )
              return (a[i].option = t), void (o[e] = null);
          }
        }
      }),
      Bo(o, function(t, e) {
        if (Vo(t)) {
          for (var i = 0; i < a.length; i++) {
            var n = a[i].exist;
            if (!a[i].option && !qo(n) && null == t.id) {
              a[i].option = t;
              break;
            }
          }
          i >= a.length && a.push({option: t});
        }
      }),
      a
    );
  }
  function Yo(t) {
    var r = et();
    Bo(t, function(t, e) {
      var i = t.exist;
      i && r.set(i.id, t);
    }),
      Bo(t, function(t, e) {
        var i = t.option;
        q(
          !i || null == i.id || !r.get(i.id) || r.get(i.id) === t,
          'id duplicates: ' + (i && i.id),
        ),
          i && null != i.id && r.set(i.id, t),
          t.keyInfo || (t.keyInfo = {});
      }),
      Bo(t, function(t, e) {
        var i = t.exist,
          n = t.option,
          o = t.keyInfo;
        if (Vo(n)) {
          if (
            ((o.name = null != n.name ? n.name + '' : i ? i.name : Fo + e), i)
          )
            o.id = i.id;
          else if (null != n.id) o.id = n.id + '';
          else
            for (var a = 0; (o.id = '\0' + o.name + '\0' + a++), r.get(o.id); );
          r.set(o.id, t);
        }
      });
  }
  function jo(t) {
    var e = t.name;
    return !(!e || !e.indexOf(Fo));
  }
  function qo(t) {
    return Vo(t) && t.id && 0 === (t.id + '').indexOf('\0_ec_\0');
  }
  function Ko(e, t) {
    return null != t.dataIndexInside
      ? t.dataIndexInside
      : null != t.dataIndex
      ? R(t.dataIndex)
        ? O(t.dataIndex, function(t) {
            return e.indexOfRawIndex(t);
          })
        : e.indexOfRawIndex(t.dataIndex)
      : null != t.name
      ? R(t.name)
        ? O(t.name, function(t) {
            return e.indexOfName(t);
          })
        : e.indexOfName(t.name)
      : void 0;
  }
  function $o() {
    var e = '__\0ec_inner_' + Jo++ + '_' + Math.random().toFixed(5);
    return function(t) {
      return t[e] || (t[e] = {});
    };
  }
  var Jo = 0;
  function Qo(s, l, u) {
    if (B(l)) {
      var t = {};
      (t[l + 'Index'] = 0), (l = t);
    }
    var e = u && u.defaultMainType;
    !e ||
      ta(l, e + 'Index') ||
      ta(l, e + 'Id') ||
      ta(l, e + 'Name') ||
      (l[e + 'Index'] = 0);
    var h = {};
    return (
      Bo(l, function(t, e) {
        t = l[e];
        if ('dataIndex' !== e && 'dataIndexInside' !== e) {
          var i = e.match(/^(\w+)(Index|Id|Name)$/) || [],
            n = i[1],
            o = (i[2] || '').toLowerCase();
          if (
            !(
              !n ||
              !o ||
              null == t ||
              ('index' === o && 'none' === t) ||
              (u && u.includeMainTypes && w(u.includeMainTypes, n) < 0)
            )
          ) {
            var a = {mainType: n};
            ('index' === o && 'all' === t) || (a[o] = t);
            var r = s.queryComponents(a);
            (h[n + 'Models'] = r), (h[n + 'Model'] = r[0]);
          }
        } else h[e] = t;
      }),
      h
    );
  }
  function ta(t, e) {
    return t && t.hasOwnProperty(e);
  }
  function ea(t, e, i) {
    t.setAttribute ? t.setAttribute(e, i) : (t[e] = i);
  }
  function ia(t) {
    return 'auto' === t ? (v.domSupported ? 'html' : 'richText') : t || 'html';
  }
  function na(t, i) {
    var n = et(),
      o = [];
    return (
      E(t, function(t) {
        var e = i(t);
        (n.get(e) || (o.push(e), n.set(e, []))).push(t);
      }),
      {keys: o, buckets: n}
    );
  }
  var oa = '.',
    aa = '___EC__COMPONENT__CONTAINER___';
  function ra(t) {
    var e = {main: '', sub: ''};
    return (
      t && ((t = t.split(oa)), (e.main = t[0] || ''), (e.sub = t[1] || '')), e
    );
  }
  function sa(t, n) {
    (t.$constructor = t).extend = function(e) {
      D &&
        E(n, function(t) {
          e[t] ||
            console.warn(
              'Method `' +
                t +
                '` should be implemented' +
                (e.type ? ' in ' + e.type : '') +
                '.',
            );
        });
      function t() {
        e.$constructor
          ? e.$constructor.apply(this, arguments)
          : i.apply(this, arguments);
      }
      var i = this;
      return (
        P(t.prototype, e),
        (t.extend = this.extend),
        (t.superCall = ha),
        (t.superApply = ca),
        b(t, this),
        (t.superClass = i),
        t
      );
    };
  }
  var la = 0;
  function ua(t) {
    var e = ['__\0is_clz', la++, Math.random().toFixed(3)].join('_');
    (t.prototype[e] = !0),
      D && q(!t.isInstance, 'The method "is" can not be defined.'),
      (t.isInstance = function(t) {
        return !(!t || !t[e]);
      });
  }
  function ha(t, e) {
    var i = Y(arguments, 2);
    return this.superClass.prototype[e].apply(t, i);
  }
  function ca(t, e, i) {
    return this.superClass.prototype[e].apply(t, i);
  }
  function da(i, t) {
    t = t || {};
    var o = {};
    if (
      ((i.registerClass = function(t, e) {
        if (e)
          if (
            ((function(t) {
              q(
                /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(t),
                'componentType "' + t + '" illegal',
              );
            })(e),
            (e = ra(e)).sub)
          ) {
            if (e.sub !== aa) {
              (function(t) {
                var e = o[t.main];
                (e && e[aa]) || ((e = o[t.main] = {})[aa] = !0);
                return e;
              })(e)[e.sub] = t;
            }
          } else
            D && o[e.main] && console.warn(e.main + ' exists.'),
              (o[e.main] = t);
        return t;
      }),
      (i.getClass = function(t, e, i) {
        var n = o[t];
        if ((n && n[aa] && (n = e ? n[e] : null), i && !n))
          throw new Error(
            e
              ? 'Component ' +
                t +
                '.' +
                (e || '') +
                ' not exists. Load it first.'
              : t + '.type should be specified.',
          );
        return n;
      }),
      (i.getClassesByMainType = function(t) {
        t = ra(t);
        var i = [],
          e = o[t.main];
        return (
          e && e[aa]
            ? E(e, function(t, e) {
                e !== aa && i.push(t);
              })
            : i.push(e),
          i
        );
      }),
      (i.hasClass = function(t) {
        return (t = ra(t)), !!o[t.main];
      }),
      (i.getAllClassMainTypes = function() {
        var i = [];
        return (
          E(o, function(t, e) {
            i.push(e);
          }),
          i
        );
      }),
      (i.hasSubTypes = function(t) {
        t = ra(t);
        var e = o[t.main];
        return e && e[aa];
      }),
      (i.parseClassType = ra),
      t.registerWhenExtend)
    ) {
      var n = i.extend;
      n &&
        (i.extend = function(t) {
          var e = n.call(this, t);
          return i.registerClass(e, t.type);
        });
    }
    return i;
  }
  function fa(s) {
    for (var t = 0; t < s.length; t++) s[t][1] || (s[t][1] = s[t][0]);
    return function(t, e, i) {
      for (var n = {}, o = 0; o < s.length; o++) {
        var a = s[o][1];
        if (!((e && 0 <= w(e, a)) || (i && w(i, a) < 0))) {
          var r = t.getShallow(a);
          null != r && (n[s[o][0]] = r);
        }
      }
      return n;
    };
  }
  var pa = fa([
      ['lineWidth', 'width'],
      ['stroke', 'color'],
      ['opacity'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
    ]),
    ga = {
      getLineStyle: function(t) {
        var e = pa(this, t);
        return (e.lineDash = this.getLineDash(e.lineWidth)), e;
      },
      getLineDash: function(t) {
        null == t && (t = 1);
        var e = this.get('type'),
          i = Math.max(t, 2),
          n = 4 * t;
        return 'solid' !== e && null != e && ('dashed' === e ? [n, n] : [i, i]);
      },
    },
    ma = fa([
      ['fill', 'color'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['opacity'],
      ['shadowColor'],
    ]),
    va = {
      getAreaStyle: function(t, e) {
        return ma(this, t, e);
      },
    },
    ya = Math.pow,
    xa = Math.sqrt,
    _a = 1e-8,
    wa = 1e-4,
    ba = xa(3),
    Sa = 1 / 3,
    Ma = rt(),
    Ia = rt(),
    Ta = rt();
  function Aa(t) {
    return -_a < t && t < _a;
  }
  function Da(t) {
    return _a < t || t < -_a;
  }
  function Ca(t, e, i, n, o) {
    var a = 1 - o;
    return a * a * (a * t + 3 * o * e) + o * o * (o * n + 3 * a * i);
  }
  function La(t, e, i, n, o) {
    var a = 1 - o;
    return 3 * (((e - t) * a + 2 * (i - e) * o) * a + (n - i) * o * o);
  }
  function ka(t, e, i, n, o) {
    var a = 6 * i - 12 * e + 6 * t,
      r = 9 * e + 3 * n - 3 * t - 9 * i,
      s = 3 * e - 3 * t,
      l = 0;
    if (Aa(r)) {
      if (Da(a)) 0 <= (h = -s / a) && h <= 1 && (o[l++] = h);
    } else {
      var u = a * a - 4 * r * s;
      if (Aa(u)) o[0] = -a / (2 * r);
      else if (0 < u) {
        var h,
          c = xa(u),
          d = (-a - c) / (2 * r);
        0 <= (h = (-a + c) / (2 * r)) && h <= 1 && (o[l++] = h),
          0 <= d && d <= 1 && (o[l++] = d);
      }
    }
    return l;
  }
  function Pa(t, e, i, n, o, a) {
    var r = (e - t) * o + t,
      s = (i - e) * o + e,
      l = (n - i) * o + i,
      u = (s - r) * o + r,
      h = (l - s) * o + s,
      c = (h - u) * o + u;
    (a[0] = t),
      (a[1] = r),
      (a[2] = u),
      (a[3] = c),
      (a[4] = c),
      (a[5] = h),
      (a[6] = l),
      (a[7] = n);
  }
  function Na(t, e, i, n) {
    var o = 1 - n;
    return o * (o * t + 2 * n * e) + n * n * i;
  }
  function Oa(t, e, i, n) {
    return 2 * ((1 - n) * (e - t) + n * (i - e));
  }
  function Ea(t, e, i) {
    var n = t + i - 2 * e;
    return 0 == n ? 0.5 : (t - e) / n;
  }
  function Ra(t, e, i, n, o) {
    var a = (e - t) * n + t,
      r = (i - e) * n + e,
      s = (r - a) * n + a;
    (o[0] = t), (o[1] = a), (o[2] = s), (o[3] = s), (o[4] = r), (o[5] = i);
  }
  var za = Math.min,
    Ba = Math.max,
    Va = Math.sin,
    Ga = Math.cos,
    Fa = 2 * Math.PI,
    Wa = rt(),
    Ha = rt(),
    Za = rt();
  function Ua(t, e, i) {
    if (0 !== t.length) {
      var n,
        o = t[0],
        a = o[0],
        r = o[0],
        s = o[1],
        l = o[1];
      for (n = 1; n < t.length; n++)
        (o = t[n]),
          (a = za(a, o[0])),
          (r = Ba(r, o[0])),
          (s = za(s, o[1])),
          (l = Ba(l, o[1]));
      (e[0] = a), (e[1] = s), (i[0] = r), (i[1] = l);
    }
  }
  function Xa(t, e, i, n, o, a) {
    (o[0] = za(t, i)), (o[1] = za(e, n)), (a[0] = Ba(t, i)), (a[1] = Ba(e, n));
  }
  var Ya = [],
    ja = [];
  function qa(t, e, i, n, o, a, r, s, l, u) {
    var h,
      c = ka,
      d = Ca,
      f = c(t, i, o, r, Ya);
    for (
      l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0, h = 0;
      h < f;
      h++
    ) {
      var p = d(t, i, o, r, Ya[h]);
      (l[0] = za(p, l[0])), (u[0] = Ba(p, u[0]));
    }
    for (f = c(e, n, a, s, ja), h = 0; h < f; h++) {
      var g = d(e, n, a, s, ja[h]);
      (l[1] = za(g, l[1])), (u[1] = Ba(g, u[1]));
    }
    (l[0] = za(t, l[0])),
      (u[0] = Ba(t, u[0])),
      (l[0] = za(r, l[0])),
      (u[0] = Ba(r, u[0])),
      (l[1] = za(e, l[1])),
      (u[1] = Ba(e, u[1])),
      (l[1] = za(s, l[1])),
      (u[1] = Ba(s, u[1]));
  }
  function Ka(t, e, i, n, o, a, r, s, l) {
    var u = It,
      h = Tt,
      c = Math.abs(o - a);
    if (c % Fa < 1e-4 && 1e-4 < c)
      return (
        (s[0] = t - i), (s[1] = e - n), (l[0] = t + i), void (l[1] = e + n)
      );
    if (
      ((Wa[0] = Ga(o) * i + t),
      (Wa[1] = Va(o) * n + e),
      (Ha[0] = Ga(a) * i + t),
      (Ha[1] = Va(a) * n + e),
      u(s, Wa, Ha),
      h(l, Wa, Ha),
      (o %= Fa) < 0 && (o += Fa),
      (a %= Fa) < 0 && (a += Fa),
      a < o && !r ? (a += Fa) : o < a && r && (o += Fa),
      r)
    ) {
      var d = a;
      (a = o), (o = d);
    }
    for (var f = 0; f < a; f += Math.PI / 2)
      o < f &&
        ((Za[0] = Ga(f) * i + t),
        (Za[1] = Va(f) * n + e),
        u(s, Za, s),
        h(l, Za, l));
  }
  var $a = {M: 1, L: 2, C: 3, Q: 4, A: 5, Z: 6, R: 7},
    Ja = [],
    Qa = [],
    tr = [],
    er = [],
    ir = Math.min,
    nr = Math.max,
    or = Math.cos,
    ar = Math.sin,
    rr = Math.sqrt,
    sr = Math.abs,
    lr = 'undefined' != typeof Float32Array,
    ur = function(t) {
      (this._saveData = !t),
        this._saveData && (this.data = []),
        (this._ctx = null);
    };
  function hr(t, e, i, n, o, a, r) {
    if (0 === o) return !1;
    var s = o,
      l = 0;
    if (
      (e + s < r && n + s < r) ||
      (r < e - s && r < n - s) ||
      (t + s < a && i + s < a) ||
      (a < t - s && a < i - s)
    )
      return !1;
    if (t === i) return Math.abs(a - t) <= s / 2;
    var u = (l = (e - n) / (t - i)) * a - r + (t * n - i * e) / (t - i);
    return (u * u) / (l * l + 1) <= ((s / 2) * s) / 2;
  }
  function cr(t, e, i, n, o, a, r, s, l, u, h) {
    if (0 === l) return !1;
    var c = l;
    return (
      !(
        (e + c < h && n + c < h && a + c < h && s + c < h) ||
        (h < e - c && h < n - c && h < a - c && h < s - c) ||
        (t + c < u && i + c < u && o + c < u && r + c < u) ||
        (u < t - c && u < i - c && u < o - c && u < r - c)
      ) &&
      (function(t, e, i, n, o, a, r, s, l, u, h) {
        var c,
          d,
          f,
          p,
          g,
          m = 0.005,
          v = 1 / 0;
        (Ma[0] = l), (Ma[1] = u);
        for (var y = 0; y < 1; y += 0.05)
          (Ia[0] = Ca(t, i, o, r, y)),
            (Ia[1] = Ca(e, n, a, s, y)),
            (p = bt(Ma, Ia)) < v && ((c = y), (v = p));
        v = 1 / 0;
        for (var x = 0; x < 32 && !(m < wa); x++)
          (d = c - m),
            (f = c + m),
            (Ia[0] = Ca(t, i, o, r, d)),
            (Ia[1] = Ca(e, n, a, s, d)),
            (p = bt(Ia, Ma)),
            0 <= d && p < v
              ? ((c = d), (v = p))
              : ((Ta[0] = Ca(t, i, o, r, f)),
                (Ta[1] = Ca(e, n, a, s, f)),
                (g = bt(Ta, Ma)),
                f <= 1 && g < v ? ((c = f), (v = g)) : (m *= 0.5));
        return (
          h && ((h[0] = Ca(t, i, o, r, c)), (h[1] = Ca(e, n, a, s, c))), xa(v)
        );
      })(t, e, i, n, o, a, r, s, u, h, null) <=
        c / 2
    );
  }
  function dr(t, e, i, n, o, a, r, s, l) {
    if (0 === r) return !1;
    var u = r;
    return (
      !(
        (e + u < l && n + u < l && a + u < l) ||
        (l < e - u && l < n - u && l < a - u) ||
        (t + u < s && i + u < s && o + u < s) ||
        (s < t - u && s < i - u && s < o - u)
      ) &&
      (function(t, e, i, n, o, a, r, s, l) {
        var u,
          h = 0.005,
          c = 1 / 0;
        (Ma[0] = r), (Ma[1] = s);
        for (var d = 0; d < 1; d += 0.05) {
          (Ia[0] = Na(t, i, o, d)),
            (Ia[1] = Na(e, n, a, d)),
            (m = bt(Ma, Ia)) < c && ((u = d), (c = m));
        }
        c = 1 / 0;
        for (var f = 0; f < 32 && !(h < wa); f++) {
          var p = u - h,
            g = u + h;
          (Ia[0] = Na(t, i, o, p)), (Ia[1] = Na(e, n, a, p));
          var m = bt(Ia, Ma);
          if (0 <= p && m < c) (u = p), (c = m);
          else {
            (Ta[0] = Na(t, i, o, g)), (Ta[1] = Na(e, n, a, g));
            var v = bt(Ta, Ma);
            g <= 1 && v < c ? ((u = g), (c = v)) : (h *= 0.5);
          }
        }
        return l && ((l[0] = Na(t, i, o, u)), (l[1] = Na(e, n, a, u))), xa(c);
      })(t, e, i, n, o, a, s, l, null) <=
        u / 2
    );
  }
  (ur.prototype = {
    constructor: ur,
    _xi: 0,
    _yi: 0,
    _x0: 0,
    _y0: 0,
    _ux: 0,
    _uy: 0,
    _len: 0,
    _lineDash: null,
    _dashOffset: 0,
    _dashIdx: 0,
    _dashSum: 0,
    setScale: function(t, e, i) {
      (i = i || 0),
        (this._ux = sr(i / mi / t) || 0),
        (this._uy = sr(i / mi / e) || 0);
    },
    getContext: function() {
      return this._ctx;
    },
    beginPath: function(t) {
      return (
        (this._ctx = t) && t.beginPath(),
        t && (this.dpr = t.dpr),
        this._saveData && (this._len = 0),
        this._lineDash && ((this._lineDash = null), (this._dashOffset = 0)),
        this
      );
    },
    moveTo: function(t, e) {
      return (
        this.addData($a.M, t, e),
        this._ctx && this._ctx.moveTo(t, e),
        (this._x0 = t),
        (this._y0 = e),
        (this._xi = t),
        (this._yi = e),
        this
      );
    },
    lineTo: function(t, e) {
      var i =
        sr(t - this._xi) > this._ux ||
        sr(e - this._yi) > this._uy ||
        this._len < 5;
      return (
        this.addData($a.L, t, e),
        this._ctx &&
          i &&
          (this._needsDash()
            ? this._dashedLineTo(t, e)
            : this._ctx.lineTo(t, e)),
        i && ((this._xi = t), (this._yi = e)),
        this
      );
    },
    bezierCurveTo: function(t, e, i, n, o, a) {
      return (
        this.addData($a.C, t, e, i, n, o, a),
        this._ctx &&
          (this._needsDash()
            ? this._dashedBezierTo(t, e, i, n, o, a)
            : this._ctx.bezierCurveTo(t, e, i, n, o, a)),
        (this._xi = o),
        (this._yi = a),
        this
      );
    },
    quadraticCurveTo: function(t, e, i, n) {
      return (
        this.addData($a.Q, t, e, i, n),
        this._ctx &&
          (this._needsDash()
            ? this._dashedQuadraticTo(t, e, i, n)
            : this._ctx.quadraticCurveTo(t, e, i, n)),
        (this._xi = i),
        (this._yi = n),
        this
      );
    },
    arc: function(t, e, i, n, o, a) {
      return (
        this.addData($a.A, t, e, i, i, n, o - n, 0, a ? 0 : 1),
        this._ctx && this._ctx.arc(t, e, i, n, o, a),
        (this._xi = or(o) * i + t),
        (this._yi = ar(o) * i + e),
        this
      );
    },
    arcTo: function(t, e, i, n, o) {
      return this._ctx && this._ctx.arcTo(t, e, i, n, o), this;
    },
    rect: function(t, e, i, n) {
      return (
        this._ctx && this._ctx.rect(t, e, i, n),
        this.addData($a.R, t, e, i, n),
        this
      );
    },
    closePath: function() {
      this.addData($a.Z);
      var t = this._ctx,
        e = this._x0,
        i = this._y0;
      return (
        t && (this._needsDash() && this._dashedLineTo(e, i), t.closePath()),
        (this._xi = e),
        (this._yi = i),
        this
      );
    },
    fill: function(t) {
      t && t.fill(), this.toStatic();
    },
    stroke: function(t) {
      t && t.stroke(), this.toStatic();
    },
    setLineDash: function(t) {
      if (t instanceof Array) {
        this._lineDash = t;
        for (var e = (this._dashIdx = 0), i = 0; i < t.length; i++) e += t[i];
        this._dashSum = e;
      }
      return this;
    },
    setLineDashOffset: function(t) {
      return (this._dashOffset = t), this;
    },
    len: function() {
      return this._len;
    },
    setData: function(t) {
      var e = t.length;
      (this.data && this.data.length === e) ||
        !lr ||
        (this.data = new Float32Array(e));
      for (var i = 0; i < e; i++) this.data[i] = t[i];
      this._len = e;
    },
    appendPath: function(t) {
      t instanceof Array || (t = [t]);
      for (var e = t.length, i = 0, n = this._len, o = 0; o < e; o++)
        i += t[o].len();
      lr &&
        this.data instanceof Float32Array &&
        (this.data = new Float32Array(n + i));
      for (o = 0; o < e; o++)
        for (var a = t[o].data, r = 0; r < a.length; r++) this.data[n++] = a[r];
      this._len = n;
    },
    addData: function(t) {
      if (this._saveData) {
        var e = this.data;
        this._len + arguments.length > e.length &&
          (this._expandData(), (e = this.data));
        for (var i = 0; i < arguments.length; i++)
          e[this._len++] = arguments[i];
        this._prevCmd = t;
      }
    },
    _expandData: function() {
      if (!(this.data instanceof Array)) {
        for (var t = [], e = 0; e < this._len; e++) t[e] = this.data[e];
        this.data = t;
      }
    },
    _needsDash: function() {
      return this._lineDash;
    },
    _dashedLineTo: function(t, e) {
      var i,
        n,
        o = this._dashSum,
        a = this._dashOffset,
        r = this._lineDash,
        s = this._ctx,
        l = this._xi,
        u = this._yi,
        h = t - l,
        c = e - u,
        d = rr(h * h + c * c),
        f = l,
        p = u,
        g = r.length;
      for (
        a < 0 && (a = o + a), f -= (a %= o) * (h /= d), p -= a * (c /= d);
        (0 < h && f <= t) ||
        (h < 0 && t <= f) ||
        (0 === h && ((0 < c && p <= e) || (c < 0 && e <= p)));

      )
        (f += h * (i = r[(n = this._dashIdx)])),
          (p += c * i),
          (this._dashIdx = (n + 1) % g),
          (0 < h && f < l) ||
            (h < 0 && l < f) ||
            (0 < c && p < u) ||
            (c < 0 && u < p) ||
            s[n % 2 ? 'moveTo' : 'lineTo'](
              0 <= h ? ir(f, t) : nr(f, t),
              0 <= c ? ir(p, e) : nr(p, e),
            );
      (h = f - t), (c = p - e), (this._dashOffset = -rr(h * h + c * c));
    },
    _dashedBezierTo: function(t, e, i, n, o, a) {
      var r,
        s,
        l,
        u,
        h,
        c = this._dashSum,
        d = this._dashOffset,
        f = this._lineDash,
        p = this._ctx,
        g = this._xi,
        m = this._yi,
        v = Ca,
        y = 0,
        x = this._dashIdx,
        _ = f.length,
        w = 0;
      for (d < 0 && (d = c + d), d %= c, r = 0; r < 1; r += 0.1)
        (s = v(g, t, i, o, r + 0.1) - v(g, t, i, o, r)),
          (l = v(m, e, n, a, r + 0.1) - v(m, e, n, a, r)),
          (y += rr(s * s + l * l));
      for (; x < _ && !(d < (w += f[x])); x++);
      for (r = (w - d) / y; r <= 1; )
        (u = v(g, t, i, o, r)),
          (h = v(m, e, n, a, r)),
          x % 2 ? p.moveTo(u, h) : p.lineTo(u, h),
          (r += f[x] / y),
          (x = (x + 1) % _);
      x % 2 != 0 && p.lineTo(o, a),
        (s = o - u),
        (l = a - h),
        (this._dashOffset = -rr(s * s + l * l));
    },
    _dashedQuadraticTo: function(t, e, i, n) {
      var o = i,
        a = n;
      (i = (i + 2 * t) / 3),
        (n = (n + 2 * e) / 3),
        (t = (this._xi + 2 * t) / 3),
        (e = (this._yi + 2 * e) / 3),
        this._dashedBezierTo(t, e, i, n, o, a);
    },
    toStatic: function() {
      var t = this.data;
      t instanceof Array &&
        ((t.length = this._len), lr && (this.data = new Float32Array(t)));
    },
    getBoundingRect: function() {
      (Ja[0] = Ja[1] = tr[0] = tr[1] = Number.MAX_VALUE),
        (Qa[0] = Qa[1] = er[0] = er[1] = -Number.MAX_VALUE);
      for (
        var t,
          e,
          i,
          n,
          o,
          a,
          r,
          s,
          l,
          u,
          h,
          c,
          d,
          f,
          p = this.data,
          g = 0,
          m = 0,
          v = 0,
          y = 0,
          x = 0;
        x < p.length;

      ) {
        var _ = p[x++];
        switch ((1 === x && ((v = g = p[x]), (y = m = p[x + 1])), _)) {
          case $a.M:
            (g = v = p[x++]),
              (m = y = p[x++]),
              (tr[0] = v),
              (tr[1] = y),
              (er[0] = v),
              (er[1] = y);
            break;
          case $a.L:
            Xa(g, m, p[x], p[x + 1], tr, er), (g = p[x++]), (m = p[x++]);
            break;
          case $a.C:
            qa(g, m, p[x++], p[x++], p[x++], p[x++], p[x], p[x + 1], tr, er),
              (g = p[x++]),
              (m = p[x++]);
            break;
          case $a.Q:
            (t = g),
              (e = m),
              (i = p[x++]),
              (n = p[x++]),
              (o = p[x]),
              (a = p[x + 1]),
              (r = tr),
              (s = er),
              (u = l = void 0),
              (u = Na),
              (h = Ba(za((l = Ea)(t, i, o), 1), 0)),
              (c = Ba(za(l(e, n, a), 1), 0)),
              (d = u(t, i, o, h)),
              (f = u(e, n, a, c)),
              (r[0] = za(t, o, d)),
              (r[1] = za(e, a, f)),
              (s[0] = Ba(t, o, d)),
              (s[1] = Ba(e, a, f)),
              (g = p[x++]),
              (m = p[x++]);
            break;
          case $a.A:
            var w = p[x++],
              b = p[x++],
              S = p[x++],
              M = p[x++],
              I = p[x++],
              T = p[x++] + I;
            x += 1;
            var A = 1 - p[x++];
            1 === x && ((v = or(I) * S + w), (y = ar(I) * M + b)),
              Ka(w, b, S, M, I, T, A, tr, er),
              (g = or(T) * S + w),
              (m = ar(T) * M + b);
            break;
          case $a.R:
            Xa(
              (v = g = p[x++]),
              (y = m = p[x++]),
              v + p[x++],
              y + p[x++],
              tr,
              er,
            );
            break;
          case $a.Z:
            (g = v), (m = y);
        }
        It(Ja, Ja, tr), Tt(Qa, Qa, er);
      }
      return (
        0 === x && (Ja[0] = Ja[1] = Qa[0] = Qa[1] = 0),
        new Li(Ja[0], Ja[1], Qa[0] - Ja[0], Qa[1] - Ja[1])
      );
    },
    rebuildPath: function(t) {
      for (
        var e,
          i,
          n,
          o,
          a,
          r,
          s = this.data,
          l = this._ux,
          u = this._uy,
          h = this._len,
          c = 0;
        c < h;

      ) {
        var d = s[c++];
        switch ((1 === c && ((e = n = s[c]), (i = o = s[c + 1])), d)) {
          case $a.M:
            (e = n = s[c++]), (i = o = s[c++]), t.moveTo(n, o);
            break;
          case $a.L:
            (a = s[c++]),
              (r = s[c++]),
              (sr(a - n) > l || sr(r - o) > u || c === h - 1) &&
                (t.lineTo(a, r), (n = a), (o = r));
            break;
          case $a.C:
            t.bezierCurveTo(s[c++], s[c++], s[c++], s[c++], s[c++], s[c++]),
              (n = s[c - 2]),
              (o = s[c - 1]);
            break;
          case $a.Q:
            t.quadraticCurveTo(s[c++], s[c++], s[c++], s[c++]),
              (n = s[c - 2]),
              (o = s[c - 1]);
            break;
          case $a.A:
            var f = s[c++],
              p = s[c++],
              g = s[c++],
              m = s[c++],
              v = s[c++],
              y = s[c++],
              x = s[c++],
              _ = s[c++],
              w = m < g ? g : m,
              b = m < g ? 1 : g / m,
              S = m < g ? m / g : 1,
              M = v + y;
            0.001 < Math.abs(g - m)
              ? (t.translate(f, p),
                t.rotate(x),
                t.scale(b, S),
                t.arc(0, 0, w, v, M, 1 - _),
                t.scale(1 / b, 1 / S),
                t.rotate(-x),
                t.translate(-f, -p))
              : t.arc(f, p, w, v, M, 1 - _),
              1 === c && ((e = or(v) * g + f), (i = ar(v) * m + p)),
              (n = or(M) * g + f),
              (o = ar(M) * m + p);
            break;
          case $a.R:
            (e = n = s[c]),
              (i = o = s[c + 1]),
              t.rect(s[c++], s[c++], s[c++], s[c++]);
            break;
          case $a.Z:
            t.closePath(), (n = e), (o = i);
        }
      }
    },
  }),
    (ur.CMD = $a);
  var fr = 2 * Math.PI;
  function pr(t) {
    return (t %= fr) < 0 && (t += fr), t;
  }
  var gr = 2 * Math.PI;
  function mr(t, e, i, n, o, a, r, s, l) {
    if (0 === r) return !1;
    var u = r;
    (s -= t), (l -= e);
    var h = Math.sqrt(s * s + l * l);
    if (i < h - u || h + u < i) return !1;
    if (Math.abs(n - o) % gr < 1e-4) return !0;
    if (a) {
      var c = n;
      (n = pr(o)), (o = pr(c));
    } else (n = pr(n)), (o = pr(o));
    o < n && (o += gr);
    var d = Math.atan2(l, s);
    return (
      d < 0 && (d += gr), (n <= d && d <= o) || (n <= d + gr && d + gr <= o)
    );
  }
  function vr(t, e, i, n, o, a) {
    if ((e < a && n < a) || (a < e && a < n)) return 0;
    if (n === e) return 0;
    var r = n < e ? 1 : -1,
      s = (a - e) / (n - e);
    (1 != s && 0 != s) || (r = n < e ? 0.5 : -0.5);
    var l = s * (i - t) + t;
    return l === o ? 1 / 0 : o < l ? r : 0;
  }
  var yr = ur.CMD,
    xr = 2 * Math.PI,
    _r = 1e-4;
  var wr = [-1, -1, -1],
    br = [-1, -1];
  function Sr(t, e, i, n, o, a, r, s, l, u) {
    if (
      (e < u && n < u && a < u && s < u) ||
      (u < e && u < n && u < a && u < s)
    )
      return 0;
    var h,
      c = (function(t, e, i, n, o, a) {
        var r = n + 3 * (e - i) - t,
          s = 3 * (i - 2 * e + t),
          l = 3 * (e - t),
          u = t - o,
          h = s * s - 3 * r * l,
          c = s * l - 9 * r * u,
          d = l * l - 3 * s * u,
          f = 0;
        if (Aa(h) && Aa(c)) {
          if (Aa(s)) a[0] = 0;
          else 0 <= (M = -l / s) && M <= 1 && (a[f++] = M);
        } else {
          var p = c * c - 4 * h * d;
          if (Aa(p)) {
            var g = c / h,
              m = -g / 2;
            0 <= (M = -s / r + g) && M <= 1 && (a[f++] = M),
              0 <= m && m <= 1 && (a[f++] = m);
          } else if (0 < p) {
            var v = xa(p),
              y = h * s + 1.5 * r * (-c + v),
              x = h * s + 1.5 * r * (-c - v);
            0 <=
              (M =
                (-s -
                  ((y = y < 0 ? -ya(-y, Sa) : ya(y, Sa)) +
                    (x = x < 0 ? -ya(-x, Sa) : ya(x, Sa)))) /
                (3 * r)) &&
              M <= 1 &&
              (a[f++] = M);
          } else {
            var _ = (2 * h * s - 3 * r * c) / (2 * xa(h * h * h)),
              w = Math.acos(_) / 3,
              b = xa(h),
              S = Math.cos(w),
              M = (-s - 2 * b * S) / (3 * r),
              I =
                ((m = (-s + b * (S + ba * Math.sin(w))) / (3 * r)),
                (-s + b * (S - ba * Math.sin(w))) / (3 * r));
            0 <= M && M <= 1 && (a[f++] = M),
              0 <= m && m <= 1 && (a[f++] = m),
              0 <= I && I <= 1 && (a[f++] = I);
          }
        }
        return f;
      })(e, n, a, s, u, wr);
    if (0 === c) return 0;
    for (var d, f, p = 0, g = -1, m = 0; m < c; m++) {
      var v = wr[m],
        y = 0 === v || 1 === v ? 0.5 : 1;
      Ca(t, i, o, r, v) < l ||
        (g < 0 &&
          ((g = ka(e, n, a, s, br)),
          br[1] < br[0] &&
            1 < g &&
            (void 0, (h = br[0]), (br[0] = br[1]), (br[1] = h)),
          (d = Ca(e, n, a, s, br[0])),
          1 < g && (f = Ca(e, n, a, s, br[1]))),
        2 === g
          ? v < br[0]
            ? (p += d < e ? y : -y)
            : v < br[1]
            ? (p += f < d ? y : -y)
            : (p += s < f ? y : -y)
          : v < br[0]
          ? (p += d < e ? y : -y)
          : (p += s < d ? y : -y));
    }
    return p;
  }
  function Mr(t, e, i, n, o, a, r, s) {
    if ((e < s && n < s && a < s) || (s < e && s < n && s < a)) return 0;
    var l = (function(t, e, i, n, o) {
      var a = t - 2 * e + i,
        r = 2 * (e - t),
        s = t - n,
        l = 0;
      if (Aa(a)) {
        if (Da(r)) 0 <= (h = -s / r) && h <= 1 && (o[l++] = h);
      } else {
        var u = r * r - 4 * a * s;
        if (Aa(u)) 0 <= (h = -r / (2 * a)) && h <= 1 && (o[l++] = h);
        else if (0 < u) {
          var h,
            c = xa(u),
            d = (-r - c) / (2 * a);
          0 <= (h = (-r + c) / (2 * a)) && h <= 1 && (o[l++] = h),
            0 <= d && d <= 1 && (o[l++] = d);
        }
      }
      return l;
    })(e, n, a, s, wr);
    if (0 === l) return 0;
    var u = Ea(e, n, a);
    if (0 <= u && u <= 1) {
      for (var h = 0, c = Na(e, n, a, u), d = 0; d < l; d++) {
        var f = 0 === wr[d] || 1 === wr[d] ? 0.5 : 1;
        Na(t, i, o, wr[d]) < r ||
          (wr[d] < u ? (h += c < e ? f : -f) : (h += a < c ? f : -f));
      }
      return h;
    }
    f = 0 === wr[0] || 1 === wr[0] ? 0.5 : 1;
    return Na(t, i, o, wr[0]) < r ? 0 : a < e ? f : -f;
  }
  function Ir(t, e, i, n, o, a, r, s) {
    if (i < (s -= e) || s < -i) return 0;
    var l = Math.sqrt(i * i - s * s);
    (wr[0] = -l), (wr[1] = l);
    var u = Math.abs(n - o);
    if (u < 1e-4) return 0;
    if (u % xr < 1e-4) {
      o = xr;
      var h = a ? 1 : -1;
      return r >= wr[(n = 0)] + t && r <= wr[1] + t ? h : 0;
    }
    if (a) {
      l = n;
      (n = pr(o)), (o = pr(l));
    } else (n = pr(n)), (o = pr(o));
    o < n && (o += xr);
    for (var c = 0, d = 0; d < 2; d++) {
      var f = wr[d];
      if (r < f + t) {
        var p = Math.atan2(s, f);
        h = a ? 1 : -1;
        p < 0 && (p = xr + p),
          ((n <= p && p <= o) || (n <= p + xr && p + xr <= o)) &&
            (p > Math.PI / 2 && p < 1.5 * Math.PI && (h = -h), (c += h));
      }
    }
    return c;
  }
  function Tr(t, e, i, n, o) {
    for (var a = 0, r = 0, s = 0, l = 0, u = 0, h = 0; h < t.length; ) {
      var c = t[h++];
      switch (
        (c === yr.M && 1 < h && (i || (a += vr(r, s, l, u, n, o))),
        1 === h && ((l = r = t[h]), (u = s = t[h + 1])),
        c)
      ) {
        case yr.M:
          (r = l = t[h++]), (s = u = t[h++]);
          break;
        case yr.L:
          if (i) {
            if (hr(r, s, t[h], t[h + 1], e, n, o)) return !0;
          } else a += vr(r, s, t[h], t[h + 1], n, o) || 0;
          (r = t[h++]), (s = t[h++]);
          break;
        case yr.C:
          if (i) {
            if (
              cr(r, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], e, n, o)
            )
              return !0;
          } else
            a +=
              Sr(r, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], n, o) ||
              0;
          (r = t[h++]), (s = t[h++]);
          break;
        case yr.Q:
          if (i) {
            if (dr(r, s, t[h++], t[h++], t[h], t[h + 1], e, n, o)) return !0;
          } else a += Mr(r, s, t[h++], t[h++], t[h], t[h + 1], n, o) || 0;
          (r = t[h++]), (s = t[h++]);
          break;
        case yr.A:
          var d = t[h++],
            f = t[h++],
            p = t[h++],
            g = t[h++],
            m = t[h++],
            v = t[h++];
          h += 1;
          var y = 1 - t[h++],
            x = Math.cos(m) * p + d,
            _ = Math.sin(m) * g + f;
          1 < h ? (a += vr(r, s, x, _, n, o)) : ((l = x), (u = _));
          var w = ((n - d) * g) / p + d;
          if (i) {
            if (mr(d, f, g, m, m + v, y, e, w, o)) return !0;
          } else a += Ir(d, f, g, m, m + v, y, w, o);
          (r = Math.cos(m + v) * p + d), (s = Math.sin(m + v) * g + f);
          break;
        case yr.R:
          (l = r = t[h++]), (u = s = t[h++]);
          (x = l + t[h++]), (_ = u + t[h++]);
          if (i) {
            if (
              hr(l, u, x, u, e, n, o) ||
              hr(x, u, x, _, e, n, o) ||
              hr(x, _, l, _, e, n, o) ||
              hr(l, _, l, u, e, n, o)
            )
              return !0;
          } else (a += vr(x, u, x, _, n, o)), (a += vr(l, _, l, u, n, o));
          break;
        case yr.Z:
          if (i) {
            if (hr(r, s, l, u, e, n, o)) return !0;
          } else a += vr(r, s, l, u, n, o);
          (r = l), (s = u);
      }
    }
    return (
      i ||
        (function(t, e) {
          return Math.abs(t - e) < _r;
        })(s, u) ||
        (a += vr(r, s, l, u, n, o) || 0),
      0 !== a
    );
  }
  var Ar = Qi.prototype.getCanvasPattern,
    Dr = Math.abs,
    Cr = new ur(!0);
  function Lr(t) {
    to.call(this, t), (this.path = null);
  }
  (Lr.prototype = {
    constructor: Lr,
    type: 'path',
    __dirtyPath: !0,
    strokeContainThreshold: 5,
    segmentIgnoreThreshold: 0,
    subPixelOptimize: !1,
    brush: function(t, e) {
      var i,
        n = this.style,
        o = this.path || Cr,
        a = n.hasStroke(),
        r = n.hasFill(),
        s = n.fill,
        l = n.stroke,
        u = r && !!s.colorStops,
        h = a && !!l.colorStops,
        c = r && !!s.image,
        d = a && !!l.image;
      n.bind(t, this, e),
        this.setTransform(t),
        this.__dirty &&
          (u &&
            ((i = i || this.getBoundingRect()),
            (this._fillGradient = n.getGradient(t, s, i))),
          h &&
            ((i = i || this.getBoundingRect()),
            (this._strokeGradient = n.getGradient(t, l, i))));
      u
        ? (t.fillStyle = this._fillGradient)
        : c && (t.fillStyle = Ar.call(s, t)),
        h
          ? (t.strokeStyle = this._strokeGradient)
          : d && (t.strokeStyle = Ar.call(l, t));
      var f = n.lineDash,
        p = n.lineDashOffset,
        g = !!t.setLineDash,
        m = this.getGlobalScale();
      if (
        (o.setScale(m[0], m[1], this.segmentIgnoreThreshold),
        this.__dirtyPath || (f && !g && a)
          ? (o.beginPath(t),
            f && !g && (o.setLineDash(f), o.setLineDashOffset(p)),
            this.buildPath(o, this.shape, !1),
            this.path && (this.__dirtyPath = !1))
          : (t.beginPath(), this.path.rebuildPath(t)),
        r)
      )
        if (null != n.fillOpacity) {
          var v = t.globalAlpha;
          (t.globalAlpha = n.fillOpacity * n.opacity),
            o.fill(t),
            (t.globalAlpha = v);
        } else o.fill(t);
      if ((f && g && (t.setLineDash(f), (t.lineDashOffset = p)), a))
        if (null != n.strokeOpacity) {
          v = t.globalAlpha;
          (t.globalAlpha = n.strokeOpacity * n.opacity),
            o.stroke(t),
            (t.globalAlpha = v);
        } else o.stroke(t);
      f && g && t.setLineDash([]),
        null != n.text &&
          (this.restoreTransform(t),
          this.drawRectText(t, this.getBoundingRect()));
    },
    buildPath: function(t, e, i) {},
    createPathProxy: function() {
      this.path = new ur();
    },
    getBoundingRect: function() {
      var t = this._rect,
        e = this.style,
        i = !t;
      if (i) {
        var n = this.path;
        (n = n || (this.path = new ur())),
          this.__dirtyPath &&
            (n.beginPath(), this.buildPath(n, this.shape, !1)),
          (t = n.getBoundingRect());
      }
      if (((this._rect = t), e.hasStroke())) {
        var o = this._rectWithStroke || (this._rectWithStroke = t.clone());
        if (this.__dirty || i) {
          o.copy(t);
          var a = e.lineWidth,
            r = e.strokeNoScale ? this.getLineScale() : 1;
          e.hasFill() || (a = Math.max(a, this.strokeContainThreshold || 4)),
            1e-10 < r &&
              ((o.width += a / r),
              (o.height += a / r),
              (o.x -= a / r / 2),
              (o.y -= a / r / 2));
        }
        return o;
      }
      return t;
    },
    contain: function(t, e) {
      var i = this.transformCoordToLocal(t, e),
        n = this.getBoundingRect(),
        o = this.style;
      if (((t = i[0]), (e = i[1]), n.contain(t, e))) {
        var a = this.path.data;
        if (o.hasStroke()) {
          var r = o.lineWidth,
            s = o.strokeNoScale ? this.getLineScale() : 1;
          if (
            1e-10 < s &&
            (o.hasFill() || (r = Math.max(r, this.strokeContainThreshold)),
            (function(t, e, i, n) {
              return Tr(t, e, !0, i, n);
            })(a, r / s, t, e))
          )
            return !0;
        }
        if (o.hasFill())
          return (function(t, e, i) {
            return Tr(t, 0, !1, e, i);
          })(a, t, e);
      }
      return !1;
    },
    dirty: function(t) {
      null == t && (t = !0),
        t && ((this.__dirtyPath = t), (this._rect = null)),
        (this.__dirty = this.__dirtyText = !0),
        this.__zr && this.__zr.refresh(),
        this.__clipTarget && this.__clipTarget.dirty();
    },
    animateShape: function(t) {
      return this.animate('shape', t);
    },
    attrKV: function(t, e) {
      'shape' === t
        ? (this.setShape(e), (this.__dirtyPath = !0), (this._rect = null))
        : to.prototype.attrKV.call(this, t, e);
    },
    setShape: function(t, e) {
      var i = this.shape;
      if (i) {
        if (V(t)) for (var n in t) t.hasOwnProperty(n) && (i[n] = t[n]);
        else i[t] = e;
        this.dirty(!0);
      }
      return this;
    },
    getLineScale: function() {
      var t = this.transform;
      return t && 1e-10 < Dr(t[0] - 1) && 1e-10 < Dr(t[3] - 1)
        ? Math.sqrt(Dr(t[0] * t[3] - t[2] * t[1]))
        : 1;
    },
  }),
    (Lr.extend = function(o) {
      function t(t) {
        Lr.call(this, t), o.style && this.style.extendFrom(o.style, !1);
        var e = o.shape;
        if (e) {
          this.shape = this.shape || {};
          var i = this.shape;
          for (var n in e)
            !i.hasOwnProperty(n) && e.hasOwnProperty(n) && (i[n] = e[n]);
        }
        o.init && o.init.call(this, t);
      }
      for (var e in (b(t, Lr), o))
        'style' !== e && 'shape' !== e && (t.prototype[e] = o[e]);
      return t;
    }),
    b(Lr, to);
  function kr(t) {
    return Math.sqrt(t[0] * t[0] + t[1] * t[1]);
  }
  var Pr = ur.CMD,
    Nr = [[], [], []],
    Or = Math.sqrt,
    Er = Math.atan2,
    Rr = function(t, e) {
      var i,
        n,
        o,
        a,
        r,
        s = t.data,
        l = Pr.M,
        u = Pr.C,
        h = Pr.L,
        c = Pr.R,
        d = Pr.A,
        f = Pr.Q;
      for (a = o = 0; o < s.length; ) {
        switch (((i = s[o++]), (a = o), (n = 0), i)) {
          case l:
          case h:
            n = 1;
            break;
          case u:
            n = 3;
            break;
          case f:
            n = 2;
            break;
          case d:
            var p = e[4],
              g = e[5],
              m = Or(e[0] * e[0] + e[1] * e[1]),
              v = Or(e[2] * e[2] + e[3] * e[3]),
              y = Er(-e[1] / v, e[0] / m);
            (s[o] *= m),
              (s[o++] += p),
              (s[o] *= v),
              (s[o++] += g),
              (s[o++] *= m),
              (s[o++] *= v),
              (s[o++] += y),
              (s[o++] += y),
              (a = o += 2);
            break;
          case c:
            (x[0] = s[o++]),
              (x[1] = s[o++]),
              Mt(x, x, e),
              (s[a++] = x[0]),
              (s[a++] = x[1]),
              (x[0] += s[o++]),
              (x[1] += s[o++]),
              Mt(x, x, e),
              (s[a++] = x[0]),
              (s[a++] = x[1]);
        }
        for (r = 0; r < n; r++) {
          var x;
          ((x = Nr[r])[0] = s[o++]),
            (x[1] = s[o++]),
            Mt(x, x, e),
            (s[a++] = x[0]),
            (s[a++] = x[1]);
        }
      }
    },
    zr = Math.sqrt,
    Br = Math.sin,
    Vr = Math.cos,
    Gr = Math.PI,
    Fr = function(t, e) {
      return (t[0] * e[0] + t[1] * e[1]) / (kr(t) * kr(e));
    },
    Wr = function(t, e) {
      return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(Fr(t, e));
    };
  function Hr(t, e, i, n, o, a, r, s, l, u, h) {
    var c = l * (Gr / 180),
      d = (Vr(c) * (t - i)) / 2 + (Br(c) * (e - n)) / 2,
      f = (-1 * Br(c) * (t - i)) / 2 + (Vr(c) * (e - n)) / 2,
      p = (d * d) / (r * r) + (f * f) / (s * s);
    1 < p && ((r *= zr(p)), (s *= zr(p)));
    var g =
        (o === a ? -1 : 1) *
          zr(
            (r * r * (s * s) - r * r * (f * f) - s * s * (d * d)) /
              (r * r * (f * f) + s * s * (d * d)),
          ) || 0,
      m = (g * r * f) / s,
      v = (g * -s * d) / r,
      y = (t + i) / 2 + Vr(c) * m - Br(c) * v,
      x = (e + n) / 2 + Br(c) * m + Vr(c) * v,
      _ = Wr([1, 0], [(d - m) / r, (f - v) / s]),
      w = [(d - m) / r, (f - v) / s],
      b = [(-1 * d - m) / r, (-1 * f - v) / s],
      S = Wr(w, b);
    Fr(w, b) <= -1 && (S = Gr),
      1 <= Fr(w, b) && (S = 0),
      0 === a && 0 < S && (S -= 2 * Gr),
      1 === a && S < 0 && (S += 2 * Gr),
      h.addData(u, y, x, r, s, _, S, c, a);
  }
  var Zr = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi,
    Ur = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
  function Xr(t, e) {
    var i = (function(t) {
      if (!t) return new ur();
      for (
        var e,
          i = 0,
          n = 0,
          o = i,
          a = n,
          r = new ur(),
          s = ur.CMD,
          l = t.match(Zr),
          u = 0;
        u < l.length;
        u++
      ) {
        for (
          var h,
            c = l[u],
            d = c.charAt(0),
            f = c.match(Ur) || [],
            p = f.length,
            g = 0;
          g < p;
          g++
        )
          f[g] = parseFloat(f[g]);
        for (var m = 0; m < p; ) {
          var v,
            y,
            x,
            _,
            w,
            b,
            S,
            M = i,
            I = n;
          switch (d) {
            case 'l':
              (i += f[m++]), (n += f[m++]), (h = s.L), r.addData(h, i, n);
              break;
            case 'L':
              (i = f[m++]), (n = f[m++]), (h = s.L), r.addData(h, i, n);
              break;
            case 'm':
              (i += f[m++]),
                (n += f[m++]),
                (h = s.M),
                r.addData(h, i, n),
                (o = i),
                (a = n),
                (d = 'l');
              break;
            case 'M':
              (i = f[m++]),
                (n = f[m++]),
                (h = s.M),
                r.addData(h, i, n),
                (o = i),
                (a = n),
                (d = 'L');
              break;
            case 'h':
              (i += f[m++]), (h = s.L), r.addData(h, i, n);
              break;
            case 'H':
              (i = f[m++]), (h = s.L), r.addData(h, i, n);
              break;
            case 'v':
              (n += f[m++]), (h = s.L), r.addData(h, i, n);
              break;
            case 'V':
              (n = f[m++]), (h = s.L), r.addData(h, i, n);
              break;
            case 'C':
              (h = s.C),
                r.addData(h, f[m++], f[m++], f[m++], f[m++], f[m++], f[m++]),
                (i = f[m - 2]),
                (n = f[m - 1]);
              break;
            case 'c':
              (h = s.C),
                r.addData(
                  h,
                  f[m++] + i,
                  f[m++] + n,
                  f[m++] + i,
                  f[m++] + n,
                  f[m++] + i,
                  f[m++] + n,
                ),
                (i += f[m - 2]),
                (n += f[m - 1]);
              break;
            case 'S':
              (v = i), (y = n);
              var T = r.len(),
                A = r.data;
              e === s.C && ((v += i - A[T - 4]), (y += n - A[T - 3])),
                (h = s.C),
                (M = f[m++]),
                (I = f[m++]),
                (i = f[m++]),
                (n = f[m++]),
                r.addData(h, v, y, M, I, i, n);
              break;
            case 's':
              (v = i), (y = n);
              (T = r.len()), (A = r.data);
              e === s.C && ((v += i - A[T - 4]), (y += n - A[T - 3])),
                (h = s.C),
                (M = i + f[m++]),
                (I = n + f[m++]),
                (i += f[m++]),
                (n += f[m++]),
                r.addData(h, v, y, M, I, i, n);
              break;
            case 'Q':
              (M = f[m++]),
                (I = f[m++]),
                (i = f[m++]),
                (n = f[m++]),
                (h = s.Q),
                r.addData(h, M, I, i, n);
              break;
            case 'q':
              (M = f[m++] + i),
                (I = f[m++] + n),
                (i += f[m++]),
                (n += f[m++]),
                (h = s.Q),
                r.addData(h, M, I, i, n);
              break;
            case 'T':
              (v = i), (y = n);
              (T = r.len()), (A = r.data);
              e === s.Q && ((v += i - A[T - 4]), (y += n - A[T - 3])),
                (i = f[m++]),
                (n = f[m++]),
                (h = s.Q),
                r.addData(h, v, y, i, n);
              break;
            case 't':
              (v = i), (y = n);
              (T = r.len()), (A = r.data);
              e === s.Q && ((v += i - A[T - 4]), (y += n - A[T - 3])),
                (i += f[m++]),
                (n += f[m++]),
                (h = s.Q),
                r.addData(h, v, y, i, n);
              break;
            case 'A':
              (x = f[m++]),
                (_ = f[m++]),
                (w = f[m++]),
                (b = f[m++]),
                (S = f[m++]),
                Hr(
                  (M = i),
                  (I = n),
                  (i = f[m++]),
                  (n = f[m++]),
                  b,
                  S,
                  x,
                  _,
                  w,
                  (h = s.A),
                  r,
                );
              break;
            case 'a':
              (x = f[m++]),
                (_ = f[m++]),
                (w = f[m++]),
                (b = f[m++]),
                (S = f[m++]),
                Hr(
                  (M = i),
                  (I = n),
                  (i += f[m++]),
                  (n += f[m++]),
                  b,
                  S,
                  x,
                  _,
                  w,
                  (h = s.A),
                  r,
                );
          }
        }
        ('z' !== d && 'Z' !== d) || ((h = s.Z), r.addData(h), (i = o), (n = a)),
          (e = h);
      }
      return r.toStatic(), r;
    })(t);
    return (
      ((e = e || {}).buildPath = function(t) {
        if (t.setData) {
          t.setData(i.data), (e = t.getContext()) && t.rebuildPath(e);
        } else {
          var e = t;
          i.rebuildPath(e);
        }
      }),
      (e.applyTransform = function(t) {
        Rr(i, t), this.dirty(!0);
      }),
      e
    );
  }
  function Yr(t, e) {
    return new Lr(Xr(t, e));
  }
  var jr = function(t) {
    to.call(this, t);
  };
  (jr.prototype = {
    constructor: jr,
    type: 'text',
    brush: function(t, e) {
      var i = this.style;
      this.__dirty && zn(i),
        (i.fill = i.stroke = i.shadowBlur = i.shadowColor = i.shadowOffsetX = i.shadowOffsetY = null);
      var n = i.text;
      null != n && (n += ''),
        $n(n, i)
          ? (this.setTransform(t),
            Vn(this, t, n, i, null, e),
            this.restoreTransform(t))
          : (t.__attrCachedBy = Zi.NONE);
    },
    getBoundingRect: function() {
      var t = this.style;
      if ((this.__dirty && zn(t), !this._rect)) {
        var e = t.text;
        null != e ? (e += '') : (e = '');
        var i = vn(
          t.text + '',
          t.font,
          t.textAlign,
          t.textVerticalAlign,
          t.textPadding,
          t.textLineHeight,
          t.rich,
        );
        if (
          ((i.x += t.x || 0),
          (i.y += t.y || 0),
          Yn(t.textStroke, t.textStrokeWidth))
        ) {
          var n = t.textStrokeWidth;
          (i.x -= n / 2), (i.y -= n / 2), (i.width += n), (i.height += n);
        }
        this._rect = i;
      }
      return this._rect;
    },
  }),
    b(jr, to);
  function qr(l) {
    return v.browser.ie && 11 <= v.browser.version
      ? function() {
          var t,
            e = this.__clipPaths,
            i = this.style;
          if (e)
            for (var n = 0; n < e.length; n++) {
              var o = e[n],
                a = o && o.shape,
                r = o && o.type;
              if (
                a &&
                (('sector' === r && a.startAngle === a.endAngle) ||
                  ('rect' === r && (!a.width || !a.height)))
              ) {
                for (var s = 0; s < $r.length; s++)
                  ($r[s][2] = i[$r[s][0]]), (i[$r[s][0]] = $r[s][1]);
                t = !0;
                break;
              }
            }
          if ((l.apply(this, arguments), t))
            for (s = 0; s < $r.length; s++) i[$r[s][0]] = $r[s][2];
        }
      : l;
  }
  var Kr = Lr.extend({
      type: 'circle',
      shape: {cx: 0, cy: 0, r: 0},
      buildPath: function(t, e, i) {
        i && t.moveTo(e.cx + e.r, e.cy),
          t.arc(e.cx, e.cy, e.r, 0, 2 * Math.PI, !0);
      },
    }),
    $r = [
      ['shadowBlur', 0],
      ['shadowColor', '#000'],
      ['shadowOffsetX', 0],
      ['shadowOffsetY', 0],
    ],
    Jr = Lr.extend({
      type: 'sector',
      shape: {
        cx: 0,
        cy: 0,
        r0: 0,
        r: 0,
        startAngle: 0,
        endAngle: 2 * Math.PI,
        clockwise: !0,
      },
      brush: qr(Lr.prototype.brush),
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = Math.max(e.r0 || 0, 0),
          a = Math.max(e.r, 0),
          r = e.startAngle,
          s = e.endAngle,
          l = e.clockwise,
          u = Math.cos(r),
          h = Math.sin(r);
        t.moveTo(u * o + i, h * o + n),
          t.lineTo(u * a + i, h * a + n),
          t.arc(i, n, a, r, s, !l),
          t.lineTo(Math.cos(s) * o + i, Math.sin(s) * o + n),
          0 !== o && t.arc(i, n, o, s, r, l),
          t.closePath();
      },
    }),
    Qr = Lr.extend({
      type: 'ring',
      shape: {cx: 0, cy: 0, r: 0, r0: 0},
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = 2 * Math.PI;
        t.moveTo(i + e.r, n),
          t.arc(i, n, e.r, 0, o, !1),
          t.moveTo(i + e.r0, n),
          t.arc(i, n, e.r0, 0, o, !0);
      },
    });
  function ts(t, e, i, n, o, a, r) {
    var s = 0.5 * (i - t),
      l = 0.5 * (n - e);
    return (
      (2 * (e - i) + s + l) * r + (-3 * (e - i) - 2 * s - l) * a + s * o + e
    );
  }
  function es(t, e, i) {
    var n = e.points,
      o = e.smooth;
    if (n && 2 <= n.length) {
      if (o && 'spline' !== o) {
        var a = (function(t, e, i, n) {
          var o,
            a,
            r,
            s,
            l = [],
            u = [],
            h = [],
            c = [];
          if (n) {
            (r = [1 / 0, 1 / 0]), (s = [-1 / 0, -1 / 0]);
            for (var d = 0, f = t.length; d < f; d++)
              It(r, r, t[d]), Tt(s, s, t[d]);
            It(r, r, n[0]), Tt(s, s, n[1]);
          }
          for (d = 0, f = t.length; d < f; d++) {
            var p = t[d];
            if (i) (o = t[d ? d - 1 : f - 1]), (a = t[(d + 1) % f]);
            else {
              if (0 === d || d === f - 1) {
                l.push(lt(t[d]));
                continue;
              }
              (o = t[d - 1]), (a = t[d + 1]);
            }
            dt(u, a, o), vt(u, u, e);
            var g = xt(p, o),
              m = xt(p, a),
              v = g + m;
            0 !== v && ((g /= v), (m /= v)), vt(h, u, -g), vt(c, u, m);
            var y = ht([], p, h),
              x = ht([], p, c);
            n && (Tt(y, y, r), It(y, y, s), Tt(x, x, r), It(x, x, s)),
              l.push(y),
              l.push(x);
          }
          return i && l.push(l.shift()), l;
        })(n, o, i, e.smoothConstraint);
        t.moveTo(n[0][0], n[0][1]);
        for (var r = n.length, s = 0; s < (i ? r : r - 1); s++) {
          var l = a[2 * s],
            u = a[2 * s + 1],
            h = n[(s + 1) % r];
          t.bezierCurveTo(l[0], l[1], u[0], u[1], h[0], h[1]);
        }
      } else {
        'spline' === o &&
          (n = (function(t, e) {
            for (var i = t.length, n = [], o = 0, a = 1; a < i; a++)
              o += xt(t[a - 1], t[a]);
            var r = o / 2;
            r = r < i ? i : r;
            for (a = 0; a < r; a++) {
              var s,
                l,
                u,
                h = (a / (r - 1)) * (e ? i : i - 1),
                c = Math.floor(h),
                d = h - c,
                f = t[c % i];
              u = e
                ? ((s = t[(c - 1 + i) % i]),
                  (l = t[(c + 1) % i]),
                  t[(c + 2) % i])
                : ((s = t[0 === c ? c : c - 1]),
                  (l = t[i - 2 < c ? i - 1 : c + 1]),
                  t[i - 3 < c ? i - 1 : c + 2]);
              var p = d * d,
                g = d * p;
              n.push([
                ts(s[0], f[0], l[0], u[0], d, p, g),
                ts(s[1], f[1], l[1], u[1], d, p, g),
              ]);
            }
            return n;
          })(n, i)),
          t.moveTo(n[0][0], n[0][1]);
        s = 1;
        for (var c = n.length; s < c; s++) t.lineTo(n[s][0], n[s][1]);
      }
      i && t.closePath();
    }
  }
  var is = Lr.extend({
      type: 'polygon',
      shape: {points: null, smooth: !1, smoothConstraint: null},
      buildPath: function(t, e) {
        es(t, e, !0);
      },
    }),
    ns = Lr.extend({
      type: 'polyline',
      shape: {points: null, smooth: !1, smoothConstraint: null},
      style: {stroke: '#000', fill: null},
      buildPath: function(t, e) {
        es(t, e, !1);
      },
    }),
    os = Math.round;
  function as(t, e, i) {
    if (e) {
      var n = e.x1,
        o = e.x2,
        a = e.y1,
        r = e.y2;
      (t.x1 = n), (t.x2 = o), (t.y1 = a), (t.y2 = r);
      var s = i && i.lineWidth;
      s &&
        (os(2 * n) === os(2 * o) && (t.x1 = t.x2 = ss(n, s, !0)),
        os(2 * a) === os(2 * r) && (t.y1 = t.y2 = ss(a, s, !0)));
    }
  }
  function rs(t, e, i) {
    if (e) {
      var n = e.x,
        o = e.y,
        a = e.width,
        r = e.height;
      (t.x = n), (t.y = o), (t.width = a), (t.height = r);
      var s = i && i.lineWidth;
      s &&
        ((t.x = ss(n, s, !0)),
        (t.y = ss(o, s, !0)),
        (t.width = Math.max(ss(n + a, s, !1) - t.x, 0 === a ? 0 : 1)),
        (t.height = Math.max(ss(o + r, s, !1) - t.y, 0 === r ? 0 : 1)));
    }
  }
  function ss(t, e, i) {
    if (!e) return t;
    var n = os(2 * t);
    return (n + os(e)) % 2 == 0 ? n / 2 : (n + (i ? 1 : -1)) / 2;
  }
  var ls = {},
    us = Lr.extend({
      type: 'rect',
      shape: {r: 0, x: 0, y: 0, width: 0, height: 0},
      buildPath: function(t, e) {
        var i, n, o, a;
        this.subPixelOptimize
          ? (rs(ls, e, this.style),
            (i = ls.x),
            (n = ls.y),
            (o = ls.width),
            (a = ls.height),
            (ls.r = e.r),
            (e = ls))
          : ((i = e.x), (n = e.y), (o = e.width), (a = e.height)),
          e.r ? Ln(t, e) : t.rect(i, n, o, a),
          t.closePath();
      },
    }),
    hs = {},
    cs = Lr.extend({
      type: 'line',
      shape: {x1: 0, y1: 0, x2: 0, y2: 0, percent: 1},
      style: {stroke: '#000', fill: null},
      buildPath: function(t, e) {
        var i, n, o, a;
        a = this.subPixelOptimize
          ? (as(hs, e, this.style),
            (i = hs.x1),
            (n = hs.y1),
            (o = hs.x2),
            hs.y2)
          : ((i = e.x1), (n = e.y1), (o = e.x2), e.y2);
        var r = e.percent;
        0 !== r &&
          (t.moveTo(i, n),
          r < 1 && ((o = i * (1 - r) + o * r), (a = n * (1 - r) + a * r)),
          t.lineTo(o, a));
      },
      pointAt: function(t) {
        var e = this.shape;
        return [e.x1 * (1 - t) + e.x2 * t, e.y1 * (1 - t) + e.y2 * t];
      },
    }),
    ds = [];
  function fs(t, e, i) {
    var n = t.cpx2,
      o = t.cpy2;
    return null === n || null === o
      ? [
          (i ? La : Ca)(t.x1, t.cpx1, t.cpx2, t.x2, e),
          (i ? La : Ca)(t.y1, t.cpy1, t.cpy2, t.y2, e),
        ]
      : [
          (i ? Oa : Na)(t.x1, t.cpx1, t.x2, e),
          (i ? Oa : Na)(t.y1, t.cpy1, t.y2, e),
        ];
  }
  function ps(t) {
    this.colorStops = t || [];
  }
  var gs = Lr.extend({
      type: 'bezier-curve',
      shape: {x1: 0, y1: 0, x2: 0, y2: 0, cpx1: 0, cpy1: 0, percent: 1},
      style: {stroke: '#000', fill: null},
      buildPath: function(t, e) {
        var i = e.x1,
          n = e.y1,
          o = e.x2,
          a = e.y2,
          r = e.cpx1,
          s = e.cpy1,
          l = e.cpx2,
          u = e.cpy2,
          h = e.percent;
        0 !== h &&
          (t.moveTo(i, n),
          null == l || null == u
            ? (h < 1 &&
                (Ra(i, r, o, h, ds),
                (r = ds[1]),
                (o = ds[2]),
                Ra(n, s, a, h, ds),
                (s = ds[1]),
                (a = ds[2])),
              t.quadraticCurveTo(r, s, o, a))
            : (h < 1 &&
                (Pa(i, r, l, o, h, ds),
                (r = ds[1]),
                (l = ds[2]),
                (o = ds[3]),
                Pa(n, s, u, a, h, ds),
                (s = ds[1]),
                (u = ds[2]),
                (a = ds[3])),
              t.bezierCurveTo(r, s, l, u, o, a)));
      },
      pointAt: function(t) {
        return fs(this.shape, t, !1);
      },
      tangentAt: function(t) {
        var e = fs(this.shape, t, !0);
        return yt(e, e);
      },
    }),
    ms = Lr.extend({
      type: 'arc',
      shape: {
        cx: 0,
        cy: 0,
        r: 0,
        startAngle: 0,
        endAngle: 2 * Math.PI,
        clockwise: !0,
      },
      style: {stroke: '#000', fill: null},
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = Math.max(e.r, 0),
          a = e.startAngle,
          r = e.endAngle,
          s = e.clockwise,
          l = Math.cos(a),
          u = Math.sin(a);
        t.moveTo(l * o + i, u * o + n), t.arc(i, n, o, a, r, !s);
      },
    }),
    vs = Lr.extend({
      type: 'compound',
      shape: {paths: null},
      _updatePathDirty: function() {
        for (
          var t = this.__dirtyPath, e = this.shape.paths, i = 0;
          i < e.length;
          i++
        )
          t = t || e[i].__dirtyPath;
        (this.__dirtyPath = t), (this.__dirty = this.__dirty || t);
      },
      beforeBrush: function() {
        this._updatePathDirty();
        for (
          var t = this.shape.paths || [], e = this.getGlobalScale(), i = 0;
          i < t.length;
          i++
        )
          t[i].path || t[i].createPathProxy(),
            t[i].path.setScale(e[0], e[1], t[i].segmentIgnoreThreshold);
      },
      buildPath: function(t, e) {
        for (var i = e.paths || [], n = 0; n < i.length; n++)
          i[n].buildPath(t, i[n].shape, !0);
      },
      afterBrush: function() {
        for (var t = this.shape.paths || [], e = 0; e < t.length; e++)
          t[e].__dirtyPath = !1;
      },
      getBoundingRect: function() {
        return this._updatePathDirty(), Lr.prototype.getBoundingRect.call(this);
      },
    });
  ps.prototype = {
    constructor: ps,
    addColorStop: function(t, e) {
      this.colorStops.push({offset: t, color: e});
    },
  };
  function ys(t, e, i, n, o, a) {
    (this.x = null == t ? 0 : t),
      (this.y = null == e ? 0 : e),
      (this.x2 = null == i ? 1 : i),
      (this.y2 = null == n ? 0 : n),
      (this.type = 'linear'),
      (this.global = a || !1),
      ps.call(this, o);
  }
  (ys.prototype = {constructor: ys}), b(ys, ps);
  function xs(t, e, i, n, o) {
    (this.x = null == t ? 0.5 : t),
      (this.y = null == e ? 0.5 : e),
      (this.r = null == i ? 0.5 : i),
      (this.type = 'radial'),
      (this.global = o || !1),
      ps.call(this, n);
  }
  function _s(t) {
    to.call(this, t),
      (this._displayables = []),
      (this._temporaryDisplayables = []),
      (this._cursor = 0),
      (this.notClear = !0);
  }
  (xs.prototype = {constructor: xs}),
    b(xs, ps),
    (_s.prototype.incremental = !0),
    (_s.prototype.clearDisplaybles = function() {
      (this._displayables = []),
        (this._temporaryDisplayables = []),
        (this._cursor = 0),
        this.dirty(),
        (this.notClear = !1);
    }),
    (_s.prototype.addDisplayable = function(t, e) {
      e ? this._temporaryDisplayables.push(t) : this._displayables.push(t),
        this.dirty();
    }),
    (_s.prototype.addDisplayables = function(t, e) {
      e = e || !1;
      for (var i = 0; i < t.length; i++) this.addDisplayable(t[i], e);
    }),
    (_s.prototype.eachPendingDisplayable = function(t) {
      for (var e = this._cursor; e < this._displayables.length; e++)
        t && t(this._displayables[e]);
      for (e = 0; e < this._temporaryDisplayables.length; e++)
        t && t(this._temporaryDisplayables[e]);
    }),
    (_s.prototype.update = function() {
      this.updateTransform();
      for (var t = this._cursor; t < this._displayables.length; t++) {
        ((e = this._displayables[t]).parent = this),
          e.update(),
          (e.parent = null);
      }
      for (t = 0; t < this._temporaryDisplayables.length; t++) {
        var e;
        ((e = this._temporaryDisplayables[t]).parent = this),
          e.update(),
          (e.parent = null);
      }
    }),
    (_s.prototype.brush = function(t, e) {
      for (var i = this._cursor; i < this._displayables.length; i++) {
        (n = this._displayables[i]).beforeBrush && n.beforeBrush(t),
          n.brush(t, i === this._cursor ? null : this._displayables[i - 1]),
          n.afterBrush && n.afterBrush(t);
      }
      this._cursor = i;
      for (i = 0; i < this._temporaryDisplayables.length; i++) {
        var n;
        (n = this._temporaryDisplayables[i]).beforeBrush && n.beforeBrush(t),
          n.brush(t, 0 === i ? null : this._temporaryDisplayables[i - 1]),
          n.afterBrush && n.afterBrush(t);
      }
      (this._temporaryDisplayables = []), (this.notClear = !0);
    });
  var ws = [];
  (_s.prototype.getBoundingRect = function() {
    if (!this._rect) {
      for (
        var t = new Li(1 / 0, 1 / 0, -1 / 0, -1 / 0), e = 0;
        e < this._displayables.length;
        e++
      ) {
        var i = this._displayables[e],
          n = i.getBoundingRect().clone();
        i.needLocalTransform() && n.applyTransform(i.getLocalTransform(ws)),
          t.union(n);
      }
      this._rect = t;
    }
    return this._rect;
  }),
    (_s.prototype.contain = function(t, e) {
      var i = this.transformCoordToLocal(t, e);
      if (this.getBoundingRect().contain(i[0], i[1]))
        for (var n = 0; n < this._displayables.length; n++) {
          if (this._displayables[n].contain(t, e)) return !0;
        }
      return !1;
    }),
    b(_s, to);
  var bs = Math.max,
    Ss = Math.min,
    Ms = {},
    Is = 1,
    Ts = {
      color: 'textFill',
      textBorderColor: 'textStroke',
      textBorderWidth: 'textStrokeWidth',
    },
    As = 'emphasis',
    Ds = 'normal',
    Cs = 1,
    Ls = {},
    ks = {};
  function Ps(t) {
    return Lr.extend(t);
  }
  function Ns(t, e) {
    ks[t] = e;
  }
  function Os(t) {
    if (ks.hasOwnProperty(t)) return ks[t];
  }
  function Es(t, e, i, n) {
    var o = Yr(t, e);
    return (
      i && ('center' === n && (i = zs(i, o.getBoundingRect())), Vs(o, i)), o
    );
  }
  function Rs(t, i, n) {
    var o = new eo({
      style: {image: t, x: i.x, y: i.y, width: i.width, height: i.height},
      onload: function(t) {
        if ('center' === n) {
          var e = {width: t.width, height: t.height};
          o.setStyle(zs(i, e));
        }
      },
    });
    return o;
  }
  function zs(t, e) {
    var i,
      n = e.width / e.height,
      o = t.height * n;
    return (
      (i = o <= t.width ? t.height : (o = t.width) / n),
      {
        x: t.x + t.width / 2 - o / 2,
        y: t.y + t.height / 2 - i / 2,
        width: o,
        height: i,
      }
    );
  }
  var Bs = function(t, e) {
    for (var i = [], n = t.length, o = 0; o < n; o++) {
      var a = t[o];
      a.path || a.createPathProxy(),
        a.__dirtyPath && a.buildPath(a.path, a.shape, !0),
        i.push(a.path);
    }
    var r = new Lr(e);
    return (
      r.createPathProxy(),
      (r.buildPath = function(t) {
        t.appendPath(i);
        var e = t.getContext();
        e && t.rebuildPath(e);
      }),
      r
    );
  };
  function Vs(t, e) {
    if (t.applyTransform) {
      var i = t.getBoundingRect().calculateTransform(e);
      t.applyTransform(i);
    }
  }
  var Gs = ss;
  function Fs(t) {
    return null != t && 'none' !== t;
  }
  var Ws = et(),
    Hs = 0;
  function Zs(t) {
    var e = t.__hoverStl;
    if (e && !t.__highlighted) {
      var i = t.__zr,
        n = t.useHoverLayer && i && 'canvas' === i.painter.type;
      if (
        ((t.__highlighted = n ? 'layer' : 'plain'),
        !(t.isGroup || (!i && t.useHoverLayer)))
      ) {
        var o = t,
          a = t.style;
        n && (a = (o = i.addHover(t)).style),
          cl(a),
          n ||
            (function(t) {
              if (t.__hoverStlDirty) {
                t.__hoverStlDirty = !1;
                var e = t.__hoverStl;
                if (e) {
                  var i = (t.__cachedNormalStl = {});
                  t.__cachedNormalZ2 = t.z2;
                  var n = t.style;
                  for (var o in e) null != e[o] && (i[o] = n[o]);
                  (i.fill = n.fill), (i.stroke = n.stroke);
                } else t.__cachedNormalStl = t.__cachedNormalZ2 = null;
              }
            })(o),
          a.extendFrom(e),
          Us(a, e, 'fill'),
          Us(a, e, 'stroke'),
          hl(a),
          n || (t.dirty(!1), (t.z2 += Is));
      }
    }
  }
  function Us(t, e, i) {
    !Fs(e[i]) &&
      Fs(t[i]) &&
      (t[i] = (function(t) {
        if ('string' != typeof t) return t;
        var e = Ws.get(t);
        return e || ((e = Ue(t, -0.1)), Hs < 1e4 && (Ws.set(t, e), Hs++)), e;
      })(t[i]));
  }
  function Xs(t) {
    var e = t.__highlighted;
    if (e && ((t.__highlighted = !1), !t.isGroup))
      if ('layer' === e) t.__zr && t.__zr.removeHover(t);
      else {
        var i = t.style,
          n = t.__cachedNormalStl;
        n && (cl(i), t.setStyle(n), hl(i));
        var o = t.__cachedNormalZ2;
        null != o && t.z2 - o === Is && (t.z2 = o);
      }
  }
  function Ys(t, e, i) {
    var n,
      o = Ds,
      a = Ds;
    t.__highlighted && ((o = As), (n = !0)),
      e(t, i),
      t.__highlighted && ((a = As), (n = !0)),
      t.isGroup &&
        t.traverse(function(t) {
          t.isGroup || e(t, i);
        }),
      n && t.__highDownOnUpdate && t.__highDownOnUpdate(o, a);
  }
  function js(t, e) {
    (e = t.__hoverStl = !1 !== e && (t.hoverStyle || e || {})),
      (t.__hoverStlDirty = !0),
      t.__highlighted && ((t.__cachedNormalStl = null), Xs(t), Zs(t));
  }
  function qs(t) {
    Qs(this, t) || this.__highByOuter || Ys(this, Zs);
  }
  function Ks(t) {
    Qs(this, t) || this.__highByOuter || Ys(this, Xs);
  }
  function $s(t) {
    (this.__highByOuter |= 1 << (t || 0)), Ys(this, Zs);
  }
  function Js(t) {
    (this.__highByOuter &= ~(1 << (t || 0))) || Ys(this, Xs);
  }
  function Qs(t, e) {
    return t.__highDownSilentOnTouch && e.zrByTouch;
  }
  function tl(t, e) {
    el(t, !0), Ys(t, js, e);
  }
  function el(t, e) {
    var i = !1 === e;
    if (
      ((t.__highDownSilentOnTouch = t.highDownSilentOnTouch),
      (t.__highDownOnUpdate = t.highDownOnUpdate),
      !i || t.__highDownDispatcher)
    ) {
      var n = i ? 'off' : 'on';
      t[n]('mouseover', qs)[n]('mouseout', Ks),
        t[n]('emphasis', $s)[n]('normal', Js),
        (t.__highByOuter = t.__highByOuter || 0),
        (t.__highDownDispatcher = !i);
    }
  }
  function il(t) {
    return !(!t || !t.__highDownDispatcher);
  }
  function nl(t) {
    var e = Ls[t];
    return null == e && Cs <= 32 && (e = Ls[t] = Cs++), e;
  }
  function ol(t, e, i, n, o, a, r) {
    var s,
      l = (o = o || Ms).labelFetcher,
      u = o.labelDataIndex,
      h = o.labelDimIndex,
      c = o.labelProp,
      d = i.getShallow('show'),
      f = n.getShallow('show');
    (d || f) &&
      (l && (s = l.getFormattedLabel(u, 'normal', null, h, c)),
      null == s &&
        (s = z(o.defaultText) ? o.defaultText(u, o) : o.defaultText));
    var p = d ? s : null,
      g = f
        ? U(l ? l.getFormattedLabel(u, 'emphasis', null, h, c) : null, s)
        : null;
    (null == p && null == g) || (rl(t, i, a, o), rl(e, n, r, o, !0)),
      (t.text = p),
      (e.text = g);
  }
  function al(t, e, i) {
    var n = t.style;
    e && (cl(n), t.setStyle(e), hl(n)),
      (n = t.__hoverStl),
      i && n && (cl(n), P(n, i), hl(n));
  }
  function rl(t, e, i, n, o) {
    return sl(t, e, n, o), i && P(t, i), t;
  }
  function sl(t, e, i, n) {
    if ((i = i || Ms).isRectText) {
      var o;
      i.getTextPosition
        ? (o = i.getTextPosition(e, n))
        : 'outside' ===
            (o = e.getShallow('position') || (n ? null : 'inside')) &&
          (o = 'top'),
        (t.textPosition = o),
        (t.textOffset = e.getShallow('offset'));
      var a = e.getShallow('rotate');
      null != a && (a *= Math.PI / 180),
        (t.textRotation = a),
        (t.textDistance = U(e.getShallow('distance'), n ? null : 5));
    }
    var r,
      s = e.ecModel,
      l = s && s.option.textStyle,
      u = (function(t) {
        var e;
        for (; t && t !== t.ecModel; ) {
          var i = (t.option || Ms).rich;
          if (i)
            for (var n in ((e = e || {}), i)) i.hasOwnProperty(n) && (e[n] = 1);
          t = t.parentModel;
        }
        return e;
      })(e);
    if (u)
      for (var h in ((r = {}), u))
        if (u.hasOwnProperty(h)) {
          var c = e.getModel(['rich', h]);
          ll((r[h] = {}), c, l, i, n);
        }
    return (
      (t.rich = r),
      ll(t, e, l, i, n, !0),
      i.forceRich && !i.textStyle && (i.textStyle = {}),
      t
    );
  }
  function ll(t, e, i, n, o, a) {
    (i = (!o && i) || Ms),
      (t.textFill = ul(e.getShallow('color'), n) || i.color),
      (t.textStroke =
        ul(e.getShallow('textBorderColor'), n) || i.textBorderColor),
      (t.textStrokeWidth = U(
        e.getShallow('textBorderWidth'),
        i.textBorderWidth,
      )),
      o ||
        (a && ((t.insideRollbackOpt = n), hl(t)),
        null == t.textFill && (t.textFill = n.autoColor)),
      (t.fontStyle = e.getShallow('fontStyle') || i.fontStyle),
      (t.fontWeight = e.getShallow('fontWeight') || i.fontWeight),
      (t.fontSize = e.getShallow('fontSize') || i.fontSize),
      (t.fontFamily = e.getShallow('fontFamily') || i.fontFamily),
      (t.textAlign = e.getShallow('align')),
      (t.textVerticalAlign =
        e.getShallow('verticalAlign') || e.getShallow('baseline')),
      (t.textLineHeight = e.getShallow('lineHeight')),
      (t.textWidth = e.getShallow('width')),
      (t.textHeight = e.getShallow('height')),
      (t.textTag = e.getShallow('tag')),
      (a && n.disableBox) ||
        ((t.textBackgroundColor = ul(e.getShallow('backgroundColor'), n)),
        (t.textPadding = e.getShallow('padding')),
        (t.textBorderColor = ul(e.getShallow('borderColor'), n)),
        (t.textBorderWidth = e.getShallow('borderWidth')),
        (t.textBorderRadius = e.getShallow('borderRadius')),
        (t.textBoxShadowColor = e.getShallow('shadowColor')),
        (t.textBoxShadowBlur = e.getShallow('shadowBlur')),
        (t.textBoxShadowOffsetX = e.getShallow('shadowOffsetX')),
        (t.textBoxShadowOffsetY = e.getShallow('shadowOffsetY'))),
      (t.textShadowColor =
        e.getShallow('textShadowColor') || i.textShadowColor),
      (t.textShadowBlur = e.getShallow('textShadowBlur') || i.textShadowBlur),
      (t.textShadowOffsetX =
        e.getShallow('textShadowOffsetX') || i.textShadowOffsetX),
      (t.textShadowOffsetY =
        e.getShallow('textShadowOffsetY') || i.textShadowOffsetY);
  }
  function ul(t, e) {
    return 'auto' !== t ? t : e && e.autoColor ? e.autoColor : null;
  }
  function hl(t) {
    var e,
      i = t.textPosition,
      n = t.insideRollbackOpt;
    if (n && null == t.textFill) {
      var o = n.autoColor,
        a = n.isRectText,
        r = n.useInsideStyle,
        s =
          !1 !== r &&
          (!0 === r ||
            (a && i && 'string' == typeof i && 0 <= i.indexOf('inside'))),
        l = !s && null != o;
      (s || l) &&
        (e = {
          textFill: t.textFill,
          textStroke: t.textStroke,
          textStrokeWidth: t.textStrokeWidth,
        }),
        s &&
          ((t.textFill = '#fff'),
          null == t.textStroke &&
            ((t.textStroke = o),
            null == t.textStrokeWidth && (t.textStrokeWidth = 2))),
        l && (t.textFill = o);
    }
    t.insideRollback = e;
  }
  function cl(t) {
    var e = t.insideRollback;
    e &&
      ((t.textFill = e.textFill),
      (t.textStroke = e.textStroke),
      (t.textStrokeWidth = e.textStrokeWidth),
      (t.insideRollback = null));
  }
  function dl(t, e) {
    var i = e && e.getModel('textStyle');
    return K(
      [
        t.fontStyle || (i && i.getShallow('fontStyle')) || '',
        t.fontWeight || (i && i.getShallow('fontWeight')) || '',
        (t.fontSize || (i && i.getShallow('fontSize')) || 12) + 'px',
        t.fontFamily || (i && i.getShallow('fontFamily')) || 'sans-serif',
      ].join(' '),
    );
  }
  function fl(t, e, i, n, o, a) {
    if (
      ('function' == typeof o && ((a = o), (o = null)),
      n && n.isAnimationEnabled())
    ) {
      var r = t ? 'Update' : '',
        s = n.getShallow('animationDuration' + r),
        l = n.getShallow('animationEasing' + r),
        u = n.getShallow('animationDelay' + r);
      'function' == typeof u &&
        (u = u(
          o,
          n.getAnimationDelayParams ? n.getAnimationDelayParams(e, o) : null,
        )),
        'function' == typeof s && (s = s(o)),
        0 < s
          ? e.animateTo(i, s, u || 0, l, a, !!a)
          : (e.stopAnimation(), e.attr(i), a && a());
    } else e.stopAnimation(), e.attr(i), a && a();
  }
  function pl(t, e, i, n, o) {
    fl(!0, t, e, i, n, o);
  }
  function gl(t, e, i, n, o) {
    fl(!1, t, e, i, n, o);
  }
  function ml(t, e) {
    for (var i = le([]); t && t !== e; )
      he(i, t.getLocalTransform(), i), (t = t.parent);
    return i;
  }
  function vl(t, e, i) {
    return (
      e && !N(e) && (e = xe.getLocalTransform(e)),
      i && (e = pe([], e)),
      Mt([], t, e)
    );
  }
  function yl(t, e, i) {
    var n =
        0 === e[4] || 0 === e[5] || 0 === e[0]
          ? 1
          : Math.abs((2 * e[4]) / e[0]),
      o =
        0 === e[4] || 0 === e[5] || 0 === e[2]
          ? 1
          : Math.abs((2 * e[4]) / e[2]),
      a = [
        'left' === t ? -n : 'right' === t ? n : 0,
        'top' === t ? -o : 'bottom' === t ? o : 0,
      ];
    return (
      (a = vl(a, e, i)),
      Math.abs(a[0]) > Math.abs(a[1])
        ? 0 < a[0]
          ? 'right'
          : 'left'
        : 0 < a[1]
        ? 'bottom'
        : 'top'
    );
  }
  function xl(t, e, n, i) {
    if (t && e) {
      var o,
        a =
          ((o = {}),
          t.traverse(function(t) {
            !t.isGroup && t.anid && (o[t.anid] = t);
          }),
          o);
      e.traverse(function(t) {
        if (!t.isGroup && t.anid) {
          var e = a[t.anid];
          if (e) {
            var i = r(t);
            t.attr(r(e)), pl(t, i, n, t.dataIndex);
          }
        }
      });
    }
    function r(t) {
      var e = {position: lt(t.position), rotation: t.rotation};
      return t.shape && (e.shape = P({}, t.shape)), e;
    }
  }
  function _l(t, n) {
    return O(t, function(t) {
      var e = t[0];
      (e = bs(e, n.x)), (e = Ss(e, n.x + n.width));
      var i = t[1];
      return (i = bs(i, n.y)), [e, (i = Ss(i, n.y + n.height))];
    });
  }
  function wl(t, e, i) {
    var n = ((e = P({rectHover: !0}, e)).style = {strokeNoScale: !0});
    if (((i = i || {x: -1, y: -1, width: 2, height: 2}), t))
      return 0 === t.indexOf('image://')
        ? ((n.image = t.slice(8)), C(n, i), new eo(e))
        : Es(t.replace('path://', ''), e, i, 'center');
  }
  function bl(t, e, i, n, o) {
    for (var a = 0, r = o[o.length - 1]; a < o.length; a++) {
      var s = o[a];
      if (Sl(t, e, i, n, s[0], s[1], r[0], r[1])) return !0;
      r = s;
    }
  }
  function Sl(t, e, i, n, o, a, r, s) {
    var l = i - t,
      u = n - e,
      h = r - o,
      c = s - a,
      d = Ml(h, c, l, u);
    if (
      (function(t) {
        return t <= 1e-6 && -1e-6 <= t;
      })(d)
    )
      return !1;
    var f = t - o,
      p = e - a,
      g = Ml(f, p, l, u) / d;
    if (g < 0 || 1 < g) return !1;
    var m = Ml(f, p, h, c) / d;
    return !(m < 0 || 1 < m);
  }
  function Ml(t, e, i, n) {
    return t * n - i * e;
  }
  Ns('circle', Kr),
    Ns('sector', Jr),
    Ns('ring', Qr),
    Ns('polygon', is),
    Ns('polyline', ns),
    Ns('rect', us),
    Ns('line', cs),
    Ns('bezierCurve', gs),
    Ns('arc', ms);
  var Il = (Object.freeze || Object)({
      Z2_EMPHASIS_LIFT: Is,
      CACHED_LABEL_STYLE_PROPERTIES: Ts,
      extendShape: Ps,
      extendPath: function(t, e) {
        return (function(t, e) {
          return Lr.extend(Xr(t, e));
        })(t, e);
      },
      registerShape: Ns,
      getShapeClass: Os,
      makePath: Es,
      makeImage: Rs,
      mergePath: Bs,
      resizePath: Vs,
      subPixelOptimizeLine: function(t) {
        return as(t.shape, t.shape, t.style), t;
      },
      subPixelOptimizeRect: function(t) {
        return rs(t.shape, t.shape, t.style), t;
      },
      subPixelOptimize: Gs,
      setElementHoverStyle: js,
      setHoverStyle: tl,
      setAsHighDownDispatcher: el,
      isHighDownDispatcher: il,
      getHighlightDigit: nl,
      setLabelStyle: ol,
      modifyLabelStyle: al,
      setTextStyle: rl,
      setText: function(t, e, i) {
        var n,
          o = {isRectText: !0};
        !1 === i ? (n = !0) : (o.autoColor = i), sl(t, e, o, n);
      },
      getFont: dl,
      updateProps: pl,
      initProps: gl,
      getTransform: ml,
      applyTransform: vl,
      transformDirection: yl,
      groupTransition: xl,
      clipPointsByRect: _l,
      clipRectByRect: function(t, e) {
        var i = bs(t.x, e.x),
          n = Ss(t.x + t.width, e.x + e.width),
          o = bs(t.y, e.y),
          a = Ss(t.y + t.height, e.y + e.height);
        if (i <= n && o <= a) return {x: i, y: o, width: n - i, height: a - o};
      },
      createIcon: wl,
      linePolygonIntersect: bl,
      lineLineIntersect: Sl,
      Group: ki,
      Image: eo,
      Text: jr,
      Circle: Kr,
      Sector: Jr,
      Ring: Qr,
      Polygon: is,
      Polyline: ns,
      Rect: us,
      Line: cs,
      BezierCurve: gs,
      Arc: ms,
      IncrementalDisplayable: _s,
      CompoundPath: vs,
      LinearGradient: ys,
      RadialGradient: xs,
      BoundingRect: Li,
    }),
    Tl = ['textStyle', 'color'],
    Al = {
      getTextColor: function(t) {
        var e = this.ecModel;
        return this.getShallow('color') || (!t && e ? e.get(Tl) : null);
      },
      getFont: function() {
        return dl(
          {
            fontStyle: this.getShallow('fontStyle'),
            fontWeight: this.getShallow('fontWeight'),
            fontSize: this.getShallow('fontSize'),
            fontFamily: this.getShallow('fontFamily'),
          },
          this.ecModel,
        );
      },
      getTextRect: function(t) {
        return vn(
          t,
          this.getFont(),
          this.getShallow('align'),
          this.getShallow('verticalAlign') || this.getShallow('baseline'),
          this.getShallow('padding'),
          this.getShallow('lineHeight'),
          this.getShallow('rich'),
          this.getShallow('truncateText'),
        );
      },
    },
    Dl = fa([
      ['fill', 'color'],
      ['stroke', 'borderColor'],
      ['lineWidth', 'borderWidth'],
      ['opacity'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
      ['textPosition'],
      ['textAlign'],
    ]),
    Cl = {
      getItemStyle: function(t, e) {
        var i = Dl(this, t, e),
          n = this.getBorderLineDash();
        return n && (i.lineDash = n), i;
      },
      getBorderLineDash: function() {
        var t = this.get('borderType');
        return 'solid' === t || null == t
          ? null
          : 'dashed' === t
          ? [5, 5]
          : [1, 1];
      },
    },
    Ll = S,
    kl = $o();
  function Pl(t, e, i) {
    (this.parentModel = e), (this.ecModel = i), (this.option = t);
  }
  function Nl(t, e, i) {
    for (
      var n = 0;
      n < e.length &&
      (!e[n] || null != (t = t && 'object' == typeof t ? t[e[n]] : null));
      n++
    );
    return null == t && i && (t = i.get(e)), t;
  }
  function Ol(t, e) {
    var i = kl(t).getParent;
    return i ? i.call(t, e) : t.parentModel;
  }
  (Pl.prototype = {
    constructor: Pl,
    init: null,
    mergeOption: function(t) {
      m(this.option, t, !0);
    },
    get: function(t, e) {
      return null == t
        ? this.option
        : Nl(this.option, this.parsePath(t), !e && Ol(this, t));
    },
    getShallow: function(t, e) {
      var i = this.option,
        n = null == i ? i : i[t],
        o = !e && Ol(this, t);
      return null == n && o && (n = o.getShallow(t)), n;
    },
    getModel: function(t, e) {
      var i;
      return new Pl(
        null == t ? this.option : Nl(this.option, (t = this.parsePath(t))),
        (e = e || ((i = Ol(this, t)) && i.getModel(t))),
        this.ecModel,
      );
    },
    isEmpty: function() {
      return null == this.option;
    },
    restoreData: function() {},
    clone: function() {
      return new this.constructor(k(this.option));
    },
    setReadOnly: function(t) {},
    parsePath: function(t) {
      return 'string' == typeof t && (t = t.split('.')), t;
    },
    customizeGetParent: function(t) {
      kl(this).getParent = t;
    },
    isAnimationEnabled: function() {
      if (!v.node) {
        if (null != this.option.animation) return !!this.option.animation;
        if (this.parentModel) return this.parentModel.isAnimationEnabled();
      }
    },
  }),
    sa(Pl),
    ua(Pl),
    Ll(Pl, ga),
    Ll(Pl, va),
    Ll(Pl, Al),
    Ll(Pl, Cl);
  var El = 0;
  function Rl(t) {
    return [t || '', El++, Math.random().toFixed(5)].join('_');
  }
  var zl = 1e-4;
  function Bl(t, e, i, n) {
    var o = e[1] - e[0],
      a = i[1] - i[0];
    if (0 == o) return 0 == a ? i[0] : (i[0] + i[1]) / 2;
    if (n)
      if (0 < o) {
        if (t <= e[0]) return i[0];
        if (t >= e[1]) return i[1];
      } else {
        if (t >= e[0]) return i[0];
        if (t <= e[1]) return i[1];
      }
    else {
      if (t === e[0]) return i[0];
      if (t === e[1]) return i[1];
    }
    return ((t - e[0]) / o) * a + i[0];
  }
  function Vl(t, e) {
    switch (t) {
      case 'center':
      case 'middle':
        t = '50%';
        break;
      case 'left':
      case 'top':
        t = '0%';
        break;
      case 'right':
      case 'bottom':
        t = '100%';
    }
    return 'string' == typeof t
      ? (function(t) {
          return t.replace(/^\s+|\s+$/g, '');
        })(t).match(/%$/)
        ? (parseFloat(t) / 100) * e
        : parseFloat(t)
      : null == t
      ? NaN
      : +t;
  }
  function Gl(t, e, i) {
    return (
      null == e && (e = 10),
      (e = Math.min(Math.max(0, e), 20)),
      (t = (+t).toFixed(e)),
      i ? t : +t
    );
  }
  function Fl(t) {
    return (
      t.sort(function(t, e) {
        return t - e;
      }),
      t
    );
  }
  function Wl(t) {
    if (((t = +t), isNaN(t))) return 0;
    for (var e = 1, i = 0; Math.round(t * e) / e !== t; ) (e *= 10), i++;
    return i;
  }
  function Hl(t) {
    var e = t.toString(),
      i = e.indexOf('e');
    if (0 < i) {
      var n = +e.slice(i + 1);
      return n < 0 ? -n : 0;
    }
    var o = e.indexOf('.');
    return o < 0 ? 0 : e.length - 1 - o;
  }
  function Zl(t, e) {
    var i = Math.log,
      n = Math.LN10,
      o = Math.floor(i(t[1] - t[0]) / n),
      a = Math.round(i(Math.abs(e[1] - e[0])) / n),
      r = Math.min(Math.max(-o + a, 0), 20);
    return isFinite(r) ? r : 20;
  }
  function Ul(t, e, i) {
    if (!t[e]) return 0;
    var n = M(
      t,
      function(t, e) {
        return t + (isNaN(e) ? 0 : e);
      },
      0,
    );
    if (0 === n) return 0;
    for (
      var o = Math.pow(10, i),
        a = O(t, function(t) {
          return ((isNaN(t) ? 0 : t) / n) * o * 100;
        }),
        r = 100 * o,
        s = O(a, function(t) {
          return Math.floor(t);
        }),
        l = M(
          s,
          function(t, e) {
            return t + e;
          },
          0,
        ),
        u = O(a, function(t, e) {
          return t - s[e];
        });
      l < r;

    ) {
      for (
        var h = Number.NEGATIVE_INFINITY, c = null, d = 0, f = u.length;
        d < f;
        ++d
      )
        u[d] > h && ((h = u[d]), (c = d));
      ++s[c], (u[c] = 0), ++l;
    }
    return s[e] / o;
  }
  var Xl = 9007199254740991;
  function Yl(t) {
    var e = 2 * Math.PI;
    return ((t % e) + e) % e;
  }
  function jl(t) {
    return -zl < t && t < zl;
  }
  var ql = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
  function Kl(t) {
    if (t instanceof Date) return t;
    if ('string' != typeof t)
      return null == t ? new Date(NaN) : new Date(Math.round(t));
    var e = ql.exec(t);
    if (!e) return new Date(NaN);
    if (e[8]) {
      var i = +e[4] || 0;
      return (
        'Z' !== e[8].toUpperCase() && (i -= e[8].slice(0, 3)),
        new Date(
          Date.UTC(
            +e[1],
            +(e[2] || 1) - 1,
            +e[3] || 1,
            i,
            +(e[5] || 0),
            +e[6] || 0,
            +e[7] || 0,
          ),
        )
      );
    }
    return new Date(
      +e[1],
      +(e[2] || 1) - 1,
      +e[3] || 1,
      +e[4] || 0,
      +(e[5] || 0),
      +e[6] || 0,
      +e[7] || 0,
    );
  }
  function $l(t) {
    return Math.pow(10, Jl(t));
  }
  function Jl(t) {
    if (0 === t) return 0;
    var e = Math.floor(Math.log(t) / Math.LN10);
    return 10 <= t / Math.pow(10, e) && e++, e;
  }
  function Ql(t, e) {
    var i = Jl(t),
      n = Math.pow(10, i),
      o = t / n;
    return (
      (t =
        (e
          ? o < 1.5
            ? 1
            : o < 2.5
            ? 2
            : o < 4
            ? 3
            : o < 7
            ? 5
            : 10
          : o < 1
          ? 1
          : o < 2
          ? 2
          : o < 3
          ? 3
          : o < 5
          ? 5
          : 10) * n),
      -20 <= i ? +t.toFixed(i < 0 ? -i : 0) : t
    );
  }
  function tu(t) {
    t.sort(function(t, e) {
      return (function t(e, i, n) {
        return (
          e.interval[n] < i.interval[n] ||
          (e.interval[n] === i.interval[n] &&
            (e.close[n] - i.close[n] == (n ? -1 : 1) || (!n && t(e, i, 1))))
        );
      })(t, e, 0)
        ? -1
        : 1;
    });
    for (var e = -1 / 0, i = 1, n = 0; n < t.length; ) {
      for (var o = t[n].interval, a = t[n].close, r = 0; r < 2; r++)
        o[r] <= e && ((o[r] = e), (a[r] = r ? 1 : 1 - i)),
          (e = o[r]),
          (i = a[r]);
      o[0] === o[1] && a[0] * a[1] != 1 ? t.splice(n, 1) : n++;
    }
    return t;
  }
  function eu(t) {
    return 0 <= t - parseFloat(t);
  }
  var iu = (Object.freeze || Object)({
    linearMap: Bl,
    parsePercent: Vl,
    round: Gl,
    asc: Fl,
    getPrecision: Wl,
    getPrecisionSafe: Hl,
    getPixelPrecision: Zl,
    getPercentWithPrecision: Ul,
    MAX_SAFE_INTEGER: Xl,
    remRadian: Yl,
    isRadianAroundZero: jl,
    parseDate: Kl,
    quantity: $l,
    quantityExponent: Jl,
    nice: Ql,
    quantile: function(t, e) {
      var i = (t.length - 1) * e + 1,
        n = Math.floor(i),
        o = +t[n - 1],
        a = i - n;
      return a ? o + a * (t[n] - o) : o;
    },
    reformIntervals: tu,
    isNumeric: eu,
  });
  function nu(t) {
    return isNaN(t)
      ? '-'
      : (t = (t + '').split('.'))[0].replace(
          /(\d{1,3})(?=(?:\d{3})+(?!\d))/g,
          '$1,',
        ) + (1 < t.length ? '.' + t[1] : '');
  }
  function ou(t, e) {
    return (
      (t = (t || '').toLowerCase().replace(/-(.)/g, function(t, e) {
        return e.toUpperCase();
      })),
      e && t && (t = t.charAt(0).toUpperCase() + t.slice(1)),
      t
    );
  }
  var au = j,
    ru = /([&<>"'])/g,
    su = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;'};
  function lu(t) {
    return null == t
      ? ''
      : (t + '').replace(ru, function(t, e) {
          return su[e];
        });
  }
  function uu(t, e) {
    return '{' + t + (null == e ? '' : e) + '}';
  }
  var hu = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];
  function cu(t, e, i) {
    R(e) || (e = [e]);
    var n = e.length;
    if (!n) return '';
    for (var o = e[0].$vars || [], a = 0; a < o.length; a++) {
      var r = hu[a];
      t = t.replace(uu(r), uu(r, 0));
    }
    for (var s = 0; s < n; s++)
      for (var l = 0; l < o.length; l++) {
        var u = e[s][o[l]];
        t = t.replace(uu(hu[l], s), i ? lu(u) : u);
      }
    return t;
  }
  function du(i, t, n) {
    return (
      E(t, function(t, e) {
        i = i.replace('{' + e + '}', n ? lu(t) : t);
      }),
      i
    );
  }
  function fu(t, e) {
    var i = (t = B(t) ? {color: t, extraCssText: e} : t || {}).color,
      n = t.type,
      o = ((e = t.extraCssText), t.renderMode || 'html'),
      a = t.markerId || 'X';
    return i
      ? 'html' === o
        ? 'subItem' === n
          ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' +
            lu(i) +
            ';' +
            (e || '') +
            '"></span>'
          : '<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:' +
            lu(i) +
            ';' +
            (e || '') +
            '"></span>'
        : {renderMode: o, content: '{marker' + a + '|}  ', style: {color: i}}
      : '';
  }
  function pu(t, e) {
    return '0000'.substr(0, e - (t += '').length) + t;
  }
  function gu(t, e, i) {
    ('week' !== t &&
      'month' !== t &&
      'quarter' !== t &&
      'half-year' !== t &&
      'year' !== t) ||
      (t = 'MM-dd\nyyyy');
    var n = Kl(e),
      o = i ? 'UTC' : '',
      a = n['get' + o + 'FullYear'](),
      r = n['get' + o + 'Month']() + 1,
      s = n['get' + o + 'Date'](),
      l = n['get' + o + 'Hours'](),
      u = n['get' + o + 'Minutes'](),
      h = n['get' + o + 'Seconds'](),
      c = n['get' + o + 'Milliseconds']();
    return (t = t
      .replace('MM', pu(r, 2))
      .replace('M', r)
      .replace('yyyy', a)
      .replace('yy', a % 100)
      .replace('dd', pu(s, 2))
      .replace('d', s)
      .replace('hh', pu(l, 2))
      .replace('h', l)
      .replace('mm', pu(u, 2))
      .replace('m', u)
      .replace('ss', pu(h, 2))
      .replace('s', h)
      .replace('SSS', pu(c, 3)));
  }
  function mu(t) {
    return t ? t.charAt(0).toUpperCase() + t.substr(1) : t;
  }
  var vu = wn;
  function yu(t, e) {
    if ('_blank' === e || 'blank' === e) {
      var i = window.open();
      (i.opener = null), (i.location = t);
    } else window.open(t, e);
  }
  var xu = (Object.freeze || Object)({
      addCommas: nu,
      toCamelCase: ou,
      normalizeCssArray: au,
      encodeHTML: lu,
      formatTpl: cu,
      formatTplSimple: du,
      getTooltipMarker: fu,
      formatTime: gu,
      capitalFirst: mu,
      truncateText: vu,
      getTextBoundingRect: function(t) {
        return vn(
          t.text,
          t.font,
          t.textAlign,
          t.textVerticalAlign,
          t.textPadding,
          t.textLineHeight,
          t.rich,
          t.truncate,
        );
      },
      getTextRect: function(t, e, i, n, o, a, r, s) {
        return vn(t, e, i, n, o, s, a, r);
      },
      windowOpen: yu,
    }),
    _u = E,
    wu = ['left', 'right', 'top', 'bottom', 'width', 'height'],
    bu = [['width', 'left', 'right'], ['height', 'top', 'bottom']];
  function Su(h, c, d, f, p) {
    var g = 0,
      m = 0;
    null == f && (f = 1 / 0), null == p && (p = 1 / 0);
    var v = 0;
    c.eachChild(function(t, e) {
      var i,
        n,
        o = t.position,
        a = t.getBoundingRect(),
        r = c.childAt(e + 1),
        s = r && r.getBoundingRect();
      if ('horizontal' === h) {
        var l = a.width + (s ? -s.x + a.x : 0);
        v =
          f < (i = g + l) || t.newline
            ? ((g = 0), (i = l), (m += v + d), a.height)
            : Math.max(v, a.height);
      } else {
        var u = a.height + (s ? -s.y + a.y : 0);
        v =
          p < (n = m + u) || t.newline
            ? ((g += v + d), (m = 0), (n = u), a.width)
            : Math.max(v, a.width);
      }
      t.newline ||
        ((o[0] = g),
        (o[1] = m),
        'horizontal' === h ? (g = i + d) : (m = n + d));
    });
  }
  var Mu = Su;
  L(Su, 'vertical'), L(Su, 'horizontal');
  function Iu(t, e, i) {
    i = au(i || 0);
    var n = e.width,
      o = e.height,
      a = Vl(t.left, n),
      r = Vl(t.top, o),
      s = Vl(t.right, n),
      l = Vl(t.bottom, o),
      u = Vl(t.width, n),
      h = Vl(t.height, o),
      c = i[2] + i[0],
      d = i[1] + i[3],
      f = t.aspect;
    switch (
      (isNaN(u) && (u = n - s - d - a),
      isNaN(h) && (h = o - l - c - r),
      null != f &&
        (isNaN(u) && isNaN(h) && (n / o < f ? (u = 0.8 * n) : (h = 0.8 * o)),
        isNaN(u) && (u = f * h),
        isNaN(h) && (h = u / f)),
      isNaN(a) && (a = n - s - u - d),
      isNaN(r) && (r = o - l - h - c),
      t.left || t.right)
    ) {
      case 'center':
        a = n / 2 - u / 2 - i[3];
        break;
      case 'right':
        a = n - u - d;
    }
    switch (t.top || t.bottom) {
      case 'middle':
      case 'center':
        r = o / 2 - h / 2 - i[0];
        break;
      case 'bottom':
        r = o - h - c;
    }
    (a = a || 0),
      (r = r || 0),
      isNaN(u) && (u = n - d - a - (s || 0)),
      isNaN(h) && (h = o - c - r - (l || 0));
    var p = new Li(a + i[3], r + i[0], u, h);
    return (p.margin = i), p;
  }
  function Tu(t, e, i, n, o) {
    var a = !o || !o.hv || o.hv[0],
      r = !o || !o.hv || o.hv[1],
      s = (o && o.boundingMode) || 'all';
    if (a || r) {
      var l;
      if ('raw' === s)
        l =
          'group' === t.type
            ? new Li(0, 0, +e.width || 0, +e.height || 0)
            : t.getBoundingRect();
      else if (((l = t.getBoundingRect()), t.needLocalTransform())) {
        var u = t.getLocalTransform();
        (l = l.clone()).applyTransform(u);
      }
      e = Iu(C({width: l.width, height: l.height}, e), i, n);
      var h = t.position,
        c = a ? e.x - l.x : 0,
        d = r ? e.y - l.y : 0;
      t.attr('position', 'raw' === s ? [c, d] : [h[0] + c, h[1] + d]);
    }
  }
  function Au(l, u, t) {
    V(t) || (t = {});
    var h = t.ignoreSize;
    R(h) || (h = [h, h]);
    var e = n(bu[0], 0),
      i = n(bu[1], 1);
    function n(t, e) {
      var i = {},
        n = 0,
        o = {},
        a = 0;
      if (
        (_u(t, function(t) {
          o[t] = l[t];
        }),
        _u(t, function(t) {
          c(u, t) && (i[t] = o[t] = u[t]), d(i, t) && n++, d(o, t) && a++;
        }),
        h[e])
      )
        return (
          d(u, t[1]) ? (o[t[2]] = null) : d(u, t[2]) && (o[t[1]] = null), o
        );
      if (2 !== a && n) {
        if (2 <= n) return i;
        for (var r = 0; r < t.length; r++) {
          var s = t[r];
          if (!c(i, s) && c(l, s)) {
            i[s] = l[s];
            break;
          }
        }
        return i;
      }
      return o;
    }
    function c(t, e) {
      return t.hasOwnProperty(e);
    }
    function d(t, e) {
      return null != t[e] && 'auto' !== t[e];
    }
    function o(t, e, i) {
      _u(t, function(t) {
        e[t] = i[t];
      });
    }
    o(bu[0], l, e), o(bu[1], l, i);
  }
  function Du(t) {
    return Cu({}, t);
  }
  function Cu(e, i) {
    return (
      i &&
        e &&
        _u(wu, function(t) {
          i.hasOwnProperty(t) && (e[t] = i[t]);
        }),
      e
    );
  }
  var Lu,
    ku,
    Pu,
    Nu = $o(),
    Ou = Pl.extend({
      type: 'component',
      id: '',
      name: '',
      mainType: '',
      subType: '',
      componentIndex: 0,
      defaultOption: null,
      ecModel: null,
      dependentModels: [],
      uid: null,
      layoutMode: null,
      $constructor: function(t, e, i, n) {
        Pl.call(this, t, e, i, n), (this.uid = Rl('ec_cpt_model'));
      },
      init: function(t, e, i, n) {
        this.mergeDefaultAndTheme(t, i);
      },
      mergeDefaultAndTheme: function(t, e) {
        var i = this.layoutMode,
          n = i ? Du(t) : {};
        m(t, e.getTheme().get(this.mainType)),
          m(t, this.getDefaultOption()),
          i && Au(t, n, i);
      },
      mergeOption: function(t, e) {
        m(this.option, t, !0);
        var i = this.layoutMode;
        i && Au(this.option, t, i);
      },
      optionUpdated: function(t, e) {},
      getDefaultOption: function() {
        var t = Nu(this);
        if (!t.defaultOption) {
          for (var e = [], i = this.constructor; i; ) {
            var n = i.prototype.defaultOption;
            n && e.push(n), (i = i.superClass);
          }
          for (var o = {}, a = e.length - 1; 0 <= a; a--) o = m(o, e[a], !0);
          t.defaultOption = o;
        }
        return t.defaultOption;
      },
      getReferringComponents: function(t) {
        return this.ecModel.queryComponents({
          mainType: t,
          index: this.get(t + 'Index', !0),
          id: this.get(t + 'Id', !0),
        });
      },
    });
  function Eu(t, e) {
    return t[e] || (t[e] = {predecessor: [], successor: []}), t[e];
  }
  da(Ou, {registerWhenExtend: !0}),
    (ku = {}),
    ((Lu = Ou).registerSubTypeDefaulter = function(t, e) {
      (t = ra(t)), (ku[t.main] = e);
    }),
    (Lu.determineSubType = function(t, e) {
      var i = e.type;
      if (!i) {
        var n = ra(t).main;
        Lu.hasSubTypes(t) && ku[n] && (i = ku[n](e));
      }
      return i;
    }),
    (Pu = function(t) {
      var e = [];
      E(Ou.getClassesByMainType(t), function(t) {
        e = e.concat(t.prototype.dependencies || []);
      }),
        (e = O(e, function(t) {
          return ra(t).main;
        })),
        'dataset' !== t && w(e, 'dataset') <= 0 && e.unshift('dataset');
      return e;
    }),
    (Ou.topologicalTravel = function(t, e, i, n) {
      if (t.length) {
        var o = (function(e) {
            var o = {},
              a = [];
            return (
              E(e, function(i) {
                var n = Eu(o, i),
                  t = (function(t, e) {
                    var i = [];
                    return (
                      E(t, function(t) {
                        0 <= w(e, t) && i.push(t);
                      }),
                      i
                    );
                  })((n.originalDeps = Pu(i)), e);
                (n.entryCount = t.length),
                  0 === n.entryCount && a.push(i),
                  E(t, function(t) {
                    w(n.predecessor, t) < 0 && n.predecessor.push(t);
                    var e = Eu(o, t);
                    w(e.successor, t) < 0 && e.successor.push(i);
                  });
              }),
              {graph: o, noEntryList: a}
            );
          })(e),
          a = o.graph,
          r = o.noEntryList,
          s = {};
        for (
          E(t, function(t) {
            s[t] = !0;
          });
          r.length;

        ) {
          var l = r.pop(),
            u = a[l],
            h = !!s[l];
          h && (i.call(n, l, u.originalDeps.slice()), delete s[l]),
            E(u.successor, h ? d : c);
        }
        E(s, function() {
          throw new Error('Circle dependency may exists');
        });
      }
      function c(t) {
        a[t].entryCount--, 0 === a[t].entryCount && r.push(t);
      }
      function d(t) {
        (s[t] = !0), c(t);
      }
    }),
    S(Ou, {
      getBoxLayoutParams: function() {
        return {
          left: this.get('left'),
          top: this.get('top'),
          right: this.get('right'),
          bottom: this.get('bottom'),
          width: this.get('width'),
          height: this.get('height'),
        };
      },
    });
  var Ru = '';
  'undefined' != typeof navigator && (Ru = navigator.platform || '');
  var zu = {
      color: [
        '#c23531',
        '#2f4554',
        '#61a0a8',
        '#d48265',
        '#91c7ae',
        '#749f83',
        '#ca8622',
        '#bda29a',
        '#6e7074',
        '#546570',
        '#c4ccd3',
      ],
      gradientColor: ['#f6efa6', '#d88273', '#bf444c'],
      textStyle: {
        fontFamily: Ru.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',
        fontSize: 12,
        fontStyle: 'normal',
        fontWeight: 'normal',
      },
      blendMode: null,
      animation: 'auto',
      animationDuration: 1e3,
      animationDurationUpdate: 300,
      animationEasing: 'exponentialOut',
      animationEasingUpdate: 'cubicOut',
      animationThreshold: 2e3,
      progressiveThreshold: 3e3,
      progressive: 400,
      hoverLayerThreshold: 3e3,
      useUTC: !1,
    },
    Bu = $o();
  var Vu = {
      clearColorPalette: function() {
        (Bu(this).colorIdx = 0), (Bu(this).colorNameMap = {});
      },
      getColorFromPalette: function(t, e, i) {
        var n = Bu((e = e || this)),
          o = n.colorIdx || 0,
          a = (n.colorNameMap = n.colorNameMap || {});
        if (a.hasOwnProperty(t)) return a[t];
        var r = Wo(this.get('color', !0)),
          s = this.get('colorLayer', !0),
          l =
            null != i && s
              ? (function(t, e) {
                  for (var i = t.length, n = 0; n < i; n++)
                    if (t[n].length > e) return t[n];
                  return t[i - 1];
                })(s, i)
              : r;
        if ((l = l || r) && l.length) {
          var u = l[o];
          return t && (a[t] = u), (n.colorIdx = (o + 1) % l.length), u;
        }
      },
    },
    Gu = 'original',
    Fu = 'arrayRows',
    Wu = 'objectRows',
    Hu = 'keyedColumns',
    Zu = 'unknown',
    Uu = 'typedArray',
    Xu = 'column',
    Yu = 'row';
  function ju(t) {
    (this.fromDataset = t.fromDataset),
      (this.data = t.data || (t.sourceFormat === Hu ? {} : [])),
      (this.sourceFormat = t.sourceFormat || Zu),
      (this.seriesLayoutBy = t.seriesLayoutBy || Xu),
      (this.dimensionsDefine = t.dimensionsDefine),
      (this.encodeDefine = t.encodeDefine && et(t.encodeDefine)),
      (this.startIndex = t.startIndex || 0),
      (this.dimensionsDetectCount = t.dimensionsDetectCount);
  }
  (ju.seriesDataToSource = function(t) {
    return new ju({data: t, sourceFormat: F(t) ? Uu : Gu, fromDataset: !1});
  }),
    ua(ju);
  var qu = {Must: 1, Might: 2, Not: 3},
    Ku = $o();
  function $u(t) {
    var e = t.option,
      i = e.data,
      n = F(i) ? Uu : Gu,
      o = !1,
      a = e.seriesLayoutBy,
      r = e.sourceHeader,
      s = e.dimensions,
      l = ih(t);
    if (l) {
      var u = l.option;
      (i = u.source),
        (n = Ku(l).sourceFormat),
        (o = !0),
        (a = a || u.seriesLayoutBy),
        null == r && (r = u.sourceHeader),
        (s = s || u.dimensions);
    }
    var h = (function(t, e, i, n, o) {
      if (!t) return {dimensionsDefine: Ju(o)};
      var a, r;
      if (e === Fu)
        'auto' === n || null == n
          ? Qu(
              function(t) {
                null != t &&
                  '-' !== t &&
                  (B(t) ? null == r && (r = 1) : (r = 0));
              },
              i,
              t,
              10,
            )
          : (r = n ? 1 : 0),
          o ||
            1 !== r ||
            ((o = []),
            Qu(
              function(t, e) {
                o[e] = null != t ? t : '';
              },
              i,
              t,
            )),
          (a = o ? o.length : i === Yu ? t.length : t[0] ? t[0].length : null);
      else if (e === Wu)
        o =
          o ||
          (function(t) {
            var e,
              i = 0;
            for (; i < t.length && !(e = t[i++]); );
            if (e) {
              var n = [];
              return (
                E(e, function(t, e) {
                  n.push(e);
                }),
                n
              );
            }
          })(t);
      else if (e === Hu)
        o ||
          ((o = []),
          E(t, function(t, e) {
            o.push(e);
          }));
      else if (e === Gu) {
        var s = Uo(t[0]);
        a = (R(s) && s.length) || 1;
      } else
        e === Uu &&
          D &&
          q(!!o, 'dimensions must be given if data is TypedArray.');
      return {startIndex: r, dimensionsDefine: Ju(o), dimensionsDetectCount: a};
    })(i, n, a, r, s);
    Ku(t).source = new ju({
      data: i,
      fromDataset: o,
      seriesLayoutBy: a,
      sourceFormat: n,
      dimensionsDefine: h.dimensionsDefine,
      startIndex: h.startIndex,
      dimensionsDetectCount: h.dimensionsDetectCount,
      encodeDefine: e.encode,
    });
  }
  function Ju(t) {
    if (t) {
      var n = et();
      return O(t, function(t, e) {
        if (null == (t = P({}, V(t) ? t : {name: t})).name) return t;
        (t.name += ''), null == t.displayName && (t.displayName = t.name);
        var i = n.get(t.name);
        return i ? (t.name += '-' + i.count++) : n.set(t.name, {count: 1}), t;
      });
    }
  }
  function Qu(t, e, i, n) {
    if ((null == n && (n = 1 / 0), e === Yu))
      for (var o = 0; o < i.length && o < n; o++) t(i[o] ? i[o][0] : null, o);
    else {
      var a = i[0] || [];
      for (o = 0; o < a.length && o < n; o++) t(a[o], o);
    }
  }
  function th(i, t, e) {
    var a = {},
      n = ih(t);
    if (!n || !i) return a;
    var r,
      o,
      s = [],
      l = [],
      u = t.ecModel,
      h = Ku(u).datasetMap,
      c = n.uid + '_' + e.seriesLayoutBy;
    E((i = i.slice()), function(t, e) {
      V(t) || (i[e] = {name: t}),
        'ordinal' === t.type && null == r && (o = p(i[(r = e)])),
        (a[t.name] = []);
    });
    var d = h.get(c) || h.set(c, {categoryWayDim: o, valueWayDim: 0});
    function f(t, e, i) {
      for (var n = 0; n < i; n++) t.push(e + n);
    }
    function p(t) {
      var e = t.dimsDef;
      return e ? e.length : 1;
    }
    return (
      E(i, function(t, e) {
        var i = t.name,
          n = p(t);
        if (null == r) {
          var o = d.valueWayDim;
          f(a[i], o, n), f(l, o, n), (d.valueWayDim += n);
        } else if (r === e) f(a[i], 0, n), f(s, 0, n);
        else {
          o = d.categoryWayDim;
          f(a[i], o, n), f(l, o, n), (d.categoryWayDim += n);
        }
      }),
      s.length && (a.itemName = s),
      l.length && (a.seriesName = l),
      a
    );
  }
  function eh(t, l, u) {
    var e = {};
    if (!ih(t)) return e;
    var h,
      c = l.sourceFormat,
      d = l.dimensionsDefine;
    (c !== Wu && c !== Hu) ||
      E(d, function(t, e) {
        'name' === (V(t) ? t.name : t) && (h = e);
      });
    var i = (function() {
      for (var t = {}, e = {}, i = [], n = 0, o = Math.min(5, u); n < o; n++) {
        var a = nh(l.data, c, l.seriesLayoutBy, d, l.startIndex, n);
        i.push(a);
        var r = a === qu.Not;
        if (
          (r && null == t.v && n !== h && (t.v = n),
          (null != t.n && t.n !== t.v && (r || i[t.n] !== qu.Not)) || (t.n = n),
          s(t) && i[t.n] !== qu.Not)
        )
          return t;
        r ||
          (a === qu.Might && null == e.v && n !== h && (e.v = n),
          (null != e.n && e.n !== e.v) || (e.n = n));
      }
      function s(t) {
        return null != t.v && null != t.n;
      }
      return s(t) ? t : s(e) ? e : null;
    })();
    if (i) {
      e.value = i.v;
      var n = null != h ? h : i.n;
      (e.itemName = [n]), (e.seriesName = [n]);
    }
    return e;
  }
  function ih(t) {
    var e = t.option;
    if (!e.data) return t.ecModel.getComponent('dataset', e.datasetIndex || 0);
  }
  function nh(t, e, i, n, o, a) {
    var r, s, l;
    if (F(t)) return qu.Not;
    if (n) {
      var u = n[a];
      V(u) ? ((s = u.name), (l = u.type)) : B(u) && (s = u);
    }
    if (null != l) return 'ordinal' === l ? qu.Must : qu.Not;
    if (e === Fu)
      if (i === Yu) {
        for (var h = t[a], c = 0; c < (h || []).length && c < 5; c++)
          if (null != (r = g(h[o + c]))) return r;
      } else
        for (c = 0; c < t.length && c < 5; c++) {
          var d = t[o + c];
          if (d && null != (r = g(d[a]))) return r;
        }
    else if (e === Wu) {
      if (!s) return qu.Not;
      for (c = 0; c < t.length && c < 5; c++) {
        if ((f = t[c]) && null != (r = g(f[s]))) return r;
      }
    } else if (e === Hu) {
      if (!s) return qu.Not;
      if (!(h = t[s]) || F(h)) return qu.Not;
      for (c = 0; c < h.length && c < 5; c++)
        if (null != (r = g(h[c]))) return r;
    } else if (e === Gu)
      for (c = 0; c < t.length && c < 5; c++) {
        var f,
          p = Uo((f = t[c]));
        if (!R(p)) return qu.Not;
        if (null != (r = g(p[a]))) return r;
      }
    function g(t) {
      var e = B(t);
      return null != t && isFinite(t) && '' !== t
        ? e
          ? qu.Might
          : qu.Not
        : e && '-' !== t
        ? qu.Must
        : void 0;
    }
    return qu.Not;
  }
  var oh = '\0_ec_inner',
    ah = Pl.extend({
      init: function(t, e, i, n) {
        (i = i || {}),
          (this.option = null),
          (this._theme = new Pl(i)),
          (this._optionManager = n);
      },
      setOption: function(t, e) {
        q(!(oh in t), 'please use chart.getOption()'),
          this._optionManager.setOption(t, e),
          this.resetOption(null);
      },
      resetOption: function(t) {
        var e = !1,
          i = this._optionManager;
        if (!t || 'recreate' === t) {
          var n = i.mountOption('recreate' === t);
          this.option && 'recreate' !== t
            ? (this.restoreData(), this.mergeOption(n))
            : function(t) {
                (t = t),
                  (this.option = {}),
                  (this.option[oh] = 1),
                  (this._componentsMap = et({series: []})),
                  this._seriesIndices,
                  this._seriesIndicesMap,
                  (function(i, t) {
                    var n = i.color && !i.colorLayer;
                    E(t, function(t, e) {
                      ('colorLayer' === e && n) ||
                        Ou.hasClass(e) ||
                        ('object' == typeof t
                          ? (i[e] = i[e] ? m(i[e], t, !1) : k(t))
                          : null == i[e] && (i[e] = t));
                    });
                  })(t, this._theme.option),
                  m(t, zu, !1),
                  this.mergeOption(t);
              }.call(this, n),
            (e = !0);
        }
        if (
          (('timeline' !== t && 'media' !== t) || this.restoreData(),
          !t || 'recreate' === t || 'timeline' === t)
        ) {
          var o = i.getTimelineOption(this);
          o && (this.mergeOption(o), (e = !0));
        }
        if (!t || 'recreate' === t || 'media' === t) {
          var a = i.getMediaOption(this, this._api);
          a.length &&
            E(
              a,
              function(t) {
                this.mergeOption(t, (e = !0));
              },
              this,
            );
        }
        return e;
      },
      mergeOption: function(n) {
        var l = this.option,
          u = this._componentsMap,
          i = [];
        !(function(t) {
          Ku(t).datasetMap = et();
        })(this),
          E(n, function(t, e) {
            null != t &&
              (Ou.hasClass(e)
                ? e && i.push(e)
                : (l[e] = null == l[e] ? k(t) : m(l[e], t, !0)));
          }),
          Ou.topologicalTravel(
            i,
            Ou.getAllClassMainTypes(),
            function(r, t) {
              var e = Wo(n[r]),
                i = Xo(u.get(r), e);
              Yo(i),
                E(i, function(t, e) {
                  var i = t.option;
                  V(i) &&
                    ((t.keyInfo.mainType = r),
                    (t.keyInfo.subType = (function(t, e, i) {
                      return e.type
                        ? e.type
                        : i
                        ? i.subType
                        : Ou.determineSubType(t, e);
                    })(r, i, t.exist)));
                });
              var s = (function(e, t) {
                R(t) || (t = t ? [t] : []);
                var i = {};
                return (
                  E(t, function(t) {
                    i[t] = (e.get(t) || []).slice();
                  }),
                  i
                );
              })(u, t);
              (l[r] = []),
                u.set(r, []),
                E(
                  i,
                  function(t, e) {
                    var i = t.exist,
                      n = t.option;
                    if ((q(V(n) || i, 'Empty component definition'), n)) {
                      var o = Ou.getClass(r, t.keyInfo.subType, !0);
                      if (i && i.constructor === o)
                        (i.name = t.keyInfo.name),
                          i.mergeOption(n, this),
                          i.optionUpdated(n, !1);
                      else {
                        var a = P(
                          {dependentModels: s, componentIndex: e},
                          t.keyInfo,
                        );
                        P((i = new o(n, this, this, a)), a),
                          i.init(n, this, this, a),
                          i.optionUpdated(null, !0);
                      }
                    } else i.mergeOption({}, this), i.optionUpdated({}, !1);
                    (u.get(r)[e] = i), (l[r][e] = i.option);
                  },
                  this,
                ),
                'series' === r && rh(this, u.get('series'));
            },
            this,
          ),
          (this._seriesIndicesMap = et(
            (this._seriesIndices = this._seriesIndices || []),
          ));
      },
      getOption: function() {
        var n = k(this.option);
        return (
          E(n, function(t, e) {
            if (Ou.hasClass(e)) {
              for (var i = (t = Wo(t)).length - 1; 0 <= i; i--)
                qo(t[i]) && t.splice(i, 1);
              n[e] = t;
            }
          }),
          delete n[oh],
          n
        );
      },
      getTheme: function() {
        return this._theme;
      },
      getComponent: function(t, e) {
        var i = this._componentsMap.get(t);
        if (i) return i[e || 0];
      },
      queryComponents: function(t) {
        var e = t.mainType;
        if (!e) return [];
        var i,
          n = t.index,
          o = t.id,
          a = t.name,
          r = this._componentsMap.get(e);
        if (!r || !r.length) return [];
        if (null != n)
          R(n) || (n = [n]),
            (i = I(
              O(n, function(t) {
                return r[t];
              }),
              function(t) {
                return !!t;
              },
            ));
        else if (null != o) {
          var s = R(o);
          i = I(r, function(t) {
            return (s && 0 <= w(o, t.id)) || (!s && t.id === o);
          });
        } else if (null != a) {
          var l = R(a);
          i = I(r, function(t) {
            return (l && 0 <= w(a, t.name)) || (!l && t.name === a);
          });
        } else i = r.slice();
        return sh(i, t);
      },
      findComponents: function(t) {
        var e,
          i,
          n,
          o,
          a,
          r = t.query,
          s = t.mainType,
          l =
            ((i = s + 'Index'),
            (n = s + 'Id'),
            (o = s + 'Name'),
            !(e = r) || (null == e[i] && null == e[n] && null == e[o])
              ? null
              : {mainType: s, index: e[i], id: e[n], name: e[o]}),
          u = l ? this.queryComponents(l) : this._componentsMap.get(s);
        return (a = sh(u, t)), t.filter ? I(a, t.filter) : a;
      },
      eachComponent: function(t, n, o) {
        var e = this._componentsMap;
        if ('function' == typeof t)
          (o = n),
            (n = t),
            e.each(function(t, i) {
              E(t, function(t, e) {
                n.call(o, i, t, e);
              });
            });
        else if (B(t)) E(e.get(t), n, o);
        else if (V(t)) {
          E(this.findComponents(t), n, o);
        }
      },
      getSeriesByName: function(e) {
        return I(this._componentsMap.get('series'), function(t) {
          return t.name === e;
        });
      },
      getSeriesByIndex: function(t) {
        return this._componentsMap.get('series')[t];
      },
      getSeriesByType: function(e) {
        return I(this._componentsMap.get('series'), function(t) {
          return t.subType === e;
        });
      },
      getSeries: function() {
        return this._componentsMap.get('series').slice();
      },
      getSeriesCount: function() {
        return this._componentsMap.get('series').length;
      },
      eachSeries: function(i, n) {
        lh(this),
          E(
            this._seriesIndices,
            function(t) {
              var e = this._componentsMap.get('series')[t];
              i.call(n, e, t);
            },
            this,
          );
      },
      eachRawSeries: function(t, e) {
        E(this._componentsMap.get('series'), t, e);
      },
      eachSeriesByType: function(i, n, o) {
        lh(this),
          E(
            this._seriesIndices,
            function(t) {
              var e = this._componentsMap.get('series')[t];
              e.subType === i && n.call(o, e, t);
            },
            this,
          );
      },
      eachRawSeriesByType: function(t, e, i) {
        return E(this.getSeriesByType(t), e, i);
      },
      isSeriesFiltered: function(t) {
        return lh(this), null == this._seriesIndicesMap.get(t.componentIndex);
      },
      getCurrentSeriesIndices: function() {
        return (this._seriesIndices || []).slice();
      },
      filterSeries: function(t, e) {
        lh(this);
        var i = I(this._componentsMap.get('series'), t, e);
        rh(this, i);
      },
      restoreData: function(i) {
        var n = this._componentsMap;
        rh(this, n.get('series'));
        var o = [];
        n.each(function(t, e) {
          o.push(e);
        }),
          Ou.topologicalTravel(o, Ou.getAllClassMainTypes(), function(e, t) {
            E(n.get(e), function(t) {
              ('series' === e &&
                (function(t, e) {
                  if (e) {
                    var i = e.seiresIndex,
                      n = e.seriesId,
                      o = e.seriesName;
                    return (
                      (null != i && t.componentIndex !== i) ||
                      (null != n && t.id !== n) ||
                      (null != o && t.name !== o)
                    );
                  }
                })(t, i)) ||
                t.restoreData();
            });
          });
      },
    });
  function rh(t, e) {
    t._seriesIndicesMap = et(
      (t._seriesIndices =
        O(e, function(t) {
          return t.componentIndex;
        }) || []),
    );
  }
  function sh(t, e) {
    return e.hasOwnProperty('subType')
      ? I(t, function(t) {
          return t.subType === e.subType;
        })
      : t;
  }
  function lh(t) {
    if (D && !t._seriesIndices)
      throw new Error('Option should contains series.');
  }
  S(ah, Vu);
  var uh = [
    'getDom',
    'getZr',
    'getWidth',
    'getHeight',
    'getDevicePixelRatio',
    'dispatchAction',
    'isDisposed',
    'on',
    'off',
    'getDataURL',
    'getConnectedDataURL',
    'getModel',
    'getOption',
    'getViewOfComponentModel',
    'getViewOfSeriesModel',
  ];
  function hh(e) {
    E(
      uh,
      function(t) {
        this[t] = A(e[t], e);
      },
      this,
    );
  }
  var ch = {};
  function dh() {
    this._coordinateSystems = [];
  }
  (dh.prototype = {
    constructor: dh,
    create: function(n, o) {
      var a = [];
      E(ch, function(t, e) {
        var i = t.create(n, o);
        a = a.concat(i || []);
      }),
        (this._coordinateSystems = a);
    },
    update: function(e, i) {
      E(this._coordinateSystems, function(t) {
        t.update && t.update(e, i);
      });
    },
    getCoordinateSystems: function() {
      return this._coordinateSystems.slice();
    },
  }),
    (dh.register = function(t, e) {
      ch[t] = e;
    }),
    (dh.get = function(t) {
      return ch[t];
    });
  var fh = E,
    ph = k,
    gh = O,
    mh = m,
    vh = /^(min|max)?(.+)$/;
  function yh(t) {
    (this._api = t),
      (this._timelineOptions = []),
      (this._mediaList = []),
      this._mediaDefault,
      (this._currentMediaIndices = []),
      this._optionBackup,
      this._newBaseOption;
  }
  function xh(t, e, i) {
    var a = {width: e, height: i, aspectratio: e / i},
      r = !0;
    return (
      E(t, function(t, e) {
        var i = e.match(vh);
        if (i && i[1] && i[2]) {
          var n = i[1],
            o = i[2].toLowerCase();
          !(function(t, e, i) {
            return 'min' === i ? e <= t : 'max' === i ? t <= e : t === e;
          })(a[o], t, n) && (r = !1);
        }
      }),
      r
    );
  }
  yh.prototype = {
    constructor: yh,
    setOption: function(t, e) {
      t &&
        E(Wo(t.series), function(t) {
          t && t.data && F(t.data) && J(t.data);
        }),
        (t = ph(t));
      var i = this._optionBackup,
        n = function(t, i, n) {
          var e,
            o,
            a = [],
            r = [],
            s = t.timeline;
          t.baseOption && (o = t.baseOption);
          (s || t.options) && ((o = o || {}), (a = (t.options || []).slice()));
          if (t.media) {
            o = o || {};
            var l = t.media;
            fh(l, function(t) {
              t && t.option && (t.query ? r.push(t) : (e = e || t));
            });
          }
          o = o || t;
          o.timeline || (o.timeline = s);
          return (
            fh(
              [o].concat(a).concat(
                O(r, function(t) {
                  return t.option;
                }),
              ),
              function(e) {
                fh(i, function(t) {
                  t(e, n);
                });
              },
            ),
            {baseOption: o, timelineOptions: a, mediaDefault: e, mediaList: r}
          );
        }.call(this, t, e, !i);
      (this._newBaseOption = n.baseOption),
        i
          ? ((function(o, t) {
              fh((t = t || {}), function(t, e) {
                if (null != t) {
                  var i = o[e];
                  if (Ou.hasClass(e)) {
                    t = Wo(t);
                    var n = Xo((i = Wo(i)), t);
                    o[e] = gh(n, function(t) {
                      return t.option && t.exist
                        ? mh(t.exist, t.option, !0)
                        : t.exist || t.option;
                    });
                  } else o[e] = mh(i, t, !0);
                }
              });
            })(i.baseOption, n.baseOption),
            n.timelineOptions.length && (i.timelineOptions = n.timelineOptions),
            n.mediaList.length && (i.mediaList = n.mediaList),
            n.mediaDefault && (i.mediaDefault = n.mediaDefault))
          : (this._optionBackup = n);
    },
    mountOption: function(t) {
      var e = this._optionBackup;
      return (
        (this._timelineOptions = gh(e.timelineOptions, ph)),
        (this._mediaList = gh(e.mediaList, ph)),
        (this._mediaDefault = ph(e.mediaDefault)),
        (this._currentMediaIndices = []),
        ph(t ? e.baseOption : this._newBaseOption)
      );
    },
    getTimelineOption: function(t) {
      var e,
        i = this._timelineOptions;
      if (i.length) {
        var n = t.getComponent('timeline');
        n && (e = ph(i[n.getCurrentIndex()], !0));
      }
      return e;
    },
    getMediaOption: function(t) {
      var e = this._api.getWidth(),
        i = this._api.getHeight(),
        n = this._mediaList,
        o = this._mediaDefault,
        a = [],
        r = [];
      if (!n.length && !o) return r;
      for (var s = 0, l = n.length; s < l; s++)
        xh(n[s].query, e, i) && a.push(s);
      return (
        !a.length && o && (a = [-1]),
        a.length &&
          !(function(t, e) {
            return t.join(',') === e.join(',');
          })(a, this._currentMediaIndices) &&
          (r = gh(a, function(t) {
            return ph(-1 === t ? o.option : n[t].option);
          })),
        (this._currentMediaIndices = a),
        r
      );
    },
  };
  var _h = E,
    wh = V,
    bh = [
      'areaStyle',
      'lineStyle',
      'nodeStyle',
      'linkStyle',
      'chordStyle',
      'label',
      'labelLine',
    ];
  function Sh(t) {
    var e = t && t.itemStyle;
    if (e)
      for (var i = 0, n = bh.length; i < n; i++) {
        var o = bh[i],
          a = e.normal,
          r = e.emphasis;
        a &&
          a[o] &&
          ((t[o] = t[o] || {}),
          t[o].normal ? m(t[o].normal, a[o]) : (t[o].normal = a[o]),
          (a[o] = null)),
          r &&
            r[o] &&
            ((t[o] = t[o] || {}),
            t[o].emphasis ? m(t[o].emphasis, r[o]) : (t[o].emphasis = r[o]),
            (r[o] = null));
      }
  }
  function Mh(t, e, i) {
    if (t && t[e] && (t[e].normal || t[e].emphasis)) {
      var n = t[e].normal,
        o = t[e].emphasis;
      n &&
        (i ? ((t[e].normal = t[e].emphasis = null), C(t[e], n)) : (t[e] = n)),
        o && ((t.emphasis = t.emphasis || {}), (t.emphasis[e] = o));
    }
  }
  function Ih(t) {
    Mh(t, 'itemStyle'),
      Mh(t, 'lineStyle'),
      Mh(t, 'areaStyle'),
      Mh(t, 'label'),
      Mh(t, 'labelLine'),
      Mh(t, 'upperLabel'),
      Mh(t, 'edgeLabel');
  }
  function Th(t, e) {
    var i = wh(t) && t[e],
      n = wh(i) && i.textStyle;
    if (n)
      for (var o = 0, a = Zo.length; o < a; o++) {
        e = Zo[o];
        n.hasOwnProperty(e) && (i[e] = n[e]);
      }
  }
  function Ah(t) {
    t && (Ih(t), Th(t, 'label'), t.emphasis && Th(t.emphasis, 'label'));
  }
  function Dh(t) {
    return R(t) ? t : t ? [t] : [];
  }
  function Ch(t) {
    return (R(t) ? t[0] : t) || {};
  }
  function Lh(e, t) {
    _h(Dh(e.series), function(t) {
      wh(t) &&
        (function(t) {
          if (wh(t)) {
            Sh(t),
              Ih(t),
              Th(t, 'label'),
              Th(t, 'upperLabel'),
              Th(t, 'edgeLabel'),
              t.emphasis &&
                (Th(t.emphasis, 'label'),
                Th(t.emphasis, 'upperLabel'),
                Th(t.emphasis, 'edgeLabel')),
              (i = t.markPoint) && (Sh(i), Ah(i)),
              (n = t.markLine) && (Sh(n), Ah(n));
            var e = t.markArea;
            e && Ah(e);
            var i,
              n,
              o = t.data;
            if ('graph' === t.type) {
              o = o || t.nodes;
              var a = t.links || t.edges;
              if (a && !F(a)) for (var r = 0; r < a.length; r++) Ah(a[r]);
              E(t.categories, function(t) {
                Ih(t);
              });
            }
            if (o && !F(o)) for (r = 0; r < o.length; r++) Ah(o[r]);
            if ((i = t.markPoint) && i.data) {
              var s = i.data;
              for (r = 0; r < s.length; r++) Ah(s[r]);
            }
            if ((n = t.markLine) && n.data) {
              var l = n.data;
              for (r = 0; r < l.length; r++)
                R(l[r]) ? (Ah(l[r][0]), Ah(l[r][1])) : Ah(l[r]);
            }
            'gauge' === t.type
              ? (Th(t, 'axisLabel'), Th(t, 'title'), Th(t, 'detail'))
              : 'treemap' === t.type
              ? (Mh(t.breadcrumb, 'itemStyle'),
                E(t.levels, function(t) {
                  Ih(t);
                }))
              : 'tree' === t.type && Ih(t.leaves);
          }
        })(t);
    });
    var i = [
      'xAxis',
      'yAxis',
      'radiusAxis',
      'angleAxis',
      'singleAxis',
      'parallelAxis',
      'radar',
    ];
    t && i.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis'),
      _h(i, function(t) {
        _h(Dh(e[t]), function(t) {
          t && (Th(t, 'axisLabel'), Th(t.axisPointer, 'label'));
        });
      }),
      _h(Dh(e.parallel), function(t) {
        var e = t && t.parallelAxisDefault;
        Th(e, 'axisLabel'), Th(e && e.axisPointer, 'label');
      }),
      _h(Dh(e.calendar), function(t) {
        Mh(t, 'itemStyle'),
          Th(t, 'dayLabel'),
          Th(t, 'monthLabel'),
          Th(t, 'yearLabel');
      }),
      _h(Dh(e.radar), function(t) {
        Th(t, 'name');
      }),
      _h(Dh(e.geo), function(t) {
        wh(t) &&
          (Ah(t),
          _h(Dh(t.regions), function(t) {
            Ah(t);
          }));
      }),
      _h(Dh(e.timeline), function(t) {
        Ah(t), Mh(t, 'label'), Mh(t, 'itemStyle'), Mh(t, 'controlStyle', !0);
        var e = t.data;
        R(e) &&
          E(e, function(t) {
            V(t) && (Mh(t, 'label'), Mh(t, 'itemStyle'));
          });
      }),
      _h(Dh(e.toolbox), function(t) {
        Mh(t, 'iconStyle'),
          _h(t.feature, function(t) {
            Mh(t, 'iconStyle');
          });
      }),
      Th(Ch(e.axisPointer), 'label'),
      Th(Ch(e.tooltip).axisPointer, 'label');
  }
  function kh(e) {
    E(Ph, function(t) {
      t[0] in e && !(t[1] in e) && (e[t[1]] = e[t[0]]);
    });
  }
  var Ph = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']],
    Nh = [
      'grid',
      'geo',
      'parallel',
      'legend',
      'toolbox',
      'title',
      'visualMap',
      'dataZoom',
      'timeline',
    ],
    Oh = function(i, t) {
      Lh(i, t),
        (i.series = Wo(i.series)),
        E(i.series, function(t) {
          if (V(t)) {
            var e = t.type;
            if ('line' === e)
              null != t.clipOverflow && (t.clip = t.clipOverflow);
            else if ('pie' === e || 'gauge' === e)
              null != t.clockWise && (t.clockwise = t.clockWise);
            else if ('gauge' === e) {
              var i = (function(t, e) {
                e = e.split(',');
                for (
                  var i = t, n = 0;
                  n < e.length && null != (i = i && i[e[n]]);
                  n++
                );
                return i;
              })(t, 'pointer.color');
              null != i &&
                (function(t, e, i, n) {
                  e = e.split(',');
                  for (var o, a = t, r = 0; r < e.length - 1; r++)
                    null == a[(o = e[r])] && (a[o] = {}), (a = a[o]);
                  (!n && null != a[e[r]]) || (a[e[r]] = i);
                })(t, 'itemStyle.color', i);
            }
            kh(t);
          }
        }),
        i.dataRange && (i.visualMap = i.dataRange),
        E(Nh, function(t) {
          var e = i[t];
          e &&
            (R(e) || (e = [e]),
            E(e, function(t) {
              kh(t);
            }));
        });
    };
  function Eh(m) {
    E(m, function(h, c) {
      var d = [],
        f = [NaN, NaN],
        t = [h.stackResultDimension, h.stackedOverDimension],
        p = h.data,
        g = h.isStackedByIndex,
        e = p.map(t, function(t, e, i) {
          var n,
            o,
            a = p.get(h.stackedDimension, i);
          if (isNaN(a)) return f;
          g ? (o = p.getRawIndex(i)) : (n = p.get(h.stackedByDimension, i));
          for (var r = NaN, s = c - 1; 0 <= s; s--) {
            var l = m[s];
            if (
              (g || (o = l.data.rawIndexOf(l.stackedByDimension, n)), 0 <= o)
            ) {
              var u = l.data.getByRawIndex(l.stackResultDimension, o);
              if ((0 <= a && 0 < u) || (a <= 0 && u < 0)) {
                (a += u), (r = u);
                break;
              }
            }
          }
          return (d[0] = a), (d[1] = r), d;
        });
      p.hostModel.setData(e), (h.data = e);
    });
  }
  function Rh(t, e) {
    ju.isInstance(t) || (t = ju.seriesDataToSource(t)), (this._source = t);
    var i = (this._data = t.data),
      n = t.sourceFormat;
    if (n === Uu) {
      if (D && null == e)
        throw new Error('Typed array data must specify dimension size');
      (this._offset = 0), (this._dimSize = e), (this._data = i);
    }
    var o = Bh[n === Fu ? n + '_' + t.seriesLayoutBy : n];
    D && q(o, 'Invalide sourceFormat: ' + n), P(this, o);
  }
  var zh = Rh.prototype;
  zh.pure = !1;
  var Bh = {
    arrayRows_column: {
      pure: (zh.persistent = !0),
      count: function() {
        return Math.max(0, this._data.length - this._source.startIndex);
      },
      getItem: function(t) {
        return this._data[t + this._source.startIndex];
      },
      appendData: Fh,
    },
    arrayRows_row: {
      pure: !0,
      count: function() {
        var t = this._data[0];
        return t ? Math.max(0, t.length - this._source.startIndex) : 0;
      },
      getItem: function(t) {
        t += this._source.startIndex;
        for (var e = [], i = this._data, n = 0; n < i.length; n++) {
          var o = i[n];
          e.push(o ? o[t] : null);
        }
        return e;
      },
      appendData: function() {
        throw new Error(
          'Do not support appendData when set seriesLayoutBy: "row".',
        );
      },
    },
    objectRows: {pure: !0, count: Vh, getItem: Gh, appendData: Fh},
    keyedColumns: {
      pure: !0,
      count: function() {
        var t = this._source.dimensionsDefine[0].name,
          e = this._data[t];
        return e ? e.length : 0;
      },
      getItem: function(t) {
        for (
          var e = [], i = this._source.dimensionsDefine, n = 0;
          n < i.length;
          n++
        ) {
          var o = this._data[i[n].name];
          e.push(o ? o[t] : null);
        }
        return e;
      },
      appendData: function(t) {
        var o = this._data;
        E(t, function(t, e) {
          for (var i = o[e] || (o[e] = []), n = 0; n < (t || []).length; n++)
            i.push(t[n]);
        });
      },
    },
    original: {count: Vh, getItem: Gh, appendData: Fh},
    typedArray: {
      persistent: !(zh.getSource = function() {
        return this._source;
      }),
      pure: !0,
      count: function() {
        return this._data ? this._data.length / this._dimSize : 0;
      },
      getItem: function(t, e) {
        (t -= this._offset), (e = e || []);
        for (var i = this._dimSize * t, n = 0; n < this._dimSize; n++)
          e[n] = this._data[i + n];
        return e;
      },
      appendData: function(t) {
        D &&
          q(
            F(t),
            'Added data must be TypedArray if data in initialization is TypedArray',
          ),
          (this._data = t);
      },
      clean: function() {
        (this._offset += this.count()), (this._data = null);
      },
    },
  };
  function Vh() {
    return this._data.length;
  }
  function Gh(t) {
    return this._data[t];
  }
  function Fh(t) {
    for (var e = 0; e < t.length; e++) this._data.push(t[e]);
  }
  var Wh = {
    arrayRows: Hh,
    objectRows: function(t, e, i, n) {
      return null != i ? t[n] : t;
    },
    keyedColumns: Hh,
    original: function(t, e, i, n) {
      var o = Uo(t);
      return null != i && o instanceof Array ? o[i] : o;
    },
    typedArray: Hh,
  };
  function Hh(t, e, i, n) {
    return null != i ? t[i] : t;
  }
  var Zh = {
    arrayRows: Uh,
    objectRows: function(t, e, i, n) {
      return Xh(t[e], this._dimensionInfos[e]);
    },
    keyedColumns: Uh,
    original: function(t, e, i, n) {
      var o = t && (null == t.value ? t : t.value);
      return (
        !this._rawData.pure &&
          (function(t) {
            return Vo(t) && !(t instanceof Array);
          })(t) &&
          (this.hasItemOption = !0),
        Xh(o instanceof Array ? o[n] : o, this._dimensionInfos[e])
      );
    },
    typedArray: function(t, e, i, n) {
      return t[n];
    },
  };
  function Uh(t, e, i, n) {
    return Xh(t[n], this._dimensionInfos[e]);
  }
  function Xh(t, e) {
    var i = e && e.type;
    if ('ordinal' !== i)
      return (
        'time' === i &&
          'number' != typeof t &&
          null != t &&
          '-' !== t &&
          (t = +Kl(t)),
        null == t || '' === t ? NaN : +t
      );
    var n = e && e.ordinalMeta;
    return n ? n.parseAndCollect(t) : t;
  }
  function Yh(t, e, i) {
    if (t) {
      var n = t.getRawDataItem(e);
      if (null != n) {
        var o,
          a,
          r = t.getProvider().getSource().sourceFormat,
          s = t.getDimensionInfo(i);
        return s && ((o = s.name), (a = s.index)), Wh[r](n, e, a, o);
      }
    }
  }
  function jh(t, e, i) {
    if (t) {
      var n = t.getProvider().getSource().sourceFormat;
      if (n === Gu || n === Wu) {
        var o = t.getRawDataItem(e);
        return n !== Gu || V(o) || (o = null), o ? o[i] : void 0;
      }
    }
  }
  var qh = /\{@(.+?)\}/g,
    Kh = {
      getDataParams: function(t, e) {
        var i = this.getData(e),
          n = this.getRawValue(t, e),
          o = i.getRawIndex(t),
          a = i.getName(t),
          r = i.getRawDataItem(t),
          s = i.getItemVisual(t, 'color'),
          l = i.getItemVisual(t, 'borderColor'),
          u = this.ecModel.getComponent('tooltip'),
          h = ia(u && u.get('renderMode')),
          c = this.mainType,
          d = 'series' === c,
          f = i.userOutput;
        return {
          componentType: c,
          componentSubType: this.subType,
          componentIndex: this.componentIndex,
          seriesType: d ? this.subType : null,
          seriesIndex: this.seriesIndex,
          seriesId: d ? this.id : null,
          seriesName: d ? this.name : null,
          name: a,
          dataIndex: o,
          data: r,
          dataType: e,
          value: n,
          color: s,
          borderColor: l,
          dimensionNames: f ? f.dimensionNames : null,
          encode: f ? f.encode : null,
          marker: fu({color: s, renderMode: h}),
          $vars: ['seriesName', 'name', 'value'],
        };
      },
      getFormattedLabel: function(n, t, e, i, o) {
        t = t || 'normal';
        var a = this.getData(e),
          r = a.getItemModel(n),
          s = this.getDataParams(n, e);
        null != i && s.value instanceof Array && (s.value = s.value[i]);
        var l = r.get(
          'normal' === t
            ? [o || 'label', 'formatter']
            : [t, o || 'label', 'formatter'],
        );
        return 'function' == typeof l
          ? ((s.status = t), (s.dimensionIndex = i), l(s))
          : 'string' == typeof l
          ? cu(l, s).replace(qh, function(t, e) {
              var i = e.length;
              return (
                '[' === e.charAt(0) &&
                  ']' === e.charAt(i - 1) &&
                  (e = +e.slice(1, i - 1)),
                Yh(a, n, e)
              );
            })
          : void 0;
      },
      getRawValue: function(t, e) {
        return Yh(this.getData(e), t);
      },
      formatTooltip: function() {},
    };
  function $h(t) {
    return new Jh(t);
  }
  function Jh(t) {
    (t = t || {}),
      (this._reset = t.reset),
      (this._plan = t.plan),
      (this._count = t.count),
      (this._onDirty = t.onDirty),
      (this._dirty = !0),
      this.context;
  }
  var Qh = Jh.prototype;
  Qh.perform = function(t) {
    var e,
      i = this._upstream,
      n = t && t.skip;
    if (this._dirty && i) {
      var o = this.context;
      o.data = o.outputData = i.context.outputData;
    }
    this.__pipeline && (this.__pipeline.currentTask = this),
      this._plan && !n && (e = this._plan(this.context));
    var a,
      r = h(this._modBy),
      s = this._modDataCount || 0,
      l = h(t && t.modBy),
      u = (t && t.modDataCount) || 0;
    function h(t) {
      return 1 <= t || (t = 1), t;
    }
    (r === l && s === u) || (e = 'reset'),
      (!this._dirty && 'reset' !== e) ||
        ((this._dirty = !1),
        (a = (function(t, e) {
          var i, n;
          (t._dueIndex = t._outputDueEnd = t._dueEnd = 0),
            (t._settedOutputEnd = null),
            !e &&
              t._reset &&
              ((i = t._reset(t.context)) &&
                i.progress &&
                ((n = i.forceFirstProgress), (i = i.progress)),
              R(i) && !i.length && (i = null));
          (t._progress = i), (t._modBy = t._modDataCount = null);
          var o = t._downstream;
          return o && o.dirty(), n;
        })(this, n))),
      (this._modBy = l),
      (this._modDataCount = u);
    var c = t && t.step;
    if (
      (i
        ? (D && q(null != i._outputDueEnd), (this._dueEnd = i._outputDueEnd))
        : (D && q(!this._progress || this._count),
          (this._dueEnd = this._count ? this._count(this.context) : 1 / 0)),
      this._progress)
    ) {
      var d = this._dueIndex,
        f = Math.min(null != c ? this._dueIndex + c : 1 / 0, this._dueEnd);
      if (!n && (a || d < f)) {
        var p = this._progress;
        if (R(p)) for (var g = 0; g < p.length; g++) uc(this, p[g], d, f, l, u);
        else uc(this, p, d, f, l, u);
      }
      this._dueIndex = f;
      var m = null != this._settedOutputEnd ? this._settedOutputEnd : f;
      D && q(m >= this._outputDueEnd), (this._outputDueEnd = m);
    } else
      this._dueIndex = this._outputDueEnd =
        null != this._settedOutputEnd ? this._settedOutputEnd : this._dueEnd;
    return this.unfinished();
  };
  var tc,
    ec,
    ic,
    nc,
    oc,
    ac,
    rc = (ac = {
      reset: function(t, e, i, n) {
        (ec = t),
          (tc = e),
          (ic = i),
          (nc = n),
          (oc = Math.ceil(nc / ic)),
          (ac.next = 1 < ic && 0 < nc ? lc : sc);
      },
    });
  function sc() {
    return ec < tc ? ec++ : null;
  }
  function lc() {
    var t = (ec % oc) * ic + Math.ceil(ec / oc),
      e = tc <= ec ? null : t < nc ? t : ec;
    return ec++, e;
  }
  function uc(t, e, i, n, o, a) {
    rc.reset(i, n, o, a),
      (t._callingProgress = e),
      t._callingProgress(
        {start: i, end: n, count: n - i, next: rc.next},
        t.context,
      );
  }
  (Qh.dirty = function() {
    (this._dirty = !0), this._onDirty && this._onDirty(this.context);
  }),
    (Qh.unfinished = function() {
      return this._progress && this._dueIndex < this._dueEnd;
    }),
    (Qh.pipe = function(t) {
      D && q(t && !t._disposed && t !== this),
        (this._downstream === t && !this._dirty) ||
          (((this._downstream = t)._upstream = this), t.dirty());
    }),
    (Qh.dispose = function() {
      this._disposed ||
        (this._upstream && (this._upstream._downstream = null),
        this._downstream && (this._downstream._upstream = null),
        (this._dirty = !1),
        (this._disposed = !0));
    }),
    (Qh.getUpstream = function() {
      return this._upstream;
    }),
    (Qh.getDownstream = function() {
      return this._downstream;
    }),
    (Qh.setOutputEnd = function(t) {
      this._outputDueEnd = this._settedOutputEnd = t;
    });
  var hc = $o(),
    cc = Ou.extend({
      type: 'series.__base__',
      seriesIndex: 0,
      coordinateSystem: null,
      defaultOption: null,
      legendVisualProvider: null,
      visualColorAccessPath: 'itemStyle.color',
      visualBorderColorAccessPath: 'itemStyle.borderColor',
      layoutMode: null,
      init: function(t, e, i, n) {
        (this.seriesIndex = this.componentIndex),
          (this.dataTask = $h({count: fc, reset: pc})),
          (this.dataTask.context = {model: this}),
          this.mergeDefaultAndTheme(t, i),
          $u(this);
        var o = this.getInitialData(t, i);
        mc(o, this),
          (this.dataTask.context.data = o),
          D && q(o, 'getInitialData returned invalid data.'),
          (hc(this).dataBeforeProcessed = o),
          dc(this);
      },
      mergeDefaultAndTheme: function(t, e) {
        var i = this.layoutMode,
          n = i ? Du(t) : {},
          o = this.subType;
        Ou.hasClass(o) && (o += 'Series'),
          m(t, e.getTheme().get(this.subType)),
          m(t, this.getDefaultOption()),
          Ho(t, 'label', ['show']),
          this.fillDataTextStyle(t.data),
          i && Au(t, n, i);
      },
      mergeOption: function(t, e) {
        (t = m(this.option, t, !0)), this.fillDataTextStyle(t.data);
        var i = this.layoutMode;
        i && Au(this.option, t, i), $u(this);
        var n = this.getInitialData(t, e);
        mc(n, this),
          this.dataTask.dirty(),
          (this.dataTask.context.data = n),
          (hc(this).dataBeforeProcessed = n),
          dc(this);
      },
      fillDataTextStyle: function(t) {
        if (t && !F(t))
          for (var e = ['show'], i = 0; i < t.length; i++)
            t[i] && t[i].label && Ho(t[i], 'label', e);
      },
      getInitialData: function() {},
      appendData: function(t) {
        this.getRawData().appendData(t.data);
      },
      getData: function(t) {
        var e = yc(this);
        if (e) {
          var i = e.context.data;
          return null == t ? i : i.getLinkedData(t);
        }
        return hc(this).data;
      },
      setData: function(t) {
        var e = yc(this);
        if (e) {
          var i = e.context;
          i.data !== t && e.modifyOutputEnd && e.setOutputEnd(t.count()),
            (i.outputData = t),
            e !== this.dataTask && (i.data = t);
        }
        hc(this).data = t;
      },
      getSource: function() {
        return (function(t) {
          return Ku(t).source;
        })(this);
      },
      getRawData: function() {
        return hc(this).dataBeforeProcessed;
      },
      getBaseAxis: function() {
        var t = this.coordinateSystem;
        return t && t.getBaseAxis && t.getBaseAxis();
      },
      formatTooltip: function(o, h, t, c) {
        var d = this,
          e = 'html' === (c = c || 'html') ? '<br/>' : '\n',
          f = 'richText' === c,
          p = {},
          g = 0;
        function i(t) {
          return {renderMode: c, content: lu(nu(t)), style: p};
        }
        var m = this.getData(),
          a = m.mapDimension('defaultedTooltip', !0),
          n = a.length,
          r = this.getRawValue(o),
          s = R(r),
          v = m.getItemVisual(o, 'color');
        V(v) && v.colorStops && (v = (v.colorStops[0] || {}).color),
          (v = v || 'transparent');
        var l = (1 < n || (s && !n)
            ? (function(t) {
                var l = M(
                    t,
                    function(t, e, i) {
                      var n = m.getDimensionInfo(i);
                      return (
                        t | (n && !1 !== n.tooltip && null != n.displayName)
                      );
                    },
                    0,
                  ),
                  u = [];
                function e(t, e) {
                  var i = m.getDimensionInfo(e);
                  if (i && !1 !== i.otherDims.tooltip) {
                    var n = i.type,
                      o = 'sub' + d.seriesIndex + 'at' + g,
                      a = fu({
                        color: v,
                        type: 'subItem',
                        renderMode: c,
                        markerId: o,
                      }),
                      r = 'string' == typeof a ? a : a.content,
                      s =
                        (l ? r + lu(i.displayName || '-') + ': ' : '') +
                        lu(
                          'ordinal' === n
                            ? t + ''
                            : 'time' === n
                            ? h
                              ? ''
                              : gu('yyyy/MM/dd hh:mm:ss', t)
                            : nu(t),
                        );
                    s && u.push(s), f && ((p[o] = v), ++g);
                  }
                }
                a.length
                  ? E(a, function(t) {
                      e(Yh(m, o, t), t);
                    })
                  : E(t, e);
                var i = l ? (f ? '\n' : '<br/>') : '',
                  n = i + u.join(i || ', ');
                return {renderMode: c, content: n, style: p};
              })(r)
            : i(n ? Yh(m, o, a[0]) : s ? r[0] : r)
          ).content,
          u = d.seriesIndex + 'at' + g,
          y = fu({color: v, type: 'item', renderMode: c, markerId: u});
        (p[u] = v), ++g;
        var x = m.getName(o),
          _ = this.name;
        jo(this) || (_ = ''), (_ = _ ? lu(_) + (h ? ': ' : e) : '');
        var w = 'string' == typeof y ? y : y.content;
        return {
          html: h ? w + _ + l : _ + w + (x ? lu(x) + ': ' + l : l),
          markers: p,
        };
      },
      isAnimationEnabled: function() {
        if (v.node) return !1;
        var t = this.getShallow('animation');
        return (
          t &&
            this.getData().count() > this.getShallow('animationThreshold') &&
            (t = !1),
          t
        );
      },
      restoreData: function() {
        this.dataTask.dirty();
      },
      getColorFromPalette: function(t, e, i) {
        var n = this.ecModel,
          o = Vu.getColorFromPalette.call(this, t, e, i);
        return (o = o || n.getColorFromPalette(t, e, i));
      },
      coordDimToDataDim: function(t) {
        return this.getRawData().mapDimension(t, !0);
      },
      getProgressive: function() {
        return this.get('progressive');
      },
      getProgressiveThreshold: function() {
        return this.get('progressiveThreshold');
      },
      getAxisTooltipData: null,
      getTooltipPosition: null,
      pipeTask: null,
      preventIncremental: null,
      pipelineContext: null,
    });
  function dc(t) {
    var e = t.name;
    jo(t) ||
      (t.name =
        (function(t) {
          var i = t.getRawData(),
            e = i.mapDimension('seriesName', !0),
            n = [];
          return (
            E(e, function(t) {
              var e = i.getDimensionInfo(t);
              e.displayName && n.push(e.displayName);
            }),
            n.join(' ')
          );
        })(t) || e);
  }
  function fc(t) {
    return t.model.getRawData().count();
  }
  function pc(t) {
    var e = t.model;
    return e.setData(e.getRawData().cloneShallow()), gc;
  }
  function gc(t, e) {
    e.outputData &&
      t.end > e.outputData.count() &&
      e.model.getRawData().cloneShallow(e.outputData);
  }
  function mc(e, i) {
    E(e.CHANGABLE_METHODS, function(t) {
      e.wrapMethod(t, L(vc, i));
    });
  }
  function vc(t) {
    var e = yc(t);
    e && e.setOutputEnd(this.count());
  }
  function yc(t) {
    var e = (t.ecModel || {}).scheduler,
      i = e && e.getPipeline(t.uid);
    if (i) {
      var n = i.currentTask;
      if (n) {
        var o = n.agentStubMap;
        o && (n = o.get(t.uid));
      }
      return n;
    }
  }
  S(cc, Kh), S(cc, Vu);
  var xc = function() {
    (this.group = new ki()), (this.uid = Rl('viewComponent'));
  };
  xc.prototype = {
    constructor: xc,
    init: function(t, e) {},
    render: function(t, e, i, n) {},
    dispose: function() {},
    filterForExposedEvent: null,
  };
  var _c = xc.prototype;
  (_c.updateView = _c.updateLayout = _c.updateVisual = function(t, e, i, n) {}),
    sa(xc),
    da(xc, {registerWhenExtend: !0});
  function wc() {
    var s = $o();
    return function(t) {
      var e = s(t),
        i = t.pipelineContext,
        n = e.large,
        o = e.progressiveRender,
        a = (e.large = i && i.large),
        r = (e.progressiveRender = i && i.progressiveRender);
      return !!(n ^ a || o ^ r) && 'reset';
    };
  }
  var bc = $o(),
    Sc = wc();
  function Mc() {
    (this.group = new ki()),
      (this.uid = Rl('viewChart')),
      (this.renderTask = $h({plan: Dc, reset: Cc})),
      (this.renderTask.context = {view: this});
  }
  var Ic = (Mc.prototype = {
    type: 'chart',
    init: function(t, e) {},
    render: function(t, e, i, n) {},
    highlight: function(t, e, i, n) {
      Ac(t.getData(), n, 'emphasis');
    },
    downplay: function(t, e, i, n) {
      Ac(t.getData(), n, 'normal');
    },
    remove: function(t, e) {
      this.group.removeAll();
    },
    dispose: function() {},
    incrementalPrepareRender: null,
    incrementalRender: null,
    updateTransform: null,
    filterForExposedEvent: null,
  });
  function Tc(t, e, i) {
    if (t && (t.trigger(e, i), t.isGroup && !il(t)))
      for (var n = 0, o = t.childCount(); n < o; n++) Tc(t.childAt(n), e, i);
  }
  function Ac(e, t, i) {
    var n = Ko(e, t),
      o = t && null != t.highlightKey ? nl(t.highlightKey) : null;
    null != n
      ? E(Wo(n), function(t) {
          Tc(e.getItemGraphicEl(t), i, o);
        })
      : e.eachItemGraphicEl(function(t) {
          Tc(t, i, o);
        });
  }
  function Dc(t) {
    return Sc(t.model);
  }
  function Cc(t) {
    var e = t.model,
      i = t.ecModel,
      n = t.api,
      o = t.payload,
      a = e.pipelineContext.progressiveRender,
      r = t.view,
      s = o && bc(o).updateMethod,
      l = a ? 'incrementalPrepareRender' : s && r[s] ? s : 'render';
    return 'render' !== l && r[l](e, i, n, o), Lc[l];
  }
  (Ic.updateView = Ic.updateLayout = Ic.updateVisual = function(t, e, i, n) {
    this.render(t, e, i, n);
  }),
    sa(Mc, ['dispose']),
    da(Mc, {registerWhenExtend: !0}),
    (Mc.markUpdateMethod = function(t, e) {
      bc(t).updateMethod = e;
    });
  var Lc = {
      incrementalPrepareRender: {
        progress: function(t, e) {
          e.view.incrementalRender(t, e.model, e.ecModel, e.api, e.payload);
        },
      },
      render: {
        forceFirstProgress: !0,
        progress: function(t, e) {
          e.view.render(e.model, e.ecModel, e.api, e.payload);
        },
      },
    },
    kc = '\0__throttleOriginMethod',
    Pc = '\0__throttleRate',
    Nc = '\0__throttleType';
  function Oc(t, i, n) {
    var o,
      a,
      r,
      s,
      l,
      u = 0,
      h = 0,
      c = null;
    function d() {
      (h = new Date().getTime()), (c = null), t.apply(r, s || []);
    }
    i = i || 0;
    function e() {
      (o = new Date().getTime()), (r = this), (s = arguments);
      var t = l || i,
        e = l || n;
      (l = null),
        (a = o - (e ? u : h) - t),
        clearTimeout(c),
        e ? (c = setTimeout(d, t)) : 0 <= a ? d() : (c = setTimeout(d, -a)),
        (u = o);
    }
    return (
      (e.clear = function() {
        c && (clearTimeout(c), (c = null));
      }),
      (e.debounceNextCall = function(t) {
        l = t;
      }),
      e
    );
  }
  function Ec(t, e, i, n) {
    var o = t[e];
    if (o) {
      var a = o[kc] || o,
        r = o[Nc];
      if (o[Pc] !== i || r !== n) {
        if (null == i || !n) return (t[e] = a);
        ((o = t[e] = Oc(a, i, 'debounce' === n))[kc] = a),
          (o[Nc] = n),
          (o[Pc] = i);
      }
      return o;
    }
  }
  function Rc(t, e) {
    var i = t[e];
    i && i[kc] && (t[e] = i[kc]);
  }
  var zc = {
      createOnAllSeries: !0,
      performRawSeries: !0,
      reset: function(e, t) {
        var i = e.getData(),
          a = (e.visualColorAccessPath || 'itemStyle.color').split('.'),
          n = e.get(a),
          o = !z(n) || n instanceof ps ? null : n;
        (n && !o) ||
          (n = e.getColorFromPalette(e.name, null, t.getSeriesCount())),
          i.setVisual('color', n);
        var r = (
            e.visualBorderColorAccessPath || 'itemStyle.borderColor'
          ).split('.'),
          s = e.get(r);
        if ((i.setVisual('borderColor', s), !t.isSeriesFiltered(e))) {
          o &&
            i.each(function(t) {
              i.setItemVisual(t, 'color', o(e.getDataParams(t)));
            });
          return {
            dataEach: i.hasItemOption
              ? function(t, e) {
                  var i = t.getItemModel(e),
                    n = i.get(a, !0),
                    o = i.get(r, !0);
                  null != n && t.setItemVisual(e, 'color', n),
                    null != o && t.setItemVisual(e, 'borderColor', o);
                }
              : null,
          };
        }
      },
    },
    Bc = {
      legend: {selector: {all: '全选', inverse: '反选'}},
      toolbox: {
        brush: {
          title: {
            rect: '矩形选择',
            polygon: '圈选',
            lineX: '横向选择',
            lineY: '纵向选择',
            keep: '保持选择',
            clear: '清除选择',
          },
        },
        dataView: {title: '数据视图', lang: ['数据视图', '关闭', '刷新']},
        dataZoom: {title: {zoom: '区域缩放', back: '区域缩放还原'}},
        magicType: {
          title: {
            line: '切换为折线图',
            bar: '切换为柱状图',
            stack: '切换为堆叠',
            tiled: '切换为平铺',
          },
        },
        restore: {title: '还原'},
        saveAsImage: {title: '保存为图片', lang: ['右键另存为图片']},
      },
      series: {
        typeNames: {
          pie: '饼图',
          bar: '柱状图',
          line: '折线图',
          scatter: '散点图',
          effectScatter: '涟漪散点图',
          radar: '雷达图',
          tree: '树图',
          treemap: '矩形树图',
          boxplot: '箱型图',
          candlestick: 'K线图',
          k: 'K线图',
          heatmap: '热力图',
          map: '地图',
          parallel: '平行坐标图',
          lines: '线图',
          graph: '关系图',
          sankey: '桑基图',
          funnel: '漏斗图',
          gauge: '仪表盘图',
          pictorialBar: '象形柱图',
          themeRiver: '主题河流图',
          sunburst: '旭日图',
        },
      },
      aria: {
        general: {
          withTitle: '这是一个关于“{title}”的图表。',
          withoutTitle: '这是一个图表，',
        },
        series: {
          single: {
            prefix: '',
            withName: '图表类型是{seriesType}，表示{seriesName}。',
            withoutName: '图表类型是{seriesType}。',
          },
          multiple: {
            prefix: '它由{seriesCount}个图表系列组成。',
            withName:
              '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',
            withoutName: '第{seriesId}个系列是一个{seriesType}，',
            separator: {middle: '；', end: '。'},
          },
        },
        data: {
          allData: '其数据是——',
          partialData: '其中，前{displayCnt}项是——',
          withName: '{name}的数据是{value}',
          withoutName: '{value}',
          separator: {middle: '，', end: ''},
        },
      },
    },
    Vc = function(t, e) {
      var a = e.getModel('aria');
      if (a.get('show'))
        if (a.get('description'))
          t.setAttribute('aria-label', a.get('description'));
        else {
          var h = 0;
          e.eachSeries(function(t, e) {
            ++h;
          }, this);
          var i,
            c = a.get('data.maxCount') || 10,
            n = a.get('series.maxCount') || 10,
            d = Math.min(h, n);
          if (!(h < 1)) {
            var o = (function() {
              var t = e.getModel('title').option;
              t && t.length && (t = t[0]);
              return t && t.text;
            })();
            i = o
              ? p(g('general.withTitle'), {title: o})
              : g('general.withoutTitle');
            var f = [];
            (i += p(
              g(1 < h ? 'series.multiple.prefix' : 'series.single.prefix'),
              {seriesCount: h},
            )),
              e.eachSeries(function(t, e) {
                if (e < d) {
                  var i,
                    n = t.get('name'),
                    o = 'series.' + (1 < h ? 'multiple' : 'single') + '.';
                  i = p((i = g(n ? o + 'withName' : o + 'withoutName')), {
                    seriesId: t.seriesIndex,
                    seriesName: t.get('name'),
                    seriesType: (function(t) {
                      return Bc.series.typeNames[t] || '自定义图';
                    })(t.subType),
                  });
                  var a = t.getData();
                  (window.data = a).count() > c
                    ? (i += p(g('data.partialData'), {displayCnt: c}))
                    : (i += g('data.allData'));
                  for (var r = [], s = 0; s < a.count(); s++)
                    if (s < c) {
                      var l = a.getName(s),
                        u = Yh(a, s);
                      r.push(
                        p(g(l ? 'data.withName' : 'data.withoutName'), {
                          name: l,
                          value: u,
                        }),
                      );
                    }
                  (i +=
                    r.join(g('data.separator.middle')) +
                    g('data.separator.end')),
                    f.push(i);
                }
              }),
              (i +=
                f.join(g('series.multiple.separator.middle')) +
                g('series.multiple.separator.end')),
              t.setAttribute('aria-label', i);
          }
        }
      function p(t, e) {
        if ('string' != typeof t) return t;
        var i = t;
        return (
          E(e, function(t, e) {
            i = i.replace(new RegExp('\\{\\s*' + e + '\\s*\\}', 'g'), t);
          }),
          i
        );
      }
      function g(t) {
        var e = a.get(t);
        if (null != e) return e;
        for (var i = t.split('.'), n = Bc.aria, o = 0; o < i.length; ++o)
          n = n[i[o]];
        return n;
      }
    },
    Gc = Math.PI;
  function Fc(t, e, i, n) {
    (this.ecInstance = t), (this.api = e), this.unfinished;
    (i = this._dataProcessorHandlers = i.slice()),
      (n = this._visualHandlers = n.slice());
    (this._allHandlers = i.concat(n)), (this._stageTaskMap = et());
  }
  var Wc = Fc.prototype;
  function Hc(l, t, u, h, c) {
    var d;
    function f(t, e) {
      return t.setDirty && (!t.dirtyMap || t.dirtyMap.get(e.__pipeline.id));
    }
    (c = c || {}),
      E(t, function(n, t) {
        if (!c.visualType || c.visualType === n.visualType) {
          var e = l._stageTaskMap.get(n.uid),
            i = e.seriesTaskMap,
            o = e.overallTask;
          if (o) {
            var a,
              r = o.agentStubMap;
            r.each(function(t) {
              f(c, t) && (t.dirty(), (a = !0));
            }),
              a && o.dirty(),
              Zc(o, h);
            var s = l.getPerformArgs(o, c.block);
            r.each(function(t) {
              t.perform(s);
            }),
              (d |= o.perform(s));
          } else
            i &&
              i.each(function(t, e) {
                f(c, t) && t.dirty();
                var i = l.getPerformArgs(t, c.block);
                (i.skip =
                  !n.performRawSeries && u.isSeriesFiltered(t.context.model)),
                  Zc(t, h),
                  (d |= t.perform(i));
              });
        }
      }),
      (l.unfinished |= d);
  }
  (Wc.restoreData = function(t, e) {
    t.restoreData(e),
      this._stageTaskMap.each(function(t) {
        var e = t.overallTask;
        e && e.dirty();
      });
  }),
    (Wc.getPerformArgs = function(t, e) {
      if (t.__pipeline) {
        var i = this._pipelineMap.get(t.__pipeline.id),
          n = i.context,
          o =
            !e &&
            i.progressiveEnabled &&
            (!n || n.progressiveRender) &&
            t.__idxInPipeline > i.blockIndex
              ? i.step
              : null,
          a = n && n.modDataCount;
        return {
          step: o,
          modBy: null != a ? Math.ceil(a / o) : null,
          modDataCount: a,
        };
      }
    }),
    (Wc.getPipeline = function(t) {
      return this._pipelineMap.get(t);
    }),
    (Wc.updateStreamModes = function(t, e) {
      var i = this._pipelineMap.get(t.uid),
        n = t.getData().count(),
        o =
          i.progressiveEnabled &&
          e.incrementalPrepareRender &&
          n >= i.threshold,
        a = t.get('large') && n >= t.get('largeThreshold'),
        r = 'mod' === t.get('progressiveChunkMode') ? n : null;
      t.pipelineContext = i.context = {
        progressiveRender: o,
        modDataCount: r,
        large: a,
      };
    }),
    (Wc.restorePipelines = function(t) {
      var n = this,
        o = (n._pipelineMap = et());
      t.eachSeries(function(t) {
        var e = t.getProgressive(),
          i = t.uid;
        o.set(i, {
          id: i,
          head: null,
          tail: null,
          threshold: t.getProgressiveThreshold(),
          progressiveEnabled:
            e && !(t.preventIncremental && t.preventIncremental()),
          blockIndex: -1,
          step: Math.round(e || 700),
          count: 0,
        }),
          td(n, t, t.dataTask);
      });
    }),
    (Wc.prepareStageTasks = function() {
      var i = this._stageTaskMap,
        n = this.ecInstance.getModel(),
        o = this.api;
      E(
        this._allHandlers,
        function(t) {
          var e = i.get(t.uid) || i.set(t.uid, []);
          t.reset &&
            (function(n, o, t, a, r) {
              var s = t.seriesTaskMap || (t.seriesTaskMap = et()),
                e = o.seriesType,
                i = o.getTargetSeries;
              o.createOnAllSeries
                ? a.eachRawSeries(l)
                : e
                ? a.eachRawSeriesByType(e, l)
                : i && i(a, r).each(l);
              function l(t) {
                var e = t.uid,
                  i =
                    s.get(e) || s.set(e, $h({plan: qc, reset: Kc, count: Qc}));
                (i.context = {
                  model: t,
                  ecModel: a,
                  api: r,
                  useClearVisual: o.isVisual && !o.isLayout,
                  plan: o.plan,
                  reset: o.reset,
                  scheduler: n,
                }),
                  td(n, t, i);
              }
              var u = n._pipelineMap;
              s.each(function(t, e) {
                u.get(e) || (t.dispose(), s.removeKey(e));
              });
            })(this, t, e, n, o),
            t.overallReset &&
              (function(n, t, e, i, o) {
                var a = (e.overallTask = e.overallTask || $h({reset: Uc}));
                a.context = {
                  ecModel: i,
                  api: o,
                  overallReset: t.overallReset,
                  scheduler: n,
                };
                var r = (a.agentStubMap = a.agentStubMap || et()),
                  s = t.seriesType,
                  l = t.getTargetSeries,
                  u = !0,
                  h = t.modifyOutputEnd;
                s
                  ? i.eachRawSeriesByType(s, c)
                  : l
                  ? l(i, o).each(c)
                  : ((u = !1), E(i.getSeries(), c));
                function c(t) {
                  var e = t.uid,
                    i = r.get(e);
                  i ||
                    ((i = r.set(e, $h({reset: Xc, onDirty: jc}))), a.dirty()),
                    (i.context = {
                      model: t,
                      overallProgress: u,
                      modifyOutputEnd: h,
                    }),
                    (i.agent = a),
                    (i.__block = u),
                    td(n, t, i);
                }
                var d = n._pipelineMap;
                r.each(function(t, e) {
                  d.get(e) || (t.dispose(), a.dirty(), r.removeKey(e));
                });
              })(this, t, e, n, o);
        },
        this,
      );
    }),
    (Wc.prepareView = function(t, e, i, n) {
      var o = t.renderTask,
        a = o.context;
      (a.model = e),
        (a.ecModel = i),
        (a.api = n),
        (o.__block = !t.incrementalPrepareRender),
        td(this, e, o);
    }),
    (Wc.performDataProcessorTasks = function(t, e) {
      Hc(this, this._dataProcessorHandlers, t, e, {block: !0});
    }),
    (Wc.performVisualTasks = function(t, e, i) {
      Hc(this, this._visualHandlers, t, e, i);
    }),
    (Wc.performSeriesTasks = function(t) {
      var e;
      t.eachSeries(function(t) {
        e |= t.dataTask.perform();
      }),
        (this.unfinished |= e);
    }),
    (Wc.plan = function() {
      this._pipelineMap.each(function(t) {
        var e = t.tail;
        do {
          if (e.__block) {
            t.blockIndex = e.__idxInPipeline;
            break;
          }
          e = e.getUpstream();
        } while (e);
      });
    });
  var Zc = (Wc.updatePayload = function(t, e) {
    'remain' !== e && (t.context.payload = e);
  });
  function Uc(t) {
    t.overallReset(t.ecModel, t.api, t.payload);
  }
  function Xc(t, e) {
    return t.overallProgress && Yc;
  }
  function Yc() {
    this.agent.dirty(), this.getDownstream().dirty();
  }
  function jc() {
    this.agent && this.agent.dirty();
  }
  function qc(t) {
    return t.plan && t.plan(t.model, t.ecModel, t.api, t.payload);
  }
  function Kc(t) {
    t.useClearVisual && t.data.clearAllVisual();
    var e = (t.resetDefines = Wo(
      t.reset(t.model, t.ecModel, t.api, t.payload),
    ));
    return 1 < e.length
      ? O(e, function(t, e) {
          return Jc(e);
        })
      : $c;
  }
  var $c = Jc(0);
  function Jc(a) {
    return function(t, e) {
      var i = e.data,
        n = e.resetDefines[a];
      if (n && n.dataEach)
        for (var o = t.start; o < t.end; o++) n.dataEach(i, o);
      else n && n.progress && n.progress(t, i);
    };
  }
  function Qc(t) {
    return t.data.count();
  }
  function td(t, e, i) {
    var n = e.uid,
      o = t._pipelineMap.get(n);
    o.head || (o.head = i),
      o.tail && o.tail.pipe(i),
      ((o.tail = i).__idxInPipeline = o.count++),
      (i.__pipeline = o);
  }
  Fc.wrapStageHandler = function(t, e) {
    return (
      z(t) &&
        (t = {
          overallReset: t,
          seriesType: (function(t) {
            ed = null;
            try {
              t(id, nd);
            } catch (t) {}
            return ed;
          })(t),
        }),
      (t.uid = Rl('stageHandler')),
      e && (t.visualType = e),
      t
    );
  };
  var ed,
    id = {},
    nd = {};
  function od(t, e) {
    for (var i in e.prototype) t[i] = nt;
  }
  od(id, ah),
    od(nd, hh),
    (id.eachSeriesByType = id.eachRawSeriesByType = function(t) {
      ed = t;
    }),
    (id.eachComponent = function(t) {
      'series' === t.mainType && t.subType && (ed = t.subType);
    });
  function ad() {
    return {
      axisLine: {lineStyle: {color: ld}},
      axisTick: {lineStyle: {color: ld}},
      axisLabel: {textStyle: {color: ld}},
      splitLine: {lineStyle: {type: 'dashed', color: '#aaa'}},
      splitArea: {areaStyle: {color: ld}},
    };
  }
  var rd = [
      '#37A2DA',
      '#32C5E9',
      '#67E0E3',
      '#9FE6B8',
      '#FFDB5C',
      '#ff9f7f',
      '#fb7293',
      '#E062AE',
      '#E690D1',
      '#e7bcf3',
      '#9d96f5',
      '#8378EA',
      '#96BFFF',
    ],
    sd = {
      color: rd,
      colorLayer: [
        ['#37A2DA', '#ffd85c', '#fd7b5f'],
        ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'],
        [
          '#37A2DA',
          '#32C5E9',
          '#9FE6B8',
          '#FFDB5C',
          '#ff9f7f',
          '#fb7293',
          '#e7bcf3',
          '#8378EA',
          '#96BFFF',
        ],
        rd,
      ],
    },
    ld = '#eee',
    ud = [
      '#dd6b66',
      '#759aa0',
      '#e69d87',
      '#8dc1a9',
      '#ea7e53',
      '#eedd78',
      '#73a373',
      '#73b9bc',
      '#7289ab',
      '#91ca8c',
      '#f49f42',
    ],
    hd = {
      color: ud,
      backgroundColor: '#333',
      tooltip: {
        axisPointer: {
          lineStyle: {color: ld},
          crossStyle: {color: ld},
          label: {color: '#000'},
        },
      },
      legend: {textStyle: {color: ld}},
      textStyle: {color: ld},
      title: {textStyle: {color: ld}},
      toolbox: {iconStyle: {normal: {borderColor: ld}}},
      dataZoom: {textStyle: {color: ld}},
      visualMap: {textStyle: {color: ld}},
      timeline: {
        lineStyle: {color: ld},
        itemStyle: {normal: {color: ud[1]}},
        label: {normal: {textStyle: {color: ld}}},
        controlStyle: {normal: {color: ld, borderColor: ld}},
      },
      timeAxis: ad(),
      logAxis: ad(),
      valueAxis: ad(),
      categoryAxis: ad(),
      line: {symbol: 'circle'},
      graph: {color: ud},
      gauge: {title: {textStyle: {color: ld}}},
      candlestick: {
        itemStyle: {
          normal: {
            color: '#FD1050',
            color0: '#0CF49B',
            borderColor: '#FD1050',
            borderColor0: '#0CF49B',
          },
        },
      },
    };
  (hd.categoryAxis.splitLine.show = !1),
    Ou.extend({
      type: 'dataset',
      defaultOption: {
        seriesLayoutBy: Xu,
        sourceHeader: null,
        dimensions: null,
        source: null,
      },
      optionUpdated: function() {
        !(function(t) {
          var e = t.option.source,
            i = Zu;
          if (F(e)) i = Uu;
          else if (R(e)) {
            0 === e.length && (i = Fu);
            for (var n = 0, o = e.length; n < o; n++) {
              var a = e[n];
              if (null != a) {
                if (R(a)) {
                  i = Fu;
                  break;
                }
                if (V(a)) {
                  i = Wu;
                  break;
                }
              }
            }
          } else if (V(e)) {
            for (var r in e)
              if (e.hasOwnProperty(r) && N(e[r])) {
                i = Hu;
                break;
              }
          } else if (null != e) throw new Error('Invalid data');
          Ku(t).sourceFormat = i;
        })(this);
      },
    }),
    xc.extend({type: 'dataset'});
  var cd = Lr.extend({
      type: 'ellipse',
      shape: {cx: 0, cy: 0, rx: 0, ry: 0},
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = e.rx,
          a = e.ry,
          r = 0.5522848 * o,
          s = 0.5522848 * a;
        t.moveTo(i - o, n),
          t.bezierCurveTo(i - o, n - s, i - r, n - a, i, n - a),
          t.bezierCurveTo(i + r, n - a, i + o, n - s, i + o, n),
          t.bezierCurveTo(i + o, n + s, i + r, n + a, i, n + a),
          t.bezierCurveTo(i - r, n + a, i - o, n + s, i - o, n),
          t.closePath();
      },
    }),
    dd = /[\s,]+/;
  function fd(t) {
    B(t) && (t = new DOMParser().parseFromString(t, 'text/xml'));
    for (
      9 === t.nodeType && (t = t.firstChild);
      'svg' !== t.nodeName.toLowerCase() || 1 !== t.nodeType;

    )
      t = t.nextSibling;
    return t;
  }
  function pd() {
    (this._defs = {}),
      (this._root = null),
      (this._isDefine = !1),
      (this._isText = !1);
  }
  (pd.prototype.parse = function(t, e) {
    e = e || {};
    var i = fd(t);
    if (!i) throw new Error('Illegal svg');
    var n = new ki();
    this._root = n;
    var o = i.getAttribute('viewBox') || '',
      a = parseFloat(i.getAttribute('width') || e.width),
      r = parseFloat(i.getAttribute('height') || e.height);
    isNaN(a) && (a = null), isNaN(r) && (r = null), _d(i, n, null, !0);
    for (var s, l, u = i.firstChild; u; )
      this._parseNode(u, n), (u = u.nextSibling);
    if (o) {
      var h = K(o).split(dd);
      4 <= h.length &&
        (s = {
          x: parseFloat(h[0] || 0),
          y: parseFloat(h[1] || 0),
          width: parseFloat(h[2]),
          height: parseFloat(h[3]),
        });
    }
    if (s && null != a && null != r && ((l = Id(s, a, r)), !e.ignoreViewBox)) {
      var c = n;
      (n = new ki()).add(c),
        (c.scale = l.scale.slice()),
        (c.position = l.position.slice());
    }
    return (
      e.ignoreRootClip ||
        null == a ||
        null == r ||
        n.setClipPath(new us({shape: {x: 0, y: 0, width: a, height: r}})),
      {root: n, width: a, height: r, viewBoxRect: s, viewBoxTransform: l}
    );
  }),
    (pd.prototype._parseNode = function(t, e) {
      var i,
        n,
        o = t.nodeName.toLowerCase();
      if (
        ('defs' === o
          ? (this._isDefine = !0)
          : 'text' === o && (this._isText = !0),
        this._isDefine)
      ) {
        if ((n = md[o])) {
          var a = n.call(this, t),
            r = t.getAttribute('id');
          r && (this._defs[r] = a);
        }
      } else (n = gd[o]) && ((i = n.call(this, t, e)), e.add(i));
      for (var s = t.firstChild; s; )
        1 === s.nodeType && this._parseNode(s, i),
          3 === s.nodeType && this._isText && this._parseText(s, i),
          (s = s.nextSibling);
      'defs' === o
        ? (this._isDefine = !1)
        : 'text' === o && (this._isText = !1);
    }),
    (pd.prototype._parseText = function(t, e) {
      if (1 === t.nodeType) {
        var i = t.getAttribute('dx') || 0,
          n = t.getAttribute('dy') || 0;
        (this._textX += parseFloat(i)), (this._textY += parseFloat(n));
      }
      var o = new jr({
        style: {text: t.textContent, transformText: !0},
        position: [this._textX || 0, this._textY || 0],
      });
      vd(e, o), _d(t, o, this._defs);
      var a = o.style.fontSize;
      a &&
        a < 9 &&
        ((o.style.fontSize = 9),
        (o.scale = o.scale || [1, 1]),
        (o.scale[0] *= a / 9),
        (o.scale[1] *= a / 9));
      var r = o.getBoundingRect();
      return (this._textX += r.width), e.add(o), o;
    });
  var gd = {
      g: function(t, e) {
        var i = new ki();
        return vd(e, i), _d(t, i, this._defs), i;
      },
      rect: function(t, e) {
        var i = new us();
        return (
          vd(e, i),
          _d(t, i, this._defs),
          i.setShape({
            x: parseFloat(t.getAttribute('x') || 0),
            y: parseFloat(t.getAttribute('y') || 0),
            width: parseFloat(t.getAttribute('width') || 0),
            height: parseFloat(t.getAttribute('height') || 0),
          }),
          i
        );
      },
      circle: function(t, e) {
        var i = new Kr();
        return (
          vd(e, i),
          _d(t, i, this._defs),
          i.setShape({
            cx: parseFloat(t.getAttribute('cx') || 0),
            cy: parseFloat(t.getAttribute('cy') || 0),
            r: parseFloat(t.getAttribute('r') || 0),
          }),
          i
        );
      },
      line: function(t, e) {
        var i = new cs();
        return (
          vd(e, i),
          _d(t, i, this._defs),
          i.setShape({
            x1: parseFloat(t.getAttribute('x1') || 0),
            y1: parseFloat(t.getAttribute('y1') || 0),
            x2: parseFloat(t.getAttribute('x2') || 0),
            y2: parseFloat(t.getAttribute('y2') || 0),
          }),
          i
        );
      },
      ellipse: function(t, e) {
        var i = new cd();
        return (
          vd(e, i),
          _d(t, i, this._defs),
          i.setShape({
            cx: parseFloat(t.getAttribute('cx') || 0),
            cy: parseFloat(t.getAttribute('cy') || 0),
            rx: parseFloat(t.getAttribute('rx') || 0),
            ry: parseFloat(t.getAttribute('ry') || 0),
          }),
          i
        );
      },
      polygon: function(t, e) {
        var i = t.getAttribute('points');
        i = i && yd(i);
        var n = new is({shape: {points: i || []}});
        return vd(e, n), _d(t, n, this._defs), n;
      },
      polyline: function(t, e) {
        var i = new Lr();
        vd(e, i), _d(t, i, this._defs);
        var n = t.getAttribute('points');
        return (n = n && yd(n)), new ns({shape: {points: n || []}});
      },
      image: function(t, e) {
        var i = new eo();
        return (
          vd(e, i),
          _d(t, i, this._defs),
          i.setStyle({
            image: t.getAttribute('xlink:href'),
            x: t.getAttribute('x'),
            y: t.getAttribute('y'),
            width: t.getAttribute('width'),
            height: t.getAttribute('height'),
          }),
          i
        );
      },
      text: function(t, e) {
        var i = t.getAttribute('x') || 0,
          n = t.getAttribute('y') || 0,
          o = t.getAttribute('dx') || 0,
          a = t.getAttribute('dy') || 0;
        (this._textX = parseFloat(i) + parseFloat(o)),
          (this._textY = parseFloat(n) + parseFloat(a));
        var r = new ki();
        return vd(e, r), _d(t, r, this._defs), r;
      },
      tspan: function(t, e) {
        var i = t.getAttribute('x'),
          n = t.getAttribute('y');
        null != i && (this._textX = parseFloat(i)),
          null != n && (this._textY = parseFloat(n));
        var o = t.getAttribute('dx') || 0,
          a = t.getAttribute('dy') || 0,
          r = new ki();
        return (
          vd(e, r),
          _d(t, r, this._defs),
          (this._textX += o),
          (this._textY += a),
          r
        );
      },
      path: function(t, e) {
        var i = Yr(t.getAttribute('d') || '');
        return vd(e, i), _d(t, i, this._defs), i;
      },
    },
    md = {
      lineargradient: function(t) {
        var e = parseInt(t.getAttribute('x1') || 0, 10),
          i = parseInt(t.getAttribute('y1') || 0, 10),
          n = parseInt(t.getAttribute('x2') || 10, 10),
          o = parseInt(t.getAttribute('y2') || 0, 10),
          a = new ys(e, i, n, o);
        return (
          (function(t, e) {
            var i = t.firstChild;
            for (; i; ) {
              if (1 === i.nodeType) {
                var n = i.getAttribute('offset');
                n =
                  0 < n.indexOf('%')
                    ? parseInt(n, 10) / 100
                    : n
                    ? parseFloat(n)
                    : 0;
                var o = i.getAttribute('stop-color') || '#000000';
                e.addColorStop(n, o);
              }
              i = i.nextSibling;
            }
          })(t, a),
          a
        );
      },
      radialgradient: function(t) {},
    };
  function vd(t, e) {
    t &&
      t.__inheritedStyle &&
      (e.__inheritedStyle || (e.__inheritedStyle = {}),
      C(e.__inheritedStyle, t.__inheritedStyle));
  }
  function yd(t) {
    for (var e = K(t).split(dd), i = [], n = 0; n < e.length; n += 2) {
      var o = parseFloat(e[n]),
        a = parseFloat(e[n + 1]);
      i.push([o, a]);
    }
    return i;
  }
  var xd = {
    fill: 'fill',
    stroke: 'stroke',
    'stroke-width': 'lineWidth',
    opacity: 'opacity',
    'fill-opacity': 'fillOpacity',
    'stroke-opacity': 'strokeOpacity',
    'stroke-dasharray': 'lineDash',
    'stroke-dashoffset': 'lineDashOffset',
    'stroke-linecap': 'lineCap',
    'stroke-linejoin': 'lineJoin',
    'stroke-miterlimit': 'miterLimit',
    'font-family': 'fontFamily',
    'font-size': 'fontSize',
    'font-style': 'fontStyle',
    'font-weight': 'fontWeight',
    'text-align': 'textAlign',
    'alignment-baseline': 'textBaseline',
  };
  function _d(t, e, i, n) {
    var o = e.__inheritedStyle || {},
      a = 'text' === e.type;
    if (
      1 === t.nodeType &&
      ((function(t, e) {
        var i = t.getAttribute('transform');
        if (i) {
          i = i.replace(/,/g, ' ');
          var n = null,
            o = [];
          i.replace(Sd, function(t, e, i) {
            o.push(e, i);
          });
          for (var a = o.length - 1; 0 < a; a -= 2) {
            var r = o[a],
              s = o[a - 1];
            switch (((n = n || se()), s)) {
              case 'translate':
                (r = K(r).split(dd)),
                  ce(n, n, [parseFloat(r[0]), parseFloat(r[1] || 0)]);
                break;
              case 'scale':
                (r = K(r).split(dd)),
                  fe(n, n, [parseFloat(r[0]), parseFloat(r[1] || r[0])]);
                break;
              case 'rotate':
                (r = K(r).split(dd)), de(n, n, parseFloat(r[0]));
                break;
              case 'skew':
                (r = K(r).split(dd)),
                  console.warn('Skew transform is not supported yet');
                break;
              case 'matrix':
                r = K(r).split(dd);
                (n[0] = parseFloat(r[0])),
                  (n[1] = parseFloat(r[1])),
                  (n[2] = parseFloat(r[2])),
                  (n[3] = parseFloat(r[3])),
                  (n[4] = parseFloat(r[4])),
                  (n[5] = parseFloat(r[5]));
            }
          }
          e.setLocalTransform(n);
        }
      })(t, e),
      P(
        o,
        (function(t) {
          var e = t.getAttribute('style'),
            i = {};
          if (!e) return i;
          var n,
            o = {};
          Md.lastIndex = 0;
          for (; null != (n = Md.exec(e)); ) o[n[1]] = n[2];
          for (var a in xd)
            xd.hasOwnProperty(a) && null != o[a] && (i[xd[a]] = o[a]);
          return i;
        })(t),
      ),
      !n)
    )
      for (var r in xd)
        if (xd.hasOwnProperty(r)) {
          var s = t.getAttribute(r);
          null != s && (o[xd[r]] = s);
        }
    var l = a ? 'textFill' : 'fill',
      u = a ? 'textStroke' : 'stroke';
    e.style = e.style || new Yi();
    var h = e.style;
    null != o.fill && h.set(l, bd(o.fill, i)),
      null != o.stroke && h.set(u, bd(o.stroke, i)),
      E(
        [
          'lineWidth',
          'opacity',
          'fillOpacity',
          'strokeOpacity',
          'miterLimit',
          'fontSize',
        ],
        function(t) {
          var e = 'lineWidth' === t && a ? 'textStrokeWidth' : t;
          null != o[t] && h.set(e, parseFloat(o[t]));
        },
      ),
      (o.textBaseline && 'auto' !== o.textBaseline) ||
        (o.textBaseline = 'alphabetic'),
      'alphabetic' === o.textBaseline && (o.textBaseline = 'bottom'),
      'start' === o.textAlign && (o.textAlign = 'left'),
      'end' === o.textAlign && (o.textAlign = 'right'),
      E(
        [
          'lineDashOffset',
          'lineCap',
          'lineJoin',
          'fontWeight',
          'fontFamily',
          'fontStyle',
          'textAlign',
          'textBaseline',
        ],
        function(t) {
          null != o[t] && h.set(t, o[t]);
        },
      ),
      o.lineDash && (e.style.lineDash = K(o.lineDash).split(dd)),
      h[u] && 'none' !== h[u] && (e[u] = !0),
      (e.__inheritedStyle = o);
  }
  var wd = /url\(\s*#(.*?)\)/;
  function bd(t, e) {
    var i = e && t && t.match(wd);
    return i ? e[K(i[1])] : t;
  }
  var Sd = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.e,]*)\)/g;
  var Md = /([^\s:;]+)\s*:\s*([^:;]+)/g;
  function Id(t, e, i) {
    var n = e / t.width,
      o = i / t.height,
      a = Math.min(n, o);
    return {
      scale: [a, a],
      position: [
        -(t.x + t.width / 2) * a + e / 2,
        -(t.y + t.height / 2) * a + i / 2,
      ],
    };
  }
  var Td = et(),
    Ad = {
      registerMap: function(t, e, i) {
        var n;
        return (
          E(
            (n = R(e)
              ? e
              : e.svg
              ? [{type: 'svg', source: e.svg, specialAreas: e.specialAreas}]
              : (e.geoJson &&
                  !e.features &&
                  ((i = e.specialAreas), (e = e.geoJson)),
                [{type: 'geoJSON', source: e, specialAreas: i}])),
            function(t) {
              var e = t.type;
              'geoJson' === e && (e = t.type = 'geoJSON');
              var i = Dd[e];
              D && q(i, 'Illegal map type: ' + e), i(t);
            },
          ),
          Td.set(t, n)
        );
      },
      retrieveMap: function(t) {
        return Td.get(t);
      },
    },
    Dd = {
      geoJSON: function(t) {
        var e = t.source;
        t.geoJSON = B(e)
          ? 'undefined' != typeof JSON && JSON.parse
            ? JSON.parse(e)
            : new Function('return (' + e + ');')()
          : e;
      },
      svg: function(t) {
        t.svgXML = fd(t.source);
      },
    },
    Cd = q,
    Ld = E,
    kd = z,
    Pd = V,
    Nd = Ou.parseClassType,
    Od = {zrender: '4.3.1'},
    Ed = {
      PROCESSOR: {FILTER: 1e3, SERIES_FILTER: 800, STATISTIC: 5e3},
      VISUAL: {
        LAYOUT: 1e3,
        PROGRESSIVE_LAYOUT: 1100,
        GLOBAL: 2e3,
        CHART: 3e3,
        POST_CHART_LAYOUT: 3500,
        COMPONENT: 4e3,
        BRUSH: 5e3,
      },
    },
    Rd = '__flagInMainProcess',
    zd = '__optionUpdated',
    Bd = /^[a-zA-Z0-9_]+$/;
  function Vd(n, o) {
    return function(t, e, i) {
      o || !this._disposed
        ? ((t = t && t.toLowerCase()), kt.prototype[n].call(this, t, e, i))
        : of(this.id);
    };
  }
  function Gd() {
    kt.call(this);
  }
  function Fd(t, e, i) {
    (i = i || {}),
      'string' == typeof e && (e = ff[e]),
      this.id,
      this.group,
      (this._dom = t);
    var n = 'canvas';
    D &&
      (n =
        ('undefined' == typeof window ? global : window)
          .__ECHARTS__DEFAULT__RENDERER__ || n);
    var o = (this._zr = Oo(t, {
      renderer: i.renderer || n,
      devicePixelRatio: i.devicePixelRatio,
      width: i.width,
      height: i.height,
    }));
    (this._throttledZrFlush = Oc(A(o.flush, o), 17)),
      (e = k(e)) && Oh(e, !0),
      (this._theme = e),
      (this._chartsViews = []),
      (this._chartsMap = {}),
      (this._componentsViews = []),
      (this._componentsMap = {}),
      (this._coordSysMgr = new dh());
    var a = (this._api = (function(i) {
      var t = i._coordSysMgr;
      return P(new hh(i), {
        getCoordinateSystems: A(t.getCoordinateSystems, t),
        getComponentByElement: function(t) {
          for (; t; ) {
            var e = t.__ecComponentInfo;
            if (null != e) return i._model.getComponent(e.mainType, e.index);
            t = t.parent;
          }
        },
      });
    })(this));
    function r(t, e) {
      return t.__prio - e.__prio;
    }
    Vi(df, r),
      Vi(uf, r),
      (this._scheduler = new Fc(this, a, uf, df)),
      kt.call(this, (this._ecEventProcessor = new rf())),
      (this._messageCenter = new Gd()),
      this._initEvents(),
      (this.resize = A(this.resize, this)),
      (this._pendingActions = []),
      o.animation.on('frame', this._onframe, this),
      (function(t, e) {
        t.on('rendered', function() {
          e.trigger('rendered'),
            !t.animation.isFinished() ||
              e[zd] ||
              e._scheduler.unfinished ||
              e._pendingActions.length ||
              e.trigger('finished');
        });
      })(o, this),
      J(this);
  }
  (Gd.prototype.on = Vd('on', !0)),
    (Gd.prototype.off = Vd('off', !0)),
    (Gd.prototype.one = Vd('one', !0)),
    S(Gd, kt);
  var Wd = Fd.prototype;
  function Hd(t, e, i) {
    if (this._disposed) of(this.id);
    else {
      var n,
        o = this._model,
        a = this._coordSysMgr.getCoordinateSystems();
      e = Qo(o, e);
      for (var r = 0; r < a.length; r++) {
        var s = a[r];
        if (s[t] && null != (n = s[t](o, e, i))) return n;
      }
      D &&
        console.warn(
          'No coordinate system that supports ' +
            t +
            ' found by the given finder.',
        );
    }
  }
  (Wd._onframe = function() {
    if (!this._disposed) {
      var t = this._scheduler;
      if (this[zd]) {
        var e = this[zd].silent;
        (this[Rd] = !0),
          Ud(this),
          Zd.update.call(this),
          (this[Rd] = !1),
          (this[zd] = !1),
          qd.call(this, e),
          Kd.call(this, e);
      } else if (t.unfinished) {
        var i = 1,
          n = this._model,
          o = this._api;
        t.unfinished = !1;
        do {
          var a = +new Date();
          t.performSeriesTasks(n),
            t.performDataProcessorTasks(n),
            Yd(this, n),
            t.performVisualTasks(n),
            tf(this, this._model, o, 'remain'),
            (i -= +new Date() - a);
        } while (0 < i && t.unfinished);
        t.unfinished || this._zr.flush();
      }
    }
  }),
    (Wd.getDom = function() {
      return this._dom;
    }),
    (Wd.getZr = function() {
      return this._zr;
    }),
    (Wd.setOption = function(t, e, i) {
      if (
        (D &&
          Cd(
            !this[Rd],
            '`setOption` should not be called during main process.',
          ),
        this._disposed)
      )
        of(this.id);
      else {
        var n;
        if (
          (Pd(e) && ((i = e.lazyUpdate), (n = e.silent), (e = e.notMerge)),
          (this[Rd] = !0),
          !this._model || e)
        ) {
          var o = new yh(this._api),
            a = this._theme,
            r = (this._model = new ah());
          (r.scheduler = this._scheduler), r.init(null, null, a, o);
        }
        this._model.setOption(t, hf),
          i
            ? ((this[zd] = {silent: n}), (this[Rd] = !1))
            : (Ud(this),
              Zd.update.call(this),
              this._zr.flush(),
              (this[zd] = !1),
              (this[Rd] = !1),
              qd.call(this, n),
              Kd.call(this, n));
      }
    }),
    (Wd.setTheme = function() {
      console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');
    }),
    (Wd.getModel = function() {
      return this._model;
    }),
    (Wd.getOption = function() {
      return this._model && this._model.getOption();
    }),
    (Wd.getWidth = function() {
      return this._zr.getWidth();
    }),
    (Wd.getHeight = function() {
      return this._zr.getHeight();
    }),
    (Wd.getDevicePixelRatio = function() {
      return this._zr.painter.dpr || window.devicePixelRatio || 1;
    }),
    (Wd.getRenderedCanvas = function(t) {
      if (v.canvasSupported)
        return (
          ((t = t || {}).pixelRatio = t.pixelRatio || 1),
          (t.backgroundColor =
            t.backgroundColor || this._model.get('backgroundColor')),
          this._zr.painter.getRenderedCanvas(t)
        );
    }),
    (Wd.getSvgDataURL = function() {
      if (v.svgSupported) {
        var t = this._zr;
        return (
          E(t.storage.getDisplayList(), function(t) {
            t.stopAnimation(!0);
          }),
          t.painter.toDataURL()
        );
      }
    }),
    (Wd.getDataURL = function(t) {
      if (!this._disposed) {
        var e = (t = t || {}).excludeComponents,
          i = this._model,
          n = [],
          o = this;
        Ld(e, function(t) {
          i.eachComponent({mainType: t}, function(t) {
            var e = o._componentsMap[t.__viewId];
            e.group.ignore || (n.push(e), (e.group.ignore = !0));
          });
        });
        var a =
          'svg' === this._zr.painter.getType()
            ? this.getSvgDataURL()
            : this.getRenderedCanvas(t).toDataURL(
                'image/' + ((t && t.type) || 'png'),
              );
        return (
          Ld(n, function(t) {
            t.group.ignore = !1;
          }),
          a
        );
      }
      of(this.id);
    }),
    (Wd.getConnectedDataURL = function(o) {
      if (this._disposed) of(this.id);
      else if (v.canvasSupported) {
        var a = 'svg' === o.type,
          r = this.group,
          s = Math.min,
          l = Math.max;
        if (mf[r]) {
          var u = 1 / 0,
            h = 1 / 0,
            c = -1 / 0,
            d = -1 / 0,
            f = [],
            i = (o && o.pixelRatio) || 1;
          E(gf, function(t, e) {
            if (t.group === r) {
              var i = a
                  ? t.getZr().painter.getSvgDom().innerHTML
                  : t.getRenderedCanvas(k(o)),
                n = t.getDom().getBoundingClientRect();
              (u = s(n.left, u)),
                (h = s(n.top, h)),
                (c = l(n.right, c)),
                (d = l(n.bottom, d)),
                f.push({dom: i, left: n.left, top: n.top});
            }
          });
          var t = (c *= i) - (u *= i),
            e = (d *= i) - (h *= i),
            n = y(),
            p = Oo(n, {renderer: a ? 'svg' : 'canvas'});
          if ((p.resize({width: t, height: e}), a)) {
            var g = '';
            return (
              Ld(f, function(t) {
                var e = t.left - u,
                  i = t.top - h;
                g +=
                  '<g transform="translate(' +
                  e +
                  ',' +
                  i +
                  ')">' +
                  t.dom +
                  '</g>';
              }),
              (p.painter.getSvgRoot().innerHTML = g),
              o.connectedBackgroundColor &&
                p.painter.setBackgroundColor(o.connectedBackgroundColor),
              p.refreshImmediately(),
              p.painter.toDataURL()
            );
          }
          return (
            o.connectedBackgroundColor &&
              p.add(
                new us({
                  shape: {x: 0, y: 0, width: t, height: e},
                  style: {fill: o.connectedBackgroundColor},
                }),
              ),
            Ld(f, function(t) {
              var e = new eo({
                style: {x: t.left * i - u, y: t.top * i - h, image: t.dom},
              });
              p.add(e);
            }),
            p.refreshImmediately(),
            n.toDataURL('image/' + ((o && o.type) || 'png'))
          );
        }
        return this.getDataURL(o);
      }
    }),
    (Wd.convertToPixel = L(Hd, 'convertToPixel')),
    (Wd.convertFromPixel = L(Hd, 'convertFromPixel')),
    (Wd.containPixel = function(t, o) {
      var a;
      if (!this._disposed)
        return (
          E(
            (t = Qo(this._model, t)),
            function(t, n) {
              0 <= n.indexOf('Models') &&
                E(
                  t,
                  function(t) {
                    var e = t.coordinateSystem;
                    if (e && e.containPoint) a |= !!e.containPoint(o);
                    else if ('seriesModels' === n) {
                      var i = this._chartsMap[t.__viewId];
                      i && i.containPoint
                        ? (a |= i.containPoint(o, t))
                        : D &&
                          console.warn(
                            n +
                              ': ' +
                              (i
                                ? 'The found component do not support containPoint.'
                                : 'No view mapping to the found component.'),
                          );
                    } else
                      D && console.warn(n + ': containPoint is not supported');
                  },
                  this,
                );
            },
            this,
          ),
          !!a
        );
      of(this.id);
    }),
    (Wd.getVisual = function(t, e) {
      var i = (t = Qo(this._model, t, {defaultMainType: 'series'})).seriesModel;
      D && (i || console.warn('There is no specified seires model'));
      var n = i.getData(),
        o = t.hasOwnProperty('dataIndexInside')
          ? t.dataIndexInside
          : t.hasOwnProperty('dataIndex')
          ? n.indexOfRawIndex(t.dataIndex)
          : null;
      return null != o ? n.getItemVisual(o, e) : n.getVisual(e);
    }),
    (Wd.getViewOfComponentModel = function(t) {
      return this._componentsMap[t.__viewId];
    }),
    (Wd.getViewOfSeriesModel = function(t) {
      return this._chartsMap[t.__viewId];
    });
  var Zd = {
    prepareAndUpdate: function(t) {
      Ud(this), Zd.update.call(this, t);
    },
    update: function(t) {
      var e = this._model,
        i = this._api,
        n = this._zr,
        o = this._coordSysMgr,
        a = this._scheduler;
      if (e) {
        a.restoreData(e, t),
          a.performSeriesTasks(e),
          o.create(e, i),
          a.performDataProcessorTasks(e, t),
          Yd(this, e),
          o.update(e, i),
          Jd(e),
          a.performVisualTasks(e, t),
          Qd(this, e, i, t);
        var r = e.get('backgroundColor') || 'transparent';
        if (v.canvasSupported) n.setBackgroundColor(r);
        else {
          var s = He(r);
          (r = Qe(s, 'rgb')), 0 === s[3] && (r = 'transparent');
        }
        ef(e, i);
      }
    },
    updateTransform: function(o) {
      var a = this._model,
        r = this,
        s = this._api;
      if (a) {
        var l = [];
        a.eachComponent(function(t, e) {
          var i = r.getViewOfComponentModel(e);
          if (i && i.__alive)
            if (i.updateTransform) {
              var n = i.updateTransform(e, a, s, o);
              n && n.update && l.push(i);
            } else l.push(i);
        });
        var n = et();
        a.eachSeries(function(t) {
          var e = r._chartsMap[t.__viewId];
          if (e.updateTransform) {
            var i = e.updateTransform(t, a, s, o);
            i && i.update && n.set(t.uid, 1);
          } else n.set(t.uid, 1);
        }),
          Jd(a),
          this._scheduler.performVisualTasks(a, o, {setDirty: !0, dirtyMap: n}),
          tf(r, a, s, o, n),
          ef(a, this._api);
      }
    },
    updateView: function(t) {
      var e = this._model;
      e &&
        (Mc.markUpdateMethod(t, 'updateView'),
        Jd(e),
        this._scheduler.performVisualTasks(e, t, {setDirty: !0}),
        Qd(this, this._model, this._api, t),
        ef(e, this._api));
    },
    updateVisual: function(t) {
      Zd.update.call(this, t);
    },
    updateLayout: function(t) {
      Zd.update.call(this, t);
    },
  };
  function Ud(t) {
    var e = t._model,
      i = t._scheduler;
    i.restorePipelines(e),
      i.prepareStageTasks(),
      $d(t, 'component', e, i),
      $d(t, 'chart', e, i),
      i.plan();
  }
  function Xd(e, i, n, o, t) {
    var a = e._model;
    if (o) {
      var r = {};
      (r[o + 'Id'] = n[o + 'Id']),
        (r[o + 'Index'] = n[o + 'Index']),
        (r[o + 'Name'] = n[o + 'Name']);
      var s = {mainType: o, query: r};
      t && (s.subType = t);
      var l = n.excludeSeriesId;
      null != l && (l = et(Wo(l))),
        a &&
          a.eachComponent(
            s,
            function(t) {
              (l && null != l.get(t.id)) ||
                u(
                  e['series' === o ? '_chartsMap' : '_componentsMap'][
                    t.__viewId
                  ],
                );
            },
            e,
          );
    } else Ld(e._componentsViews.concat(e._chartsViews), u);
    function u(t) {
      t && t.__alive && t[i] && t[i](t.__model, a, e._api, n);
    }
  }
  function Yd(t, e) {
    var i = t._chartsMap,
      n = t._scheduler;
    e.eachSeries(function(t) {
      n.updateStreamModes(t, i[t.__viewId]);
    });
  }
  function jd(e, t) {
    var i = e.type,
      n = e.escapeConnect,
      o = sf[i],
      a = o.actionInfo,
      r = (a.update || 'update').split(':'),
      s = r.pop();
    (r = null != r[0] && Nd(r[0])), (this[Rd] = !0);
    var l = [e],
      u = !1;
    e.batch &&
      ((u = !0),
      (l = O(e.batch, function(t) {
        return ((t = C(P({}, t), e)).batch = null), t;
      })));
    var h,
      c = [],
      d = 'highlight' === i || 'downplay' === i;
    Ld(
      l,
      function(t) {
        ((h = (h = o.action(t, this._model, this._api)) || P({}, t)).type =
          a.event || h.type),
          c.push(h),
          d ? Xd(this, s, t, 'series') : r && Xd(this, s, t, r.main, r.sub);
      },
      this,
    ),
      'none' === s ||
        d ||
        r ||
        (this[zd]
          ? (Ud(this), Zd.update.call(this, e), (this[zd] = !1))
          : Zd[s].call(this, e)),
      (h = u ? {type: a.event || i, escapeConnect: n, batch: c} : c[0]),
      (this[Rd] = !1),
      t || this._messageCenter.trigger(h.type, h);
  }
  function qd(t) {
    for (var e = this._pendingActions; e.length; ) {
      var i = e.shift();
      jd.call(this, i, t);
    }
  }
  function Kd(t) {
    t || this.trigger('updated');
  }
  function $d(t, e, a, r) {
    for (
      var s = 'component' === e,
        l = s ? t._componentsViews : t._chartsViews,
        u = s ? t._componentsMap : t._chartsMap,
        h = t._zr,
        c = t._api,
        i = 0;
      i < l.length;
      i++
    )
      l[i].__alive = !1;
    function n(t) {
      var e = '_ec_' + t.id + '_' + t.type,
        i = u[e];
      if (!i) {
        var n = Nd(t.type),
          o = s ? xc.getClass(n.main, n.sub) : Mc.getClass(n.sub);
        D && Cd(o, n.sub + ' does not exist.'),
          (i = new o()).init(a, c),
          (u[e] = i),
          l.push(i),
          h.add(i.group);
      }
      (t.__viewId = i.__id = e),
        (i.__alive = !0),
        (i.__model = t),
        (i.group.__ecComponentInfo = {
          mainType: t.mainType,
          index: t.componentIndex,
        }),
        s || r.prepareView(i, t, a, c);
    }
    s
      ? a.eachComponent(function(t, e) {
          'series' !== t && n(e);
        })
      : a.eachSeries(n);
    for (i = 0; i < l.length; ) {
      var o = l[i];
      o.__alive
        ? i++
        : (s || o.renderTask.dispose(),
          h.remove(o.group),
          o.dispose(a, c),
          l.splice(i, 1),
          delete u[o.__id],
          (o.__id = o.group.__ecComponentInfo = null));
    }
  }
  function Jd(t) {
    t.clearColorPalette(),
      t.eachSeries(function(t) {
        t.clearColorPalette();
      });
  }
  function Qd(t, e, i, n) {
    !(function(t, i, n, o, e) {
      Ld(e || t._componentsViews, function(t) {
        var e = t.__model;
        t.render(e, i, n, o), af(e, t);
      });
    })(t, e, i, n),
      Ld(t._chartsViews, function(t) {
        t.__alive = !1;
      }),
      tf(t, e, i, n),
      Ld(t._chartsViews, function(t) {
        t.__alive || t.remove(e, i);
      });
  }
  function tf(n, t, e, o, a) {
    var r,
      s = n._scheduler;
    t.eachSeries(function(t) {
      var e = n._chartsMap[t.__viewId];
      e.__alive = !0;
      var i = e.renderTask;
      s.updatePayload(i, o),
        a && a.get(t.uid) && i.dirty(),
        (r |= i.perform(s.getPerformArgs(i))),
        (e.group.silent = !!t.get('silent')),
        af(t, e),
        (function(t, e) {
          var i = t.get('blendMode') || null;
          D &&
            !v.canvasSupported &&
            i &&
            'source-over' !== i &&
            console.warn('Only canvas support blendMode');
          e.group.traverse(function(t) {
            t.isGroup || (t.style.blend !== i && t.setStyle('blend', i)),
              t.eachPendingDisplayable &&
                t.eachPendingDisplayable(function(t) {
                  t.setStyle('blend', i);
                });
          });
        })(t, e);
    }),
      (s.unfinished |= r),
      (function(i, t) {
        var e = i._zr.storage,
          n = 0;
        e.traverse(function(t) {
          n++;
        }),
          n > t.get('hoverLayerThreshold') &&
            !v.node &&
            t.eachSeries(function(t) {
              if (!t.preventUsingHoverLayer) {
                var e = i._chartsMap[t.__viewId];
                e.__alive &&
                  e.group.traverse(function(t) {
                    t.useHoverLayer = !0;
                  });
              }
            });
      })(n, t),
      Vc(n._zr.dom, t);
  }
  function ef(e, i) {
    Ld(cf, function(t) {
      t(e, i);
    });
  }
  (Wd.resize = function(t) {
    if (
      (D && Cd(!this[Rd], '`resize` should not be called during main process.'),
      this._disposed)
    )
      of(this.id);
    else {
      this._zr.resize(t);
      var e = this._model;
      if ((this._loadingFX && this._loadingFX.resize(), e)) {
        var i = e.resetOption('media'),
          n = t && t.silent;
        (this[Rd] = !0),
          i && Ud(this),
          Zd.update.call(this),
          (this[Rd] = !1),
          qd.call(this, n),
          Kd.call(this, n);
      }
    }
  }),
    (Wd.showLoading = function(t, e) {
      if (this._disposed) of(this.id);
      else if (
        (Pd(t) && ((e = t), (t = '')),
        (t = t || 'default'),
        this.hideLoading(),
        pf[t])
      ) {
        var i = pf[t](this._api, e),
          n = this._zr;
        (this._loadingFX = i), n.add(i);
      } else D && console.warn('Loading effects ' + t + ' not exists.');
    }),
    (Wd.hideLoading = function() {
      this._disposed
        ? of(this.id)
        : (this._loadingFX && this._zr.remove(this._loadingFX),
          (this._loadingFX = null));
    }),
    (Wd.makeActionFromEvent = function(t) {
      var e = P({}, t);
      return (e.type = lf[t.type]), e;
    }),
    (Wd.dispatchAction = function(t, e) {
      this._disposed
        ? of(this.id)
        : (Pd(e) || (e = {silent: !!e}),
          sf[t.type] &&
            this._model &&
            (this[Rd]
              ? this._pendingActions.push(t)
              : (jd.call(this, t, e.silent),
                e.flush
                  ? this._zr.flush(!0)
                  : !1 !== e.flush &&
                    v.browser.weChat &&
                    this._throttledZrFlush(),
                qd.call(this, e.silent),
                Kd.call(this, e.silent))));
    }),
    (Wd.appendData = function(t) {
      if (this._disposed) of(this.id);
      else {
        var e = t.seriesIndex,
          i = this.getModel().getSeriesByIndex(e);
        D && Cd(t.data && i),
          i.appendData(t),
          (this._scheduler.unfinished = !0);
      }
    }),
    (Wd.on = Vd('on', !1)),
    (Wd.off = Vd('off', !1)),
    (Wd.one = Vd('one', !1));
  var nf = [
    'click',
    'dblclick',
    'mouseover',
    'mouseout',
    'mousemove',
    'mousedown',
    'mouseup',
    'globalout',
    'contextmenu',
  ];
  function of(t) {
    D && console.warn('Instance ' + t + ' has been disposed');
  }
  function af(t, e) {
    var i = t.get('z'),
      n = t.get('zlevel');
    e.group.traverse(function(t) {
      'group' !== t.type &&
        (null != i && (t.z = i), null != n && (t.zlevel = n));
    });
  }
  function rf() {
    this.eventInfo;
  }
  (Wd._initEvents = function() {
    Ld(
      nf,
      function(h) {
        function t(t) {
          var e,
            i = this.getModel(),
            n = t.target,
            o = 'globalout' === h;
          if (o) e = {};
          else if (n && null != n.dataIndex) {
            var a = n.dataModel || i.getSeriesByIndex(n.seriesIndex);
            e = (a && a.getDataParams(n.dataIndex, n.dataType, n)) || {};
          } else n && n.eventData && (e = P({}, n.eventData));
          if (e) {
            var r = e.componentType,
              s = e.componentIndex;
            ('markLine' !== r && 'markPoint' !== r && 'markArea' !== r) ||
              ((r = 'series'), (s = e.seriesIndex));
            var l = r && null != s && i.getComponent(r, s),
              u =
                l &&
                this['series' === l.mainType ? '_chartsMap' : '_componentsMap'][
                  l.__viewId
                ];
            D &&
              (o ||
                (l && u) ||
                console.warn('model or view can not be found by params')),
              (e.event = t),
              (e.type = h),
              (this._ecEventProcessor.eventInfo = {
                targetEl: n,
                packedEvent: e,
                model: l,
                view: u,
              }),
              this.trigger(h, e);
          }
        }
        (t.zrEventfulCallAtLast = !0), this._zr.on(h, t, this);
      },
      this,
    ),
      Ld(
        lf,
        function(t, e) {
          this._messageCenter.on(
            e,
            function(t) {
              this.trigger(e, t);
            },
            this,
          );
        },
        this,
      );
  }),
    (Wd.isDisposed = function() {
      return this._disposed;
    }),
    (Wd.clear = function() {
      this._disposed ? of(this.id) : this.setOption({series: []}, !0);
    }),
    (Wd.dispose = function() {
      if (this._disposed) of(this.id);
      else {
        (this._disposed = !0), ea(this.getDom(), xf, '');
        var e = this._api,
          i = this._model;
        Ld(this._componentsViews, function(t) {
          t.dispose(i, e);
        }),
          Ld(this._chartsViews, function(t) {
            t.dispose(i, e);
          }),
          this._zr.dispose(),
          delete gf[this.id];
      }
    }),
    S(Fd, kt),
    (rf.prototype = {
      constructor: rf,
      normalizeQuery: function(t) {
        var s = {},
          l = {},
          u = {};
        if (B(t)) {
          var e = Nd(t);
          (s.mainType = e.main || null), (s.subType = e.sub || null);
        } else {
          var h = ['Index', 'Name', 'Id'],
            c = {name: 1, dataIndex: 1, dataType: 1};
          E(t, function(t, e) {
            for (var i = !1, n = 0; n < h.length; n++) {
              var o = h[n],
                a = e.lastIndexOf(o);
              if (0 < a && a === e.length - o.length) {
                var r = e.slice(0, a);
                'data' !== r &&
                  ((s.mainType = r), (s[o.toLowerCase()] = t), (i = !0));
              }
            }
            c.hasOwnProperty(e) && ((l[e] = t), (i = !0)), i || (u[e] = t);
          });
        }
        return {cptQuery: s, dataQuery: l, otherQuery: u};
      },
      filter: function(t, e, i) {
        var n = this.eventInfo;
        if (!n) return !0;
        var o = n.targetEl,
          a = n.packedEvent,
          r = n.model,
          s = n.view;
        if (!r || !s) return !0;
        var l = e.cptQuery,
          u = e.dataQuery;
        return (
          h(l, r, 'mainType') &&
          h(l, r, 'subType') &&
          h(l, r, 'index', 'componentIndex') &&
          h(l, r, 'name') &&
          h(l, r, 'id') &&
          h(u, a, 'name') &&
          h(u, a, 'dataIndex') &&
          h(u, a, 'dataType') &&
          (!s.filterForExposedEvent ||
            s.filterForExposedEvent(t, e.otherQuery, o, a))
        );
        function h(t, e, i, n) {
          return null == t[i] || e[n || i] === t[i];
        }
      },
      afterTrigger: function() {
        this.eventInfo = null;
      },
    });
  var sf = {},
    lf = {},
    uf = [],
    hf = [],
    cf = [],
    df = [],
    ff = {},
    pf = {},
    gf = {},
    mf = {},
    vf = new Date() - 0,
    yf = new Date() - 0,
    xf = '_echarts_instance_';
  function _f(t) {
    mf[t] = !1;
  }
  var wf = _f;
  function bf(t) {
    return gf[
      (function(t, e) {
        return t.getAttribute ? t.getAttribute(e) : t[e];
      })(t, xf)
    ];
  }
  function Sf(t, e) {
    ff[t] = e;
  }
  function Mf(t) {
    hf.push(t);
  }
  function If(t, e) {
    Lf(uf, t, e, 1e3);
  }
  function Tf(t, e, i) {
    'function' == typeof e && ((i = e), (e = ''));
    var n = Pd(t) ? t.type : [t, (t = {event: e})][0];
    (t.event = (t.event || n).toLowerCase()),
      (e = t.event),
      Cd(Bd.test(n) && Bd.test(e)),
      sf[n] || (sf[n] = {action: i, actionInfo: t}),
      (lf[e] = n);
  }
  function Af(t, e) {
    dh.register(t, e);
  }
  function Df(t, e) {
    Lf(df, t, e, 1e3, 'layout');
  }
  function Cf(t, e) {
    Lf(df, t, e, 3e3, 'visual');
  }
  function Lf(t, e, i, n, o) {
    if (((kd(e) || Pd(e)) && ((i = e), (e = n)), D)) {
      if (isNaN(e) || null == e) throw new Error('Illegal priority');
      Ld(t, function(t) {
        Cd(t.__raw !== i);
      });
    }
    var a = Fc.wrapStageHandler(i, o);
    return (a.__prio = e), (a.__raw = i), t.push(a), a;
  }
  function kf(t, e) {
    pf[t] = e;
  }
  function Pf(t) {
    return Ou.extend(t);
  }
  function Nf(t) {
    return xc.extend(t);
  }
  function Of(t) {
    return cc.extend(t);
  }
  function Ef(t) {
    return Mc.extend(t);
  }
  Cf(2e3, zc),
    Mf(Oh),
    If(900, function(t) {
      var a = et();
      t.eachSeries(function(t) {
        var e = t.get('stack');
        if (e) {
          var i = a.get(e) || a.set(e, []),
            n = t.getData(),
            o = {
              stackResultDimension: n.getCalculationInfo(
                'stackResultDimension',
              ),
              stackedOverDimension: n.getCalculationInfo(
                'stackedOverDimension',
              ),
              stackedDimension: n.getCalculationInfo('stackedDimension'),
              stackedByDimension: n.getCalculationInfo('stackedByDimension'),
              isStackedByIndex: n.getCalculationInfo('isStackedByIndex'),
              data: n,
              seriesModel: t,
            };
          if (
            !o.stackedDimension ||
            (!o.isStackedByIndex && !o.stackedByDimension)
          )
            return;
          i.length &&
            n.setCalculationInfo(
              'stackedOnSeries',
              i[i.length - 1].seriesModel,
            ),
            i.push(o);
        }
      }),
        a.each(Eh);
    }),
    kf('default', function(o, a) {
      C((a = a || {}), {
        text: 'loading',
        textColor: '#000',
        fontSize: '12px',
        maskColor: 'rgba(255, 255, 255, 0.8)',
        showSpinner: !0,
        color: '#c23531',
        spinnerRadius: 10,
        lineWidth: 5,
        zlevel: 0,
      });
      var t = new ki(),
        r = new us({style: {fill: a.maskColor}, zlevel: a.zlevel, z: 1e4});
      t.add(r);
      var s = a.fontSize + ' sans-serif',
        l = new us({
          style: {
            fill: 'none',
            text: a.text,
            font: s,
            textPosition: 'right',
            textDistance: 10,
            textFill: a.textColor,
          },
          zlevel: a.zlevel,
          z: 10001,
        });
      if ((t.add(l), a.showSpinner)) {
        var u = new ms({
          shape: {
            startAngle: -Gc / 2,
            endAngle: -Gc / 2 + 0.1,
            r: a.spinnerRadius,
          },
          style: {stroke: a.color, lineCap: 'round', lineWidth: a.lineWidth},
          zlevel: a.zlevel,
          z: 10001,
        });
        u
          .animateShape(!0)
          .when(1e3, {endAngle: (3 * Gc) / 2})
          .start('circularInOut'),
          u
            .animateShape(!0)
            .when(1e3, {startAngle: (3 * Gc) / 2})
            .delay(300)
            .start('circularInOut'),
          t.add(u);
      }
      return (
        (t.resize = function() {
          var t = mn(a.text, s),
            e = a.showSpinner ? a.spinnerRadius : 0,
            i =
              (o.getWidth() - 2 * e - (a.showSpinner && t ? 10 : 0) - t) / 2 -
              (a.showSpinner ? 0 : t / 2),
            n = o.getHeight() / 2;
          a.showSpinner && u.setShape({cx: i, cy: n}),
            l.setShape({x: i - e, y: n - e, width: 2 * e, height: 2 * e}),
            r.setShape({
              x: 0,
              y: 0,
              width: o.getWidth(),
              height: o.getHeight(),
            });
        }),
        t.resize(),
        t
      );
    }),
    Tf({type: 'highlight', event: 'highlight', update: 'highlight'}, nt),
    Tf({type: 'downplay', event: 'downplay', update: 'downplay'}, nt),
    Sf('light', sd),
    Sf('dark', hd);
  function Rf(t) {
    return t;
  }
  function zf(t, e, i, n, o) {
    (this._old = t),
      (this._new = e),
      (this._oldKeyGetter = i || Rf),
      (this._newKeyGetter = n || Rf),
      (this.context = o);
  }
  function Bf(t, e, i, n, o) {
    for (var a = 0; a < t.length; a++) {
      var r = '_ec_' + o[n](t[a], a),
        s = e[r];
      null == s
        ? (i.push(r), (e[r] = a))
        : (s.length || (e[r] = s = [s]), s.push(a));
    }
  }
  zf.prototype = {
    constructor: zf,
    add: function(t) {
      return (this._add = t), this;
    },
    update: function(t) {
      return (this._update = t), this;
    },
    remove: function(t) {
      return (this._remove = t), this;
    },
    execute: function() {
      var t = this._old,
        e = this._new,
        i = {},
        n = [],
        o = [];
      for (
        Bf(t, {}, n, '_oldKeyGetter', this),
          Bf(e, i, o, '_newKeyGetter', this),
          a = 0;
        a < t.length;
        a++
      ) {
        if (null != (s = i[(r = n[a])]))
          (u = s.length)
            ? (1 === u && (i[r] = null), (s = s.shift()))
            : (i[r] = null),
            this._update && this._update(s, a);
        else this._remove && this._remove(a);
      }
      for (var a = 0; a < o.length; a++) {
        var r = o[a];
        if (i.hasOwnProperty(r)) {
          var s;
          if (null == (s = i[r])) continue;
          if (s.length)
            for (var l = 0, u = s.length; l < u; l++)
              this._add && this._add(s[l]);
          else this._add && this._add(s);
        }
      }
    },
  };
  var Vf = et(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);
  function Gf(t, e) {
    return t.hasOwnProperty(e) || (t[e] = []), t[e];
  }
  function Ff(t) {
    return 'category' === t ? 'ordinal' : 'time' === t ? 'time' : 'float';
  }
  function Wf(t) {
    null != t && P(this, t), (this.otherDims = {});
  }
  var Hf = V,
    Zf = 'undefined',
    Uf = {
      float: typeof Float64Array == Zf ? Array : Float64Array,
      int: typeof Int32Array == Zf ? Array : Int32Array,
      ordinal: Array,
      number: Array,
      time: Array,
    },
    Xf = typeof Uint32Array == Zf ? Array : Uint32Array,
    Yf = typeof Int32Array == Zf ? Array : Int32Array,
    jf = typeof Uint16Array == Zf ? Array : Uint16Array;
  function qf(t) {
    return 65535 < t._rawCount ? Xf : jf;
  }
  var Kf = [
      'hasItemOption',
      '_nameList',
      '_idList',
      '_invertedIndicesMap',
      '_rawData',
      '_chunkSize',
      '_chunkCount',
      '_dimValueGetter',
      '_count',
      '_rawCount',
      '_nameDimIdx',
      '_idDimIdx',
    ],
    $f = ['_extent', '_approximateExtent', '_rawExtent'];
  function Jf(e, i) {
    E(Kf.concat(i.__wrappedMethods || []), function(t) {
      i.hasOwnProperty(t) && (e[t] = i[t]);
    }),
      (e.__wrappedMethods = i.__wrappedMethods),
      E($f, function(t) {
        e[t] = k(i[t]);
      }),
      (e._calculationInfo = P(i._calculationInfo));
  }
  var Qf = function(t, e) {
      t = t || ['x', 'y'];
      for (var i = {}, n = [], o = {}, a = 0; a < t.length; a++) {
        var r = t[a];
        B(r) ? (r = new Wf({name: r})) : r instanceof Wf || (r = new Wf(r));
        var s = r.name;
        (r.type = r.type || 'float'),
          r.coordDim || ((r.coordDim = s), (r.coordDimIndex = 0)),
          (r.otherDims = r.otherDims || {}),
          n.push(s),
          ((i[s] = r).index = a),
          r.createInvertedIndices && (o[s] = []);
      }
      (this.dimensions = n),
        (this._dimensionInfos = i),
        (this.hostModel = e),
        this.dataType,
        (this._indices = null),
        (this._count = 0),
        (this._rawCount = 0),
        (this._storage = {}),
        (this._nameList = []),
        (this._idList = []),
        (this._optionModels = []),
        (this._visual = {}),
        (this._layout = {}),
        (this._itemVisuals = []),
        (this.hasItemVisual = {}),
        (this._itemLayouts = []),
        (this._graphicEls = []),
        (this._chunkSize = 1e5),
        (this._chunkCount = 0),
        this._rawData,
        (this._rawExtent = {}),
        (this._extent = {}),
        (this._approximateExtent = {}),
        (this._dimensionsSummary = (function(n) {
          var t = {},
            a = (t.encode = {}),
            r = et(),
            s = [],
            l = [],
            u = (t.userOutput = {
              dimensionNames: n.dimensions.slice(),
              encode: {},
            });
          E(n.dimensions, function(t) {
            var o = n.getDimensionInfo(t),
              e = o.coordDim;
            if (e) {
              D && q(null == Vf.get(e));
              var i = o.coordDimIndex;
              (Gf(a, e)[i] = t),
                o.isExtraCoord ||
                  (r.set(e, 1),
                  (function(t) {
                    return !('ordinal' === t || 'time' === t);
                  })(o.type) && (s[0] = t),
                  (Gf(u.encode, e)[i] = o.index)),
                o.defaultTooltip && l.push(t);
            }
            Vf.each(function(t, e) {
              var i = Gf(a, e),
                n = o.otherDims[e];
              null != n && !1 !== n && (i[n] = o.name);
            });
          });
          var o = [],
            h = {};
          r.each(function(t, e) {
            var i = a[e];
            (h[e] = i[0]), (o = o.concat(i));
          }),
            (t.dataDimsOnCoord = o),
            (t.encodeFirstDimNotExtra = h);
          var e = a.label;
          e && e.length && (s = e.slice());
          var i = a.tooltip;
          return (
            i && i.length ? (l = i.slice()) : l.length || (l = s.slice()),
            (a.defaultedLabel = s),
            (a.defaultedTooltip = l),
            t
          );
        })(this)),
        (this._invertedIndicesMap = o),
        (this._calculationInfo = {}),
        (this.userOutput = this._dimensionsSummary.userOutput);
    },
    tp = Qf.prototype;
  function ep(t, e, i, n, o) {
    var a = Uf[e.type],
      r = n - 1,
      s = e.name,
      l = t[s][r];
    if (l && l.length < i) {
      for (var u = new a(Math.min(o - r * i, i)), h = 0; h < l.length; h++)
        u[h] = l[h];
      t[s][r] = u;
    }
    for (var c = n * i; c < o; c += i) t[s].push(new a(Math.min(o - c, i)));
  }
  function ip(o) {
    var a = o._invertedIndicesMap;
    E(a, function(t, e) {
      var i = o._dimensionInfos[e].ordinalMeta;
      if (i) {
        t = a[e] = new Yf(i.categories.length);
        for (var n = 0; n < t.length; n++) t[n] = -1;
        for (n = 0; n < o._count; n++) t[o.get(e, n)] = n;
      }
    });
  }
  function np(t, e, i) {
    var n;
    if (null != e) {
      var o = t._chunkSize,
        a = Math.floor(i / o),
        r = i % o,
        s = t.dimensions[e],
        l = t._storage[s][a];
      if (l) {
        n = l[r];
        var u = t._dimensionInfos[s].ordinalMeta;
        u && u.categories.length && (n = u.categories[n]);
      }
    }
    return n;
  }
  function op(t) {
    return t;
  }
  function ap(t) {
    return t < this._count && 0 <= t ? this._indices[t] : -1;
  }
  function rp(t, e) {
    var i = t._idList[e];
    return (
      null == i && (i = np(t, t._idDimIdx, e)),
      null == i && (i = 'e\0\0' + e),
      i
    );
  }
  function sp(t) {
    return R(t) || (t = [t]), t;
  }
  function lp(t, e) {
    for (var i = 0; i < e.length; i++)
      t._dimensionInfos[e[i]] || console.error('Unkown dimension ' + e[i]);
  }
  function up(t, e) {
    var i = t.dimensions,
      n = new Qf(O(i, t.getDimensionInfo, t), t.hostModel);
    Jf(n, t);
    for (var o = (n._storage = {}), a = t._storage, r = 0; r < i.length; r++) {
      var s = i[r];
      a[s] &&
        (0 <= w(e, s)
          ? ((o[s] = hp(a[s])), (n._rawExtent[s] = cp()), (n._extent[s] = null))
          : (o[s] = a[s]));
    }
    return n;
  }
  function hp(t) {
    for (var e, i, n = new Array(t.length), o = 0; o < t.length; o++)
      n[o] =
        ((e = t[o]),
        (i = void 0),
        (i = e.constructor) === Array ? e.slice() : new i(e));
    return n;
  }
  function cp() {
    return [1 / 0, -1 / 0];
  }
  (tp.type = 'list'),
    (tp.hasItemOption = !0),
    (tp.getDimension = function(t) {
      return (
        ('number' != typeof t &&
          (isNaN(t) || this._dimensionInfos.hasOwnProperty(t))) ||
          (t = this.dimensions[t]),
        t
      );
    }),
    (tp.getDimensionInfo = function(t) {
      return this._dimensionInfos[this.getDimension(t)];
    }),
    (tp.getDimensionsOnCoord = function() {
      return this._dimensionsSummary.dataDimsOnCoord.slice();
    }),
    (tp.mapDimension = function(t, e) {
      var i = this._dimensionsSummary;
      if (null == e) return i.encodeFirstDimNotExtra[t];
      var n = i.encode[t];
      return !0 === e ? (n || []).slice() : n && n[e];
    }),
    (tp.initData = function(t, e, i) {
      var n = ju.isInstance(t) || N(t);
      if (
        (n && (t = new Rh(t, this.dimensions.length)),
        D &&
          !n &&
          ('function' != typeof t.getItem || 'function' != typeof t.count))
      )
        throw new Error('Inavlid data provider.');
      (this._rawData = t),
        (this._storage = {}),
        (this._indices = null),
        (this._nameList = e || []),
        (this._idList = []),
        (this._nameRepeatCount = {}),
        i || (this.hasItemOption = !1),
        (this.defaultDimValueGetter =
          Zh[this._rawData.getSource().sourceFormat]),
        (this._dimValueGetter = i = i || this.defaultDimValueGetter),
        (this._dimValueGetterArrayRows = Zh.arrayRows),
        (this._rawExtent = {}),
        this._initDataFromProvider(0, t.count()),
        t.pure && (this.hasItemOption = !1);
    }),
    (tp.getProvider = function() {
      return this._rawData;
    }),
    (tp.appendData = function(t) {
      D && q(!this._indices, 'appendData can only be called on raw data.');
      var e = this._rawData,
        i = this.count();
      e.appendData(t);
      var n = e.count();
      e.persistent || (n += i), this._initDataFromProvider(i, n);
    }),
    (tp.appendValues = function(t, e) {
      for (
        var i = this._chunkSize,
          n = this._storage,
          o = this.dimensions,
          a = o.length,
          r = this._rawExtent,
          s = this.count(),
          l = s + Math.max(t.length, e ? e.length : 0),
          u = this._chunkCount,
          h = 0;
        h < a;
        h++
      ) {
        r[(v = o[h])] || (r[v] = cp()),
          n[v] || (n[v] = []),
          ep(n, this._dimensionInfos[v], i, u, l),
          (this._chunkCount = n[v].length);
      }
      for (var c = new Array(a), d = s; d < l; d++) {
        for (
          var f = d - s, p = Math.floor(d / i), g = d % i, m = 0;
          m < a;
          m++
        ) {
          var v = o[m],
            y = this._dimValueGetterArrayRows(t[f] || c, v, f, m);
          n[v][p][g] = y;
          var x = r[v];
          y < x[0] && (x[0] = y), y > x[1] && (x[1] = y);
        }
        e && (this._nameList[d] = e[f]);
      }
      (this._rawCount = this._count = l), (this._extent = {}), ip(this);
    }),
    (tp._initDataFromProvider = function(t, e) {
      if (!(e <= t)) {
        for (
          var i,
            n = this._chunkSize,
            o = this._rawData,
            a = this._storage,
            r = this.dimensions,
            s = r.length,
            l = this._dimensionInfos,
            u = this._nameList,
            h = this._idList,
            c = this._rawExtent,
            d = (this._nameRepeatCount = {}),
            f = this._chunkCount,
            p = 0;
          p < s;
          p++
        ) {
          c[(w = r[p])] || (c[w] = cp());
          var g = l[w];
          0 === g.otherDims.itemName && (i = this._nameDimIdx = p),
            0 === g.otherDims.itemId && (this._idDimIdx = p),
            a[w] || (a[w] = []),
            ep(a, g, n, f, e),
            (this._chunkCount = a[w].length);
        }
        for (var m = new Array(s), v = t; v < e; v++) {
          m = o.getItem(v, m);
          for (var y = Math.floor(v / n), x = v % n, _ = 0; _ < s; _++) {
            var w,
              b = a[(w = r[_])][y],
              S = this._dimValueGetter(m, w, v, _);
            b[x] = S;
            var M = c[w];
            S < M[0] && (M[0] = S), S > M[1] && (M[1] = S);
          }
          if (!o.pure) {
            var I = u[v];
            if (m && null == I)
              if (null != m.name) u[v] = I = m.name;
              else if (null != i) {
                var T = r[i],
                  A = a[T][y];
                if (A) {
                  I = A[x];
                  var D = l[T].ordinalMeta;
                  D && D.categories.length && (I = D.categories[I]);
                }
              }
            var C = null == m ? null : m.id;
            null == C &&
              null != I &&
              ((d[I] = d[I] || 0),
              0 < d[(C = I)] && (C += '__ec__' + d[I]),
              d[I]++),
              null != C && (h[v] = C);
          }
        }
        !o.persistent && o.clean && o.clean(),
          (this._rawCount = this._count = e),
          (this._extent = {}),
          ip(this);
      }
    }),
    (tp.count = function() {
      return this._count;
    }),
    (tp.getIndices = function() {
      var t = this._indices;
      if (t) {
        var e = t.constructor,
          i = this._count;
        if (e === Array) {
          o = new e(i);
          for (var n = 0; n < i; n++) o[n] = t[n];
        } else o = new e(t.buffer, 0, i);
      } else {
        var o = new (e = qf(this))(this.count());
        for (n = 0; n < o.length; n++) o[n] = n;
      }
      return o;
    }),
    (tp.get = function(t, e) {
      if (!(0 <= e && e < this._count)) return NaN;
      var i = this._storage;
      if (!i[t]) return NaN;
      e = this.getRawIndex(e);
      var n = Math.floor(e / this._chunkSize),
        o = e % this._chunkSize;
      return i[t][n][o];
    }),
    (tp.getByRawIndex = function(t, e) {
      if (!(0 <= e && e < this._rawCount)) return NaN;
      var i = this._storage[t];
      if (!i) return NaN;
      var n = Math.floor(e / this._chunkSize),
        o = e % this._chunkSize;
      return i[n][o];
    }),
    (tp._getFast = function(t, e) {
      var i = Math.floor(e / this._chunkSize),
        n = e % this._chunkSize;
      return this._storage[t][i][n];
    }),
    (tp.getValues = function(t, e) {
      var i = [];
      R(t) || ((e = t), (t = this.dimensions));
      for (var n = 0, o = t.length; n < o; n++) i.push(this.get(t[n], e));
      return i;
    }),
    (tp.hasValue = function(t) {
      for (
        var e = this._dimensionsSummary.dataDimsOnCoord, i = 0, n = e.length;
        i < n;
        i++
      )
        if (isNaN(this.get(e[i], t))) return !1;
      return !0;
    }),
    (tp.getDataExtent = function(t) {
      t = this.getDimension(t);
      var e = this._storage[t],
        i = cp();
      if (!e) return i;
      var n,
        o = this.count();
      if (!this._indices) return this._rawExtent[t].slice();
      if ((n = this._extent[t])) return n.slice();
      for (var a = (n = i)[0], r = n[1], s = 0; s < o; s++) {
        var l = this._getFast(t, this.getRawIndex(s));
        l < a && (a = l), r < l && (r = l);
      }
      return (n = [a, r]), (this._extent[t] = n);
    }),
    (tp.getApproximateExtent = function(t) {
      return (
        (t = this.getDimension(t)),
        this._approximateExtent[t] || this.getDataExtent(t)
      );
    }),
    (tp.setApproximateExtent = function(t, e) {
      (e = this.getDimension(e)), (this._approximateExtent[e] = t.slice());
    }),
    (tp.getCalculationInfo = function(t) {
      return this._calculationInfo[t];
    }),
    (tp.setCalculationInfo = function(t, e) {
      Hf(t) ? P(this._calculationInfo, t) : (this._calculationInfo[t] = e);
    }),
    (tp.getSum = function(t) {
      var e = 0;
      if (this._storage[t])
        for (var i = 0, n = this.count(); i < n; i++) {
          var o = this.get(t, i);
          isNaN(o) || (e += o);
        }
      return e;
    }),
    (tp.getMedian = function(t) {
      var i = [];
      this.each(t, function(t, e) {
        isNaN(t) || i.push(t);
      });
      var e = [].concat(i).sort(function(t, e) {
          return t - e;
        }),
        n = this.count();
      return 0 === n
        ? 0
        : n % 2 == 1
        ? e[(n - 1) / 2]
        : (e[n / 2] + e[n / 2 - 1]) / 2;
    }),
    (tp.rawIndexOf = function(t, e) {
      var i = t && this._invertedIndicesMap[t];
      if (D && !i) throw new Error('Do not supported yet');
      var n = i[e];
      return null == n || isNaN(n) ? -1 : n;
    }),
    (tp.indexOfName = function(t) {
      for (var e = 0, i = this.count(); e < i; e++)
        if (this.getName(e) === t) return e;
      return -1;
    }),
    (tp.indexOfRawIndex = function(t) {
      if (t >= this._rawCount || t < 0) return -1;
      if (!this._indices) return t;
      var e = this._indices,
        i = e[t];
      if (null != i && i < this._count && i === t) return t;
      for (var n = 0, o = this._count - 1; n <= o; ) {
        var a = ((n + o) / 2) | 0;
        if (e[a] < t) n = 1 + a;
        else {
          if (!(e[a] > t)) return a;
          o = a - 1;
        }
      }
      return -1;
    }),
    (tp.indicesOfNearest = function(t, e, i) {
      var n = [];
      if (!this._storage[t]) return n;
      null == i && (i = 1 / 0);
      for (var o = 1 / 0, a = -1, r = 0, s = 0, l = this.count(); s < l; s++) {
        var u = e - this.get(t, s),
          h = Math.abs(u);
        h <= i &&
          ((h < o || (h === o && 0 <= u && a < 0)) &&
            ((o = h), (a = u), (r = 0)),
          u === a && (n[r++] = s));
      }
      return (n.length = r), n;
    }),
    (tp.getRawIndex = op),
    (tp.getRawDataItem = function(t) {
      if (this._rawData.persistent)
        return this._rawData.getItem(this.getRawIndex(t));
      for (var e = [], i = 0; i < this.dimensions.length; i++) {
        var n = this.dimensions[i];
        e.push(this.get(n, t));
      }
      return e;
    }),
    (tp.getName = function(t) {
      var e = this.getRawIndex(t);
      return this._nameList[e] || np(this, this._nameDimIdx, e) || '';
    }),
    (tp.getId = function(t) {
      return rp(this, this.getRawIndex(t));
    }),
    (tp.each = function(t, e, i, n) {
      if (this._count) {
        'function' == typeof t && ((n = i), (i = e), (e = t), (t = [])),
          (i = i || n || this),
          (t = O(sp(t), this.getDimension, this)),
          D && lp(this, t);
        for (var o = t.length, a = 0; a < this.count(); a++)
          switch (o) {
            case 0:
              e.call(i, a);
              break;
            case 1:
              e.call(i, this.get(t[0], a), a);
              break;
            case 2:
              e.call(i, this.get(t[0], a), this.get(t[1], a), a);
              break;
            default:
              for (var r = 0, s = []; r < o; r++) s[r] = this.get(t[r], a);
              (s[r] = a), e.apply(i, s);
          }
      }
    }),
    (tp.filterSelf = function(t, e, i, n) {
      if (this._count) {
        'function' == typeof t && ((n = i), (i = e), (e = t), (t = [])),
          (i = i || n || this),
          (t = O(sp(t), this.getDimension, this)),
          D && lp(this, t);
        for (
          var o = this.count(),
            a = new (qf(this))(o),
            r = [],
            s = t.length,
            l = 0,
            u = t[0],
            h = 0;
          h < o;
          h++
        ) {
          var c,
            d = this.getRawIndex(h);
          if (0 === s) c = e.call(i, h);
          else if (1 === s) {
            var f = this._getFast(u, d);
            c = e.call(i, f, h);
          } else {
            for (var p = 0; p < s; p++) r[p] = this._getFast(u, d);
            (r[p] = h), (c = e.apply(i, r));
          }
          c && (a[l++] = d);
        }
        return (
          l < o && (this._indices = a),
          (this._count = l),
          (this._extent = {}),
          (this.getRawIndex = this._indices ? ap : op),
          this
        );
      }
    }),
    (tp.selectRange = function(t) {
      if (this._count) {
        var e = [];
        for (var i in t) t.hasOwnProperty(i) && e.push(i);
        D && lp(this, e);
        var n = e.length;
        if (n) {
          var o = this.count(),
            a = new (qf(this))(o),
            r = 0,
            s = e[0],
            l = t[s][0],
            u = t[s][1],
            h = !1;
          if (!this._indices) {
            var c = 0;
            if (1 === n) {
              for (
                var d = this._storage[e[0]], f = 0;
                f < this._chunkCount;
                f++
              )
                for (
                  var p = d[f],
                    g = Math.min(
                      this._count - f * this._chunkSize,
                      this._chunkSize,
                    ),
                    m = 0;
                  m < g;
                  m++
                ) {
                  ((l <= (w = p[m]) && w <= u) || isNaN(w)) && (a[r++] = c),
                    c++;
                }
              h = !0;
            } else if (2 === n) {
              d = this._storage[s];
              var v = this._storage[e[1]],
                y = t[e[1]][0],
                x = t[e[1]][1];
              for (f = 0; f < this._chunkCount; f++) {
                p = d[f];
                var _ = v[f];
                for (
                  g = Math.min(
                    this._count - f * this._chunkSize,
                    this._chunkSize,
                  ),
                    m = 0;
                  m < g;
                  m++
                ) {
                  var w = p[m],
                    b = _[m];
                  ((l <= w && w <= u) || isNaN(w)) &&
                    ((y <= b && b <= x) || isNaN(b)) &&
                    (a[r++] = c),
                    c++;
                }
              }
              h = !0;
            }
          }
          if (!h)
            if (1 === n)
              for (m = 0; m < o; m++) {
                var S = this.getRawIndex(m);
                ((l <= (w = this._getFast(s, S)) && w <= u) || isNaN(w)) &&
                  (a[r++] = S);
              }
            else
              for (m = 0; m < o; m++) {
                var M = !0;
                for (S = this.getRawIndex(m), f = 0; f < n; f++) {
                  var I = e[f];
                  ((w = this._getFast(i, S)) < t[I][0] || w > t[I][1]) &&
                    (M = !1);
                }
                M && (a[r++] = this.getRawIndex(m));
              }
          return (
            r < o && (this._indices = a),
            (this._count = r),
            (this._extent = {}),
            (this.getRawIndex = this._indices ? ap : op),
            this
          );
        }
      }
    }),
    (tp.mapArray = function(t, e, i, n) {
      'function' == typeof t && ((n = i), (i = e), (e = t), (t = [])),
        (i = i || n || this);
      var o = [];
      return (
        this.each(
          t,
          function() {
            o.push(e && e.apply(this, arguments));
          },
          i,
        ),
        o
      );
    }),
    (tp.map = function(t, e, i, n) {
      (i = i || n || this),
        (t = O(sp(t), this.getDimension, this)),
        D && lp(this, t);
      var o = up(this, t);
      (o._indices = this._indices), (o.getRawIndex = o._indices ? ap : op);
      for (
        var a = o._storage,
          r = [],
          s = this._chunkSize,
          l = t.length,
          u = this.count(),
          h = [],
          c = o._rawExtent,
          d = 0;
        d < u;
        d++
      ) {
        for (var f = 0; f < l; f++) h[f] = this.get(t[f], d);
        h[l] = d;
        var p = e && e.apply(i, h);
        if (null != p) {
          'object' != typeof p && ((r[0] = p), (p = r));
          for (
            var g = this.getRawIndex(d),
              m = Math.floor(g / s),
              v = g % s,
              y = 0;
            y < p.length;
            y++
          ) {
            var x = t[y],
              _ = p[y],
              w = c[x],
              b = a[x];
            b && (b[m][v] = _), _ < w[0] && (w[0] = _), _ > w[1] && (w[1] = _);
          }
        }
      }
      return o;
    }),
    (tp.downSample = function(t, e, i, n) {
      for (
        var o = up(this, [t]),
          a = o._storage,
          r = [],
          s = Math.floor(1 / e),
          l = a[t],
          u = this.count(),
          h = this._chunkSize,
          c = o._rawExtent[t],
          d = new (qf(this))(u),
          f = 0,
          p = 0;
        p < u;
        p += s
      ) {
        u - p < s && ((s = u - p), (r.length = s));
        for (var g = 0; g < s; g++) {
          var m = this.getRawIndex(p + g),
            v = Math.floor(m / h),
            y = m % h;
          r[g] = l[v][y];
        }
        var x = i(r),
          _ = this.getRawIndex(Math.min(p + n(r, x) || 0, u - 1)),
          w = _ % h;
        (l[Math.floor(_ / h)][w] = x) < c[0] && (c[0] = x),
          x > c[1] && (c[1] = x),
          (d[f++] = _);
      }
      return (o._count = f), (o._indices = d), (o.getRawIndex = ap), o;
    }),
    (tp.getItemModel = function(t) {
      var e = this.hostModel;
      return new Pl(this.getRawDataItem(t), e, e && e.ecModel);
    }),
    (tp.diff = function(e) {
      var i = this;
      return new zf(
        e ? e.getIndices() : [],
        this.getIndices(),
        function(t) {
          return rp(e, t);
        },
        function(t) {
          return rp(i, t);
        },
      );
    }),
    (tp.getVisual = function(t) {
      var e = this._visual;
      return e && e[t];
    }),
    (tp.setVisual = function(t, e) {
      if (Hf(t))
        for (var i in t) t.hasOwnProperty(i) && this.setVisual(i, t[i]);
      else (this._visual = this._visual || {}), (this._visual[t] = e);
    }),
    (tp.setLayout = function(t, e) {
      if (Hf(t))
        for (var i in t) t.hasOwnProperty(i) && this.setLayout(i, t[i]);
      else this._layout[t] = e;
    }),
    (tp.getLayout = function(t) {
      return this._layout[t];
    }),
    (tp.getItemLayout = function(t) {
      return this._itemLayouts[t];
    }),
    (tp.setItemLayout = function(t, e, i) {
      this._itemLayouts[t] = i ? P(this._itemLayouts[t] || {}, e) : e;
    }),
    (tp.clearItemLayouts = function() {
      this._itemLayouts.length = 0;
    }),
    (tp.getItemVisual = function(t, e, i) {
      var n = this._itemVisuals[t],
        o = n && n[e];
      return null != o || i ? o : this.getVisual(e);
    }),
    (tp.setItemVisual = function(t, e, i) {
      var n = this._itemVisuals[t] || {},
        o = this.hasItemVisual;
      if (((this._itemVisuals[t] = n), Hf(e)))
        for (var a in e) e.hasOwnProperty(a) && ((n[a] = e[a]), (o[a] = !0));
      else (n[e] = i), (o[e] = !0);
    }),
    (tp.clearAllVisual = function() {
      (this._visual = {}), (this._itemVisuals = []), (this.hasItemVisual = {});
    });
  function dp(t) {
    (t.seriesIndex = this.seriesIndex),
      (t.dataIndex = this.dataIndex),
      (t.dataType = this.dataType);
  }
  function fp(t, e, i) {
    ju.isInstance(e) || (e = ju.seriesDataToSource(e)),
      (i = i || {}),
      (t = (t || []).slice());
    for (
      var n = (i.dimsDef || []).slice(),
        o = et(),
        a = et(),
        l = [],
        r = (function(t, e, i, n) {
          var o = Math.max(
            t.dimensionsDetectCount || 1,
            e.length,
            i.length,
            n || 0,
          );
          return (
            E(e, function(t) {
              var e = t.dimsDef;
              e && (o = Math.max(o, e.length));
            }),
            o
          );
        })(e, t, n, i.dimCount),
        s = 0;
      s < r;
      s++
    ) {
      var u = (n[s] = P({}, V(n[s]) ? n[s] : {name: n[s]})),
        h = u.name,
        c = (l[s] = new Wf());
      null != h &&
        null == o.get(h) &&
        ((c.name = c.displayName = h), o.set(h, s)),
        null != u.type && (c.type = u.type),
        null != u.displayName && (c.displayName = u.displayName);
    }
    var d = i.encodeDef;
    !d && i.encodeDefaulter && (d = i.encodeDefaulter(e, r)),
      (d = et(d)).each(function(t, i) {
        if (1 === (t = Wo(t).slice()).length && !B(t[0]) && t[0] < 0)
          d.set(i, !1);
        else {
          var n = d.set(i, []);
          E(t, function(t, e) {
            B(t) && (t = o.get(t)),
              null != t && t < r && ((n[e] = t), p(l[t], i, e));
          });
        }
      });
    var f = 0;
    function p(t, e, i) {
      null != Vf.get(e)
        ? (t.otherDims[e] = i)
        : ((t.coordDim = e), (t.coordDimIndex = i), a.set(e, !0));
    }
    E(t, function(o, t) {
      var a, r, s;
      if (B(o)) (a = o), (o = {});
      else {
        a = o.name;
        var e = o.ordinalMeta;
        (o.ordinalMeta = null),
          ((o = k(o)).ordinalMeta = e),
          (r = o.dimsDef),
          (s = o.otherDims),
          (o.name = o.coordDim = o.coordDimIndex = o.dimsDef = o.otherDims = null);
      }
      if (!1 !== (i = d.get(a))) {
        var i;
        if (!(i = Wo(i)).length)
          for (var n = 0; n < ((r && r.length) || 1); n++) {
            for (; f < l.length && null != l[f].coordDim; ) f++;
            f < l.length && i.push(f++);
          }
        E(i, function(t, e) {
          var i = l[t];
          if ((p(C(i, o), a, e), null == i.name && r)) {
            var n = r[e];
            V(n) || (n = {name: n}),
              (i.name = i.displayName = n.name),
              (i.defaultTooltip = n.defaultTooltip);
          }
          s && C(i.otherDims, s);
        });
      }
    });
    var g = i.generateCoord,
      m = i.generateCoordCount,
      v = null != m;
    m = g ? m || 1 : 0;
    for (var y, x, _ = g || 'value', w = 0; w < r; w++) {
      null == (c = l[w] = l[w] || new Wf()).coordDim &&
        ((c.coordDim = pp(_, a, v)),
        (c.coordDimIndex = 0),
        (!g || m <= 0) && (c.isExtraCoord = !0),
        m--),
        null == c.name && (c.name = pp(c.coordDim, o)),
        null == c.type &&
          ((y = e),
          (x = w),
          c.name,
          nh(
            y.data,
            y.sourceFormat,
            y.seriesLayoutBy,
            y.dimensionsDefine,
            y.startIndex,
            x,
          ) === qu.Must ||
            (c.isExtraCoord &&
              (null != c.otherDims.itemName ||
                null != c.otherDims.seriesName))) &&
          (c.type = 'ordinal');
    }
    return l;
  }
  function pp(t, e, i) {
    if (i || null != e.get(t)) {
      for (var n = 0; null != e.get(t + n); ) n++;
      t += n;
    }
    return e.set(t, !0), t;
  }
  (tp.setItemGraphicEl = function(t, e) {
    var i = this.hostModel;
    e &&
      ((e.dataIndex = t),
      (e.dataType = this.dataType),
      (e.seriesIndex = i && i.seriesIndex),
      'group' === e.type && e.traverse(dp, e)),
      (this._graphicEls[t] = e);
  }),
    (tp.getItemGraphicEl = function(t) {
      return this._graphicEls[t];
    }),
    (tp.eachItemGraphicEl = function(i, n) {
      E(this._graphicEls, function(t, e) {
        t && i && i.call(n, t, e);
      });
    }),
    (tp.cloneShallow = function(t) {
      if (!t) {
        var e = O(this.dimensions, this.getDimensionInfo, this);
        t = new Qf(e, this.hostModel);
      }
      if (((t._storage = this._storage), Jf(t, this), this._indices)) {
        var i = this._indices.constructor;
        t._indices = new i(this._indices);
      } else t._indices = null;
      return (t.getRawIndex = t._indices ? ap : op), t;
    }),
    (tp.wrapMethod = function(t, e) {
      var i = this[t];
      'function' == typeof i &&
        ((this.__wrappedMethods = this.__wrappedMethods || []),
        this.__wrappedMethods.push(t),
        (this[t] = function() {
          var t = i.apply(this, arguments);
          return e.apply(this, [t].concat(Y(arguments)));
        }));
    }),
    (tp.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']),
    (tp.CHANGABLE_METHODS = ['filterSelf', 'selectRange']);
  var gp = function(t, e) {
    return fp((e = e || {}).coordDimensions || [], t, {
      dimsDef: e.dimensionsDefine || t.dimensionsDefine,
      encodeDef: e.encodeDefine || t.encodeDefine,
      dimCount: e.dimensionsCount,
      encodeDefaulter: e.encodeDefaulter,
      generateCoord: e.generateCoord,
      generateCoordCount: e.generateCoordCount,
    });
  };
  function mp(t) {
    (this.coordSysName = t),
      (this.coordSysDims = []),
      (this.axisMap = et()),
      (this.categoryAxisMap = et()),
      (this.firstCategoryDimIndex = null);
  }
  var vp = {
    cartesian2d: function(t, e, i, n) {
      var o = t.getReferringComponents('xAxis')[0],
        a = t.getReferringComponents('yAxis')[0];
      if (D) {
        if (!o)
          throw new Error(
            'xAxis "' +
              Z(t.get('xAxisIndex'), t.get('xAxisId'), 0) +
              '" not found',
          );
        if (!a)
          throw new Error(
            'yAxis "' +
              Z(t.get('xAxisIndex'), t.get('yAxisId'), 0) +
              '" not found',
          );
      }
      (e.coordSysDims = ['x', 'y']),
        i.set('x', o),
        i.set('y', a),
        yp(o) && (n.set('x', o), (e.firstCategoryDimIndex = 0)),
        yp(a) &&
          (n.set('y', a),
          e.firstCategoryDimIndex,
          (e.firstCategoryDimIndex = 1));
    },
    singleAxis: function(t, e, i, n) {
      var o = t.getReferringComponents('singleAxis')[0];
      if (D && !o) throw new Error('singleAxis should be specified.');
      (e.coordSysDims = ['single']),
        i.set('single', o),
        yp(o) && (n.set('single', o), (e.firstCategoryDimIndex = 0));
    },
    polar: function(t, e, i, n) {
      var o = t.getReferringComponents('polar')[0],
        a = o.findAxisModel('radiusAxis'),
        r = o.findAxisModel('angleAxis');
      if (D) {
        if (!r) throw new Error('angleAxis option not found');
        if (!a) throw new Error('radiusAxis option not found');
      }
      (e.coordSysDims = ['radius', 'angle']),
        i.set('radius', a),
        i.set('angle', r),
        yp(a) && (n.set('radius', a), (e.firstCategoryDimIndex = 0)),
        yp(r) &&
          (n.set('angle', r),
          null == e.firstCategoryDimIndex && (e.firstCategoryDimIndex = 1));
    },
    geo: function(t, e, i, n) {
      e.coordSysDims = ['lng', 'lat'];
    },
    parallel: function(t, o, a, r) {
      var s = t.ecModel,
        e = s.getComponent('parallel', t.get('parallelIndex')),
        l = (o.coordSysDims = e.dimensions.slice());
      E(e.parallelAxisIndex, function(t, e) {
        var i = s.getComponent('parallelAxis', t),
          n = l[e];
        a.set(n, i),
          yp(i) &&
            null == o.firstCategoryDimIndex &&
            (r.set(n, i), (o.firstCategoryDimIndex = e));
      });
    },
  };
  function yp(t) {
    return 'category' === t.get('type');
  }
  function xp(t, i, e) {
    var n,
      o,
      a,
      r,
      s = (e = e || {}).byIndex,
      l = e.stackedCoordDimension,
      u = !(!t || !t.get('stack'));
    if (
      (E(i, function(t, e) {
        B(t) && (i[e] = t = {name: t}),
          u &&
            !t.isExtraCoord &&
            (s || n || !t.ordinalMeta || (n = t),
            o ||
              'ordinal' === t.type ||
              'time' === t.type ||
              (l && l !== t.coordDim) ||
              (o = t));
      }),
      !o || s || n || (s = !0),
      o)
    ) {
      (a = '__\0ecstackresult'),
        (r = '__\0ecstackedover'),
        n && (n.createInvertedIndices = !0);
      var h = o.coordDim,
        c = o.type,
        d = 0;
      E(i, function(t) {
        t.coordDim === h && d++;
      }),
        i.push({
          name: a,
          coordDim: h,
          coordDimIndex: d,
          type: c,
          isExtraCoord: !0,
          isCalculationCoord: !0,
        }),
        d++,
        i.push({
          name: r,
          coordDim: r,
          coordDimIndex: d,
          type: c,
          isExtraCoord: !0,
          isCalculationCoord: !0,
        });
    }
    return {
      stackedDimension: o && o.name,
      stackedByDimension: n && n.name,
      isStackedByIndex: s,
      stackedOverDimension: r,
      stackResultDimension: a,
    };
  }
  function _p(t, e) {
    return !!e && e === t.getCalculationInfo('stackedDimension');
  }
  function wp(t, e) {
    return _p(t, e) ? t.getCalculationInfo('stackResultDimension') : e;
  }
  function bp(t, e, i) {
    (i = i || {}), ju.isInstance(t) || (t = ju.seriesDataToSource(t));
    var n,
      o = e.get('coordinateSystem'),
      a = dh.get(o),
      r = (function(t) {
        var e = t.get('coordinateSystem'),
          i = new mp(e),
          n = vp[e];
        if (n) return n(t, i, i.axisMap, i.categoryAxisMap), i;
      })(e);
    r &&
      (n = O(r.coordSysDims, function(t) {
        var e = {name: t},
          i = r.axisMap.get(t);
        if (i) {
          var n = i.get('type');
          e.type = Ff(n);
        }
        return e;
      })),
      (n =
        n ||
        ((a &&
          (a.getDimensionsInfo
            ? a.getDimensionsInfo()
            : a.dimensions.slice())) || ['x', 'y']));
    var s,
      l,
      u = gp(t, {
        coordDimensions: n,
        generateCoord: i.generateCoord,
        encodeDefaulter: i.useEncodeDefaulter ? L(th, n, e) : null,
      });
    r &&
      E(u, function(t, e) {
        var i = t.coordDim,
          n = r.categoryAxisMap.get(i);
        n && (null == s && (s = e), (t.ordinalMeta = n.getOrdinalMeta())),
          null != t.otherDims.itemName && (l = !0);
      }),
      l || null == s || (u[s].otherDims.itemName = 0);
    var h = xp(e, u),
      c = new Qf(u, e);
    c.setCalculationInfo(h);
    var d =
      null != s &&
      (function(t) {
        if (t.sourceFormat === Gu) {
          var e = (function(t) {
            var e = 0;
            for (; e < t.length && null == t[e]; ) e++;
            return t[e];
          })(t.data || []);
          return null != e && !R(Uo(e));
        }
      })(t)
        ? function(t, e, i, n) {
            return n === s ? i : this.defaultDimValueGetter(t, e, i, n);
          }
        : null;
    return (c.hasItemOption = !1), c.initData(t, null, d), c;
  }
  function Sp(t) {
    (this._setting = t || {}),
      (this._extent = [1 / 0, -1 / 0]),
      (this._interval = 0),
      this.init && this.init.apply(this, arguments);
  }
  function Mp(t) {
    (this.categories = t.categories || []),
      (this._needCollect = t.needCollect),
      (this._deduplication = t.deduplication),
      this._map;
  }
  (Sp.prototype.parse = function(t) {
    return t;
  }),
    (Sp.prototype.getSetting = function(t) {
      return this._setting[t];
    }),
    (Sp.prototype.contain = function(t) {
      var e = this._extent;
      return t >= e[0] && t <= e[1];
    }),
    (Sp.prototype.normalize = function(t) {
      var e = this._extent;
      return e[1] === e[0] ? 0.5 : (t - e[0]) / (e[1] - e[0]);
    }),
    (Sp.prototype.scale = function(t) {
      var e = this._extent;
      return t * (e[1] - e[0]) + e[0];
    }),
    (Sp.prototype.unionExtent = function(t) {
      var e = this._extent;
      t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]);
    }),
    (Sp.prototype.unionExtentFromData = function(t, e) {
      this.unionExtent(t.getApproximateExtent(e));
    }),
    (Sp.prototype.getExtent = function() {
      return this._extent.slice();
    }),
    (Sp.prototype.setExtent = function(t, e) {
      var i = this._extent;
      isNaN(t) || (i[0] = t), isNaN(e) || (i[1] = e);
    }),
    (Sp.prototype.isBlank = function() {
      return this._isBlank;
    }),
    (Sp.prototype.setBlank = function(t) {
      this._isBlank = t;
    }),
    (Sp.prototype.getLabel = null),
    sa(Sp),
    da(Sp, {registerWhenExtend: !0}),
    (Mp.createByAxisModel = function(t) {
      var e = t.option,
        i = e.data,
        n = i && O(i, Ap);
      return new Mp({
        categories: n,
        needCollect: !n,
        deduplication: !1 !== e.dedplication,
      });
    });
  var Ip = Mp.prototype;
  function Tp(t) {
    return t._map || (t._map = et(t.categories));
  }
  function Ap(t) {
    return V(t) && null != t.value ? t.value : t + '';
  }
  (Ip.getOrdinal = function(t) {
    return Tp(this).get(t);
  }),
    (Ip.parseAndCollect = function(t) {
      var e,
        i = this._needCollect;
      if ('string' != typeof t && !i) return t;
      if (i && !this._deduplication)
        return (e = this.categories.length), (this.categories[e] = t), e;
      var n = Tp(this);
      return (
        null == (e = n.get(t)) &&
          (i
            ? ((e = this.categories.length),
              (this.categories[e] = t),
              n.set(t, e))
            : (e = NaN)),
        e
      );
    });
  var Dp = Sp.prototype,
    Cp = Sp.extend({
      type: 'ordinal',
      init: function(t, e) {
        (t && !R(t)) || (t = new Mp({categories: t})),
          (this._ordinalMeta = t),
          (this._extent = e || [0, t.categories.length - 1]);
      },
      parse: function(t) {
        return 'string' == typeof t
          ? this._ordinalMeta.getOrdinal(t)
          : Math.round(t);
      },
      contain: function(t) {
        return (
          (t = this.parse(t)),
          Dp.contain.call(this, t) && null != this._ordinalMeta.categories[t]
        );
      },
      normalize: function(t) {
        return Dp.normalize.call(this, this.parse(t));
      },
      scale: function(t) {
        return Math.round(Dp.scale.call(this, t));
      },
      getTicks: function() {
        for (var t = [], e = this._extent, i = e[0]; i <= e[1]; )
          t.push(i), i++;
        return t;
      },
      getLabel: function(t) {
        if (!this.isBlank()) return this._ordinalMeta.categories[t];
      },
      count: function() {
        return this._extent[1] - this._extent[0] + 1;
      },
      unionExtentFromData: function(t, e) {
        this.unionExtent(t.getApproximateExtent(e));
      },
      getOrdinalMeta: function() {
        return this._ordinalMeta;
      },
      niceTicks: nt,
      niceExtent: nt,
    });
  Cp.create = function() {
    return new Cp();
  };
  var Lp = Gl;
  function kp(t) {
    return Hl(t) + 2;
  }
  function Pp(t, e, i) {
    t[e] = Math.max(Math.min(t[e], i[1]), i[0]);
  }
  function Np(t, e) {
    isFinite(t[0]) || (t[0] = e[0]),
      isFinite(t[1]) || (t[1] = e[1]),
      Pp(t, 0, e),
      Pp(t, 1, e),
      t[0] > t[1] && (t[0] = t[1]);
  }
  var Op = Gl,
    Ep = Sp.extend({
      type: 'interval',
      _interval: 0,
      _intervalPrecision: 2,
      setExtent: function(t, e) {
        var i = this._extent;
        isNaN(t) || (i[0] = parseFloat(t)), isNaN(e) || (i[1] = parseFloat(e));
      },
      unionExtent: function(t) {
        var e = this._extent;
        t[0] < e[0] && (e[0] = t[0]),
          t[1] > e[1] && (e[1] = t[1]),
          Ep.prototype.setExtent.call(this, e[0], e[1]);
      },
      getInterval: function() {
        return this._interval;
      },
      setInterval: function(t) {
        (this._interval = t),
          (this._niceExtent = this._extent.slice()),
          (this._intervalPrecision = kp(t));
      },
      getTicks: function(t) {
        var e = this._interval,
          i = this._extent,
          n = this._niceExtent,
          o = this._intervalPrecision,
          a = [];
        if (!e) return a;
        i[0] < n[0] && (t ? a.push(Op(n[0] - e, o)) : a.push(i[0]));
        for (
          var r = n[0];
          r <= n[1] && (a.push(r), (r = Op(r + e, o)) !== a[a.length - 1]);

        )
          if (1e4 < a.length) return [];
        var s = a.length ? a[a.length - 1] : n[1];
        return i[1] > s && (t ? a.push(Op(s + e, o)) : a.push(i[1])), a;
      },
      getMinorTicks: function(t) {
        for (
          var e = this.getTicks(!0), i = [], n = this.getExtent(), o = 1;
          o < e.length;
          o++
        ) {
          for (
            var a = e[o], r = e[o - 1], s = 0, l = [], u = (a - r) / t;
            s < t - 1;

          ) {
            var h = Gl(r + (s + 1) * u);
            h > n[0] && h < n[1] && l.push(h), s++;
          }
          i.push(l);
        }
        return i;
      },
      getLabel: function(t, e) {
        if (null == t) return '';
        var i = e && e.precision;
        return (
          null == i
            ? (i = Hl(t) || 0)
            : 'auto' === i && (i = this._intervalPrecision),
          nu((t = Op(t, i, !0)))
        );
      },
      niceTicks: function(t, e, i) {
        t = t || 5;
        var n = this._extent,
          o = n[1] - n[0];
        if (isFinite(o)) {
          o < 0 && ((o = -o), n.reverse());
          var a = (function(t, e, i, n) {
            var o = {},
              a = t[1] - t[0],
              r = (o.interval = Ql(a / e, !0));
            null != i && r < i && (r = o.interval = i),
              null != n && n < r && (r = o.interval = n);
            var s = (o.intervalPrecision = kp(r));
            return (
              Np(
                (o.niceTickExtent = [
                  Lp(Math.ceil(t[0] / r) * r, s),
                  Lp(Math.floor(t[1] / r) * r, s),
                ]),
                t,
              ),
              o
            );
          })(n, t, e, i);
          (this._intervalPrecision = a.intervalPrecision),
            (this._interval = a.interval),
            (this._niceExtent = a.niceTickExtent);
        }
      },
      niceExtent: function(t) {
        var e = this._extent;
        if (e[0] === e[1])
          if (0 !== e[0]) {
            var i = e[0];
            t.fixMax || (e[1] += i / 2), (e[0] -= i / 2);
          } else e[1] = 1;
        var n = e[1] - e[0];
        isFinite(n) || ((e[0] = 0), (e[1] = 1)),
          this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval);
        var o = this._interval;
        t.fixMin || (e[0] = Op(Math.floor(e[0] / o) * o)),
          t.fixMax || (e[1] = Op(Math.ceil(e[1] / o) * o));
      },
    });
  Ep.create = function() {
    return new Ep();
  };
  var Rp = '__ec_stack_',
    zp = 'undefined' != typeof Float32Array ? Float32Array : Array;
  function Bp(t) {
    return t.get('stack') || Rp + t.seriesIndex;
  }
  function Vp(t) {
    return t.dim + t.index;
  }
  function Gp(t, e) {
    var i = [];
    return (
      e.eachSeriesByType(t, function(t) {
        Xp(t) && !Yp(t) && i.push(t);
      }),
      i
    );
  }
  function Fp(t) {
    var g = (function(t) {
        var l = {};
        E(t, function(t) {
          var e = t.coordinateSystem.getBaseAxis();
          if ('time' === e.type || 'value' === e.type)
            for (
              var i = t.getData(),
                n = e.dim + '_' + e.index,
                o = i.mapDimension(e.dim),
                a = 0,
                r = i.count();
              a < r;
              ++a
            ) {
              var s = i.get(o, a);
              l[n] ? l[n].push(s) : (l[n] = [s]);
            }
        });
        var e = [];
        for (var i in l)
          if (l.hasOwnProperty(i)) {
            var n = l[i];
            if (n) {
              n.sort(function(t, e) {
                return t - e;
              });
              for (var o = null, a = 1; a < n.length; ++a) {
                var r = n[a] - n[a - 1];
                0 < r && (o = null === o ? r : Math.min(o, r));
              }
              e[i] = o;
            }
          }
        return e;
      })(t),
      m = [];
    return (
      E(t, function(t) {
        var e,
          i = t.coordinateSystem.getBaseAxis(),
          n = i.getExtent();
        if ('category' === i.type) e = i.getBandWidth();
        else if ('value' === i.type || 'time' === i.type) {
          var o = i.dim + '_' + i.index,
            a = g[o],
            r = Math.abs(n[1] - n[0]),
            s = i.scale.getExtent(),
            l = Math.abs(s[1] - s[0]);
          e = a ? (r / l) * a : r;
        } else {
          var u = t.getData();
          e = Math.abs(n[1] - n[0]) / u.count();
        }
        var h = Vl(t.get('barWidth'), e),
          c = Vl(t.get('barMaxWidth'), e),
          d = Vl(t.get('barMinWidth') || 1, e),
          f = t.get('barGap'),
          p = t.get('barCategoryGap');
        m.push({
          bandWidth: e,
          barWidth: h,
          barMaxWidth: c,
          barMinWidth: d,
          barGap: f,
          barCategoryGap: p,
          axisKey: Vp(i),
          stackId: Bp(t),
        });
      }),
      Wp(m)
    );
  }
  function Wp(t) {
    var d = {};
    E(t, function(t, e) {
      var i = t.axisKey,
        n = t.bandWidth,
        o = d[i] || {
          bandWidth: n,
          remainedWidth: n,
          autoWidthCount: 0,
          categoryGap: '20%',
          gap: '30%',
          stacks: {},
        },
        a = o.stacks;
      d[i] = o;
      var r = t.stackId;
      a[r] || o.autoWidthCount++, (a[r] = a[r] || {width: 0, maxWidth: 0});
      var s = t.barWidth;
      s &&
        !a[r].width &&
        ((a[r].width = s),
        (s = Math.min(o.remainedWidth, s)),
        (o.remainedWidth -= s));
      var l = t.barMaxWidth;
      l && (a[r].maxWidth = l);
      var u = t.barMinWidth;
      u && (a[r].minWidth = u);
      var h = t.barGap;
      null != h && (o.gap = h);
      var c = t.barCategoryGap;
      null != c && (o.categoryGap = c);
    });
    var f = {};
    return (
      E(d, function(t, i) {
        f[i] = {};
        var e = t.stacks,
          n = t.bandWidth,
          o = Vl(t.categoryGap, n),
          a = Vl(t.gap, 1),
          r = t.remainedWidth,
          s = t.autoWidthCount,
          l = (r - o) / (s + (s - 1) * a);
        (l = Math.max(l, 0)),
          E(e, function(t) {
            var e = t.maxWidth,
              i = t.minWidth;
            if (t.width) {
              n = t.width;
              e && (n = Math.min(n, e)),
                i && (n = Math.max(n, i)),
                (t.width = n),
                (r -= n + a * n),
                s--;
            } else {
              var n = l;
              e && e < n && (n = Math.min(e, r)),
                i && n < i && (n = i),
                n !== l && ((t.width = n), (r -= n + a * n), s--);
            }
          }),
          (l = (r - o) / (s + (s - 1) * a)),
          (l = Math.max(l, 0));
        var u,
          h = 0;
        E(e, function(t, e) {
          t.width || (t.width = l), (h += (u = t).width * (1 + a));
        }),
          u && (h -= u.width * a);
        var c = -h / 2;
        E(e, function(t, e) {
          (f[i][e] = f[i][e] || {bandWidth: n, offset: c, width: t.width}),
            (c += t.width * (1 + a));
        });
      }),
      f
    );
  }
  function Hp(t, e, i) {
    if (t && e) {
      var n = t[Vp(e)];
      return null != n && null != i && (n = n[Bp(i)]), n;
    }
  }
  function Zp(t, e) {
    var i = Gp(t, e),
      T = Fp(i),
      A = {};
    E(
      i,
      function(t) {
        var e = t.getData(),
          i = t.coordinateSystem,
          n = i.getBaseAxis(),
          o = Bp(t),
          a = T[Vp(n)][o],
          r = a.offset,
          s = a.width,
          l = i.getOtherAxis(n),
          u = t.get('barMinHeight') || 0;
        (A[o] = A[o] || []),
          e.setLayout({bandWidth: a.bandWidth, offset: r, size: s});
        for (
          var h = e.mapDimension(l.dim),
            c = e.mapDimension(n.dim),
            d = _p(e, h),
            f = l.isHorizontal(),
            p = jp(n, l, d),
            g = 0,
            m = e.count();
          g < m;
          g++
        ) {
          var v,
            y,
            x,
            _,
            w,
            b = e.get(h, g),
            S = e.get(c, g),
            M = 0 <= b ? 'p' : 'n',
            I = p;
          if ((d && (A[o][S] || (A[o][S] = {p: p, n: p}), (I = A[o][S][M])), f))
            (v = I),
              (y = (w = i.dataToPoint([b, S]))[1] + r),
              (x = w[0] - p),
              (_ = s),
              Math.abs(x) < u && (x = (x < 0 ? -1 : 1) * u),
              isNaN(x) || (d && (A[o][S][M] += x));
          else
            (v = (w = i.dataToPoint([S, b]))[0] + r),
              (y = I),
              (x = s),
              (_ = w[1] - p),
              Math.abs(_) < u && (_ = (_ <= 0 ? -1 : 1) * u),
              isNaN(_) || (d && (A[o][S][M] += _));
          e.setItemLayout(g, {x: v, y: y, width: x, height: _});
        }
      },
      this,
    );
  }
  var Up = {
    seriesType: 'bar',
    plan: wc(),
    reset: function(t) {
      if (Xp(t) && Yp(t)) {
        var e = t.getData(),
          c = t.coordinateSystem,
          d = c.grid.getRect(),
          f = c.getBaseAxis(),
          p = c.getOtherAxis(f),
          g = e.mapDimension(p.dim),
          m = e.mapDimension(f.dim),
          v = p.isHorizontal(),
          y = v ? 0 : 1,
          x = Hp(Fp([t]), f, t).width;
        return (
          0.5 < x || (x = 0.5),
          {
            progress: function(t, e) {
              var i,
                n = t.count,
                o = new zp(2 * n),
                a = new zp(2 * n),
                r = new zp(n),
                s = [],
                l = [],
                u = 0,
                h = 0;
              for (; null != (i = t.next()); )
                (l[y] = e.get(g, i)),
                  (l[1 - y] = e.get(m, i)),
                  (s = c.dataToPoint(l, null, s)),
                  (a[u] = v ? d.x + d.width : s[0]),
                  (o[u++] = s[0]),
                  (a[u] = v ? s[1] : d.y + d.height),
                  (o[u++] = s[1]),
                  (r[h++] = i);
              e.setLayout({
                largePoints: o,
                largeDataIndices: r,
                largeBackgroundPoints: a,
                barWidth: x,
                valueAxisStart: jp(f, p, !1),
                backgroundStart: v ? d.x : d.y,
                valueAxisHorizontal: v,
              });
            },
          }
        );
      }
    },
  };
  function Xp(t) {
    return t.coordinateSystem && 'cartesian2d' === t.coordinateSystem.type;
  }
  function Yp(t) {
    return t.pipelineContext && t.pipelineContext.large;
  }
  function jp(t, e) {
    return e.toGlobalCoord(e.dataToCoord('log' === e.type ? 1 : 0));
  }
  var qp = Ep.prototype,
    Kp = Math.ceil,
    $p = Math.floor,
    Jp = 36e5,
    Qp = 864e5,
    tg = Ep.extend({
      type: 'time',
      getLabel: function(t) {
        var e = this._stepLvl,
          i = new Date(t);
        return gu(e[0], i, this.getSetting('useUTC'));
      },
      niceExtent: function(t) {
        var e = this._extent;
        if (
          (e[0] === e[1] && ((e[0] -= Qp), (e[1] += Qp)),
          e[1] === -1 / 0 && e[0] === 1 / 0)
        ) {
          var i = new Date();
          (e[1] = +new Date(i.getFullYear(), i.getMonth(), i.getDate())),
            (e[0] = e[1] - Qp);
        }
        this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval);
        var n = this._interval;
        t.fixMin || (e[0] = Gl($p(e[0] / n) * n)),
          t.fixMax || (e[1] = Gl(Kp(e[1] / n) * n));
      },
      niceTicks: function(t, e, i) {
        t = t || 10;
        var n = this._extent,
          o = n[1] - n[0],
          a = o / t;
        null != e && a < e && (a = e), null != i && i < a && (a = i);
        var r = eg.length,
          s = (function(t, e, i, n) {
            for (; i < n; ) {
              var o = (i + n) >>> 1;
              t[o][1] < e ? (i = 1 + o) : (n = o);
            }
            return i;
          })(eg, a, 0, r),
          l = eg[Math.min(s, r - 1)],
          u = l[1];
        'year' === l[0] && (u *= Ql(o / u / t, !0));
        var h = this.getSetting('useUTC')
            ? 0
            : 60 * new Date(+n[0] || +n[1]).getTimezoneOffset() * 1e3,
          c = [
            Math.round(Kp((n[0] - h) / u) * u + h),
            Math.round($p((n[1] - h) / u) * u + h),
          ];
        Np(c, n),
          (this._stepLvl = l),
          (this._interval = u),
          (this._niceExtent = c);
      },
      parse: function(t) {
        return +Kl(t);
      },
    });
  E(['contain', 'normalize'], function(e) {
    tg.prototype[e] = function(t) {
      return qp[e].call(this, this.parse(t));
    };
  });
  var eg = [
    ['hh:mm:ss', 1e3],
    ['hh:mm:ss', 5e3],
    ['hh:mm:ss', 1e4],
    ['hh:mm:ss', 15e3],
    ['hh:mm:ss', 3e4],
    ['hh:mm\nMM-dd', 6e4],
    ['hh:mm\nMM-dd', 3e5],
    ['hh:mm\nMM-dd', 6e5],
    ['hh:mm\nMM-dd', 9e5],
    ['hh:mm\nMM-dd', 18e5],
    ['hh:mm\nMM-dd', Jp],
    ['hh:mm\nMM-dd', 72e5],
    ['hh:mm\nMM-dd', 6 * Jp],
    ['hh:mm\nMM-dd', 432e5],
    ['MM-dd\nyyyy', Qp],
    ['MM-dd\nyyyy', 2 * Qp],
    ['MM-dd\nyyyy', 3 * Qp],
    ['MM-dd\nyyyy', 4 * Qp],
    ['MM-dd\nyyyy', 5 * Qp],
    ['MM-dd\nyyyy', 6 * Qp],
    ['week', 7 * Qp],
    ['MM-dd\nyyyy', 864e6],
    ['week', 14 * Qp],
    ['week', 21 * Qp],
    ['month', 31 * Qp],
    ['week', 42 * Qp],
    ['month', 62 * Qp],
    ['week', 70 * Qp],
    ['quarter', 95 * Qp],
    ['month', 31 * Qp * 4],
    ['month', 13392e6],
    ['half-year', 16416e6],
    ['month', 31 * Qp * 8],
    ['month', 26784e6],
    ['year', 380 * Qp],
  ];
  tg.create = function(t) {
    return new tg({useUTC: t.ecModel.get('useUTC')});
  };
  var ig = Sp.prototype,
    ng = Ep.prototype,
    og = Hl,
    ag = Gl,
    rg = Math.floor,
    sg = Math.ceil,
    lg = Math.pow,
    ug = Math.log,
    hg = Sp.extend({
      type: 'log',
      base: 10,
      $constructor: function() {
        Sp.apply(this, arguments), (this._originalScale = new Ep());
      },
      getTicks: function(t) {
        var i = this._originalScale,
          n = this._extent,
          o = i.getExtent();
        return O(
          ng.getTicks.call(this, t),
          function(t) {
            var e = Gl(lg(this.base, t));
            return (
              (e = t === n[0] && i.__fixMin ? cg(e, o[0]) : e),
              (e = t === n[1] && i.__fixMax ? cg(e, o[1]) : e)
            );
          },
          this,
        );
      },
      getMinorTicks: ng.getMinorTicks,
      getLabel: ng.getLabel,
      scale: function(t) {
        return (t = ig.scale.call(this, t)), lg(this.base, t);
      },
      setExtent: function(t, e) {
        var i = this.base;
        (t = ug(t) / ug(i)), (e = ug(e) / ug(i)), ng.setExtent.call(this, t, e);
      },
      getExtent: function() {
        var t = this.base,
          e = ig.getExtent.call(this);
        (e[0] = lg(t, e[0])), (e[1] = lg(t, e[1]));
        var i = this._originalScale,
          n = i.getExtent();
        return (
          i.__fixMin && (e[0] = cg(e[0], n[0])),
          i.__fixMax && (e[1] = cg(e[1], n[1])),
          e
        );
      },
      unionExtent: function(t) {
        this._originalScale.unionExtent(t);
        var e = this.base;
        (t[0] = ug(t[0]) / ug(e)),
          (t[1] = ug(t[1]) / ug(e)),
          ig.unionExtent.call(this, t);
      },
      unionExtentFromData: function(t, e) {
        this.unionExtent(t.getApproximateExtent(e));
      },
      niceTicks: function(t) {
        t = t || 10;
        var e = this._extent,
          i = e[1] - e[0];
        if (!(i == 1 / 0 || i <= 0)) {
          var n = $l(i);
          for (
            (t / i) * n <= 0.5 && (n *= 10);
            !isNaN(n) && Math.abs(n) < 1 && 0 < Math.abs(n);

          )
            n *= 10;
          var o = [Gl(sg(e[0] / n) * n), Gl(rg(e[1] / n) * n)];
          (this._interval = n), (this._niceExtent = o);
        }
      },
      niceExtent: function(t) {
        ng.niceExtent.call(this, t);
        var e = this._originalScale;
        (e.__fixMin = t.fixMin), (e.__fixMax = t.fixMax);
      },
    });
  function cg(t, e) {
    return ag(t, og(e));
  }
  function dg(t, e) {
    var i,
      n,
      o,
      a = t.type,
      r = e.getMin(),
      s = e.getMax(),
      l = t.getExtent();
    'ordinal' === a
      ? (i = e.getCategories().length)
      : (R((n = e.get('boundaryGap'))) || (n = [n || 0, n || 0]),
        'boolean' == typeof n[0] &&
          (D &&
            console.warn(
              'Boolean type for boundaryGap is only allowed for ordinal axis. Please use string in percentage instead, e.g., "20%". Currently, boundaryGap is set to be 0.',
            ),
          (n = [0, 0])),
        (n[0] = Vl(n[0], 1)),
        (n[1] = Vl(n[1], 1)),
        (o = l[1] - l[0] || Math.abs(l[0]))),
      'dataMin' === r
        ? (r = l[0])
        : 'function' == typeof r && (r = r({min: l[0], max: l[1]})),
      'dataMax' === s
        ? (s = l[1])
        : 'function' == typeof s && (s = s({min: l[0], max: l[1]}));
    var u = null != r,
      h = null != s;
    null == r && (r = 'ordinal' === a ? (i ? 0 : NaN) : l[0] - n[0] * o),
      null == s && (s = 'ordinal' === a ? (i ? i - 1 : NaN) : l[1] + n[1] * o),
      (null != r && isFinite(r)) || (r = NaN),
      (null != s && isFinite(s)) || (s = NaN),
      t.setBlank(
        H(r) ||
          H(s) ||
          ('ordinal' === a && !t.getOrdinalMeta().categories.length),
      ),
      e.getNeedCrossZero() &&
        (0 < r && 0 < s && !u && (r = 0), r < 0 && s < 0 && !h && (s = 0));
    var c = e.ecModel;
    if (c && 'time' === a) {
      var d,
        f = Gp('bar', c);
      if (
        (E(f, function(t) {
          d |= t.getBaseAxis() === e.axis;
        }),
        d)
      ) {
        var p = Fp(f),
          g = (function(t, e, i, n) {
            var o = i.axis.getExtent(),
              a = o[1] - o[0],
              r = Hp(n, i.axis);
            if (void 0 === r) return {min: t, max: e};
            var s = 1 / 0;
            E(r, function(t) {
              s = Math.min(t.offset, s);
            });
            var l = -1 / 0;
            E(r, function(t) {
              l = Math.max(t.offset + t.width, l);
            }),
              (s = Math.abs(s)),
              (l = Math.abs(l));
            var u = s + l,
              h = e - t,
              c = h / (1 - (s + l) / a) - h;
            return {min: (t -= (s / u) * c), max: (e += (l / u) * c)};
          })(r, s, e, p);
        (r = g.min), (s = g.max);
      }
    }
    return {extent: [r, s], fixMin: u, fixMax: h};
  }
  function fg(t, e) {
    var i = dg(t, e),
      n = i.extent,
      o = e.get('splitNumber');
    'log' === t.type && (t.base = e.get('logBase'));
    var a = t.type;
    t.setExtent(n[0], n[1]),
      t.niceExtent({
        splitNumber: o,
        fixMin: i.fixMin,
        fixMax: i.fixMax,
        minInterval:
          'interval' === a || 'time' === a ? e.get('minInterval') : null,
        maxInterval:
          'interval' === a || 'time' === a ? e.get('maxInterval') : null,
      });
    var r = e.get('interval');
    null != r && t.setInterval && t.setInterval(r);
  }
  function pg(t, e) {
    if ((e = e || t.get('type')))
      switch (e) {
        case 'category':
          return new Cp(
            t.getOrdinalMeta ? t.getOrdinalMeta() : t.getCategories(),
            [1 / 0, -1 / 0],
          );
        case 'value':
          return new Ep();
        default:
          return (Sp.getClass(e) || Ep).create(t);
      }
  }
  function gg(i) {
    var e,
      n = i.getLabelModel().get('formatter'),
      o = 'category' === i.type ? i.scale.getExtent()[0] : null;
    return 'string' == typeof n
      ? ((e = n),
        (n = function(t) {
          return (
            (t = i.scale.getLabel(t)), e.replace('{value}', null != t ? t : '')
          );
        }))
      : 'function' == typeof n
      ? function(t, e) {
          return null != o && (e = t - o), n(mg(i, t), e);
        }
      : function(t) {
          return i.scale.getLabel(t);
        };
  }
  function mg(t, e) {
    return 'category' === t.type ? t.scale.getLabel(e) : e;
  }
  function vg(t) {
    var e = t.get('interval');
    return null == e ? 'auto' : e;
  }
  function yg(t) {
    return 'category' === t.type && 0 === vg(t.getLabelModel());
  }
  E(['contain', 'normalize'], function(e) {
    hg.prototype[e] = function(t) {
      return (t = ug(t) / ug(this.base)), ig[e].call(this, t);
    };
  }),
    (hg.create = function() {
      return new hg();
    });
  var xg = {
      getMin: function(t) {
        var e = this.option,
          i = t || null == e.rangeStart ? e.min : e.rangeStart;
        return (
          this.axis &&
            null != i &&
            'dataMin' !== i &&
            'function' != typeof i &&
            !H(i) &&
            (i = this.axis.scale.parse(i)),
          i
        );
      },
      getMax: function(t) {
        var e = this.option,
          i = t || null == e.rangeEnd ? e.max : e.rangeEnd;
        return (
          this.axis &&
            null != i &&
            'dataMax' !== i &&
            'function' != typeof i &&
            !H(i) &&
            (i = this.axis.scale.parse(i)),
          i
        );
      },
      getNeedCrossZero: function() {
        var t = this.option;
        return null == t.rangeStart && null == t.rangeEnd && !t.scale;
      },
      getCoordSysModel: nt,
      setRange: function(t, e) {
        (this.option.rangeStart = t), (this.option.rangeEnd = e);
      },
      resetRange: function() {
        this.option.rangeStart = this.option.rangeEnd = null;
      },
    },
    _g = Ps({
      type: 'triangle',
      shape: {cx: 0, cy: 0, width: 0, height: 0},
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = e.width / 2,
          a = e.height / 2;
        t.moveTo(i, n - a),
          t.lineTo(i + o, n + a),
          t.lineTo(i - o, n + a),
          t.closePath();
      },
    }),
    wg = Ps({
      type: 'diamond',
      shape: {cx: 0, cy: 0, width: 0, height: 0},
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = e.width / 2,
          a = e.height / 2;
        t.moveTo(i, n - a),
          t.lineTo(i + o, n),
          t.lineTo(i, n + a),
          t.lineTo(i - o, n),
          t.closePath();
      },
    }),
    bg = Ps({
      type: 'pin',
      shape: {x: 0, y: 0, width: 0, height: 0},
      buildPath: function(t, e) {
        var i = e.x,
          n = e.y,
          o = (e.width / 5) * 3,
          a = Math.max(o, e.height),
          r = o / 2,
          s = (r * r) / (a - r),
          l = n - a + r + s,
          u = Math.asin(s / r),
          h = Math.cos(u) * r,
          c = Math.sin(u),
          d = Math.cos(u),
          f = 0.6 * r,
          p = 0.7 * r;
        t.moveTo(i - h, l + s),
          t.arc(i, l, r, Math.PI - u, 2 * Math.PI + u),
          t.bezierCurveTo(i + h - c * f, l + s + d * f, i, n - p, i, n),
          t.bezierCurveTo(i, n - p, i - h + c * f, l + s + d * f, i - h, l + s),
          t.closePath();
      },
    }),
    Sg = Ps({
      type: 'arrow',
      shape: {x: 0, y: 0, width: 0, height: 0},
      buildPath: function(t, e) {
        var i = e.height,
          n = e.width,
          o = e.x,
          a = e.y,
          r = (n / 3) * 2;
        t.moveTo(o, a),
          t.lineTo(o + r, a + i),
          t.lineTo(o, a + (i / 4) * 3),
          t.lineTo(o - r, a + i),
          t.lineTo(o, a),
          t.closePath();
      },
    }),
    Mg = {
      line: function(t, e, i, n, o) {
        (o.x1 = t), (o.y1 = e + n / 2), (o.x2 = t + i), (o.y2 = e + n / 2);
      },
      rect: function(t, e, i, n, o) {
        (o.x = t), (o.y = e), (o.width = i), (o.height = n);
      },
      roundRect: function(t, e, i, n, o) {
        (o.x = t),
          (o.y = e),
          (o.width = i),
          (o.height = n),
          (o.r = Math.min(i, n) / 4);
      },
      square: function(t, e, i, n, o) {
        var a = Math.min(i, n);
        (o.x = t), (o.y = e), (o.width = a), (o.height = a);
      },
      circle: function(t, e, i, n, o) {
        (o.cx = t + i / 2), (o.cy = e + n / 2), (o.r = Math.min(i, n) / 2);
      },
      diamond: function(t, e, i, n, o) {
        (o.cx = t + i / 2), (o.cy = e + n / 2), (o.width = i), (o.height = n);
      },
      pin: function(t, e, i, n, o) {
        (o.x = t + i / 2), (o.y = e + n / 2), (o.width = i), (o.height = n);
      },
      arrow: function(t, e, i, n, o) {
        (o.x = t + i / 2), (o.y = e + n / 2), (o.width = i), (o.height = n);
      },
      triangle: function(t, e, i, n, o) {
        (o.cx = t + i / 2), (o.cy = e + n / 2), (o.width = i), (o.height = n);
      },
    },
    Ig = {};
  E(
    {
      line: cs,
      rect: us,
      roundRect: us,
      square: us,
      circle: Kr,
      diamond: wg,
      pin: bg,
      arrow: Sg,
      triangle: _g,
    },
    function(t, e) {
      Ig[e] = new t();
    },
  );
  var Tg = Ps({
    type: 'symbol',
    shape: {symbolType: '', x: 0, y: 0, width: 0, height: 0},
    calculateTextPosition: function(t, e, i) {
      var n = _n(t, e, i),
        o = this.shape;
      return (
        o &&
          'pin' === o.symbolType &&
          'inside' === e.textPosition &&
          (n.y = i.y + 0.4 * i.height),
        n
      );
    },
    buildPath: function(t, e, i) {
      var n = e.symbolType;
      if ('none' !== n) {
        var o = Ig[n];
        (o = o || Ig[(n = 'rect')]),
          Mg[n](e.x, e.y, e.width, e.height, o.shape),
          o.buildPath(t, o.shape, i);
      }
    },
  });
  function Ag(t, e) {
    if ('image' !== this.type) {
      var i = this.style,
        n = this.shape;
      n && 'line' === n.symbolType
        ? (i.stroke = t)
        : this.__isEmptyBrush
        ? ((i.stroke = t), (i.fill = e || '#fff'))
        : (i.fill && (i.fill = t), i.stroke && (i.stroke = t)),
        this.dirty(!1);
    }
  }
  function Dg(t, e, i, n, o, a, r) {
    var s,
      l = 0 === t.indexOf('empty');
    return (
      l && (t = t.substr(5, 1).toLowerCase() + t.substr(6)),
      ((s =
        0 === t.indexOf('image://')
          ? Rs(t.slice(8), new Li(e, i, n, o), r ? 'center' : 'cover')
          : 0 === t.indexOf('path://')
          ? Es(t.slice(7), {}, new Li(e, i, n, o), r ? 'center' : 'cover')
          : new Tg({
              shape: {symbolType: t, x: e, y: i, width: n, height: o},
            })).__isEmptyBrush = l),
      (s.setColor = Ag),
      s.setColor(a),
      s
    );
  }
  var Cg = {
    isDimensionStacked: _p,
    enableDataStack: xp,
    getStackedDimension: wp,
  };
  var Lg = (Object.freeze || Object)({
      createList: function(t) {
        return bp(t.getSource(), t);
      },
      getLayoutRect: Iu,
      dataStack: Cg,
      createScale: function(t, e) {
        var i = e;
        Pl.isInstance(e) || S((i = new Pl(e)), xg);
        var n = pg(i);
        return n.setExtent(t[0], t[1]), fg(n, i), n;
      },
      mixinAxisModelCommonMethods: function(t) {
        S(t, xg);
      },
      completeDimensions: fp,
      createDimensions: gp,
      createSymbol: Dg,
    }),
    kg = 1e-8;
  function Pg(t, e) {
    return Math.abs(t - e) < kg;
  }
  function Ng(t, e, i) {
    var n = 0,
      o = t[0];
    if (!o) return !1;
    for (var a = 1; a < t.length; a++) {
      var r = t[a];
      (n += vr(o[0], o[1], r[0], r[1], e, i)), (o = r);
    }
    var s = t[0];
    return (
      (Pg(o[0], s[0]) && Pg(o[1], s[1])) ||
        (n += vr(o[0], o[1], s[0], s[1], e, i)),
      0 !== n
    );
  }
  function Og(t, e, i) {
    if (((this.name = t), (this.geometries = e), i)) i = [i[0], i[1]];
    else {
      var n = this.getBoundingRect();
      i = [n.x + n.width / 2, n.y + n.height / 2];
    }
    this.center = i;
  }
  function Eg(t, e, i) {
    for (var n = [], o = e[0], a = e[1], r = 0; r < t.length; r += 2) {
      var s = t.charCodeAt(r) - 64,
        l = t.charCodeAt(r + 1) - 64;
      (s = (s >> 1) ^ -(1 & s)),
        (l = (l >> 1) ^ -(1 & l)),
        (o = s += o),
        (a = l += a),
        n.push([s / i, l / i]);
    }
    return n;
  }
  Og.prototype = {
    constructor: Og,
    properties: null,
    getBoundingRect: function() {
      var t = this._rect;
      if (t) return t;
      for (
        var e = Number.MAX_VALUE,
          i = [e, e],
          n = [-e, -e],
          o = [],
          a = [],
          r = this.geometries,
          s = 0;
        s < r.length;
        s++
      ) {
        if ('polygon' === r[s].type)
          Ua(r[s].exterior, o, a), It(i, i, o), Tt(n, n, a);
      }
      return (
        0 === s && (i[0] = i[1] = n[0] = n[1] = 0),
        (this._rect = new Li(i[0], i[1], n[0] - i[0], n[1] - i[1]))
      );
    },
    contain: function(t) {
      var e = this.getBoundingRect(),
        i = this.geometries;
      if (!e.contain(t[0], t[1])) return !1;
      t: for (var n = 0, o = i.length; n < o; n++)
        if ('polygon' === i[n].type) {
          var a = i[n].exterior,
            r = i[n].interiors;
          if (Ng(a, t[0], t[1])) {
            for (var s = 0; s < (r ? r.length : 0); s++)
              if (Ng(r[s])) continue t;
            return !0;
          }
        }
      return !1;
    },
    transformTo: function(t, e, i, n) {
      var o = this.getBoundingRect(),
        a = o.width / o.height;
      i ? (n = n || i / a) : (i = a * n);
      for (
        var r = new Li(t, e, i, n),
          s = o.calculateTransform(r),
          l = this.geometries,
          u = 0;
        u < l.length;
        u++
      )
        if ('polygon' === l[u].type) {
          for (
            var h = l[u].exterior, c = l[u].interiors, d = 0;
            d < h.length;
            d++
          )
            Mt(h[d], h[d], s);
          for (var f = 0; f < (c ? c.length : 0); f++)
            for (d = 0; d < c[f].length; d++) Mt(c[f][d], c[f][d], s);
        }
      (o = this._rect).copy(r),
        (this.center = [o.x + o.width / 2, o.y + o.height / 2]);
    },
    cloneShallow: function(t) {
      null == t && (t = this.name);
      var e = new Og(t, this.geometries, this.center);
      return (e._rect = this._rect), (e.transformTo = null), e;
    },
  };
  function Rg(t, r) {
    return (
      (function(t) {
        if (!t.UTF8Encoding) return;
        var e = t.UTF8Scale;
        null == e && (e = 1024);
        for (var i = t.features, n = 0; n < i.length; n++)
          for (
            var o = i[n].geometry,
              a = o.coordinates,
              r = o.encodeOffsets,
              s = 0;
            s < a.length;
            s++
          ) {
            var l = a[s];
            if ('Polygon' === o.type) a[s] = Eg(l, r[s], e);
            else if ('MultiPolygon' === o.type)
              for (var u = 0; u < l.length; u++) {
                var h = l[u];
                l[u] = Eg(h, r[s][u], e);
              }
          }
        t.UTF8Encoding = !1;
      })(t),
      O(
        I(t.features, function(t) {
          return (
            t.geometry && t.properties && 0 < t.geometry.coordinates.length
          );
        }),
        function(t) {
          var e = t.properties,
            i = t.geometry,
            n = i.coordinates,
            o = [];
          'Polygon' === i.type &&
            o.push({type: 'polygon', exterior: n[0], interiors: n.slice(1)}),
            'MultiPolygon' === i.type &&
              E(n, function(t) {
                t[0] &&
                  o.push({
                    type: 'polygon',
                    exterior: t[0],
                    interiors: t.slice(1),
                  });
              });
          var a = new Og(e[r || 'name'], o, e.cp);
          return (a.properties = e), a;
        },
      )
    );
  }
  var zg = $o();
  function Bg(t) {
    return 'category' === t.type
      ? (function(t) {
          var e = t.getLabelModel(),
            i = Gg(t, e);
          return !e.get('show') || t.scale.isBlank()
            ? {labels: [], labelCategoryInterval: i.labelCategoryInterval}
            : i;
        })(t)
      : (function(i) {
          var t = i.scale.getTicks(),
            n = gg(i);
          return {
            labels: O(t, function(t, e) {
              return {
                formattedLabel: n(t, e),
                rawLabel: i.scale.getLabel(t),
                tickValue: t,
              };
            }),
          };
        })(t);
  }
  function Vg(t, e) {
    return 'category' === t.type
      ? (function(t, e) {
          var i,
            n,
            o = Fg(t, 'ticks'),
            a = vg(e),
            r = Wg(o, a);
          if (r) return r;
          (e.get('show') && !t.scale.isBlank()) || (i = []);
          if (z(a)) i = Ug(t, a, !0);
          else if ('auto' === a) {
            var s = Gg(t, t.getLabelModel());
            (n = s.labelCategoryInterval),
              (i = O(s.labels, function(t) {
                return t.tickValue;
              }));
          } else i = Zg(t, (n = a), !0);
          return Hg(o, a, {ticks: i, tickCategoryInterval: n});
        })(t, e)
      : {ticks: t.scale.getTicks()};
  }
  function Gg(t, e) {
    var i,
      n = Fg(t, 'labels'),
      o = vg(e),
      a = Wg(n, o);
    return (
      a ||
      Hg(n, o, {
        labels: z(o)
          ? Ug(t, o)
          : Zg(
              t,
              (i =
                'auto' === o
                  ? (function(t) {
                      var e = zg(t).autoInterval;
                      return null != e
                        ? e
                        : (zg(t).autoInterval = t.calculateCategoryInterval());
                    })(t)
                  : o),
            ),
        labelCategoryInterval: i,
      })
    );
  }
  function Fg(t, e) {
    return zg(t)[e] || (zg(t)[e] = []);
  }
  function Wg(t, e) {
    for (var i = 0; i < t.length; i++) if (t[i].key === e) return t[i].value;
  }
  function Hg(t, e, i) {
    return t.push({key: e, value: i}), i;
  }
  function Zg(t, e, i) {
    var n = gg(t),
      o = t.scale,
      a = o.getExtent(),
      r = t.getLabelModel(),
      s = [],
      l = Math.max((e || 0) + 1, 1),
      u = a[0],
      h = o.count();
    0 !== u && 1 < l && 2 < h / l && (u = Math.round(Math.ceil(u / l) * l));
    var c = yg(t),
      d = r.get('showMinLabel') || c,
      f = r.get('showMaxLabel') || c;
    d && u !== a[0] && g(a[0]);
    for (var p = u; p <= a[1]; p += l) g(p);
    function g(t) {
      s.push(
        i ? t : {formattedLabel: n(t), rawLabel: o.getLabel(t), tickValue: t},
      );
    }
    return f && p - l !== a[1] && g(a[1]), s;
  }
  function Ug(t, i, n) {
    var o = t.scale,
      a = gg(t),
      r = [];
    return (
      E(o.getTicks(), function(t) {
        var e = o.getLabel(t);
        i(t, e) &&
          r.push(n ? t : {formattedLabel: a(t), rawLabel: e, tickValue: t});
      }),
      r
    );
  }
  var Xg = [0, 1],
    Yg = function(t, e, i) {
      (this.dim = t),
        (this.scale = e),
        (this._extent = i || [0, 0]),
        (this.inverse = !1),
        (this.onBand = !1);
    };
  function jg(t, e) {
    var i = (t[1] - t[0]) / e / 2;
    (t[0] += i), (t[1] -= i);
  }
  Yg.prototype = {
    constructor: Yg,
    contain: function(t) {
      var e = this._extent,
        i = Math.min(e[0], e[1]),
        n = Math.max(e[0], e[1]);
      return i <= t && t <= n;
    },
    containData: function(t) {
      return this.scale.contain(t);
    },
    getExtent: function() {
      return this._extent.slice();
    },
    getPixelPrecision: function(t) {
      return Zl(t || this.scale.getExtent(), this._extent);
    },
    setExtent: function(t, e) {
      var i = this._extent;
      (i[0] = t), (i[1] = e);
    },
    dataToCoord: function(t, e) {
      var i = this._extent,
        n = this.scale;
      return (
        (t = n.normalize(t)),
        this.onBand && 'ordinal' === n.type && jg((i = i.slice()), n.count()),
        Bl(t, Xg, i, e)
      );
    },
    coordToData: function(t, e) {
      var i = this._extent,
        n = this.scale;
      this.onBand && 'ordinal' === n.type && jg((i = i.slice()), n.count());
      var o = Bl(t, i, Xg, e);
      return this.scale.scale(o);
    },
    pointToData: function(t, e) {},
    getTicksCoords: function(t) {
      var e = (t = t || {}).tickModel || this.getTickModel(),
        i = O(
          Vg(this, e).ticks,
          function(t) {
            return {coord: this.dataToCoord(t), tickValue: t};
          },
          this,
        );
      return (
        (function(t, e, i, n) {
          var o = e.length;
          if (!t.onBand || i || !o) return;
          var a,
            r,
            s = t.getExtent();
          if (1 === o) (e[0].coord = s[0]), (a = e[1] = {coord: s[0]});
          else {
            var l = e[o - 1].tickValue - e[0].tickValue,
              u = (e[o - 1].coord - e[0].coord) / l;
            E(e, function(t) {
              t.coord -= u / 2;
            });
            var h = t.scale.getExtent();
            (r = 1 + h[1] - e[o - 1].tickValue),
              (a = {coord: e[o - 1].coord + u * r}),
              e.push(a);
          }
          var c = s[0] > s[1];
          d(e[0].coord, s[0]) && (n ? (e[0].coord = s[0]) : e.shift());
          n && d(s[0], e[0].coord) && e.unshift({coord: s[0]});
          d(s[1], a.coord) && (n ? (a.coord = s[1]) : e.pop());
          n && d(a.coord, s[1]) && e.push({coord: s[1]});
          function d(t, e) {
            return (t = Gl(t)), (e = Gl(e)), c ? e < t : t < e;
          }
        })(this, i, e.get('alignWithLabel'), t.clamp),
        i
      );
    },
    getMinorTicksCoords: function() {
      if ('ordinal' === this.scale.type) return [];
      var t = this.model.getModel('minorTick').get('splitNumber');
      return (
        (0 < t && t < 100) || (t = 5),
        O(
          this.scale.getMinorTicks(t),
          function(t) {
            return O(
              t,
              function(t) {
                return {coord: this.dataToCoord(t), tickValue: t};
              },
              this,
            );
          },
          this,
        )
      );
    },
    getViewLabels: function() {
      return Bg(this).labels;
    },
    getLabelModel: function() {
      return this.model.getModel('axisLabel');
    },
    getTickModel: function() {
      return this.model.getModel('axisTick');
    },
    getBandWidth: function() {
      var t = this._extent,
        e = this.scale.getExtent(),
        i = e[1] - e[0] + (this.onBand ? 1 : 0);
      0 === i && (i = 1);
      var n = Math.abs(t[1] - t[0]);
      return Math.abs(n) / i;
    },
    isHorizontal: null,
    getRotate: null,
    calculateCategoryInterval: function() {
      return (function(t) {
        var e = (function(t) {
            var e = t.getLabelModel();
            return {
              axisRotate: t.getRotate
                ? t.getRotate()
                : t.isHorizontal && !t.isHorizontal()
                ? 90
                : 0,
              labelRotate: e.get('rotate') || 0,
              font: e.getFont(),
            };
          })(t),
          i = gg(t),
          n = ((e.axisRotate - e.labelRotate) / 180) * Math.PI,
          o = t.scale,
          a = o.getExtent(),
          r = o.count();
        if (a[1] - a[0] < 1) return 0;
        var s = 1;
        40 < r && (s = Math.max(1, Math.floor(r / 40)));
        for (
          var l = a[0],
            u = t.dataToCoord(l + 1) - t.dataToCoord(l),
            h = Math.abs(u * Math.cos(n)),
            c = Math.abs(u * Math.sin(n)),
            d = 0,
            f = 0;
          l <= a[1];
          l += s
        ) {
          var p,
            g,
            m = vn(i(l), e.font, 'center', 'top');
          (p = 1.3 * m.width),
            (g = 1.3 * m.height),
            (d = Math.max(d, p, 7)),
            (f = Math.max(f, g, 7));
        }
        var v = d / h,
          y = f / c;
        isNaN(v) && (v = 1 / 0), isNaN(y) && (y = 1 / 0);
        var x = Math.max(0, Math.floor(Math.min(v, y))),
          _ = zg(t.model),
          w = t.getExtent(),
          b = _.lastAutoInterval,
          S = _.lastTickCount;
        return (
          null != b &&
          null != S &&
          Math.abs(b - x) <= 1 &&
          Math.abs(S - r) <= 1 &&
          x < b &&
          _.axisExtend0 === w[0] &&
          _.axisExtend1 === w[1]
            ? (x = b)
            : ((_.lastTickCount = r),
              (_.lastAutoInterval = x),
              (_.axisExtend0 = w[0]),
              (_.axisExtend1 = w[1])),
          x
        );
      })(this);
    },
  };
  var qg = Rg,
    Kg = {};
  E(
    [
      'map',
      'each',
      'filter',
      'indexOf',
      'inherits',
      'reduce',
      'filter',
      'bind',
      'curry',
      'isArray',
      'isString',
      'isObject',
      'isFunction',
      'extend',
      'defaults',
      'clone',
      'merge',
    ],
    function(t) {
      Kg[t] = ot[t];
    },
  );
  var $g = {};
  function Jg(t, e) {
    var i = t.mapDimension('defaultedLabel', !0),
      n = i.length;
    if (1 === n) return Yh(t, e, i[0]);
    if (n) {
      for (var o = [], a = 0; a < i.length; a++) {
        var r = Yh(t, e, i[a]);
        o.push(r);
      }
      return o.join(' ');
    }
  }
  function Qg(t, e, i) {
    ki.call(this), this.updateData(t, e, i);
  }
  E(
    [
      'extendShape',
      'extendPath',
      'makePath',
      'makeImage',
      'mergePath',
      'resizePath',
      'createIcon',
      'setHoverStyle',
      'setLabelStyle',
      'setTextStyle',
      'setText',
      'getFont',
      'updateProps',
      'initProps',
      'getTransform',
      'clipPointsByRect',
      'clipRectByRect',
      'registerShape',
      'getShapeClass',
      'Group',
      'Image',
      'Text',
      'Circle',
      'Sector',
      'Ring',
      'Polygon',
      'Polyline',
      'Rect',
      'Line',
      'BezierCurve',
      'Arc',
      'IncrementalDisplayable',
      'CompoundPath',
      'LinearGradient',
      'RadialGradient',
      'BoundingRect',
    ],
    function(t) {
      $g[t] = Il[t];
    },
  ),
    cc.extend({
      type: 'series.line',
      dependencies: ['grid', 'polar'],
      getInitialData: function(t, e) {
        if (D) {
          var i = t.coordinateSystem;
          if ('polar' !== i && 'cartesian2d' !== i)
            throw new Error(
              'Line not support coordinateSystem besides cartesian and polar',
            );
        }
        return bp(this.getSource(), this, {useEncodeDefaulter: !0});
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'cartesian2d',
        legendHoverLink: !0,
        hoverAnimation: !0,
        clip: !0,
        label: {position: 'top'},
        lineStyle: {width: 2, type: 'solid'},
        step: !1,
        smooth: !1,
        smoothMonotone: null,
        symbol: 'emptyCircle',
        symbolSize: 4,
        symbolRotate: null,
        showSymbol: !0,
        showAllSymbol: 'auto',
        connectNulls: !1,
        sampling: 'none',
        animationEasing: 'linear',
        progressive: 0,
        hoverLayerThreshold: 1 / 0,
      },
    });
  var tm = Qg.prototype,
    em = (Qg.getSymbolSize = function(t, e) {
      var i = t.getItemVisual(e, 'symbolSize');
      return i instanceof Array ? i.slice() : [+i, +i];
    });
  function im(t) {
    return [t[0] / 2, t[1] / 2];
  }
  function nm(t, e) {
    this.parent.drift(t, e);
  }
  (tm._createSymbol = function(t, e, i, n, o) {
    this.removeAll();
    var a = Dg(t, -1, -1, 2, 2, e.getItemVisual(i, 'color'), o);
    a.attr({z2: 100, culling: !0, scale: im(n)}),
      (a.drift = nm),
      (this._symbolType = t),
      this.add(a);
  }),
    (tm.stopSymbolAnimation = function(t) {
      this.childAt(0).stopAnimation(t);
    }),
    (tm.getSymbolPath = function() {
      return this.childAt(0);
    }),
    (tm.getScale = function() {
      return this.childAt(0).scale;
    }),
    (tm.highlight = function() {
      this.childAt(0).trigger('emphasis');
    }),
    (tm.downplay = function() {
      this.childAt(0).trigger('normal');
    }),
    (tm.setZ = function(t, e) {
      var i = this.childAt(0);
      (i.zlevel = t), (i.z = e);
    }),
    (tm.setDraggable = function(t) {
      var e = this.childAt(0);
      (e.draggable = t), (e.cursor = t ? 'move' : e.cursor);
    }),
    (tm.updateData = function(t, e, i) {
      this.silent = !1;
      var n = t.getItemVisual(e, 'symbol') || 'circle',
        o = t.hostModel,
        a = em(t, e),
        r = n !== this._symbolType;
      if (r) {
        var s = t.getItemVisual(e, 'symbolKeepAspect');
        this._createSymbol(n, t, e, a, s);
      } else {
        ((l = this.childAt(0)).silent = !1), pl(l, {scale: im(a)}, o, e);
      }
      if ((this._updateCommon(t, e, a, i), r)) {
        var l = this.childAt(0),
          u = i && i.fadeIn,
          h = {scale: l.scale.slice()};
        u && (h.style = {opacity: l.style.opacity}),
          (l.scale = [0, 0]),
          u && (l.style.opacity = 0),
          gl(l, h, o, e);
      }
      this._seriesModel = o;
    });
  var om = ['itemStyle'],
    am = ['emphasis', 'itemStyle'],
    rm = ['label'],
    sm = ['emphasis', 'label'];
  function lm(t, e) {
    if (!this.incremental && !this.useHoverLayer)
      if ('emphasis' === e) {
        var i = this.__symbolOriginalScale,
          n = i[1] / i[0],
          o = {
            scale: [
              Math.max(1.1 * i[0], i[0] + 3),
              Math.max(1.1 * i[1], i[1] + 3 * n),
            ],
          };
        this.animateTo(o, 400, 'elasticOut');
      } else
        'normal' === e &&
          this.animateTo(
            {scale: this.__symbolOriginalScale},
            400,
            'elasticOut',
          );
  }
  function um(t) {
    (this.group = new ki()), (this._symbolCtor = t || Qg);
  }
  (tm._updateCommon = function(i, t, e, n) {
    var o = this.childAt(0),
      a = i.hostModel,
      r = i.getItemVisual(t, 'color');
    'image' !== o.type
      ? o.useStyle({strokeNoScale: !0})
      : o.setStyle({
          opacity: null,
          shadowBlur: null,
          shadowOffsetX: null,
          shadowOffsetY: null,
          shadowColor: null,
        });
    var s = n && n.itemStyle,
      l = n && n.hoverItemStyle,
      u = n && n.symbolOffset,
      h = n && n.labelModel,
      c = n && n.hoverLabelModel,
      d = n && n.hoverAnimation,
      f = n && n.cursorStyle;
    if (!n || i.hasItemOption) {
      var p = n && n.itemModel ? n.itemModel : i.getItemModel(t);
      (s = p.getModel(om).getItemStyle(['color'])),
        (l = p.getModel(am).getItemStyle()),
        (u = p.getShallow('symbolOffset')),
        (h = p.getModel(rm)),
        (c = p.getModel(sm)),
        (d = p.getShallow('hoverAnimation')),
        (f = p.getShallow('cursor'));
    } else l = P({}, l);
    var g = o.style,
      m = i.getItemVisual(t, 'symbolRotate');
    o.attr('rotation', ((m || 0) * Math.PI) / 180 || 0),
      u && o.attr('position', [Vl(u[0], e[0]), Vl(u[1], e[1])]),
      f && o.attr('cursor', f),
      o.setColor(r, n && n.symbolInnerColor),
      o.setStyle(s);
    var v = i.getItemVisual(t, 'opacity');
    null != v && (g.opacity = v);
    var y = i.getItemVisual(t, 'liftZ'),
      x = o.__z2Origin;
    null != y
      ? null == x && ((o.__z2Origin = o.z2), (o.z2 += y))
      : null != x && ((o.z2 = x), (o.__z2Origin = null));
    var _ = n && n.useNameLabel;
    ol(g, l, h, c, {
      labelFetcher: a,
      labelDataIndex: t,
      defaultText: function(t, e) {
        return _ ? i.getName(t) : Jg(i, t);
      },
      isRectText: !0,
      autoColor: r,
    }),
      (o.__symbolOriginalScale = im(e)),
      (o.hoverStyle = l),
      (o.highDownOnUpdate = d && a.isAnimationEnabled() ? lm : null),
      tl(o);
  }),
    (tm.fadeOut = function(t, e) {
      var i = this.childAt(0);
      (this.silent = i.silent = !0),
        (e && e.keepLabel) || (i.style.text = null),
        pl(
          i,
          {style: {opacity: 0}, scale: [0, 0]},
          this._seriesModel,
          this.dataIndex,
          t,
        );
    }),
    b(Qg, ki);
  var hm = um.prototype;
  function cm(t, e, i, n) {
    return (
      e &&
      !isNaN(e[0]) &&
      !isNaN(e[1]) &&
      !(n.isIgnore && n.isIgnore(i)) &&
      !(n.clipShape && !n.clipShape.contain(e[0], e[1])) &&
      'none' !== t.getItemVisual(i, 'symbol')
    );
  }
  function dm(t) {
    return null == t || V(t) || (t = {isIgnore: t}), t || {};
  }
  function fm(t) {
    var e = t.hostModel;
    return {
      itemStyle: e.getModel('itemStyle').getItemStyle(['color']),
      hoverItemStyle: e.getModel('emphasis.itemStyle').getItemStyle(),
      symbolRotate: e.get('symbolRotate'),
      symbolOffset: e.get('symbolOffset'),
      hoverAnimation: e.get('hoverAnimation'),
      labelModel: e.getModel('label'),
      hoverLabelModel: e.getModel('emphasis.label'),
      cursorStyle: e.get('cursor'),
    };
  }
  function pm(t, e, i) {
    var n,
      o = t.getBaseAxis(),
      a = t.getOtherAxis(o),
      r = (function(t, e) {
        var i = 0,
          n = t.scale.getExtent();
        'start' === e
          ? (i = n[0])
          : 'end' === e
          ? (i = n[1])
          : 0 < n[0]
          ? (i = n[0])
          : n[1] < 0 && (i = n[1]);
        return i;
      })(a, i),
      s = o.dim,
      l = a.dim,
      u = e.mapDimension(l),
      h = e.mapDimension(s),
      c = 'x' === l || 'radius' === l ? 1 : 0,
      d = O(t.dimensions, function(t) {
        return e.mapDimension(t);
      }),
      f = e.getCalculationInfo('stackResultDimension');
    return (
      (n |= _p(e, d[0])) && (d[0] = f),
      (n |= _p(e, d[1])) && (d[1] = f),
      {
        dataDimsForPoint: d,
        valueStart: r,
        valueAxisDim: l,
        baseAxisDim: s,
        stacked: !!n,
        valueDim: u,
        baseDim: h,
        baseDataOffset: c,
        stackedOverDimension: e.getCalculationInfo('stackedOverDimension'),
      }
    );
  }
  function gm(t, e, i, n) {
    var o = NaN;
    t.stacked && (o = i.get(i.getCalculationInfo('stackedOverDimension'), n)),
      isNaN(o) && (o = t.valueStart);
    var a = t.baseDataOffset,
      r = [];
    return (r[a] = i.get(t.baseDim, n)), (r[1 - a] = o), e.dataToPoint(r);
  }
  (hm.updateData = function(o, a) {
    a = dm(a);
    var r = this.group,
      s = o.hostModel,
      l = this._data,
      u = this._symbolCtor,
      h = fm(o);
    l || r.removeAll(),
      o
        .diff(l)
        .add(function(t) {
          var e = o.getItemLayout(t);
          if (cm(o, e, t, a)) {
            var i = new u(o, t, h);
            i.attr('position', e), o.setItemGraphicEl(t, i), r.add(i);
          }
        })
        .update(function(t, e) {
          var i = l.getItemGraphicEl(e),
            n = o.getItemLayout(t);
          cm(o, n, t, a)
            ? (i
                ? (i.updateData(o, t, h), pl(i, {position: n}, s))
                : (i = new u(o, t)).attr('position', n),
              r.add(i),
              o.setItemGraphicEl(t, i))
            : r.remove(i);
        })
        .remove(function(t) {
          var e = l.getItemGraphicEl(t);
          e &&
            e.fadeOut(function() {
              r.remove(e);
            });
        })
        .execute(),
      (this._data = o);
  }),
    (hm.isPersistent = function() {
      return !0;
    }),
    (hm.updateLayout = function() {
      var n = this._data;
      n &&
        n.eachItemGraphicEl(function(t, e) {
          var i = n.getItemLayout(e);
          t.attr('position', i);
        });
    }),
    (hm.incrementalPrepareUpdate = function(t) {
      (this._seriesScope = fm(t)), (this._data = null), this.group.removeAll();
    }),
    (hm.incrementalUpdate = function(t, e, i) {
      function n(t) {
        t.isGroup || (t.incremental = t.useHoverLayer = !0);
      }
      i = dm(i);
      for (var o = t.start; o < t.end; o++) {
        var a = e.getItemLayout(o);
        if (cm(e, a, o, i)) {
          var r = new this._symbolCtor(e, o, this._seriesScope);
          r.traverse(n),
            r.attr('position', a),
            this.group.add(r),
            e.setItemGraphicEl(o, r);
        }
      }
    }),
    (hm.remove = function(t) {
      var e = this.group,
        i = this._data;
      i && t
        ? i.eachItemGraphicEl(function(t) {
            t.fadeOut(function() {
              e.remove(t);
            });
          })
        : e.removeAll();
    });
  var mm = It,
    vm = Tt,
    ym = ct,
    xm = st,
    _m = [],
    wm = [],
    bm = [];
  function Sm(t) {
    return isNaN(t[0]) || isNaN(t[1]);
  }
  function Mm(t, e, i, n, o, a, r, s, l, u) {
    return 'none' !== u && u
      ? function(t, e, i, n, o, a, r, s, l, u, h) {
          for (var c = 0, d = i, f = 0; f < n; f++) {
            var p = e[d];
            if (o <= d || d < 0) break;
            if (Sm(p)) {
              if (h) {
                d += a;
                continue;
              }
              break;
            }
            if (d === i) t[0 < a ? 'moveTo' : 'lineTo'](p[0], p[1]);
            else if (0 < l) {
              var g = e[c],
                m = 'y' === u ? 1 : 0,
                v = (p[m] - g[m]) * l;
              xm(wm, g),
                (wm[m] = g[m] + v),
                xm(bm, p),
                (bm[m] = p[m] - v),
                t.bezierCurveTo(wm[0], wm[1], bm[0], bm[1], p[0], p[1]);
            } else t.lineTo(p[0], p[1]);
            (c = d), (d += a);
          }
          return f;
        }.apply(this, arguments)
      : function(t, e, i, n, o, a, r, s, l, u, h) {
          for (var c = 0, d = i, f = 0; f < n; f++) {
            var p = e[d];
            if (o <= d || d < 0) break;
            if (Sm(p)) {
              if (h) {
                d += a;
                continue;
              }
              break;
            }
            if (d === i) t[0 < a ? 'moveTo' : 'lineTo'](p[0], p[1]), xm(wm, p);
            else if (0 < l) {
              var g = d + a,
                m = e[g];
              if (h) for (; m && Sm(e[g]); ) m = e[(g += a)];
              var v = 0.5,
                y = e[c];
              if (!(m = e[g]) || Sm(m)) xm(bm, p);
              else {
                var x, _;
                if (
                  (Sm(m) && !h && (m = p), dt(_m, m, y), 'x' === u || 'y' === u)
                ) {
                  var w = 'x' === u ? 0 : 1;
                  (x = Math.abs(p[w] - y[w])), (_ = Math.abs(p[w] - m[w]));
                } else (x = _t(p, y)), (_ = _t(p, m));
                ym(bm, p, _m, -l * (1 - (v = _ / (_ + x))));
              }
              mm(wm, wm, s),
                vm(wm, wm, r),
                mm(bm, bm, s),
                vm(bm, bm, r),
                t.bezierCurveTo(wm[0], wm[1], bm[0], bm[1], p[0], p[1]),
                ym(wm, p, _m, l * v);
            } else t.lineTo(p[0], p[1]);
            (c = d), (d += a);
          }
          return f;
        }.apply(this, arguments);
  }
  function Im(t, e) {
    var i = [1 / 0, 1 / 0],
      n = [-1 / 0, -1 / 0];
    if (e)
      for (var o = 0; o < t.length; o++) {
        var a = t[o];
        a[0] < i[0] && (i[0] = a[0]),
          a[1] < i[1] && (i[1] = a[1]),
          a[0] > n[0] && (n[0] = a[0]),
          a[1] > n[1] && (n[1] = a[1]);
      }
    return {min: e ? i : n, max: e ? n : i};
  }
  var Tm = Lr.extend({
      type: 'ec-polyline',
      shape: {
        points: [],
        smooth: 0,
        smoothConstraint: !0,
        smoothMonotone: null,
        connectNulls: !1,
      },
      style: {fill: null, stroke: '#000'},
      brush: qr(Lr.prototype.brush),
      buildPath: function(t, e) {
        var i = e.points,
          n = 0,
          o = i.length,
          a = Im(i, e.smoothConstraint);
        if (e.connectNulls) {
          for (; 0 < o && Sm(i[o - 1]); o--);
          for (; n < o && Sm(i[n]); n++);
        }
        for (; n < o; )
          n +=
            Mm(
              t,
              i,
              n,
              o,
              o,
              1,
              a.min,
              a.max,
              e.smooth,
              e.smoothMonotone,
              e.connectNulls,
            ) + 1;
      },
    }),
    Am = Lr.extend({
      type: 'ec-polygon',
      shape: {
        points: [],
        stackedOnPoints: [],
        smooth: 0,
        stackedOnSmooth: 0,
        smoothConstraint: !0,
        smoothMonotone: null,
        connectNulls: !1,
      },
      brush: qr(Lr.prototype.brush),
      buildPath: function(t, e) {
        var i = e.points,
          n = e.stackedOnPoints,
          o = 0,
          a = i.length,
          r = e.smoothMonotone,
          s = Im(i, e.smoothConstraint),
          l = Im(n, e.smoothConstraint);
        if (e.connectNulls) {
          for (; 0 < a && Sm(i[a - 1]); a--);
          for (; o < a && Sm(i[o]); o++);
        }
        for (; o < a; ) {
          var u = Mm(
            t,
            i,
            o,
            a,
            a,
            1,
            s.min,
            s.max,
            e.smooth,
            r,
            e.connectNulls,
          );
          Mm(
            t,
            n,
            o + u - 1,
            u,
            a,
            -1,
            l.min,
            l.max,
            e.stackedOnSmooth,
            r,
            e.connectNulls,
          ),
            (o += u + 1),
            t.closePath();
        }
      },
    });
  function Dm(t, e, i) {
    var n = t.getArea(),
      o = t.getBaseAxis().isHorizontal(),
      a = n.x,
      r = n.y,
      s = n.width,
      l = n.height,
      u = i.get('lineStyle.width') || 2;
    (a -= u / 2),
      (r -= u / 2),
      (s += u),
      (l += u),
      (a = Math.floor(a)),
      (s = Math.round(s));
    var h = new us({shape: {x: a, y: r, width: s, height: l}});
    return (
      e &&
        ((h.shape[o ? 'width' : 'height'] = 0),
        gl(h, {shape: {width: s, height: l}}, i)),
      h
    );
  }
  function Cm(t, e, i) {
    var n = t.getArea(),
      o = new Jr({
        shape: {
          cx: Gl(t.cx, 1),
          cy: Gl(t.cy, 1),
          r0: Gl(n.r0, 1),
          r: Gl(n.r, 1),
          startAngle: n.startAngle,
          endAngle: n.endAngle,
          clockwise: n.clockwise,
        },
      });
    return (
      e &&
        ((o.shape.endAngle = n.startAngle),
        gl(o, {shape: {endAngle: n.endAngle}}, i)),
      o
    );
  }
  function Lm(t, e, i) {
    return t
      ? 'polar' === t.type
        ? Cm(t, e, i)
        : 'cartesian2d' === t.type
        ? Dm(t, e, i)
        : null
      : null;
  }
  function km(t, e) {
    if (t.length === e.length) {
      for (var i = 0; i < t.length; i++) {
        var n = t[i],
          o = e[i];
        if (n[0] !== o[0] || n[1] !== o[1]) return;
      }
      return !0;
    }
  }
  function Pm(t, e) {
    var i = [],
      n = [],
      o = [],
      a = [];
    return (
      Ua(t, i, n),
      Ua(e, o, a),
      Math.max(
        Math.abs(i[0] - o[0]),
        Math.abs(i[1] - o[1]),
        Math.abs(n[0] - a[0]),
        Math.abs(n[1] - a[1]),
      )
    );
  }
  function Nm(t) {
    return 'number' == typeof t ? t : t ? 0.5 : 0;
  }
  function Om(t, e, i) {
    for (
      var n = e.getBaseAxis(),
        o = 'x' === n.dim || 'radius' === n.dim ? 0 : 1,
        a = [],
        r = 0;
      r < t.length - 1;
      r++
    ) {
      var s = t[r + 1],
        l = t[r];
      a.push(l);
      var u = [];
      switch (i) {
        case 'end':
          (u[o] = s[o]), (u[1 - o] = l[1 - o]), a.push(u);
          break;
        case 'middle':
          var h = (l[o] + s[o]) / 2,
            c = [];
          (u[o] = c[o] = h),
            (u[1 - o] = l[1 - o]),
            (c[1 - o] = s[1 - o]),
            a.push(u),
            a.push(c);
          break;
        default:
          (u[o] = l[o]), (u[1 - o] = s[1 - o]), a.push(u);
      }
    }
    return t[r] && a.push(t[r]), a;
  }
  function Em(t, e, i) {
    var n = t.get('showAllSymbol'),
      o = 'auto' === n;
    if (!n || o) {
      var a = i.getAxesByScale('ordinal')[0];
      if (
        a &&
        (!o ||
          !(function(t, e) {
            var i = t.getExtent(),
              n = Math.abs(i[1] - i[0]) / t.scale.count();
            isNaN(n) && (n = 0);
            for (
              var o = e.count(), a = Math.max(1, Math.round(o / 5)), r = 0;
              r < o;
              r += a
            )
              if (1.5 * Qg.getSymbolSize(e, r)[t.isHorizontal() ? 1 : 0] > n)
                return !1;
            return !0;
          })(a, e))
      ) {
        var r = e.mapDimension(a.dim),
          s = {};
        return (
          E(a.getViewLabels(), function(t) {
            s[t.tickValue] = 1;
          }),
          function(t) {
            return !s.hasOwnProperty(e.get(r, t));
          }
        );
      }
    }
  }
  function Rm(t, e, i) {
    if ('cartesian2d' !== t.type) return Cm(t, e, i);
    var n = t.getBaseAxis().isHorizontal(),
      o = Dm(t, e, i);
    if (!i.get('clip', !0)) {
      var a = o.shape,
        r = Math.max(a.width, a.height);
      n ? ((a.y -= r), (a.height += 2 * r)) : ((a.x -= r), (a.width += 2 * r));
    }
    return o;
  }
  Mc.extend({
    type: 'line',
    init: function() {
      var t = new ki(),
        e = new um();
      this.group.add(e.group), (this._symbolDraw = e), (this._lineGroup = t);
    },
    render: function(t, e, i) {
      var n = t.coordinateSystem,
        o = this.group,
        a = t.getData(),
        r = t.getModel('lineStyle'),
        s = t.getModel('areaStyle'),
        l = a.mapArray(a.getItemLayout),
        u = 'polar' === n.type,
        h = this._coordSys,
        c = this._symbolDraw,
        d = this._polyline,
        f = this._polygon,
        p = this._lineGroup,
        g = t.get('animation'),
        m = !s.isEmpty(),
        v = s.get('origin'),
        y = (function(t, e, i) {
          if (!i.valueDim) return [];
          for (var n = [], o = 0, a = e.count(); o < a; o++)
            n.push(gm(i, t, e, o));
          return n;
        })(n, a, pm(n, a, v)),
        x = t.get('showSymbol'),
        _ = x && !u && Em(t, a, n),
        w = this._data;
      w &&
        w.eachItemGraphicEl(function(t, e) {
          t.__temp && (o.remove(t), w.setItemGraphicEl(e, null));
        }),
        x || c.remove(),
        o.add(p);
      var b,
        S = !u && t.get('step');
      n &&
        n.getArea &&
        t.get('clip', !0) &&
        (null != (b = n.getArea()).width
          ? ((b.x -= 0.1), (b.y -= 0.1), (b.width += 0.2), (b.height += 0.2))
          : b.r0 && ((b.r0 -= 0.5), (b.r1 += 0.5))),
        (this._clipShapeForSymbol = b),
        d && h.type === n.type && S === this._step
          ? (m && !f
              ? (f = this._newPolygon(l, y, n, g))
              : f && !m && (p.remove(f), (f = this._polygon = null)),
            p.setClipPath(Rm(n, !1, t)),
            x && c.updateData(a, {isIgnore: _, clipShape: b}),
            a.eachItemGraphicEl(function(t) {
              t.stopAnimation(!0);
            }),
            (km(this._stackedOnPoints, y) && km(this._points, l)) ||
              (g
                ? this._updateAnimation(a, y, n, i, S, v)
                : (S && ((l = Om(l, n, S)), (y = Om(y, n, S))),
                  d.setShape({points: l}),
                  f && f.setShape({points: l, stackedOnPoints: y}))))
          : (x && c.updateData(a, {isIgnore: _, clipShape: b}),
            S && ((l = Om(l, n, S)), (y = Om(y, n, S))),
            (d = this._newPolyline(l, n, g)),
            m && (f = this._newPolygon(l, y, n, g)),
            p.setClipPath(Rm(n, !0, t)));
      var M =
        (function(t, e) {
          var i = t.getVisual('visualMeta');
          if (i && i.length && t.count())
            if ('cartesian2d' === e.type) {
              for (var n, o, a = i.length - 1; 0 <= a; a--) {
                var r = i[a].dimension,
                  s = t.dimensions[r],
                  l = t.getDimensionInfo(s);
                if ('x' === (n = l && l.coordDim) || 'y' === n) {
                  o = i[a];
                  break;
                }
              }
              if (o) {
                var u = e.getAxis(n),
                  h = O(o.stops, function(t) {
                    return {
                      coord: u.toGlobalCoord(u.dataToCoord(t.value)),
                      color: t.color,
                    };
                  }),
                  c = h.length,
                  d = o.outerColors.slice();
                c && h[0].coord > h[c - 1].coord && (h.reverse(), d.reverse());
                var f = h[0].coord - 10,
                  p = h[c - 1].coord + 10,
                  g = p - f;
                if (g < 0.001) return 'transparent';
                E(h, function(t) {
                  t.offset = (t.coord - f) / g;
                }),
                  h.push({
                    offset: c ? h[c - 1].offset : 0.5,
                    color: d[1] || 'transparent',
                  }),
                  h.unshift({
                    offset: c ? h[0].offset : 0.5,
                    color: d[0] || 'transparent',
                  });
                var m = new ys(0, 0, 0, 0, h, !0);
                return (m[n] = f), (m[n + '2'] = p), m;
              }
              D &&
                console.warn(
                  'Visual map on line style only support x or y dimension.',
                );
            } else
              D &&
                console.warn(
                  'Visual map on line style is only supported on cartesian2d.',
                );
        })(a, n) || a.getVisual('color');
      d.useStyle(
        C(r.getLineStyle(), {fill: 'none', stroke: M, lineJoin: 'bevel'}),
      );
      var I = t.get('smooth');
      if (
        ((I = Nm(t.get('smooth'))),
        d.setShape({
          smooth: I,
          smoothMonotone: t.get('smoothMonotone'),
          connectNulls: t.get('connectNulls'),
        }),
        f)
      ) {
        var T = a.getCalculationInfo('stackedOnSeries'),
          A = 0;
        f.useStyle(
          C(s.getAreaStyle(), {fill: M, opacity: 0.7, lineJoin: 'bevel'}),
        ),
          T && (A = Nm(T.get('smooth'))),
          f.setShape({
            smooth: I,
            stackedOnSmooth: A,
            smoothMonotone: t.get('smoothMonotone'),
            connectNulls: t.get('connectNulls'),
          });
      }
      (this._data = a),
        (this._coordSys = n),
        (this._stackedOnPoints = y),
        (this._points = l),
        (this._step = S),
        (this._valueOrigin = v);
    },
    dispose: function() {},
    highlight: function(t, e, i, n) {
      var o = t.getData(),
        a = Ko(o, n);
      if (!(a instanceof Array) && null != a && 0 <= a) {
        var r = o.getItemGraphicEl(a);
        if (!r) {
          var s = o.getItemLayout(a);
          if (!s) return;
          if (
            this._clipShapeForSymbol &&
            !this._clipShapeForSymbol.contain(s[0], s[1])
          )
            return;
          ((r = new Qg(o, a)).position = s),
            r.setZ(t.get('zlevel'), t.get('z')),
            (r.ignore = isNaN(s[0]) || isNaN(s[1])),
            (r.__temp = !0),
            o.setItemGraphicEl(a, r),
            r.stopSymbolAnimation(!0),
            this.group.add(r);
        }
        r.highlight();
      } else Mc.prototype.highlight.call(this, t, e, i, n);
    },
    downplay: function(t, e, i, n) {
      var o = t.getData(),
        a = Ko(o, n);
      if (null != a && 0 <= a) {
        var r = o.getItemGraphicEl(a);
        r &&
          (r.__temp
            ? (o.setItemGraphicEl(a, null), this.group.remove(r))
            : r.downplay());
      } else Mc.prototype.downplay.call(this, t, e, i, n);
    },
    _newPolyline: function(t) {
      var e = this._polyline;
      return (
        e && this._lineGroup.remove(e),
        (e = new Tm({shape: {points: t}, silent: !0, z2: 10})),
        this._lineGroup.add(e),
        (this._polyline = e)
      );
    },
    _newPolygon: function(t, e) {
      var i = this._polygon;
      return (
        i && this._lineGroup.remove(i),
        (i = new Am({shape: {points: t, stackedOnPoints: e}, silent: !0})),
        this._lineGroup.add(i),
        (this._polygon = i)
      );
    },
    _updateAnimation: function(t, e, i, n, o, a) {
      var r = this._polyline,
        s = this._polygon,
        l = t.hostModel,
        u = (function(t, e, i, n, o, a, r, s) {
          for (
            var l = (function(t, e) {
                var i = [];
                return (
                  e
                    .diff(t)
                    .add(function(t) {
                      i.push({cmd: '+', idx: t});
                    })
                    .update(function(t, e) {
                      i.push({cmd: '=', idx: e, idx1: t});
                    })
                    .remove(function(t) {
                      i.push({cmd: '-', idx: t});
                    })
                    .execute(),
                  i
                );
              })(t, e),
              u = [],
              h = [],
              c = [],
              d = [],
              f = [],
              p = [],
              g = [],
              m = pm(o, e, r),
              v = pm(a, t, s),
              y = 0;
            y < l.length;
            y++
          ) {
            var x = l[y],
              _ = !0;
            switch (x.cmd) {
              case '=':
                var w = t.getItemLayout(x.idx),
                  b = e.getItemLayout(x.idx1);
                (isNaN(w[0]) || isNaN(w[1])) && (w = b.slice()),
                  u.push(w),
                  h.push(b),
                  c.push(i[x.idx]),
                  d.push(n[x.idx1]),
                  g.push(e.getRawIndex(x.idx1));
                break;
              case '+':
                var S = x.idx;
                u.push(
                  o.dataToPoint([
                    e.get(m.dataDimsForPoint[0], S),
                    e.get(m.dataDimsForPoint[1], S),
                  ]),
                ),
                  h.push(e.getItemLayout(S).slice()),
                  c.push(gm(m, o, e, S)),
                  d.push(n[S]),
                  g.push(e.getRawIndex(S));
                break;
              case '-':
                S = x.idx;
                var M = t.getRawIndex(S);
                M !== S
                  ? (u.push(t.getItemLayout(S)),
                    h.push(
                      a.dataToPoint([
                        t.get(v.dataDimsForPoint[0], S),
                        t.get(v.dataDimsForPoint[1], S),
                      ]),
                    ),
                    c.push(i[S]),
                    d.push(gm(v, a, t, S)),
                    g.push(M))
                  : (_ = !1);
            }
            _ && (f.push(x), p.push(p.length));
          }
          p.sort(function(t, e) {
            return g[t] - g[e];
          });
          var I = [],
            T = [],
            A = [],
            D = [],
            C = [];
          for (y = 0; y < p.length; y++) {
            S = p[y];
            (I[y] = u[S]),
              (T[y] = h[S]),
              (A[y] = c[S]),
              (D[y] = d[S]),
              (C[y] = f[S]);
          }
          return {
            current: I,
            next: T,
            stackedOnCurrent: A,
            stackedOnNext: D,
            status: C,
          };
        })(
          this._data,
          t,
          this._stackedOnPoints,
          e,
          this._coordSys,
          i,
          this._valueOrigin,
          a,
        ),
        h = u.current,
        c = u.stackedOnCurrent,
        d = u.next,
        f = u.stackedOnNext;
      if (
        (o &&
          ((h = Om(u.current, i, o)),
          (c = Om(u.stackedOnCurrent, i, o)),
          (d = Om(u.next, i, o)),
          (f = Om(u.stackedOnNext, i, o))),
        3e3 < Pm(h, d) || (s && 3e3 < Pm(c, f)))
      )
        return (
          r.setShape({points: d}),
          void (s && s.setShape({points: d, stackedOnPoints: f}))
        );
      (r.shape.__points = u.current),
        (r.shape.points = h),
        pl(r, {shape: {points: d}}, l),
        s &&
          (s.setShape({points: h, stackedOnPoints: c}),
          pl(s, {shape: {points: d, stackedOnPoints: f}}, l));
      for (var p = [], g = u.status, m = 0; m < g.length; m++) {
        if ('=' === g[m].cmd) {
          var v = t.getItemGraphicEl(g[m].idx1);
          v && p.push({el: v, ptIdx: m});
        }
      }
      r.animators &&
        r.animators.length &&
        r.animators[0].during(function() {
          for (var t = 0; t < p.length; t++) {
            p[t].el.attr('position', r.shape.__points[p[t].ptIdx]);
          }
        });
    },
    remove: function(t) {
      var i = this.group,
        n = this._data;
      this._lineGroup.removeAll(),
        this._symbolDraw.remove(!0),
        n &&
          n.eachItemGraphicEl(function(t, e) {
            t.__temp && (i.remove(t), n.setItemGraphicEl(e, null));
          }),
        (this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null);
    },
  });
  function zm(t, r, s) {
    return {
      seriesType: t,
      performRawSeries: !0,
      reset: function(u, t, e) {
        var i = u.getData(),
          h = u.get('symbol'),
          c = u.get('symbolSize'),
          n = u.get('symbolKeepAspect'),
          d = u.get('symbolRotate'),
          f = z(h),
          p = z(c),
          g = z(d),
          m = f || p || g,
          o = !f && h ? h : r,
          a = p ? null : c;
        if (
          (i.setVisual({
            legendSymbol: s || o,
            symbol: o,
            symbolSize: a,
            symbolKeepAspect: n,
            symbolRotate: d,
          }),
          !t.isSeriesFiltered(u))
        )
          return {
            dataEach:
              i.hasItemOption || m
                ? function(t, e) {
                    if (m) {
                      var i = u.getRawValue(e),
                        n = u.getDataParams(e);
                      f && t.setItemVisual(e, 'symbol', h(i, n)),
                        p && t.setItemVisual(e, 'symbolSize', c(i, n)),
                        g && t.setItemVisual(e, 'symbolRotate', d(i, n));
                    }
                    if (t.hasItemOption) {
                      var o = t.getItemModel(e),
                        a = o.getShallow('symbol', !0),
                        r = o.getShallow('symbolSize', !0),
                        s = o.getShallow('symbolRotate', !0),
                        l = o.getShallow('symbolKeepAspect', !0);
                      null != a && t.setItemVisual(e, 'symbol', a),
                        null != r && t.setItemVisual(e, 'symbolSize', r),
                        null != s && t.setItemVisual(e, 'symbolRotate', s),
                        null != l && t.setItemVisual(e, 'symbolKeepAspect', l);
                    }
                  }
                : null,
          };
      },
    };
  }
  function Bm(t) {
    return {
      seriesType: t,
      plan: wc(),
      reset: function(t) {
        var e = t.getData(),
          c = t.coordinateSystem,
          d = t.pipelineContext.large;
        if (c) {
          var f = O(c.dimensions, function(t) {
              return e.mapDimension(t);
            }).slice(0, 2),
            p = f.length,
            i = e.getCalculationInfo('stackResultDimension');
          return (
            _p(e, f[0]) && (f[0] = i),
            _p(e, f[1]) && (f[1] = i),
            p && {
              progress: function(t, e) {
                for (
                  var i = t.end - t.start,
                    n = d && new Float32Array(i * p),
                    o = t.start,
                    a = 0,
                    r = [],
                    s = [];
                  o < t.end;
                  o++
                ) {
                  var l;
                  if (1 === p) {
                    var u = e.get(f[0], o);
                    l = !isNaN(u) && c.dataToPoint(u, null, s);
                  } else {
                    u = r[0] = e.get(f[0], o);
                    var h = (r[1] = e.get(f[1], o));
                    l = !isNaN(u) && !isNaN(h) && c.dataToPoint(r, null, s);
                  }
                  d
                    ? ((n[a++] = l ? l[0] : NaN), (n[a++] = l ? l[1] : NaN))
                    : e.setItemLayout(o, (l && l.slice()) || [NaN, NaN]);
                }
                d && e.setLayout('symbolPoints', n);
              },
            }
          );
        }
      },
    };
  }
  function Vm(t, e) {
    return Math.round(t.length / 2);
  }
  var Gm = {
    average: function(t) {
      for (var e = 0, i = 0, n = 0; n < t.length; n++)
        isNaN(t[n]) || ((e += t[n]), i++);
      return 0 === i ? NaN : e / i;
    },
    sum: function(t) {
      for (var e = 0, i = 0; i < t.length; i++) e += t[i] || 0;
      return e;
    },
    max: function(t) {
      for (var e = -1 / 0, i = 0; i < t.length; i++) t[i] > e && (e = t[i]);
      return isFinite(e) ? e : NaN;
    },
    min: function(t) {
      for (var e = 1 / 0, i = 0; i < t.length; i++) t[i] < e && (e = t[i]);
      return isFinite(e) ? e : NaN;
    },
    nearest: function(t) {
      return t[0];
    },
  };
  function Fm(t) {
    return this._axes[t];
  }
  function Wm(t) {
    (this._axes = {}), (this._dimList = []), (this.name = t || '');
  }
  function Hm(t) {
    Wm.call(this, t);
  }
  (Wm.prototype = {
    constructor: Wm,
    type: 'cartesian',
    getAxis: function(t) {
      return this._axes[t];
    },
    getAxes: function() {
      return O(this._dimList, Fm, this);
    },
    getAxesByScale: function(e) {
      return (
        (e = e.toLowerCase()),
        I(this.getAxes(), function(t) {
          return t.scale.type === e;
        })
      );
    },
    addAxis: function(t) {
      var e = t.dim;
      (this._axes[e] = t), this._dimList.push(e);
    },
    dataToCoord: function(t) {
      return this._dataCoordConvert(t, 'dataToCoord');
    },
    coordToData: function(t) {
      return this._dataCoordConvert(t, 'coordToData');
    },
    _dataCoordConvert: function(t, e) {
      for (
        var i = this._dimList, n = t instanceof Array ? [] : {}, o = 0;
        o < i.length;
        o++
      ) {
        var a = i[o],
          r = this._axes[a];
        n[a] = r[e](t[a]);
      }
      return n;
    },
  }),
    (Hm.prototype = {
      constructor: Hm,
      type: 'cartesian2d',
      dimensions: ['x', 'y'],
      getBaseAxis: function() {
        return (
          this.getAxesByScale('ordinal')[0] ||
          this.getAxesByScale('time')[0] ||
          this.getAxis('x')
        );
      },
      containPoint: function(t) {
        var e = this.getAxis('x'),
          i = this.getAxis('y');
        return (
          e.contain(e.toLocalCoord(t[0])) && i.contain(i.toLocalCoord(t[1]))
        );
      },
      containData: function(t) {
        return (
          this.getAxis('x').containData(t[0]) &&
          this.getAxis('y').containData(t[1])
        );
      },
      dataToPoint: function(t, e, i) {
        var n = this.getAxis('x'),
          o = this.getAxis('y');
        return (
          ((i = i || [])[0] = n.toGlobalCoord(n.dataToCoord(t[0]))),
          (i[1] = o.toGlobalCoord(o.dataToCoord(t[1]))),
          i
        );
      },
      clampData: function(t, e) {
        var i = this.getAxis('x').scale,
          n = this.getAxis('y').scale,
          o = i.getExtent(),
          a = n.getExtent(),
          r = i.parse(t[0]),
          s = n.parse(t[1]);
        return (
          ((e = e || [])[0] = Math.min(
            Math.max(Math.min(o[0], o[1]), r),
            Math.max(o[0], o[1]),
          )),
          (e[1] = Math.min(
            Math.max(Math.min(a[0], a[1]), s),
            Math.max(a[0], a[1]),
          )),
          e
        );
      },
      pointToData: function(t, e) {
        var i = this.getAxis('x'),
          n = this.getAxis('y');
        return (
          ((e = e || [])[0] = i.coordToData(i.toLocalCoord(t[0]))),
          (e[1] = n.coordToData(n.toLocalCoord(t[1]))),
          e
        );
      },
      getOtherAxis: function(t) {
        return this.getAxis('x' === t.dim ? 'y' : 'x');
      },
      getArea: function() {
        var t = this.getAxis('x').getGlobalExtent(),
          e = this.getAxis('y').getGlobalExtent(),
          i = Math.min(t[0], t[1]),
          n = Math.min(e[0], e[1]);
        return new Li(i, n, Math.max(t[0], t[1]) - i, Math.max(e[0], e[1]) - n);
      },
    }),
    b(Hm, Wm);
  function Zm(t, e, i, n, o) {
    Yg.call(this, t, e, i),
      (this.type = n || 'value'),
      (this.position = o || 'bottom');
  }
  (Zm.prototype = {
    constructor: Zm,
    index: 0,
    getAxesOnZeroOf: null,
    model: null,
    isHorizontal: function() {
      var t = this.position;
      return 'top' === t || 'bottom' === t;
    },
    getGlobalExtent: function(t) {
      var e = this.getExtent();
      return (
        (e[0] = this.toGlobalCoord(e[0])),
        (e[1] = this.toGlobalCoord(e[1])),
        t && e[0] > e[1] && e.reverse(),
        e
      );
    },
    getOtherAxis: function() {
      this.grid.getOtherAxis();
    },
    pointToData: function(t, e) {
      return this.coordToData(
        this.toLocalCoord(t['x' === this.dim ? 0 : 1]),
        e,
      );
    },
    toLocalCoord: null,
    toGlobalCoord: null,
  }),
    b(Zm, Yg);
  var Um = {
      show: !0,
      zlevel: 0,
      z: 0,
      inverse: !1,
      name: '',
      nameLocation: 'end',
      nameRotate: null,
      nameTruncate: {maxWidth: null, ellipsis: '...', placeholder: '.'},
      nameTextStyle: {},
      nameGap: 15,
      silent: !1,
      triggerEvent: !1,
      tooltip: {show: !1},
      axisPointer: {},
      axisLine: {
        show: !0,
        onZero: !0,
        onZeroAxisIndex: null,
        lineStyle: {color: '#333', width: 1, type: 'solid'},
        symbol: ['none', 'none'],
        symbolSize: [10, 15],
      },
      axisTick: {show: !0, inside: !1, length: 5, lineStyle: {width: 1}},
      axisLabel: {
        show: !0,
        inside: !1,
        rotate: 0,
        showMinLabel: null,
        showMaxLabel: null,
        margin: 8,
        fontSize: 12,
      },
      splitLine: {
        show: !0,
        lineStyle: {color: ['#ccc'], width: 1, type: 'solid'},
      },
      splitArea: {
        show: !1,
        areaStyle: {color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']},
      },
    },
    Xm = {};
  (Xm.categoryAxis = m(
    {
      boundaryGap: !0,
      deduplication: null,
      splitLine: {show: !1},
      axisTick: {alignWithLabel: !1, interval: 'auto'},
      axisLabel: {interval: 'auto'},
    },
    Um,
  )),
    (Xm.valueAxis = m(
      {
        boundaryGap: [0, 0],
        splitNumber: 5,
        minorTick: {show: !1, splitNumber: 5, length: 3, lineStyle: {}},
        minorSplitLine: {show: !1, lineStyle: {color: '#eee', width: 1}},
      },
      Um,
    )),
    (Xm.timeAxis = C(
      {scale: !0, min: 'dataMin', max: 'dataMax'},
      Xm.valueAxis,
    )),
    (Xm.logAxis = C({scale: !0, logBase: 10}, Xm.valueAxis));
  function Ym(a, t, r, e) {
    E(jm, function(o) {
      t.extend({
        type: a + 'Axis.' + o,
        mergeDefaultAndTheme: function(t, e) {
          var i = this.layoutMode,
            n = i ? Du(t) : {};
          m(t, e.getTheme().get(o + 'Axis')),
            m(t, this.getDefaultOption()),
            (t.type = r(a, t)),
            i && Au(t, n, i);
        },
        optionUpdated: function() {
          'category' === this.option.type &&
            (this.__ordinalMeta = Mp.createByAxisModel(this));
        },
        getCategories: function(t) {
          var e = this.option;
          if ('category' === e.type)
            return t ? e.data : this.__ordinalMeta.categories;
        },
        getOrdinalMeta: function() {
          return this.__ordinalMeta;
        },
        defaultOption: g([{}, Xm[o + 'Axis'], e], !0),
      });
    }),
      Ou.registerSubTypeDefaulter(a + 'Axis', L(r, a));
  }
  var jm = ['value', 'category', 'time', 'log'],
    qm = Ou.extend({
      type: 'cartesian2dAxis',
      axis: null,
      init: function() {
        qm.superApply(this, 'init', arguments), this.resetRange();
      },
      mergeOption: function() {
        qm.superApply(this, 'mergeOption', arguments), this.resetRange();
      },
      restoreData: function() {
        qm.superApply(this, 'restoreData', arguments), this.resetRange();
      },
      getCoordSysModel: function() {
        return this.ecModel.queryComponents({
          mainType: 'grid',
          index: this.option.gridIndex,
          id: this.option.gridId,
        })[0];
      },
    });
  function Km(t, e) {
    return e.type || (e.data ? 'category' : 'value');
  }
  m(qm.prototype, xg);
  var $m = {offset: 0};
  function Jm(t, e) {
    return t.getCoordSysModel() === e;
  }
  function Qm(t, e, i) {
    (this._coordsMap = {}),
      (this._coordsList = []),
      (this._axesMap = {}),
      (this._axesList = []),
      this._initCartesian(t, e, i),
      (this.model = t);
  }
  Ym('x', qm, Km, $m),
    Ym('y', qm, Km, $m),
    Ou.extend({
      type: 'grid',
      dependencies: ['xAxis', 'yAxis'],
      layoutMode: 'box',
      coordinateSystem: null,
      defaultOption: {
        show: !1,
        zlevel: 0,
        z: 0,
        left: '10%',
        top: 60,
        right: '10%',
        bottom: 60,
        containLabel: !1,
        backgroundColor: 'rgba(0,0,0,0)',
        borderWidth: 1,
        borderColor: '#ccc',
      },
    });
  var tv = Qm.prototype;
  function ev(t, e, i, n) {
    i.getAxesOnZeroOf = function() {
      return o ? [o] : [];
    };
    var o,
      a = t[e],
      r = i.model,
      s = r.get('axisLine.onZero'),
      l = r.get('axisLine.onZeroAxisIndex');
    if (s) {
      if (null != l) iv(a[l]) && (o = a[l]);
      else
        for (var u in a)
          if (a.hasOwnProperty(u) && iv(a[u]) && !n[h(a[u])]) {
            o = a[u];
            break;
          }
      o && (n[h(o)] = !0);
    }
    function h(t) {
      return t.dim + '_' + t.index;
    }
  }
  function iv(t) {
    return (
      t &&
      'category' !== t.type &&
      'time' !== t.type &&
      (function(t) {
        var e = t.scale.getExtent(),
          i = e[0],
          n = e[1];
        return !((0 < i && 0 < n) || (i < 0 && n < 0));
      })(t)
    );
  }
  (tv.type = 'grid'),
    (tv.axisPointerEnabled = !0),
    (tv.getRect = function() {
      return this._rect;
    }),
    (tv.update = function(t, e) {
      var i = this._axesMap;
      this._updateScale(t, this.model),
        E(i.x, function(t) {
          fg(t.scale, t.model);
        }),
        E(i.y, function(t) {
          fg(t.scale, t.model);
        });
      var n = {};
      E(i.x, function(t) {
        ev(i, 'y', t, n);
      }),
        E(i.y, function(t) {
          ev(i, 'x', t, n);
        }),
        this.resize(this.model, e);
    }),
    (tv.resize = function(t, e, i) {
      var o = Iu(t.getBoxLayoutParams(), {
        width: e.getWidth(),
        height: e.getHeight(),
      });
      this._rect = o;
      var n = this._axesList;
      function a() {
        E(n, function(t) {
          var e = t.isHorizontal(),
            i = e ? [0, o.width] : [0, o.height],
            n = t.inverse ? 1 : 0;
          t.setExtent(i[n], i[1 - n]),
            (function(t, e) {
              var i = t.getExtent(),
                n = i[0] + i[1];
              (t.toGlobalCoord =
                'x' === t.dim
                  ? function(t) {
                      return t + e;
                    }
                  : function(t) {
                      return n - t + e;
                    }),
                (t.toLocalCoord =
                  'x' === t.dim
                    ? function(t) {
                        return t - e;
                      }
                    : function(t) {
                        return n - t + e;
                      });
            })(t, e ? o.x : o.y);
        });
      }
      a(),
        !i &&
          t.get('containLabel') &&
          (E(n, function(t) {
            if (!t.model.get('axisLabel.inside')) {
              var e = (function(t) {
                var e = t.model,
                  i = t.scale;
                if (e.get('axisLabel.show') && !i.isBlank()) {
                  var n,
                    o,
                    a = 'category' === t.type,
                    r = i.getExtent();
                  o = a ? i.count() : (n = i.getTicks()).length;
                  var s,
                    l,
                    u,
                    h,
                    c,
                    d,
                    f,
                    p,
                    g,
                    m = t.getLabelModel(),
                    v = gg(t),
                    y = 1;
                  40 < o && (y = Math.ceil(o / 40));
                  for (var x = 0; x < o; x += y) {
                    var _ = v(n ? n[x] : r[0] + x),
                      w = m.getTextRect(_),
                      b =
                        ((l = w),
                        (u = m.get('rotate') || 0),
                        void 0,
                        (h = (u * Math.PI) / 180),
                        (c = l.plain()),
                        (d = c.width),
                        (f = c.height),
                        (p = d * Math.cos(h) + f * Math.sin(h)),
                        (g = d * Math.sin(h) + f * Math.cos(h)),
                        new Li(c.x, c.y, p, g));
                    s ? s.union(b) : (s = b);
                  }
                  return s;
                }
              })(t);
              if (e) {
                var i = t.isHorizontal() ? 'height' : 'width',
                  n = t.model.get('axisLabel.margin');
                (o[i] -= e[i] + n),
                  'top' === t.position
                    ? (o.y += e.height + n)
                    : 'left' === t.position && (o.x += e.width + n);
              }
            }
          }),
          a());
    }),
    (tv.getAxis = function(t, e) {
      var i = this._axesMap[t];
      if (null != i) {
        if (null == e) for (var n in i) if (i.hasOwnProperty(n)) return i[n];
        return i[e];
      }
    }),
    (tv.getAxes = function() {
      return this._axesList.slice();
    }),
    (tv.getCartesian = function(t, e) {
      if (null != t && null != e) {
        var i = 'x' + t + 'y' + e;
        return this._coordsMap[i];
      }
      V(t) && ((e = t.yAxisIndex), (t = t.xAxisIndex));
      for (var n = 0, o = this._coordsList; n < o.length; n++)
        if (o[n].getAxis('x').index === t || o[n].getAxis('y').index === e)
          return o[n];
    }),
    (tv.getCartesians = function() {
      return this._coordsList.slice();
    }),
    (tv.convertToPixel = function(t, e, i) {
      var n = this._findConvertTarget(t, e);
      return n.cartesian
        ? n.cartesian.dataToPoint(i)
        : n.axis
        ? n.axis.toGlobalCoord(n.axis.dataToCoord(i))
        : null;
    }),
    (tv.convertFromPixel = function(t, e, i) {
      var n = this._findConvertTarget(t, e);
      return n.cartesian
        ? n.cartesian.pointToData(i)
        : n.axis
        ? n.axis.coordToData(n.axis.toLocalCoord(i))
        : null;
    }),
    (tv._findConvertTarget = function(t, e) {
      var i,
        n,
        o = e.seriesModel,
        a = e.xAxisModel || (o && o.getReferringComponents('xAxis')[0]),
        r = e.yAxisModel || (o && o.getReferringComponents('yAxis')[0]),
        s = e.gridModel,
        l = this._coordsList;
      if (o) w(l, (i = o.coordinateSystem)) < 0 && (i = null);
      else if (a && r)
        i = this.getCartesian(a.componentIndex, r.componentIndex);
      else if (a) n = this.getAxis('x', a.componentIndex);
      else if (r) n = this.getAxis('y', r.componentIndex);
      else if (s) {
        s.coordinateSystem === this && (i = this._coordsList[0]);
      }
      return {cartesian: i, axis: n};
    }),
    (tv.containPoint = function(t) {
      var e = this._coordsList[0];
      if (e) return e.containPoint(t);
    }),
    (tv._initCartesian = function(r, t, e) {
      var s = {left: !1, right: !1, top: !1, bottom: !1},
        l = {x: {}, y: {}},
        u = {x: 0, y: 0};
      if (
        (t.eachComponent('xAxis', i('x'), this),
        t.eachComponent('yAxis', i('y'), this),
        !u.x || !u.y)
      )
        return (this._axesMap = {}), void (this._axesList = []);
      function i(a) {
        return function(t, e) {
          if (Jm(t, r)) {
            var i = t.get('position');
            'x' === a
              ? 'top' !== i &&
                'bottom' !== i &&
                (i = s.bottom ? 'top' : 'bottom')
              : 'left' !== i &&
                'right' !== i &&
                (i = s.left ? 'right' : 'left'),
              (s[i] = !0);
            var n = new Zm(a, pg(t), [0, 0], t.get('type'), i),
              o = 'category' === n.type;
            (n.onBand = o && t.get('boundaryGap')),
              (n.inverse = t.get('inverse')),
              ((t.axis = n).model = t),
              (n.grid = this),
              (n.index = e),
              this._axesList.push(n),
              (l[a][e] = n),
              u[a]++;
          }
        };
      }
      E(
        (this._axesMap = l).x,
        function(o, a) {
          E(
            l.y,
            function(t, e) {
              var i = 'x' + a + 'y' + e,
                n = new Hm(i);
              (n.grid = this),
                (n.model = r),
                (this._coordsMap[i] = n),
                this._coordsList.push(n),
                n.addAxis(o),
                n.addAxis(t);
            },
            this,
          );
        },
        this,
      );
    }),
    (tv._updateScale = function(l, u) {
      function h(e, i) {
        E(e.mapDimension(i.dim, !0), function(t) {
          i.scale.unionExtentFromData(e, wp(e, t));
        });
      }
      E(this._axesList, function(t) {
        t.scale.setExtent(1 / 0, -1 / 0);
      }),
        l.eachSeries(function(t) {
          if (av(t)) {
            var e = ov(t, l),
              i = e[0],
              n = e[1];
            if (!Jm(i, u) || !Jm(n, u)) return;
            var o = this.getCartesian(i.componentIndex, n.componentIndex),
              a = t.getData(),
              r = o.getAxis('x'),
              s = o.getAxis('y');
            'list' === a.type && (h(a, r, t), h(a, s, t));
          }
        }, this);
    }),
    (tv.getTooltipAxes = function(n) {
      var o = [],
        a = [];
      return (
        E(this.getCartesians(), function(t) {
          var e = null != n && 'auto' !== n ? t.getAxis(n) : t.getBaseAxis(),
            i = t.getOtherAxis(e);
          w(o, e) < 0 && o.push(e), w(a, i) < 0 && a.push(i);
        }),
        {baseAxes: o, otherAxes: a}
      );
    });
  var nv = ['xAxis', 'yAxis'];
  function ov(i) {
    return O(nv, function(t) {
      var e = i.getReferringComponents(t)[0];
      if (D && !e)
        throw new Error(
          t + ' "' + Z(i.get(t + 'Index'), i.get(t + 'Id'), 0) + '" not found',
        );
      return e;
    });
  }
  function av(t) {
    return 'cartesian2d' === t.get('coordinateSystem');
  }
  (Qm.create = function(n, o) {
    var a = [];
    return (
      n.eachComponent('grid', function(t, e) {
        var i = new Qm(t, n, o);
        (i.name = 'grid_' + e),
          i.resize(t, o, !0),
          (t.coordinateSystem = i),
          a.push(i);
      }),
      n.eachSeries(function(t) {
        if (av(t)) {
          var e = ov(t),
            i = e[0],
            n = e[1],
            o = i.getCoordSysModel();
          if (D) {
            if (!o)
              throw new Error(
                'Grid "' +
                  Z(i.get('gridIndex'), i.get('gridId'), 0) +
                  '" not found',
              );
            if (i.getCoordSysModel() !== n.getCoordSysModel())
              throw new Error('xAxis and yAxis must use the same grid');
          }
          var a = o.coordinateSystem;
          t.coordinateSystem = a.getCartesian(
            i.componentIndex,
            n.componentIndex,
          );
        }
      }),
      a
    );
  }),
    (Qm.dimensions = Qm.prototype.dimensions = Hm.prototype.dimensions),
    dh.register('cartesian2d', Qm);
  function rv(t, e) {
    (this.opt = e),
      (this.axisModel = t),
      C(e, {
        labelOffset: 0,
        nameDirection: 1,
        tickDirection: 1,
        labelDirection: 1,
        silent: !0,
      }),
      (this.group = new ki());
    var i = new ki({position: e.position.slice(), rotation: e.rotation});
    i.updateTransform(), (this._transform = i.transform), (this._dumbGroup = i);
  }
  var sv = Math.PI;
  rv.prototype = {
    constructor: rv,
    hasBuilder: function(t) {
      return !!lv[t];
    },
    add: function(t) {
      lv[t].call(this);
    },
    getGroup: function() {
      return this.group;
    },
  };
  var lv = {
      axisLine: function() {
        var a = this.opt,
          t = this.axisModel;
        if (t.get('axisLine.show')) {
          var e = this.axisModel.axis.getExtent(),
            i = this._transform,
            r = [e[0], 0],
            n = [e[1], 0];
          i && (Mt(r, r, i), Mt(n, n, i));
          var s = P(
            {lineCap: 'round'},
            t.getModel('axisLine.lineStyle').getLineStyle(),
          );
          this.group.add(
            new cs({
              anid: 'line',
              subPixelOptimize: !0,
              shape: {x1: r[0], y1: r[1], x2: n[0], y2: n[1]},
              style: s,
              strokeContainThreshold: a.strokeContainThreshold || 5,
              silent: !0,
              z2: 1,
            }),
          );
          var l = t.get('axisLine.symbol'),
            o = t.get('axisLine.symbolSize'),
            u = t.get('axisLine.symbolOffset') || 0;
          if (('number' == typeof u && (u = [u, u]), null != l)) {
            'string' == typeof l && (l = [l, l]),
              ('string' != typeof o && 'number' != typeof o) || (o = [o, o]);
            var h = o[0],
              c = o[1];
            E(
              [
                {rotate: a.rotation + Math.PI / 2, offset: u[0], r: 0},
                {
                  rotate: a.rotation - Math.PI / 2,
                  offset: u[1],
                  r: Math.sqrt(
                    (r[0] - n[0]) * (r[0] - n[0]) +
                      (r[1] - n[1]) * (r[1] - n[1]),
                  ),
                },
              ],
              function(t, e) {
                if ('none' !== l[e] && null != l[e]) {
                  var i = Dg(l[e], -h / 2, -c / 2, h, c, s.stroke, !0),
                    n = t.r + t.offset,
                    o = [
                      r[0] + n * Math.cos(a.rotation),
                      r[1] - n * Math.sin(a.rotation),
                    ];
                  i.attr({rotation: t.rotate, position: o, silent: !0, z2: 11}),
                    this.group.add(i);
                }
              },
              this,
            );
          }
        }
      },
      axisTickLabel: function() {
        var t = this.axisModel,
          e = this.opt,
          i = (function(t, e, i) {
            var n = e.axis,
              o = e.getModel('axisTick');
            if (!o.get('show') || n.scale.isBlank()) return;
            for (
              var a = o.getModel('lineStyle'),
                r = i.tickDirection * o.get('length'),
                s = gv(
                  n.getTicksCoords(),
                  t._transform,
                  r,
                  C(a.getLineStyle(), {
                    stroke: e.get('axisLine.lineStyle.color'),
                  }),
                  'ticks',
                ),
                l = 0;
              l < s.length;
              l++
            )
              t.group.add(s[l]);
            return s;
          })(this, t, e);
        !(function(t, e, i) {
          if (yg(t.axis)) return;
          var n = t.get('axisLabel.showMinLabel'),
            o = t.get('axisLabel.showMaxLabel');
          i = i || [];
          var a = (e = e || [])[0],
            r = e[1],
            s = e[e.length - 1],
            l = e[e.length - 2],
            u = i[0],
            h = i[1],
            c = i[i.length - 1],
            d = i[i.length - 2];
          !1 === n
            ? (dv(a), dv(u))
            : fv(a, r) && (n ? (dv(r), dv(h)) : (dv(a), dv(u)));
          !1 === o
            ? (dv(s), dv(c))
            : fv(l, s) && (o ? (dv(l), dv(d)) : (dv(s), dv(c)));
        })(
          t,
          (function(u, h, c) {
            var d = h.axis;
            if (
              !Z(c.axisLabelShow, h.get('axisLabel.show')) ||
              d.scale.isBlank()
            )
              return;
            var f = h.getModel('axisLabel'),
              p = f.get('margin'),
              t = d.getViewLabels(),
              e = ((Z(c.labelRotate, f.get('rotate')) || 0) * sv) / 180,
              g = hv(c.rotation, e, c.labelDirection),
              m = h.getCategories && h.getCategories(!0),
              v = [],
              y = cv(h),
              x = h.get('triggerEvent');
            return (
              E(t, function(t, e) {
                var i = t.tickValue,
                  n = t.formattedLabel,
                  o = t.rawLabel,
                  a = f;
                m &&
                  m[i] &&
                  m[i].textStyle &&
                  (a = new Pl(m[i].textStyle, f, h.ecModel));
                var r = a.getTextColor() || h.get('axisLine.lineStyle.color'),
                  s = [d.dataToCoord(i), c.labelOffset + c.labelDirection * p],
                  l = new jr({
                    anid: 'label_' + i,
                    position: s,
                    rotation: g.rotation,
                    silent: y,
                    z2: 10,
                  });
                rl(l.style, a, {
                  text: n,
                  textAlign: a.getShallow('align', !0) || g.textAlign,
                  textVerticalAlign:
                    a.getShallow('verticalAlign', !0) ||
                    a.getShallow('baseline', !0) ||
                    g.textVerticalAlign,
                  textFill:
                    'function' == typeof r
                      ? r(
                          'category' === d.type
                            ? o
                            : 'value' === d.type
                            ? i + ''
                            : i,
                          e,
                        )
                      : r,
                }),
                  x &&
                    ((l.eventData = uv(h)),
                    (l.eventData.targetType = 'axisLabel'),
                    (l.eventData.value = o)),
                  u._dumbGroup.add(l),
                  l.updateTransform(),
                  v.push(l),
                  u.group.add(l),
                  l.decomposeTransform();
              }),
              v
            );
          })(this, t, e),
          i,
        ),
          (function(t, e, i) {
            var n = e.axis,
              o = e.getModel('minorTick');
            if (!o.get('show') || n.scale.isBlank()) return;
            var a = n.getMinorTicksCoords();
            if (!a.length) return;
            for (
              var r = o.getModel('lineStyle'),
                s = i.tickDirection * o.get('length'),
                l = C(
                  r.getLineStyle(),
                  C(e.getModel('axisTick').getLineStyle(), {
                    stroke: e.get('axisLine.lineStyle.color'),
                  }),
                ),
                u = 0;
              u < a.length;
              u++
            )
              for (
                var h = gv(a[u], t._transform, s, l, 'minorticks_' + u), c = 0;
                c < h.length;
                c++
              )
                t.group.add(h[c]);
          })(this, t, e);
      },
      axisName: function() {
        var t = this.opt,
          e = this.axisModel,
          i = Z(t.axisName, e.get('name'));
        if (i) {
          var n,
            o,
            a = e.get('nameLocation'),
            r = t.nameDirection,
            s = e.getModel('nameTextStyle'),
            l = e.get('nameGap') || 0,
            u = this.axisModel.axis.getExtent(),
            h = u[0] > u[1] ? -1 : 1,
            c = [
              'start' === a
                ? u[0] - h * l
                : 'end' === a
                ? u[1] + h * l
                : (u[0] + u[1]) / 2,
              pv(a) ? t.labelOffset + r * l : 0,
            ],
            d = e.get('nameRotate');
          null != d && (d = (d * sv) / 180),
            pv(a)
              ? (n = hv(t.rotation, null != d ? d : t.rotation, r))
              : ((n = (function(t, e, i, n) {
                  var o,
                    a,
                    r = Yl(i - t.rotation),
                    s = n[0] > n[1],
                    l = ('start' === e && !s) || ('start' !== e && s);
                  o = jl(r - sv / 2)
                    ? ((a = l ? 'bottom' : 'top'), 'center')
                    : jl(r - 1.5 * sv)
                    ? ((a = l ? 'top' : 'bottom'), 'center')
                    : ((a = 'middle'),
                      r < 1.5 * sv && sv / 2 < r
                        ? l
                          ? 'left'
                          : 'right'
                        : l
                        ? 'right'
                        : 'left');
                  return {rotation: r, textAlign: o, textVerticalAlign: a};
                })(t, a, d || 0, u)),
                null != (o = t.axisNameAvailableWidth) &&
                  ((o = Math.abs(o / Math.sin(n.rotation))),
                  isFinite(o) || (o = null)));
          var f = s.getFont(),
            p = e.get('nameTruncate', !0) || {},
            g = p.ellipsis,
            m = Z(t.nameTruncateMaxWidth, p.maxWidth, o),
            v =
              null != g && null != m
                ? vu(i, m, f, g, {minChar: 2, placeholder: p.placeholder})
                : i,
            y = e.get('tooltip', !0),
            x = e.mainType,
            _ = {componentType: x, name: i, $vars: ['name']};
          _[x + 'Index'] = e.componentIndex;
          var w = new jr({
            anid: 'name',
            __fullText: i,
            __truncatedText: v,
            position: c,
            rotation: n.rotation,
            silent: cv(e),
            z2: 1,
            tooltip:
              y && y.show
                ? P(
                    {
                      content: i,
                      formatter: function() {
                        return i;
                      },
                      formatterParams: _,
                    },
                    y,
                  )
                : null,
          });
          rl(w.style, s, {
            text: v,
            textFont: f,
            textFill: s.getTextColor() || e.get('axisLine.lineStyle.color'),
            textAlign: s.get('align') || n.textAlign,
            textVerticalAlign: s.get('verticalAlign') || n.textVerticalAlign,
          }),
            e.get('triggerEvent') &&
              ((w.eventData = uv(e)),
              (w.eventData.targetType = 'axisName'),
              (w.eventData.name = i)),
            this._dumbGroup.add(w),
            w.updateTransform(),
            this.group.add(w),
            w.decomposeTransform();
        }
      },
    },
    uv = (rv.makeAxisEventDataBase = function(t) {
      var e = {componentType: t.mainType, componentIndex: t.componentIndex};
      return (e[t.mainType + 'Index'] = t.componentIndex), e;
    }),
    hv = (rv.innerTextLayout = function(t, e, i) {
      var n,
        o = Yl(e - t);
      return {
        rotation: o,
        textAlign: jl(o)
          ? ((n = 0 < i ? 'top' : 'bottom'), 'center')
          : jl(o - sv)
          ? ((n = 0 < i ? 'bottom' : 'top'), 'center')
          : ((n = 'middle'),
            0 < o && o < sv
              ? 0 < i
                ? 'right'
                : 'left'
              : 0 < i
              ? 'left'
              : 'right'),
        textVerticalAlign: n,
      };
    });
  var cv = (rv.isLabelSilent = function(t) {
    var e = t.get('tooltip');
    return t.get('silent') || !(t.get('triggerEvent') || (e && e.show));
  });
  function dv(t) {
    t && (t.ignore = !0);
  }
  function fv(t, e) {
    var i = t && t.getBoundingRect().clone(),
      n = e && e.getBoundingRect().clone();
    if (i && n) {
      var o = le([]);
      return (
        de(o, o, -t.rotation),
        i.applyTransform(he([], o, t.getLocalTransform())),
        n.applyTransform(he([], o, e.getLocalTransform())),
        i.intersect(n)
      );
    }
  }
  function pv(t) {
    return 'middle' === t || 'center' === t;
  }
  function gv(t, e, i, n, o) {
    for (var a = [], r = [], s = [], l = 0; l < t.length; l++) {
      var u = t[l].coord;
      (r[0] = u),
        (s[(r[1] = 0)] = u),
        (s[1] = i),
        e && (Mt(r, r, e), Mt(s, s, e));
      var h = new cs({
        anid: o + '_' + t[l].tickValue,
        subPixelOptimize: !0,
        shape: {x1: r[0], y1: r[1], x2: s[0], y2: s[1]},
        style: n,
        z2: 2,
        silent: !0,
      });
      a.push(h);
    }
    return a;
  }
  var mv = E,
    vv = L;
  function yv(t, e) {
    var i = {
      axesInfo: {},
      seriesInvolved: !1,
      coordSysAxesInfo: {},
      coordSysMap: {},
    };
    return (
      (function(p, g, t) {
        var a = g.getComponent('tooltip'),
          m = g.getComponent('axisPointer'),
          v = m.get('link', !0) || [],
          y = [];
        mv(t.getCoordinateSystems(), function(c) {
          if (c.axisPointerEnabled) {
            var t = bv(c.model),
              d = (p.coordSysAxesInfo[t] = {}),
              f = (p.coordSysMap[t] = c).model.getModel('tooltip', a);
            if (
              (mv(c.getAxes(), vv(o, !1, null)),
              c.getTooltipAxes && a && f.get('show'))
            ) {
              var e = 'axis' === f.get('trigger'),
                i = 'cross' === f.get('axisPointer.type'),
                n = c.getTooltipAxes(f.get('axisPointer.axis'));
              (e || i) && mv(n.baseAxes, vv(o, !i || 'cross', e)),
                i && mv(n.otherAxes, vv(o, 'cross', !1));
            }
          }
          function o(t, e, i) {
            var n = i.model.getModel('axisPointer', m),
              o = n.get('show');
            if (o && ('auto' !== o || t || wv(n))) {
              null == e && (e = n.get('triggerTooltip'));
              var a = (n = t
                  ? (function(t, e, i, n, o, a) {
                      var r = e.getModel('axisPointer'),
                        s = {};
                      mv(
                        [
                          'type',
                          'snap',
                          'lineStyle',
                          'shadowStyle',
                          'label',
                          'animation',
                          'animationDurationUpdate',
                          'animationEasingUpdate',
                          'z',
                        ],
                        function(t) {
                          s[t] = k(r.get(t));
                        },
                      ),
                        (s.snap = 'category' !== t.type && !!a),
                        'cross' === r.get('type') && (s.type = 'line');
                      var l = s.label || (s.label = {});
                      if ((null == l.show && (l.show = !1), 'cross' === o)) {
                        var u = r.get('label.show');
                        if (((l.show = null == u || u), !a)) {
                          var h = (s.lineStyle = r.get('crossStyle'));
                          h && C(l, h.textStyle);
                        }
                      }
                      return t.model.getModel('axisPointer', new Pl(s, i, n));
                    })(i, f, m, g, t, e)
                  : n).get('snap'),
                r = bv(i.model),
                s = e || a || 'category' === i.type,
                l = (p.axesInfo[r] = {
                  key: r,
                  axis: i,
                  coordSys: c,
                  axisPointerModel: n,
                  triggerTooltip: e,
                  involveSeries: s,
                  snap: a,
                  useHandle: wv(n),
                  seriesModels: [],
                });
              (d[r] = l), (p.seriesInvolved |= s);
              var u = (function(t, e) {
                for (var i = e.model, n = e.dim, o = 0; o < t.length; o++) {
                  var a = t[o] || {};
                  if (
                    xv(a[n + 'AxisId'], i.id) ||
                    xv(a[n + 'AxisIndex'], i.componentIndex) ||
                    xv(a[n + 'AxisName'], i.name)
                  )
                    return o;
                }
              })(v, i);
              if (null != u) {
                var h = y[u] || (y[u] = {axesInfo: {}});
                (h.axesInfo[r] = l),
                  (h.mapper = v[u].mapper),
                  (l.linkGroup = h);
              }
            }
          }
        });
      })(i, t, e),
      i.seriesInvolved &&
        (function(o, t) {
          t.eachSeries(function(i) {
            var n = i.coordinateSystem,
              t = i.get('tooltip.trigger', !0),
              e = i.get('tooltip.show', !0);
            n &&
              'none' !== t &&
              !1 !== t &&
              'item' !== t &&
              !1 !== e &&
              !1 !== i.get('axisPointer.show', !0) &&
              mv(o.coordSysAxesInfo[bv(n.model)], function(t) {
                var e = t.axis;
                n.getAxis(e.dim) === e &&
                  (t.seriesModels.push(i),
                  null == t.seriesDataCount && (t.seriesDataCount = 0),
                  (t.seriesDataCount += i.getData().count()));
              });
          }, this);
        })(i, t),
      i
    );
  }
  function xv(t, e) {
    return 'all' === t || (R(t) && 0 <= w(t, e)) || t === e;
  }
  function _v(t) {
    var e = (t.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;
    return e && e.axesInfo[bv(t)];
  }
  function wv(t) {
    return !!t.get('handle.show');
  }
  function bv(t) {
    return t.type + '||' + t.id;
  }
  var Sv = Nf({
    type: 'axis',
    _axisPointer: null,
    axisPointerClass: null,
    render: function(t, e, i, n) {
      this.axisPointerClass &&
        (function(t) {
          var e = _v(t);
          if (e) {
            var i = e.axisPointerModel,
              n = e.axis.scale,
              o = i.option,
              a = i.get('status'),
              r = i.get('value');
            null != r && (r = n.parse(r));
            var s = wv(i);
            null == a && (o.status = s ? 'show' : 'hide');
            var l = n.getExtent().slice();
            l[0] > l[1] && l.reverse(),
              (null == r || r > l[1]) && (r = l[1]),
              r < l[0] && (r = l[0]),
              (o.value = r),
              s && (o.status = e.axis.scale.isBlank() ? 'hide' : 'show');
          }
        })(t),
        Sv.superApply(this, 'render', arguments),
        Mv(this, t, e, i, n, !0);
    },
    updateAxisPointer: function(t, e, i, n, o) {
      Mv(this, t, e, i, n, !1);
    },
    remove: function(t, e) {
      var i = this._axisPointer;
      i && i.remove(e), Sv.superApply(this, 'remove', arguments);
    },
    dispose: function(t, e) {
      Iv(this, e), Sv.superApply(this, 'dispose', arguments);
    },
  });
  function Mv(t, e, i, n, o, a) {
    var r = Sv.getAxisPointerClass(t.axisPointerClass);
    if (r) {
      var s = (function(t) {
        var e = _v(t);
        return e && e.axisPointerModel;
      })(e);
      s
        ? (t._axisPointer || (t._axisPointer = new r())).render(e, s, n, a)
        : Iv(t, n);
    }
  }
  function Iv(t, e, i) {
    var n = t._axisPointer;
    n && n.dispose(e, i), (t._axisPointer = null);
  }
  var Tv = [];
  function Av(t, e, i) {
    i = i || {};
    var n = t.coordinateSystem,
      o = e.axis,
      a = {},
      r = o.getAxesOnZeroOf()[0],
      s = o.position,
      l = r ? 'onZero' : s,
      u = o.dim,
      h = n.getRect(),
      c = [h.x, h.x + h.width, h.y, h.y + h.height],
      d = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2},
      f = e.get('offset') || 0,
      p = 'x' === u ? [c[2] - f, c[3] + f] : [c[0] - f, c[1] + f];
    if (r) {
      var g = r.toGlobalCoord(r.dataToCoord(0));
      p[d.onZero] = Math.max(Math.min(g, p[1]), p[0]);
    }
    (a.position = ['y' === u ? p[d[l]] : c[0], 'x' === u ? p[d[l]] : c[3]]),
      (a.rotation = (Math.PI / 2) * ('x' === u ? 0 : 1));
    (a.labelDirection = a.tickDirection = a.nameDirection = {
      top: -1,
      bottom: 1,
      left: -1,
      right: 1,
    }[s]),
      (a.labelOffset = r ? p[d[s]] - p[d.onZero] : 0),
      e.get('axisTick.inside') && (a.tickDirection = -a.tickDirection),
      Z(i.labelInside, e.get('axisLabel.inside')) &&
        (a.labelDirection = -a.labelDirection);
    var m = e.get('axisLabel.rotate');
    return (a.labelRotate = 'top' === l ? -m : m), (a.z2 = 1), a;
  }
  function Dv(t, e, i, n) {
    var o = i.axis;
    if (!o.scale.isBlank()) {
      var a = i.getModel('splitArea'),
        r = a.getModel('areaStyle'),
        s = r.get('color'),
        l = n.coordinateSystem.getRect(),
        u = o.getTicksCoords({tickModel: a, clamp: !0});
      if (u.length) {
        var h = s.length,
          c = t.__splitAreaColors,
          d = et(),
          f = 0;
        if (c)
          for (var p = 0; p < u.length; p++) {
            var g = c.get(u[p].tickValue);
            if (null != g) {
              f = (g + (h - 1) * p) % h;
              break;
            }
          }
        var m = o.toGlobalCoord(u[0].coord),
          v = r.getAreaStyle();
        s = R(s) ? s : [s];
        for (p = 1; p < u.length; p++) {
          var y,
            x,
            _,
            w,
            b = o.toGlobalCoord(u[p].coord);
          m = o.isHorizontal()
            ? ((y = m), (x = l.y), (_ = b - y), (w = l.height), y + _)
            : ((y = l.x), (x = m), (_ = l.width), x + (w = b - x));
          var S = u[p - 1].tickValue;
          null != S && d.set(S, f),
            e.add(
              new us({
                anid: null != S ? 'area_' + S : null,
                shape: {x: y, y: x, width: _, height: w},
                style: C({fill: s[f]}, v),
                silent: !0,
              }),
            ),
            (f = (f + 1) % h);
        }
        t.__splitAreaColors = d;
      }
    }
  }
  function Cv(t) {
    t.__splitAreaColors = null;
  }
  (Sv.registerAxisPointerClass = function(t, e) {
    if (D && Tv[t]) throw new Error('axisPointer ' + t + ' exists');
    Tv[t] = e;
  }),
    (Sv.getAxisPointerClass = function(t) {
      return t && Tv[t];
    });
  var Lv = ['axisLine', 'axisTickLabel', 'axisName'],
    kv = ['splitArea', 'splitLine', 'minorSplitLine'],
    Pv = Sv.extend({
      type: 'cartesianAxis',
      axisPointerClass: 'CartesianAxisPointer',
      render: function(e, t, i, n) {
        this.group.removeAll();
        var o = this._axisGroup;
        if (
          ((this._axisGroup = new ki()),
          this.group.add(this._axisGroup),
          e.get('show'))
        ) {
          var a = e.getCoordSysModel(),
            r = Av(a, e),
            s = new rv(e, r);
          E(Lv, s.add, s),
            this._axisGroup.add(s.getGroup()),
            E(
              kv,
              function(t) {
                e.get(t + '.show') && this['_' + t](e, a);
              },
              this,
            ),
            xl(o, this._axisGroup, e),
            Pv.superCall(this, 'render', e, t, i, n);
        }
      },
      remove: function() {
        Cv(this);
      },
      _splitLine: function(t, e) {
        var i = t.axis;
        if (!i.scale.isBlank()) {
          var n = t.getModel('splitLine'),
            o = n.getModel('lineStyle'),
            a = o.get('color');
          a = R(a) ? a : [a];
          for (
            var r = e.coordinateSystem.getRect(),
              s = i.isHorizontal(),
              l = 0,
              u = i.getTicksCoords({tickModel: n}),
              h = [],
              c = [],
              d = o.getLineStyle(),
              f = 0;
            f < u.length;
            f++
          ) {
            var p = i.toGlobalCoord(u[f].coord);
            s
              ? ((h[0] = p), (h[1] = r.y), (c[0] = p), (c[1] = r.y + r.height))
              : ((h[0] = r.x), (h[1] = p), (c[0] = r.x + r.width), (c[1] = p));
            var g = l++ % a.length,
              m = u[f].tickValue;
            this._axisGroup.add(
              new cs({
                anid: null != m ? 'line_' + u[f].tickValue : null,
                subPixelOptimize: !0,
                shape: {x1: h[0], y1: h[1], x2: c[0], y2: c[1]},
                style: C({stroke: a[g]}, d),
                silent: !0,
              }),
            );
          }
        }
      },
      _minorSplitLine: function(t, e) {
        var i = t.axis,
          n = t.getModel('minorSplitLine').getModel('lineStyle'),
          o = e.coordinateSystem.getRect(),
          a = i.isHorizontal(),
          r = i.getMinorTicksCoords();
        if (r.length)
          for (
            var s = [], l = [], u = n.getLineStyle(), h = 0;
            h < r.length;
            h++
          )
            for (var c = 0; c < r[h].length; c++) {
              var d = i.toGlobalCoord(r[h][c].coord);
              a
                ? ((s[0] = d),
                  (s[1] = o.y),
                  (l[0] = d),
                  (l[1] = o.y + o.height))
                : ((s[0] = o.x),
                  (s[1] = d),
                  (l[0] = o.x + o.width),
                  (l[1] = d)),
                this._axisGroup.add(
                  new cs({
                    anid: 'minor_line_' + r[h][c].tickValue,
                    subPixelOptimize: !0,
                    shape: {x1: s[0], y1: s[1], x2: l[0], y2: l[1]},
                    style: u,
                    silent: !0,
                  }),
                );
            }
      },
      _splitArea: function(t, e) {
        Dv(this, this._axisGroup, t, e);
      },
    });
  Pv.extend({type: 'xAxis'}),
    Pv.extend({type: 'yAxis'}),
    Nf({
      type: 'grid',
      render: function(t, e) {
        this.group.removeAll(),
          t.get('show') &&
            this.group.add(
              new us({
                shape: t.coordinateSystem.getRect(),
                style: C({fill: t.get('backgroundColor')}, t.getItemStyle()),
                silent: !0,
                z2: -1,
              }),
            );
      },
    }),
    Mf(function(t) {
      t.xAxis && t.yAxis && !t.grid && (t.grid = {});
    }),
    Cf(zm('line', 'circle', 'line')),
    Df(Bm('line')),
    If(Ed.PROCESSOR.STATISTIC, {
      seriesType: 'line',
      modifyOutputEnd: !0,
      reset: function(t, e, i) {
        var n = t.getData(),
          o = t.get('sampling'),
          a = t.coordinateSystem;
        if ('cartesian2d' === a.type && o) {
          var r,
            s = a.getBaseAxis(),
            l = a.getOtherAxis(s),
            u = s.getExtent(),
            h = u[1] - u[0],
            c = Math.round(n.count() / h);
          1 < c &&
            ('string' == typeof o
              ? (r = Gm[o])
              : 'function' == typeof o && (r = o),
            r && t.setData(n.downSample(n.mapDimension(l.dim), 1 / c, r, Vm)));
        }
      },
    });
  var Nv = cc.extend({
    type: 'series.__base_bar__',
    getInitialData: function(t, e) {
      return bp(this.getSource(), this, {useEncodeDefaulter: !0});
    },
    getMarkerPosition: function(t) {
      var e = this.coordinateSystem;
      if (e) {
        var i = e.dataToPoint(e.clampData(t)),
          n = this.getData(),
          o = n.getLayout('offset'),
          a = n.getLayout('size');
        return (i[e.getBaseAxis().isHorizontal() ? 0 : 1] += o + a / 2), i;
      }
      return [NaN, NaN];
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      coordinateSystem: 'cartesian2d',
      legendHoverLink: !0,
      barMinHeight: 0,
      barMinAngle: 0,
      large: !1,
      largeThreshold: 400,
      progressive: 3e3,
      progressiveChunkMode: 'mod',
      itemStyle: {},
      emphasis: {},
    },
  });
  function Ov(t, e, i, n, o, a) {
    ol(t, e, i.getModel('label'), i.getModel('emphasis.label'), {
      labelFetcher: o,
      labelDataIndex: a,
      defaultText: Jg(o.getData(), a),
      isRectText: !0,
      autoColor: n,
    }),
      Ev(t),
      Ev(e);
  }
  function Ev(t, e) {
    'outside' === t.textPosition && (t.textPosition = e);
  }
  Nv.extend({
    type: 'series.bar',
    dependencies: ['grid', 'polar'],
    brushSelector: 'rect',
    getProgressive: function() {
      return !!this.get('large') && this.get('progressive');
    },
    getProgressiveThreshold: function() {
      var t = this.get('progressiveThreshold'),
        e = this.get('largeThreshold');
      return t < e && (t = e), t;
    },
    defaultOption: {
      clip: !0,
      roundCap: !1,
      showBackground: !1,
      backgroundStyle: {
        color: 'rgba(180, 180, 180, 0.2)',
        borderColor: null,
        borderWidth: 0,
        borderType: 'solid',
        borderRadius: 0,
        shadowBlur: 0,
        shadowColor: null,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1,
      },
    },
  });
  var Rv = fa([
      ['fill', 'color'],
      ['stroke', 'borderColor'],
      ['lineWidth', 'borderWidth'],
      ['stroke', 'barBorderColor'],
      ['lineWidth', 'barBorderWidth'],
      ['opacity'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
    ]),
    zv = {
      getBarItemStyle: function(t) {
        var e = Rv(this, t);
        if (this.getBorderLineDash) {
          var i = this.getBorderLineDash();
          i && (e.lineDash = i);
        }
        return e;
      },
    },
    Bv = Ps({
      type: 'sausage',
      shape: {
        cx: 0,
        cy: 0,
        r0: 0,
        r: 0,
        startAngle: 0,
        endAngle: 2 * Math.PI,
        clockwise: !0,
      },
      buildPath: function(t, e) {
        var i = e.cx,
          n = e.cy,
          o = Math.max(e.r0 || 0, 0),
          a = Math.max(e.r, 0),
          r = 0.5 * (a - o),
          s = o + r,
          l = e.startAngle,
          u = e.endAngle,
          h = e.clockwise,
          c = Math.cos(l),
          d = Math.sin(l),
          f = Math.cos(u),
          p = Math.sin(u);
        (h ? u - l < 2 * Math.PI : l - u < 2 * Math.PI) &&
          (t.moveTo(c * o + i, d * o + n),
          t.arc(c * s + i, d * s + n, r, -Math.PI + l, l, !h)),
          t.arc(i, n, a, l, u, !h),
          t.moveTo(f * a + i, p * a + n),
          t.arc(f * s + i, p * s + n, r, u - 2 * Math.PI, u - Math.PI, !h),
          0 !== o && (t.arc(i, n, o, u, l, h), t.moveTo(c * o + i, p * o + n)),
          t.closePath();
      },
    }),
    Vv = ['itemStyle', 'barBorderWidth'],
    Gv = [0, 0];
  P(Pl.prototype, zv),
    Ef({
      type: 'bar',
      render: function(t, e, i) {
        this._updateDrawMode(t);
        var n = t.get('coordinateSystem');
        return (
          'cartesian2d' === n || 'polar' === n
            ? this._isLargeDraw
              ? this._renderLarge(t, e, i)
              : this._renderNormal(t, e, i)
            : D &&
              console.warn('Only cartesian2d and polar supported for bar.'),
          this.group
        );
      },
      incrementalPrepareRender: function(t, e, i) {
        this._clear(), this._updateDrawMode(t);
      },
      incrementalRender: function(t, e, i, n) {
        this._incrementalRenderLarge(t, e);
      },
      _updateDrawMode: function(t) {
        var e = t.pipelineContext.large;
        (null == this._isLargeDraw || e ^ this._isLargeDraw) &&
          ((this._isLargeDraw = e), this._clear());
      },
      _renderNormal: function(s, t, e) {
        var l,
          u = this.group,
          h = s.getData(),
          c = this._data,
          d = s.coordinateSystem,
          i = d.getBaseAxis();
        'cartesian2d' === d.type
          ? (l = i.isHorizontal())
          : 'polar' === d.type && (l = 'angle' === i.dim);
        var f = s.isAnimationEnabled() ? s : null,
          p = s.get('clip', !0),
          g = (function(t, e) {
            var i = t.getArea && t.getArea();
            if ('cartesian2d' === t.type) {
              var n = t.getBaseAxis();
              if ('category' !== n.type || !n.onBand) {
                var o = e.getLayout('bandWidth');
                n.isHorizontal()
                  ? ((i.x -= o), (i.width += 2 * o))
                  : ((i.y -= o), (i.height += 2 * o));
              }
            }
            return i;
          })(d, h);
        u.removeClipPath();
        var m = s.get('roundCap', !0),
          v = s.get('showBackground', !0),
          y = s.getModel('backgroundStyle'),
          x = y.get('barBorderRadius') || 0,
          _ = [],
          w = this._backgroundEls || [];
        h.diff(c)
          .add(function(t) {
            var e = h.getItemModel(t),
              i = Yv[d.type](h, t, e);
            if (v) {
              var n = Yv[d.type](h, t),
                o = (function(t, e, i) {
                  return new ('polar' === t.type ? Jr : us)({
                    shape: Qv(e, i, t),
                    silent: !0,
                    z2: 0,
                  });
                })(d, l, n);
              o.useStyle(y.getBarItemStyle()),
                'cartesian2d' === d.type && o.setShape('r', x),
                (_[t] = o);
            }
            if (h.hasValue(t)) {
              if (p) if (Hv[d.type](g, i)) return void u.remove(a);
              var a = Zv[d.type](t, i, l, f, !1, m);
              h.setItemGraphicEl(t, a),
                u.add(a),
                qv(a, h, t, e, i, s, l, 'polar' === d.type);
            }
          })
          .update(function(t, e) {
            var i = h.getItemModel(t),
              n = Yv[d.type](h, t, i);
            if (v) {
              var o = w[e];
              o.useStyle(y.getBarItemStyle()),
                'cartesian2d' === d.type && o.setShape('r', x),
                (_[t] = o);
              var a = Yv[d.type](h, t);
              pl(o, {shape: Qv(l, a, d)}, f, t);
            }
            var r = c.getItemGraphicEl(e);
            if (h.hasValue(t)) {
              if (p) if (Hv[d.type](g, n)) return void u.remove(r);
              r ? pl(r, {shape: n}, f, t) : (r = Zv[d.type](t, n, l, f, !0, m)),
                h.setItemGraphicEl(t, r),
                u.add(r),
                qv(r, h, t, i, n, s, l, 'polar' === d.type);
            } else u.remove(r);
          })
          .remove(function(t) {
            var e = c.getItemGraphicEl(t);
            'cartesian2d' === d.type ? e && Uv(t, f, e) : e && Xv(t, f, e);
          })
          .execute();
        var n = this._backgroundGroup || (this._backgroundGroup = new ki());
        n.removeAll();
        for (var o = 0; o < _.length; ++o) n.add(_[o]);
        u.add(n), (this._backgroundEls = _), (this._data = h);
      },
      _renderLarge: function(t, e, i) {
        this._clear(), $v(t, this.group);
        var n = t.get('clip', !0) ? Lm(t.coordinateSystem, !1, t) : null;
        n ? this.group.setClipPath(n) : this.group.removeClipPath();
      },
      _incrementalRenderLarge: function(t, e) {
        this._removeBackground(), $v(e, this.group, !0);
      },
      dispose: nt,
      remove: function(t) {
        this._clear(t);
      },
      _clear: function(e) {
        var t = this.group,
          i = this._data;
        e && e.get('animation') && i && !this._isLargeDraw
          ? (this._removeBackground(),
            (this._backgroundEls = []),
            i.eachItemGraphicEl(function(t) {
              'sector' === t.type
                ? Xv(t.dataIndex, e, t)
                : Uv(t.dataIndex, e, t);
            }))
          : t.removeAll(),
          (this._data = null);
      },
      _removeBackground: function() {
        this.group.remove(this._backgroundGroup),
          (this._backgroundGroup = null);
      },
    });
  var Fv = Math.max,
    Wv = Math.min,
    Hv = {
      cartesian2d: function(t, e) {
        var i = e.width < 0 ? -1 : 1,
          n = e.height < 0 ? -1 : 1;
        i < 0 && ((e.x += e.width), (e.width = -e.width)),
          n < 0 && ((e.y += e.height), (e.height = -e.height));
        var o = Fv(e.x, t.x),
          a = Wv(e.x + e.width, t.x + t.width),
          r = Fv(e.y, t.y),
          s = Wv(e.y + e.height, t.y + t.height);
        (e.x = o), (e.y = r), (e.width = a - o), (e.height = s - r);
        var l = e.width < 0 || e.height < 0;
        return (
          i < 0 && ((e.x += e.width), (e.width = -e.width)),
          n < 0 && ((e.y += e.height), (e.height = -e.height)),
          l
        );
      },
      polar: function(t) {
        return !1;
      },
    },
    Zv = {
      cartesian2d: function(t, e, i, n, o) {
        var a = new us({shape: P({}, e), z2: 1});
        if (((a.name = 'item'), n)) {
          var r = i ? 'height' : 'width',
            s = {};
          (a.shape[r] = 0),
            (s[r] = e[r]),
            Il[o ? 'updateProps' : 'initProps'](a, {shape: s}, n, t);
        }
        return a;
      },
      polar: function(t, e, i, n, o, a) {
        var r = e.startAngle < e.endAngle,
          s = new (!i && a ? Bv : Jr)({shape: C({clockwise: r}, e), z2: 1});
        if (((s.name = 'item'), n)) {
          var l = i ? 'r' : 'endAngle',
            u = {};
          (s.shape[l] = i ? 0 : e.startAngle),
            (u[l] = e[l]),
            Il[o ? 'updateProps' : 'initProps'](s, {shape: u}, n, t);
        }
        return s;
      },
    };
  function Uv(t, e, i) {
    (i.style.text = null),
      pl(i, {shape: {width: 0}}, e, t, function() {
        i.parent && i.parent.remove(i);
      });
  }
  function Xv(t, e, i) {
    (i.style.text = null),
      pl(i, {shape: {r: i.shape.r0}}, e, t, function() {
        i.parent && i.parent.remove(i);
      });
  }
  var Yv = {
    cartesian2d: function(t, e, i) {
      var n = t.getItemLayout(e),
        o = i
          ? (function(t, e) {
              var i = t.get(Vv) || 0,
                n = isNaN(e.width) ? Number.MAX_VALUE : Math.abs(e.width),
                o = isNaN(e.height) ? Number.MAX_VALUE : Math.abs(e.height);
              return Math.min(i, n, o);
            })(i, n)
          : 0,
        a = 0 < n.width ? 1 : -1,
        r = 0 < n.height ? 1 : -1;
      return {
        x: n.x + (a * o) / 2,
        y: n.y + (r * o) / 2,
        width: n.width - a * o,
        height: n.height - r * o,
      };
    },
    polar: function(t, e, i) {
      var n = t.getItemLayout(e);
      return {
        cx: n.cx,
        cy: n.cy,
        r0: n.r0,
        r: n.r,
        startAngle: n.startAngle,
        endAngle: n.endAngle,
      };
    },
  };
  function jv(t) {
    return (
      null != t.startAngle && null != t.endAngle && t.startAngle === t.endAngle
    );
  }
  function qv(t, e, i, n, o, a, r, s) {
    var l = e.getItemVisual(i, 'color'),
      u = e.getItemVisual(i, 'opacity'),
      h = e.getVisual('borderColor'),
      c = n.getModel('itemStyle'),
      d = n.getModel('emphasis.itemStyle').getBarItemStyle();
    s || t.setShape('r', c.get('barBorderRadius') || 0),
      t.useStyle(
        C(
          {stroke: jv(o) ? 'none' : h, fill: jv(o) ? 'none' : l, opacity: u},
          c.getBarItemStyle(),
        ),
      );
    var f = n.getShallow('cursor');
    f && t.attr('cursor', f);
    r ? o.height : o.width;
    s || Ov(t.style, d, n, l, a, i),
      jv(o) && (d.fill = d.stroke = 'none'),
      tl(t, d);
  }
  var Kv = Lr.extend({
    type: 'largeBar',
    shape: {points: []},
    buildPath: function(t, e) {
      for (
        var i = e.points, n = this.__startPoint, o = this.__baseDimIdx, a = 0;
        a < i.length;
        a += 2
      )
        (n[o] = i[a + o]), t.moveTo(n[0], n[1]), t.lineTo(i[a], i[a + 1]);
    },
  });
  function $v(t, e, i) {
    var n = t.getData(),
      o = [],
      a = n.getLayout('valueAxisHorizontal') ? 1 : 0;
    o[1 - a] = n.getLayout('valueAxisStart');
    var r = n.getLayout('largeDataIndices'),
      s = n.getLayout('barWidth'),
      l = t.getModel('backgroundStyle');
    if (t.get('showBackground', !0)) {
      var u = n.getLayout('largeBackgroundPoints'),
        h = [];
      h[1 - a] = n.getLayout('backgroundStart');
      var c = new Kv({
        shape: {points: u},
        incremental: !!i,
        __startPoint: h,
        __baseDimIdx: a,
        __largeDataIndices: r,
        __barWidth: s,
        silent: !0,
        z2: 0,
      });
      !(function(t, e, i) {
        var n = e.get('borderColor') || e.get('color'),
          o = e.getItemStyle(['color', 'borderColor']);
        t.useStyle(o),
          (t.style.fill = null),
          (t.style.stroke = n),
          (t.style.lineWidth = i.getLayout('barWidth'));
      })(c, l, n),
        e.add(c);
    }
    var d = new Kv({
      shape: {points: n.getLayout('largePoints')},
      incremental: !!i,
      __startPoint: o,
      __baseDimIdx: a,
      __largeDataIndices: r,
      __barWidth: s,
    });
    e.add(d),
      (function(t, e, i) {
        var n = i.getVisual('borderColor') || i.getVisual('color'),
          o = e.getModel('itemStyle').getItemStyle(['color', 'borderColor']);
        t.useStyle(o),
          (t.style.fill = null),
          (t.style.stroke = n),
          (t.style.lineWidth = i.getLayout('barWidth'));
      })(d, t, n),
      (d.seriesIndex = t.seriesIndex),
      t.get('silent') || (d.on('mousedown', Jv), d.on('mousemove', Jv));
  }
  var Jv = Oc(
    function(t) {
      var e = (function(t, e, i) {
        var n = t.__baseDimIdx,
          o = 1 - n,
          a = t.shape.points,
          r = t.__largeDataIndices,
          s = Math.abs(t.__barWidth / 2),
          l = t.__startPoint[o];
        (Gv[0] = e), (Gv[1] = i);
        for (
          var u = Gv[n],
            h = Gv[1 - n],
            c = u - s,
            d = u + s,
            f = 0,
            p = a.length / 2;
          f < p;
          f++
        ) {
          var g = 2 * f,
            m = a[g + n],
            v = a[g + o];
          if (
            c <= m &&
            m <= d &&
            (l <= v ? l <= h && h <= v : v <= h && h <= l)
          )
            return r[f];
        }
        return -1;
      })(this, t.offsetX, t.offsetY);
      this.dataIndex = 0 <= e ? e : null;
    },
    30,
    !1,
  );
  function Qv(t, e, i) {
    var n,
      o = 'polar' === i.type;
    return (
      (n = o ? i.getArea() : i.grid.getRect()),
      o
        ? {
            cx: n.cx,
            cy: n.cy,
            r0: t ? n.r0 : e.r0,
            r: t ? n.r : e.r,
            startAngle: t ? e.startAngle : 0,
            endAngle: t ? e.endAngle : 2 * Math.PI,
          }
        : {
            x: t ? e.x : n.x,
            y: t ? n.y : e.y,
            width: t ? e.width : n.width,
            height: t ? n.height : e.height,
          }
    );
  }
  Df(Ed.VISUAL.LAYOUT, L(Zp, 'bar')),
    Df(Ed.VISUAL.PROGRESSIVE_LAYOUT, Up),
    Cf({
      seriesType: 'bar',
      reset: function(t) {
        t.getData().setVisual('legendSymbol', 'roundRect');
      },
    });
  function ty(t, e, i) {
    e = (R(e) && {coordDimensions: e}) || P({}, e);
    var n = t.getSource(),
      o = gp(n, e),
      a = new Qf(o, t);
    return a.initData(n, i), a;
  }
  var ey = {
    updateSelectedMap: function(t) {
      (this._targetList = R(t) ? t.slice() : []),
        (this._selectTargetMap = M(
          t || [],
          function(t, e) {
            return t.set(e.name, e), t;
          },
          et(),
        ));
    },
    select: function(t, e) {
      var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
      'single' === this.get('selectedMode') &&
        this._selectTargetMap.each(function(t) {
          t.selected = !1;
        }),
        i && (i.selected = !0);
    },
    unSelect: function(t, e) {
      var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
      i && (i.selected = !1);
    },
    toggleSelected: function(t, e) {
      var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
      if (null != i)
        return this[i.selected ? 'unSelect' : 'select'](t, e), i.selected;
    },
    isSelected: function(t, e) {
      var i = null != e ? this._targetList[e] : this._selectTargetMap.get(t);
      return i && i.selected;
    },
  };
  function iy(i, e) {
    (this.getAllNames = function() {
      var t = e();
      return t.mapArray(t.getName);
    }),
      (this.containName = function(t) {
        return 0 <= e().indexOfName(t);
      }),
      (this.indexOfName = function(t) {
        return i().indexOfName(t);
      }),
      (this.getItemVisual = function(t, e) {
        return i().getItemVisual(t, e);
      });
  }
  var ny = Of({
    type: 'series.pie',
    init: function(t) {
      ny.superApply(this, 'init', arguments),
        (this.legendVisualProvider = new iy(
          A(this.getData, this),
          A(this.getRawData, this),
        )),
        this.updateSelectedMap(this._createSelectableList()),
        this._defaultLabelLine(t);
    },
    mergeOption: function(t) {
      ny.superCall(this, 'mergeOption', t),
        this.updateSelectedMap(this._createSelectableList());
    },
    getInitialData: function(t, e) {
      return ty(this, {
        coordDimensions: ['value'],
        encodeDefaulter: L(eh, this),
      });
    },
    _createSelectableList: function() {
      for (
        var t = this.getRawData(),
          e = t.mapDimension('value'),
          i = [],
          n = 0,
          o = t.count();
        n < o;
        n++
      )
        i.push({
          name: t.getName(n),
          value: t.get(e, n),
          selected: jh(t, n, 'selected'),
        });
      return i;
    },
    getDataParams: function(t) {
      var e = this.getData(),
        i = ny.superCall(this, 'getDataParams', t),
        n = [];
      return (
        e.each(e.mapDimension('value'), function(t) {
          n.push(t);
        }),
        (i.percent = Ul(n, t, e.hostModel.get('percentPrecision'))),
        i.$vars.push('percent'),
        i
      );
    },
    _defaultLabelLine: function(t) {
      Ho(t, 'labelLine', ['show']);
      var e = t.labelLine,
        i = t.emphasis.labelLine;
      (e.show = e.show && t.label.show),
        (i.show = i.show && t.emphasis.label.show);
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      hoverAnimation: !0,
      center: ['50%', '50%'],
      radius: [0, '75%'],
      clockwise: !0,
      startAngle: 90,
      minAngle: 0,
      minShowLabelAngle: 0,
      selectedOffset: 10,
      hoverOffset: 10,
      avoidLabelOverlap: !0,
      percentPrecision: 2,
      stillShowZeroSum: !0,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        rotate: !1,
        show: !0,
        position: 'outer',
        alignTo: 'none',
        margin: '25%',
        bleedMargin: 10,
        distanceToLabelLine: 5,
      },
      labelLine: {
        show: !0,
        length: 15,
        length2: 15,
        smooth: !1,
        lineStyle: {width: 1, type: 'solid'},
      },
      itemStyle: {borderWidth: 1},
      animationType: 'expansion',
      animationTypeUpdate: 'transition',
      animationEasing: 'cubicOut',
    },
  });
  function oy(t, e, i, n) {
    var o = e.getData(),
      a = this.dataIndex,
      r = o.getName(a),
      s = e.get('selectedOffset');
    n.dispatchAction({
      type: 'pieToggleSelect',
      from: t,
      name: r,
      seriesId: e.id,
    }),
      o.each(function(t) {
        ay(
          o.getItemGraphicEl(t),
          o.getItemLayout(t),
          e.isSelected(o.getName(t)),
          s,
          i,
        );
      });
  }
  function ay(t, e, i, n, o) {
    var a = (e.startAngle + e.endAngle) / 2,
      r = i ? n : 0,
      s = [Math.cos(a) * r, Math.sin(a) * r];
    o
      ? t
          .animate()
          .when(200, {position: s})
          .start('bounceOut')
      : t.attr('position', s);
  }
  function ry(t, e) {
    ki.call(this);
    var i = new Jr({z2: 2}),
      n = new ns(),
      o = new jr();
    this.add(i), this.add(n), this.add(o), this.updateData(t, e, !0);
  }
  S(ny, ey);
  var sy = ry.prototype;
  (sy.updateData = function(t, e, i) {
    var n = this.childAt(0),
      o = this.childAt(1),
      a = this.childAt(2),
      r = t.hostModel,
      s = t.getItemModel(e),
      l = t.getItemLayout(e),
      u = P({}, l);
    u.label = null;
    var h = r.getShallow('animationTypeUpdate');
    i
      ? (n.setShape(u),
        'scale' === r.getShallow('animationType')
          ? ((n.shape.r = l.r0), gl(n, {shape: {r: l.r}}, r, e))
          : ((n.shape.endAngle = l.startAngle),
            pl(n, {shape: {endAngle: l.endAngle}}, r, e)))
      : 'expansion' === h
      ? n.setShape(u)
      : pl(n, {shape: u}, r, e);
    var c = t.getItemVisual(e, 'color');
    n.useStyle(
      C({lineJoin: 'bevel', fill: c}, s.getModel('itemStyle').getItemStyle()),
    ),
      (n.hoverStyle = s.getModel('emphasis.itemStyle').getItemStyle());
    var d = s.getShallow('cursor');
    d && n.attr('cursor', d),
      ay(
        this,
        t.getItemLayout(e),
        r.isSelected(t.getName(e)),
        r.get('selectedOffset'),
        r.get('animation'),
      );
    var f = !i && 'transition' === h;
    this._updateLabel(t, e, f),
      (this.highDownOnUpdate = r.get('silent')
        ? null
        : function(t, e) {
            var i = r.isAnimationEnabled() && s.get('hoverAnimation');
            'emphasis' === e
              ? ((o.ignore = o.hoverIgnore),
                (a.ignore = a.hoverIgnore),
                i &&
                  (n.stopAnimation(!0),
                  n.animateTo(
                    {shape: {r: l.r + r.get('hoverOffset')}},
                    300,
                    'elasticOut',
                  )))
              : ((o.ignore = o.normalIgnore),
                (a.ignore = a.normalIgnore),
                i &&
                  (n.stopAnimation(!0),
                  n.animateTo({shape: {r: l.r}}, 300, 'elasticOut')));
          }),
      tl(this);
  }),
    (sy._updateLabel = function(t, e, i) {
      var n = this.childAt(1),
        o = this.childAt(2),
        a = t.hostModel,
        r = t.getItemModel(e),
        s = t.getItemLayout(e).label,
        l = t.getItemVisual(e, 'color');
      if (!s || isNaN(s.x) || isNaN(s.y))
        o.ignore = o.normalIgnore = o.hoverIgnore = n.ignore = n.normalIgnore = n.hoverIgnore = !0;
      else {
        var u = {points: s.linePoints || [[s.x, s.y], [s.x, s.y], [s.x, s.y]]},
          h = {x: s.x, y: s.y};
        i
          ? (pl(n, {shape: u}, a, e), pl(o, {style: h}, a, e))
          : (n.attr({shape: u}), o.attr({style: h})),
          o.attr({rotation: s.rotation, origin: [s.x, s.y], z2: 10});
        var c = r.getModel('label'),
          d = r.getModel('emphasis.label'),
          f = r.getModel('labelLine'),
          p = r.getModel('emphasis.labelLine');
        l = t.getItemVisual(e, 'color');
        ol(
          o.style,
          (o.hoverStyle = {}),
          c,
          d,
          {
            labelFetcher: t.hostModel,
            labelDataIndex: e,
            defaultText: s.text,
            autoColor: l,
            useInsideStyle: !!s.inside,
          },
          {
            textAlign: s.textAlign,
            textVerticalAlign: s.verticalAlign,
            opacity: t.getItemVisual(e, 'opacity'),
          },
        ),
          (o.ignore = o.normalIgnore = !c.get('show')),
          (o.hoverIgnore = !d.get('show')),
          (n.ignore = n.normalIgnore = !f.get('show')),
          (n.hoverIgnore = !p.get('show')),
          n.setStyle({stroke: l, opacity: t.getItemVisual(e, 'opacity')}),
          n.setStyle(f.getModel('lineStyle').getLineStyle()),
          (n.hoverStyle = p.getModel('lineStyle').getLineStyle());
        var g = f.get('smooth');
        g && !0 === g && (g = 0.4), n.setShape({smooth: g});
      }
    }),
    b(ry, ki);
  function ly(i, t) {
    E(t, function(a) {
      (a.update = 'updateView'),
        Tf(a, function(t, e) {
          var o = {};
          return (
            e.eachComponent(
              {mainType: 'series', subType: i, query: t},
              function(i) {
                i[a.method] && i[a.method](t.name, t.dataIndex);
                var n = i.getData();
                n.each(function(t) {
                  var e = n.getName(t);
                  o[e] = i.isSelected(e) || !1;
                });
              },
            ),
            {name: t.name, selected: o, seriesId: t.seriesId}
          );
        });
    });
  }
  function uy(n) {
    return {
      getTargetSeries: function(t) {
        var e = {},
          i = et();
        return (
          t.eachSeriesByType(n, function(t) {
            (t.__paletteScope = e), i.set(t.uid, t);
          }),
          i
        );
      },
      reset: function(s, t) {
        var l = s.getRawData(),
          u = {},
          h = s.getData();
        h.each(function(t) {
          var e = h.getRawIndex(t);
          u[e] = t;
        }),
          l.each(function(t) {
            var e,
              i = u[t],
              n = null != i && h.getItemVisual(i, 'color', !0),
              o = null != i && h.getItemVisual(i, 'borderColor', !0);
            if (((n && o) || (e = l.getItemModel(t)), !n)) {
              var a =
                e.get('itemStyle.color') ||
                s.getColorFromPalette(
                  l.getName(t) || t + '',
                  s.__paletteScope,
                  l.count(),
                );
              null != i && h.setItemVisual(i, 'color', a);
            }
            if (!o) {
              var r = e.get('itemStyle.borderColor');
              null != i && h.setItemVisual(i, 'borderColor', r);
            }
          });
      },
    };
  }
  Mc.extend({
    type: 'pie',
    init: function() {
      var t = new ki();
      this._sectorGroup = t;
    },
    render: function(t, e, i, n) {
      if (!n || n.from !== this.uid) {
        var o = t.getData(),
          a = this._data,
          r = this.group,
          s = e.get('animation'),
          l = !a,
          u = t.get('animationType'),
          h = t.get('animationTypeUpdate'),
          c = L(oy, this.uid, t, s, i),
          d = t.get('selectedMode');
        if (
          (o
            .diff(a)
            .add(function(t) {
              var e = new ry(o, t);
              l &&
                'scale' !== u &&
                e.eachChild(function(t) {
                  t.stopAnimation(!0);
                }),
                d && e.on('click', c),
                o.setItemGraphicEl(t, e),
                r.add(e);
            })
            .update(function(t, e) {
              var i = a.getItemGraphicEl(e);
              l ||
                'transition' === h ||
                i.eachChild(function(t) {
                  t.stopAnimation(!0);
                }),
                i.updateData(o, t),
                i.off('click'),
                d && i.on('click', c),
                r.add(i),
                o.setItemGraphicEl(t, i);
            })
            .remove(function(t) {
              var e = a.getItemGraphicEl(t);
              r.remove(e);
            })
            .execute(),
          s && 0 < o.count() && (l ? 'scale' !== u : 'transition' !== h))
        ) {
          for (
            var f = o.getItemLayout(0), p = 1;
            isNaN(f.startAngle) && p < o.count();
            ++p
          )
            f = o.getItemLayout(p);
          var g = Math.max(i.getWidth(), i.getHeight()) / 2,
            m = A(r.removeClipPath, r);
          r.setClipPath(
            this._createClipPath(
              f.cx,
              f.cy,
              g,
              f.startAngle,
              f.clockwise,
              m,
              t,
              l,
            ),
          );
        } else r.removeClipPath();
        this._data = o;
      }
    },
    dispose: function() {},
    _createClipPath: function(t, e, i, n, o, a, r, s) {
      var l = new Jr({
        shape: {
          cx: t,
          cy: e,
          r0: 0,
          r: i,
          startAngle: n,
          endAngle: n,
          clockwise: o,
        },
      });
      return (
        (s ? gl : pl)(
          l,
          {shape: {endAngle: n + (o ? 1 : -1) * Math.PI * 2}},
          r,
          a,
        ),
        l
      );
    },
    containPoint: function(t, e) {
      var i = e.getData().getItemLayout(0);
      if (i) {
        var n = t[0] - i.cx,
          o = t[1] - i.cy,
          a = Math.sqrt(n * n + o * o);
        return a <= i.r && a >= i.r0;
      }
    },
  });
  var hy = Math.PI / 180;
  function cy(o, t, e, i, n, a, r, s, l, u) {
    function h(t, e, i) {
      for (var n = t; n < e && !(o[n].y + i > l + r); n++)
        if (
          ((o[n].y += i),
          t < n && n + 1 < e && o[n + 1].y > o[n].y + o[n].height)
        )
          return void c(n, i / 2);
      c(e - 1, i / 2);
    }
    function c(t, e) {
      for (
        var i = t;
        0 <= i &&
        !(o[i].y - e < l) &&
        ((o[i].y -= e), !(0 < i && o[i].y > o[i - 1].y + o[i - 1].height));
        i--
      );
    }
    function d(t, e, i, n, o, a) {
      for (var r = e ? Number.MAX_VALUE : 0, s = 0, l = t.length; s < l; s++)
        if ('none' === t[s].labelAlignTo) {
          var u = Math.abs(t[s].y - n),
            h = t[s].len,
            c = t[s].len2,
            d =
              u < o + h
                ? Math.sqrt((o + h + c) * (o + h + c) - u * u)
                : Math.abs(t[s].x - i);
          e && r <= d && (d = r - 10),
            !e && d <= r && (d = r + 10),
            (t[s].x = i + d * a),
            (r = d);
        }
    }
    o.sort(function(t, e) {
      return t.y - e.y;
    });
    for (var f, p = 0, g = o.length, m = [], v = [], y = 0; y < g; y++) {
      if ('outer' === o[y].position && 'labelLine' === o[y].labelAlignTo) {
        var x = o[y].x - u;
        (o[y].linePoints[1][0] += x), (o[y].x = u);
      }
      (f = o[y].y - p) < 0 && h(y, g, -f), (p = o[y].y + o[y].height);
    }
    r - p < 0 && c(g - 1, p - r);
    for (y = 0; y < g; y++) o[y].y >= e ? v.push(o[y]) : m.push(o[y]);
    d(m, !1, t, e, i, n), d(v, !0, t, e, i, n);
  }
  function dy(t) {
    return 'center' === t.position;
  }
  function fy(L, k, P, t, N, e) {
    var O,
      E,
      R = L.getData(),
      z = [],
      B = !1,
      V = (L.get('minShowLabelAngle') || 0) * hy;
    R.each(function(t) {
      var e = R.getItemLayout(t),
        i = R.getItemModel(t),
        n = i.getModel('label'),
        o = n.get('position') || i.get('emphasis.label.position'),
        a = n.get('distanceToLabelLine'),
        r = n.get('alignTo'),
        s = Vl(n.get('margin'), P),
        l = n.get('bleedMargin'),
        u = n.getFont(),
        h = i.getModel('labelLine'),
        c = h.get('length');
      c = Vl(c, P);
      var d = h.get('length2');
      if (((d = Vl(d, P)), !(e.angle < V))) {
        var f,
          p,
          g,
          m,
          v = (e.startAngle + e.endAngle) / 2,
          y = Math.cos(v),
          x = Math.sin(v);
        (O = e.cx), (E = e.cy);
        var _,
          w = L.getFormattedLabel(t, 'normal') || R.getName(t),
          b = vn(w, u, m, 'top'),
          S = 'inside' === o || 'inner' === o;
        if ('center' === o) (f = e.cx), (p = e.cy), (m = 'center');
        else {
          var M = (S ? ((e.r + e.r0) / 2) * y : e.r * y) + O,
            I = (S ? ((e.r + e.r0) / 2) * x : e.r * x) + E;
          if (((f = M + 3 * y), (p = I + 3 * x), !S)) {
            var T = M + y * (c + k - e.r),
              A = I + x * (c + k - e.r),
              D = T + (y < 0 ? -1 : 1) * d;
            (f =
              'edge' === r
                ? y < 0
                  ? N + s
                  : N + P - s
                : D + (y < 0 ? -a : a)),
              (g = [[M, I], [T, A], [D, (p = A)]]);
          }
          m = S
            ? 'center'
            : 'edge' === r
            ? 0 < y
              ? 'right'
              : 'left'
            : 0 < y
            ? 'left'
            : 'right';
        }
        var C = n.get('rotate');
        (_ =
          'number' == typeof C
            ? C * (Math.PI / 180)
            : C
            ? y < 0
              ? -v + Math.PI
              : -v
            : 0),
          (B = !!_),
          (e.label = {
            x: f,
            y: p,
            position: o,
            height: b.height,
            len: c,
            len2: d,
            linePoints: g,
            textAlign: m,
            verticalAlign: 'middle',
            rotation: _,
            inside: S,
            labelDistance: a,
            labelAlignTo: r,
            labelMargin: s,
            bleedMargin: l,
            textRect: b,
            text: w,
            font: u,
          }),
          S || z.push(e.label);
      }
    }),
      !B &&
        L.get('avoidLabelOverlap') &&
        (function(t, e, i, n, o, a, r, s) {
          for (
            var l = [],
              u = [],
              h = Number.MAX_VALUE,
              c = -Number.MAX_VALUE,
              d = 0;
            d < t.length;
            d++
          )
            dy(t[d]) ||
              (t[d].x < e
                ? ((h = Math.min(h, t[d].x)), l.push(t[d]))
                : ((c = Math.max(c, t[d].x)), u.push(t[d])));
          for (
            cy(u, e, i, n, 1, 0, a, 0, s, c),
              cy(l, e, i, n, -1, 0, a, 0, s, h),
              d = 0;
            d < t.length;
            d++
          ) {
            var f = t[d];
            if (!dy(f)) {
              var p = f.linePoints;
              if (p) {
                var g,
                  m = 'edge' === f.labelAlignTo,
                  v = f.textRect.width;
                (g = m
                  ? f.x < e
                    ? p[2][0] - f.labelDistance - r - f.labelMargin
                    : r + o - f.labelMargin - p[2][0] - f.labelDistance
                  : f.x < e
                  ? f.x - r - f.bleedMargin
                  : r + o - f.x - f.bleedMargin) < f.textRect.width &&
                  ((f.text = wn(f.text, g, f.font)),
                  'edge' === f.labelAlignTo && (v = mn(f.text, f.font)));
                var y = p[1][0] - p[2][0];
                m
                  ? f.x < e
                    ? (p[2][0] = r + f.labelMargin + v + f.labelDistance)
                    : (p[2][0] = r + o - f.labelMargin - v - f.labelDistance)
                  : (f.x < e
                      ? (p[2][0] = f.x + f.labelDistance)
                      : (p[2][0] = f.x - f.labelDistance),
                    (p[1][0] = p[2][0] + y)),
                  (p[1][1] = p[2][1] = f.y);
              }
            }
          }
        })(z, O, E, k, P, t, N, e);
  }
  var py = 2 * Math.PI,
    gy = Math.PI / 180;
  function my(t) {
    return {
      seriesType: t,
      reset: function(t, e) {
        var n = e.findComponents({mainType: 'legend'});
        if (n && n.length) {
          var o = t.getData();
          o.filterSelf(function(t) {
            for (var e = o.getName(t), i = 0; i < n.length; i++)
              if (!n[i].isSelected(e)) return !1;
            return !0;
          });
        }
      },
    };
  }
  ly('pie', [
    {
      type: 'pieToggleSelect',
      event: 'pieselectchanged',
      method: 'toggleSelected',
    },
    {type: 'pieSelect', event: 'pieselected', method: 'select'},
    {type: 'pieUnSelect', event: 'pieunselected', method: 'unSelect'},
  ]),
    Cf(uy('pie')),
    Df(
      L(function(t, e, A, i) {
        e.eachSeriesByType(t, function(t) {
          var o = t.getData(),
            e = o.mapDimension('value'),
            a = (function(t, e) {
              return Iu(t.getBoxLayoutParams(), {
                width: e.getWidth(),
                height: e.getHeight(),
              });
            })(t, A),
            i = t.get('center'),
            n = t.get('radius');
          R(n) || (n = [0, n]), R(i) || (i = [i, i]);
          var r = Vl(a.width, A.getWidth()),
            s = Vl(a.height, A.getHeight()),
            l = Math.min(r, s),
            u = Vl(i[0], r) + a.x,
            h = Vl(i[1], s) + a.y,
            c = Vl(n[0], l / 2),
            d = Vl(n[1], l / 2),
            f = -t.get('startAngle') * gy,
            p = t.get('minAngle') * gy,
            g = 0;
          o.each(e, function(t) {
            isNaN(t) || g++;
          });
          var m = o.getSum(e),
            v = (Math.PI / (m || g)) * 2,
            y = t.get('clockwise'),
            x = t.get('roseType'),
            _ = t.get('stillShowZeroSum'),
            w = o.getDataExtent(e);
          w[0] = 0;
          var b = py,
            S = 0,
            M = f,
            I = y ? 1 : -1;
          if (
            (o.each(e, function(t, e) {
              var i;
              if (isNaN(t))
                o.setItemLayout(e, {
                  angle: NaN,
                  startAngle: NaN,
                  endAngle: NaN,
                  clockwise: y,
                  cx: u,
                  cy: h,
                  r0: c,
                  r: x ? NaN : d,
                  viewRect: a,
                });
              else {
                (i = 'area' !== x ? (0 === m && _ ? v : t * v) : py / g) < p
                  ? (b -= i = p)
                  : (S += t);
                var n = M + I * i;
                o.setItemLayout(e, {
                  angle: i,
                  startAngle: M,
                  endAngle: n,
                  clockwise: y,
                  cx: u,
                  cy: h,
                  r0: c,
                  r: x ? Bl(t, w, [c, d]) : d,
                  viewRect: a,
                }),
                  (M = n);
              }
            }),
            b < py && g)
          )
            if (b <= 0.001) {
              var T = py / g;
              o.each(e, function(t, e) {
                if (!isNaN(t)) {
                  var i = o.getItemLayout(e);
                  (i.angle = T),
                    (i.startAngle = f + I * e * T),
                    (i.endAngle = f + I * (e + 1) * T);
                }
              });
            } else
              (v = b / S),
                (M = f),
                o.each(e, function(t, e) {
                  if (!isNaN(t)) {
                    var i = o.getItemLayout(e),
                      n = i.angle === p ? p : t * v;
                    (i.startAngle = M), (i.endAngle = M + I * n), (M += I * n);
                  }
                });
          fy(t, d, a.width, a.height, a.x, a.y);
        });
      }, 'pie'),
    ),
    If(my('pie')),
    cc.extend({
      type: 'series.scatter',
      dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],
      getInitialData: function(t, e) {
        return bp(this.getSource(), this, {useEncodeDefaulter: !0});
      },
      brushSelector: 'point',
      getProgressive: function() {
        var t = this.option.progressive;
        return null == t
          ? this.option.large
            ? 5e3
            : this.get('progressive')
          : t;
      },
      getProgressiveThreshold: function() {
        var t = this.option.progressiveThreshold;
        return null == t
          ? this.option.large
            ? 1e4
            : this.get('progressiveThreshold')
          : t;
      },
      defaultOption: {
        coordinateSystem: 'cartesian2d',
        zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        hoverAnimation: !0,
        symbolSize: 10,
        large: !1,
        largeThreshold: 2e3,
        itemStyle: {opacity: 0.8},
        clip: !0,
      },
    });
  var vy = Ps({
    shape: {points: null},
    symbolProxy: null,
    softClipShape: null,
    buildPath: function(t, e) {
      var i = e.points,
        n = e.size,
        o = this.symbolProxy,
        a = o.shape;
      if (!((t.getContext ? t.getContext() : t) && n[0] < 4))
        for (var r = 0; r < i.length; ) {
          var s = i[r++],
            l = i[r++];
          isNaN(s) ||
            isNaN(l) ||
            (this.softClipShape && !this.softClipShape.contain(s, l)) ||
            ((a.x = s - n[0] / 2),
            (a.y = l - n[1] / 2),
            (a.width = n[0]),
            (a.height = n[1]),
            o.buildPath(t, a, !0));
        }
    },
    afterBrush: function(t) {
      var e = this.shape,
        i = e.points,
        n = e.size;
      if (n[0] < 4) {
        this.setTransform(t);
        for (var o = 0; o < i.length; ) {
          var a = i[o++],
            r = i[o++];
          isNaN(a) ||
            isNaN(r) ||
            (this.softClipShape && !this.softClipShape.contain(a, r)) ||
            t.fillRect(a - n[0] / 2, r - n[1] / 2, n[0], n[1]);
        }
        this.restoreTransform(t);
      }
    },
    findDataIndex: function(t, e) {
      for (
        var i = this.shape,
          n = i.points,
          o = i.size,
          a = Math.max(o[0], 4),
          r = Math.max(o[1], 4),
          s = n.length / 2 - 1;
        0 <= s;
        s--
      ) {
        var l = 2 * s,
          u = n[l] - a / 2,
          h = n[1 + l] - r / 2;
        if (u <= t && h <= e && t <= u + a && e <= h + r) return s;
      }
      return -1;
    },
  });
  function yy() {
    this.group = new ki();
  }
  var xy = yy.prototype;
  function _y(t, e, i) {
    Yg.call(this, t, e, i),
      (this.type = 'value'),
      (this.angle = 0),
      (this.name = ''),
      this.model;
  }
  function wy(t, e, i) {
    (this._model = t),
      (this.dimensions = []),
      (this._indicatorAxes = O(
        t.getIndicatorModels(),
        function(t, e) {
          var i = 'indicator_' + e,
            n = new _y(i, 'log' === t.get('axisType') ? new hg() : new Ep());
          return (
            (n.name = t.get('name')),
            ((n.model = t).axis = n),
            this.dimensions.push(i),
            n
          );
        },
        this,
      )),
      this.resize(t, i),
      this.cx,
      this.cy,
      this.r,
      this.r0,
      this.startAngle;
  }
  (xy.isPersistent = function() {
    return !this._incremental;
  }),
    (xy.updateData = function(t, e) {
      this.group.removeAll();
      var i = new vy({rectHover: !0, cursor: 'default'});
      i.setShape({points: t.getLayout('symbolPoints')}),
        this._setCommon(i, t, !1, e),
        this.group.add(i),
        (this._incremental = null);
    }),
    (xy.updateLayout = function(t) {
      if (!this._incremental) {
        var n = t.getLayout('symbolPoints');
        this.group.eachChild(function(t) {
          if (null != t.startIndex) {
            var e = 2 * (t.endIndex - t.startIndex),
              i = 4 * t.startIndex * 2;
            n = new Float32Array(n.buffer, i, e);
          }
          t.setShape('points', n);
        });
      }
    }),
    (xy.incrementalPrepareUpdate = function(t) {
      this.group.removeAll(),
        this._clearIncremental(),
        2e6 < t.count()
          ? (this._incremental || (this._incremental = new _s({silent: !0})),
            this.group.add(this._incremental))
          : (this._incremental = null);
    }),
    (xy.incrementalUpdate = function(t, e, i) {
      var n;
      this._incremental
        ? ((n = new vy()), this._incremental.addDisplayable(n, !0))
        : (((n = new vy({
            rectHover: !0,
            cursor: 'default',
            startIndex: t.start,
            endIndex: t.end,
          })).incremental = !0),
          this.group.add(n)),
        n.setShape({points: e.getLayout('symbolPoints')}),
        this._setCommon(n, e, !!this._incremental, i);
    }),
    (xy._setCommon = function(i, t, e, n) {
      var o = t.hostModel;
      n = n || {};
      var a = t.getVisual('symbolSize');
      i.setShape('size', a instanceof Array ? a : [a, a]),
        (i.softClipShape = n.clipShape || null),
        (i.symbolProxy = Dg(t.getVisual('symbol'), 0, 0, 0, 0)),
        (i.setColor = i.symbolProxy.setColor);
      var r = i.shape.size[0] < 4;
      i.useStyle(
        o
          .getModel('itemStyle')
          .getItemStyle(r ? ['color', 'shadowBlur', 'shadowColor'] : ['color']),
      );
      var s = t.getVisual('color');
      s && i.setColor(s),
        e ||
          ((i.seriesIndex = o.seriesIndex),
          i.on('mousemove', function(t) {
            i.dataIndex = null;
            var e = i.findDataIndex(t.offsetX, t.offsetY);
            0 <= e && (i.dataIndex = e + (i.startIndex || 0));
          }));
    }),
    (xy.remove = function() {
      this._clearIncremental(),
        (this._incremental = null),
        this.group.removeAll();
    }),
    (xy._clearIncremental = function() {
      var t = this._incremental;
      t && t.clearDisplaybles();
    }),
    Ef({
      type: 'scatter',
      render: function(t, e, i) {
        var n = t.getData();
        this._updateSymbolDraw(n, t).updateData(n, {
          clipShape: this._getClipShape(t),
        }),
          (this._finished = !0);
      },
      incrementalPrepareRender: function(t, e, i) {
        var n = t.getData();
        this._updateSymbolDraw(n, t).incrementalPrepareUpdate(n),
          (this._finished = !1);
      },
      incrementalRender: function(t, e, i) {
        this._symbolDraw.incrementalUpdate(t, e.getData(), {
          clipShape: this._getClipShape(e),
        }),
          (this._finished = t.end === e.getData().count());
      },
      updateTransform: function(t, e, i) {
        var n = t.getData();
        if (
          (this.group.dirty(),
          !this._finished ||
            1e4 < n.count() ||
            !this._symbolDraw.isPersistent())
        )
          return {update: !0};
        var o = Bm().reset(t);
        o.progress && o.progress({start: 0, end: n.count()}, n),
          this._symbolDraw.updateLayout(n);
      },
      _getClipShape: function(t) {
        var e = t.coordinateSystem,
          i = e && e.getArea && e.getArea();
        return t.get('clip', !0) ? i : null;
      },
      _updateSymbolDraw: function(t, e) {
        var i = this._symbolDraw,
          n = e.pipelineContext.large;
        return (
          (i && n === this._isLargeDraw) ||
            (i && i.remove(),
            (i = this._symbolDraw = n ? new yy() : new um()),
            (this._isLargeDraw = n),
            this.group.removeAll()),
          this.group.add(i.group),
          i
        );
      },
      remove: function(t, e) {
        this._symbolDraw && this._symbolDraw.remove(!0),
          (this._symbolDraw = null);
      },
      dispose: function() {},
    }),
    Cf(zm('scatter', 'circle')),
    Df(Bm('scatter')),
    b(_y, Yg),
    (wy.prototype.getIndicatorAxes = function() {
      return this._indicatorAxes;
    }),
    (wy.prototype.dataToPoint = function(t, e) {
      var i = this._indicatorAxes[e];
      return this.coordToPoint(i.dataToCoord(t), e);
    }),
    (wy.prototype.coordToPoint = function(t, e) {
      var i = this._indicatorAxes[e].angle;
      return [this.cx + t * Math.cos(i), this.cy - t * Math.sin(i)];
    }),
    (wy.prototype.pointToData = function(t) {
      var e = t[0] - this.cx,
        i = t[1] - this.cy,
        n = Math.sqrt(e * e + i * i);
      (e /= n), (i /= n);
      for (
        var o, a = Math.atan2(-i, e), r = 1 / 0, s = -1, l = 0;
        l < this._indicatorAxes.length;
        l++
      ) {
        var u = this._indicatorAxes[l],
          h = Math.abs(a - u.angle);
        h < r && ((o = u), (s = l), (r = h));
      }
      return [s, +(o && o.coordToData(n))];
    }),
    (wy.prototype.resize = function(t, e) {
      var i = t.get('center'),
        n = e.getWidth(),
        o = e.getHeight(),
        a = Math.min(n, o) / 2;
      (this.cx = Vl(i[0], n)),
        (this.cy = Vl(i[1], o)),
        (this.startAngle = (t.get('startAngle') * Math.PI) / 180);
      var r = t.get('radius');
      ('string' != typeof r && 'number' != typeof r) || (r = [0, r]),
        (this.r0 = Vl(r[0], a)),
        (this.r = Vl(r[1], a)),
        E(
          this._indicatorAxes,
          function(t, e) {
            t.setExtent(this.r0, this.r);
            var i =
              this.startAngle + (e * Math.PI * 2) / this._indicatorAxes.length;
            (i = Math.atan2(Math.sin(i), Math.cos(i))), (t.angle = i);
          },
          this,
        );
    }),
    (wy.prototype.update = function(n, t) {
      var o = this._indicatorAxes,
        a = this._model;
      E(o, function(t) {
        t.scale.setExtent(1 / 0, -1 / 0);
      }),
        n.eachSeriesByType(
          'radar',
          function(t, e) {
            if (
              'radar' === t.get('coordinateSystem') &&
              n.getComponent('radar', t.get('radarIndex')) === a
            ) {
              var i = t.getData();
              E(o, function(t) {
                t.scale.unionExtentFromData(i, i.mapDimension(t.dim));
              });
            }
          },
          this,
        );
      var c = a.get('splitNumber');
      function d(t) {
        var e = Math.pow(10, Math.floor(Math.log(t) / Math.LN10)),
          i = t / e;
        return 2 === i ? (i = 5) : (i *= 2), i * e;
      }
      E(o, function(t, e) {
        var i = dg(t.scale, t.model).extent;
        fg(t.scale, t.model);
        var n = t.model,
          o = t.scale,
          a = n.getMin(),
          r = n.getMax(),
          s = o.getInterval();
        if (null != a && null != r)
          o.setExtent(+a, +r), o.setInterval((r - a) / c);
        else if (null != a)
          for (
            ;
            (u = a + s * c),
              o.setExtent(+a, u),
              o.setInterval(s),
              (s = d(s)),
              u < i[1] && isFinite(u) && isFinite(i[1]);

          );
        else if (null != r)
          for (
            ;
            (h = r - s * c),
              o.setExtent(h, +r),
              o.setInterval(s),
              (s = d(s)),
              h > i[0] && isFinite(h) && isFinite(i[0]);

          );
        else {
          var l = o.getTicks().length - 1;
          c < l && (s = d(s));
          var u,
            h = Gl((u = Math.ceil(i[1] / s) * s) - s * c);
          o.setExtent(h, u), o.setInterval(s);
        }
      });
    }),
    (wy.dimensions = []),
    (wy.create = function(i, n) {
      var o = [];
      return (
        i.eachComponent('radar', function(t) {
          var e = new wy(t, i, n);
          o.push(e), (t.coordinateSystem = e);
        }),
        i.eachSeriesByType('radar', function(t) {
          'radar' === t.get('coordinateSystem') &&
            (t.coordinateSystem = o[t.get('radarIndex') || 0]);
        }),
        o
      );
    }),
    dh.register('radar', wy);
  var by = Xm.valueAxis;
  function Sy(t, e) {
    return C({show: e}, t);
  }
  Pf({
    type: 'radar',
    optionUpdated: function() {
      var o = this.get('boundaryGap'),
        a = this.get('splitNumber'),
        r = this.get('scale'),
        s = this.get('axisLine'),
        l = this.get('axisTick'),
        u = this.get('axisType'),
        h = this.get('axisLabel'),
        c = this.get('name'),
        d = this.get('name.show'),
        f = this.get('name.formatter'),
        p = this.get('nameGap'),
        g = this.get('triggerEvent'),
        t = O(
          this.get('indicator') || [],
          function(t) {
            null != t.max && 0 < t.max && !t.min
              ? (t.min = 0)
              : null != t.min && t.min < 0 && !t.max && (t.max = 0);
            var e = c;
            if (
              (null != t.color && (e = C({color: t.color}, c)),
              (t = m(
                k(t),
                {
                  boundaryGap: o,
                  splitNumber: a,
                  scale: r,
                  axisLine: s,
                  axisTick: l,
                  axisType: u,
                  axisLabel: h,
                  name: t.text,
                  nameLocation: 'end',
                  nameGap: p,
                  nameTextStyle: e,
                  triggerEvent: g,
                },
                !1,
              )),
              d || (t.name = ''),
              'string' == typeof f)
            ) {
              var i = t.name;
              t.name = f.replace('{value}', null != i ? i : '');
            } else 'function' == typeof f && (t.name = f(t.name, t));
            var n = P(new Pl(t, null, this.ecModel), xg);
            return (
              (n.mainType = 'radar'),
              (n.componentIndex = this.componentIndex),
              n
            );
          },
          this,
        );
      this.getIndicatorModels = function() {
        return t;
      };
    },
    defaultOption: {
      zlevel: 0,
      z: 0,
      center: ['50%', '50%'],
      radius: '75%',
      startAngle: 90,
      name: {show: !0},
      boundaryGap: [0, 0],
      splitNumber: 5,
      nameGap: 15,
      scale: !1,
      shape: 'polygon',
      axisLine: m({lineStyle: {color: '#bbb'}}, by.axisLine),
      axisLabel: Sy(by.axisLabel, !1),
      axisTick: Sy(by.axisTick, !1),
      axisType: 'interval',
      splitLine: Sy(by.splitLine, !0),
      splitArea: Sy(by.splitArea, !0),
      indicator: [],
    },
  });
  var My = ['axisLine', 'axisTickLabel', 'axisName'];
  Nf({
    type: 'radar',
    render: function(t, e, i) {
      this.group.removeAll(),
        this._buildAxes(t),
        this._buildSplitLineAndArea(t);
    },
    _buildAxes: function(t) {
      var e = t.coordinateSystem;
      E(
        O(e.getIndicatorAxes(), function(t) {
          return new rv(t.model, {
            position: [e.cx, e.cy],
            rotation: t.angle,
            labelDirection: -1,
            tickDirection: -1,
            nameDirection: 1,
          });
        }),
        function(t) {
          E(My, t.add, t), this.group.add(t.getGroup());
        },
        this,
      );
    },
    _buildSplitLineAndArea: function(t) {
      var n = t.coordinateSystem,
        e = n.getIndicatorAxes();
      if (e.length) {
        var i = t.get('shape'),
          o = t.getModel('splitLine'),
          a = t.getModel('splitArea'),
          r = o.getModel('lineStyle'),
          s = a.getModel('areaStyle'),
          l = o.get('show'),
          u = a.get('show'),
          h = r.get('color'),
          c = s.get('color');
        (h = R(h) ? h : [h]), (c = R(c) ? c : [c]);
        var d = [],
          f = [];
        if ('circle' === i)
          for (
            var p = e[0].getTicksCoords(), g = n.cx, m = n.cy, v = 0;
            v < p.length;
            v++
          ) {
            if (l)
              d[I(d, h, v)].push(
                new Kr({shape: {cx: g, cy: m, r: p[v].coord}}),
              );
            if (u && v < p.length - 1)
              f[I(f, c, v)].push(
                new Qr({
                  shape: {cx: g, cy: m, r0: p[v].coord, r: p[v + 1].coord},
                }),
              );
          }
        else {
          var y,
            x = O(e, function(t, e) {
              var i = t.getTicksCoords();
              return (
                (y = null == y ? i.length - 1 : Math.min(i.length - 1, y)),
                O(i, function(t) {
                  return n.coordToPoint(t.coord, e);
                })
              );
            }),
            _ = [];
          for (v = 0; v <= y; v++) {
            for (var w = [], b = 0; b < e.length; b++) w.push(x[b][v]);
            if (
              (w[0]
                ? w.push(w[0].slice())
                : D && console.error("Can't draw value axis " + v),
              l)
            )
              d[I(d, h, v)].push(new ns({shape: {points: w}}));
            if (u && _)
              f[I(f, c, v - 1)].push(new is({shape: {points: w.concat(_)}}));
            _ = w.slice().reverse();
          }
        }
        var S = r.getLineStyle(),
          M = s.getAreaStyle();
        E(
          f,
          function(t, e) {
            this.group.add(
              Bs(t, {
                style: C({stroke: 'none', fill: c[e % c.length]}, M),
                silent: !0,
              }),
            );
          },
          this,
        ),
          E(
            d,
            function(t, e) {
              this.group.add(
                Bs(t, {
                  style: C({fill: 'none', stroke: h[e % h.length]}, S),
                  silent: !0,
                }),
              );
            },
            this,
          );
      }
      function I(t, e, i) {
        var n = i % e.length;
        return (t[n] = t[n] || []), n;
      }
    },
  });
  var Iy = cc.extend({
    type: 'series.radar',
    dependencies: ['radar'],
    init: function(t) {
      Iy.superApply(this, 'init', arguments),
        (this.legendVisualProvider = new iy(
          A(this.getData, this),
          A(this.getRawData, this),
        ));
    },
    getInitialData: function(t, e) {
      return ty(this, {generateCoord: 'indicator_', generateCoordCount: 1 / 0});
    },
    formatTooltip: function(n) {
      var o = this.getData(),
        t = this.coordinateSystem.getIndicatorAxes(),
        e = this.getData().getName(n);
      return (
        lu('' === e ? this.name : e) +
        '<br/>' +
        O(t, function(t, e) {
          var i = o.get(o.mapDimension(t.dim), n);
          return lu(t.name + ' : ' + i);
        }).join('<br />')
      );
    },
    getTooltipPosition: function(t) {
      if (null != t)
        for (
          var e = this.getData(),
            i = this.coordinateSystem,
            n = e.getValues(
              O(i.dimensions, function(t) {
                return e.mapDimension(t);
              }),
              t,
              !0,
            ),
            o = 0,
            a = n.length;
          o < a;
          o++
        )
          if (!isNaN(n[o])) {
            var r = i.getIndicatorAxes();
            return i.coordToPoint(r[o].dataToCoord(n[o]), o);
          }
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      coordinateSystem: 'radar',
      legendHoverLink: !0,
      radarIndex: 0,
      lineStyle: {width: 2, type: 'solid'},
      label: {position: 'top'},
      symbol: 'emptyCircle',
      symbolSize: 4,
    },
  });
  Ef({
    type: 'radar',
    render: function(l, t, e) {
      var i = l.coordinateSystem,
        g = this.group,
        m = l.getData(),
        s = this._data;
      function u(t, e) {
        var i = t.getItemVisual(e, 'symbol') || 'circle',
          n = t.getItemVisual(e, 'color');
        if ('none' !== i) {
          var o = (function(t) {
              return R(t) || (t = [+t, +t]), t;
            })(t.getItemVisual(e, 'symbolSize')),
            a = Dg(i, -1, -1, 2, 2, n);
          return (
            a.attr({
              style: {strokeNoScale: !0},
              z2: 100,
              scale: [o[0] / 2, o[1] / 2],
            }),
            a
          );
        }
      }
      function h(t, e, i, n, o, a) {
        i.removeAll();
        for (var r = 0; r < e.length - 1; r++) {
          var s = u(n, o);
          s &&
            (t[(s.__dimIdx = r)]
              ? (s.attr('position', t[r]),
                Il[a ? 'initProps' : 'updateProps'](s, {position: e[r]}, l, o))
              : s.attr('position', e[r]),
            i.add(s));
        }
      }
      function c(t) {
        return O(t, function(t) {
          return [i.cx, i.cy];
        });
      }
      m
        .diff(s)
        .add(function(t) {
          var e = m.getItemLayout(t);
          if (e) {
            var i = new is(),
              n = new ns(),
              o = {shape: {points: e}};
            (i.shape.points = c(e)),
              (n.shape.points = c(e)),
              gl(i, o, l, t),
              gl(n, o, l, t);
            var a = new ki(),
              r = new ki();
            a.add(n),
              a.add(i),
              a.add(r),
              h(n.shape.points, e, r, m, t, !0),
              m.setItemGraphicEl(t, a);
          }
        })
        .update(function(t, e) {
          var i = s.getItemGraphicEl(e),
            n = i.childAt(0),
            o = i.childAt(1),
            a = i.childAt(2),
            r = {shape: {points: m.getItemLayout(t)}};
          r.shape.points &&
            (h(n.shape.points, r.shape.points, a, m, t, !1),
            pl(n, r, l),
            pl(o, r, l),
            m.setItemGraphicEl(t, i));
        })
        .remove(function(t) {
          g.remove(s.getItemGraphicEl(t));
        })
        .execute(),
        m.eachItemGraphicEl(function(t, i) {
          var e = m.getItemModel(i),
            n = t.childAt(0),
            o = t.childAt(1),
            a = t.childAt(2),
            r = m.getItemVisual(i, 'color');
          g.add(t),
            n.useStyle(
              C(e.getModel('lineStyle').getLineStyle(), {
                fill: 'none',
                stroke: r,
              }),
            ),
            (n.hoverStyle = e.getModel('emphasis.lineStyle').getLineStyle());
          var s = e.getModel('areaStyle'),
            l = e.getModel('emphasis.areaStyle'),
            u = s.isEmpty() && s.parentModel.isEmpty(),
            h = l.isEmpty() && l.parentModel.isEmpty();
          (h = h && u),
            (o.ignore = u),
            o.useStyle(C(s.getAreaStyle(), {fill: r, opacity: 0.7})),
            (o.hoverStyle = l.getAreaStyle());
          var c = e.getModel('itemStyle').getItemStyle(['color']),
            d = e.getModel('emphasis.itemStyle').getItemStyle(),
            f = e.getModel('label'),
            p = e.getModel('emphasis.label');
          a.eachChild(function(t) {
            t.setStyle(c), (t.hoverStyle = k(d));
            var e = m.get(m.dimensions[t.__dimIdx], i);
            (null != e && !isNaN(e)) || (e = ''),
              ol(t.style, t.hoverStyle, f, p, {
                labelFetcher: m.hostModel,
                labelDataIndex: i,
                labelDimIndex: t.__dimIdx,
                defaultText: e,
                autoColor: r,
                isRectText: !0,
              });
          }),
            (t.highDownOnUpdate = function(t, e) {
              o.attr('ignore', 'emphasis' === e ? h : u);
            }),
            tl(t);
        }),
        (this._data = m);
    },
    remove: function() {
      this.group.removeAll(), (this._data = null);
    },
    dispose: function() {},
  });
  function Ty(t) {
    return !isNaN(t[0]) && !isNaN(t[1]);
  }
  function Ay(t) {
    return [t.cx, t.cy];
  }
  Cf(uy('radar')),
    Cf(zm('radar', 'circle')),
    Df(function(t) {
      t.eachSeriesByType('radar', function(t) {
        var i = t.getData(),
          o = [],
          a = t.coordinateSystem;
        if (a) {
          var e = a.getIndicatorAxes();
          E(e, function(t, n) {
            i.each(i.mapDimension(e[n].dim), function(t, e) {
              o[e] = o[e] || [];
              var i = a.dataToPoint(t, n);
              o[e][n] = Ty(i) ? i : Ay(a);
            });
          }),
            i.each(function(t) {
              var e =
                T(o[t], function(t) {
                  return Ty(t);
                }) || Ay(a);
              o[t].push(e.slice()), i.setItemLayout(t, o[t]);
            });
        }
      });
    }),
    If(my('radar')),
    Mf(function(i) {
      var t = i.polar;
      if (t) {
        R(t) || (t = [t]);
        var n = [];
        E(t, function(t, e) {
          t.indicator
            ? (t.type && !t.shape && (t.shape = t.type),
              (i.radar = i.radar || []),
              R(i.radar) || (i.radar = [i.radar]),
              i.radar.push(t))
            : n.push(t);
        }),
          (i.polar = n);
      }
      E(i.series, function(t) {
        t &&
          'radar' === t.type &&
          t.polarIndex &&
          (t.radarIndex = t.polarIndex);
      });
    });
  for (
    var Dy = [126, 25],
      Cy = [
        [
          [0, 3.5],
          [7, 11.2],
          [15, 11.9],
          [30, 7],
          [42, 0.7],
          [52, 0.7],
          [56, 7.7],
          [59, 0.7],
          [64, 0.7],
          [64, 0],
          [5, 0],
          [0, 3.5],
        ],
        [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]],
        [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]],
        [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]],
        [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]],
        [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]],
        [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]],
        [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]],
        [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]],
        [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]],
        [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]],
        [
          [0, 3.5],
          [0, 93.1],
          [64, 93.1],
          [64, 0],
          [63, 0],
          [63, 92.4],
          [1, 92.4],
          [1, 3.5],
          [0, 3.5],
        ],
      ],
      Ly = 0;
    Ly < Cy.length;
    Ly++
  )
    for (var ky = 0; ky < Cy[Ly].length; ky++)
      (Cy[Ly][ky][0] /= 10.5),
        (Cy[Ly][ky][1] /= -14),
        (Cy[Ly][ky][0] += Dy[0]),
        (Cy[Ly][ky][1] += Dy[1]);
  var Py = {
      南海诸岛: [32, 80],
      广东: [0, -10],
      香港: [10, 5],
      澳门: [-10, 10],
      天津: [5, 5],
    },
    Ny = {
      Russia: [100, 60],
      'United States': [-99, 38],
      'United States of America': [-99, 38],
    },
    Oy = [
      [
        [123.45165252685547, 25.73527164402261],
        [123.49731445312499, 25.73527164402261],
        [123.49731445312499, 25.750734064600884],
        [123.45165252685547, 25.750734064600884],
        [123.45165252685547, 25.73527164402261],
      ],
    ],
    Ey = $o(),
    Ry = {
      load: function(n, t, e) {
        var i = Ey(t).parsed;
        if (i) return i;
        var o,
          a = t.specialAreas || {},
          r = t.geoJSON;
        try {
          o = r ? Rg(r, e) : [];
        } catch (t) {
          throw new Error('Invalid geoJson format\n' + t.message);
        }
        return (
          (function(t, e) {
            'china' === t &&
              e.push(
                new Og(
                  '南海诸岛',
                  O(Cy, function(t) {
                    return {type: 'polygon', exterior: t};
                  }),
                  Dy,
                ),
              );
          })(n, o),
          E(o, function(t) {
            var e = t.name;
            !(function(t, e) {
              if ('china' === t) {
                var i = Py[e.name];
                if (i) {
                  var n = e.center;
                  (n[0] += i[0] / 10.5), (n[1] += -i[1] / 14);
                }
              }
            })(n, t),
              (function(t, e) {
                if ('world' === t) {
                  var i = Ny[e.name];
                  if (i) {
                    var n = e.center;
                    (n[0] = i[0]), (n[1] = i[1]);
                  }
                }
              })(n, t),
              (function(t, e) {
                'china' === t &&
                  '台湾' === e.name &&
                  e.geometries.push({type: 'polygon', exterior: Oy[0]});
              })(n, t);
            var i = a[e];
            i && t.transformTo(i.left, i.top, i.width, i.height);
          }),
          (Ey(t).parsed = {
            regions: o,
            boundingRect: (function(t) {
              for (var e, i = 0; i < t.length; i++) {
                var n = t[i].getBoundingRect();
                (e = e || n.clone()).union(n);
              }
              return e;
            })(o),
          })
        );
      },
    };
  var zy = $o();
  function By(t, e) {
    var i,
      n,
      o = t.svgXML;
    try {
      q(
        null !=
          (n = (i =
            (o &&
              (function(t, e) {
                return new pd().parse(t, e);
              })(o, {ignoreViewBox: !0, ignoreRootClip: !0})) ||
            {}).root),
      );
    } catch (t) {
      throw new Error('Invalid svg format\n' + t.message);
    }
    var a = i.width,
      r = i.height,
      s = i.viewBoxRect;
    if (
      (e ||
        ((e =
          null == a || null == r ? n.getBoundingRect() : new Li(0, 0, 0, 0)),
        null != a && (e.width = a),
        null != r && (e.height = r)),
      s)
    ) {
      var l = Id(s, e.width, e.height),
        u = n;
      (n = new ki()).add(u), (u.scale = l.scale), (u.position = l.position);
    }
    return (
      n.setClipPath(new us({shape: e.plain()})), {root: n, boundingRect: e}
    );
  }
  var Vy = {
      geoJSON: Ry,
      svg: {
        load: function(t, e) {
          var i = zy(e).originRoot;
          if (i) return {root: i, boundingRect: zy(e).boundingRect};
          var n = By(e);
          return (
            (zy(e).originRoot = n.root),
            (zy(e).boundingRect = n.boundingRect),
            n
          );
        },
        makeGraphic: function(t, e, i) {
          var n = zy(e),
            o = n.rootMap || (n.rootMap = et()),
            a = o.get(i);
          if (a) return a;
          var r = n.originRoot,
            s = n.boundingRect;
          return (
            (a = n.originRootHostKey
              ? By(e, s).root
              : ((n.originRootHostKey = i), r)),
            o.set(i, a)
          );
        },
        removeGraphic: function(t, e, i) {
          var n = zy(e),
            o = n.rootMap;
          o && o.removeKey(i),
            i === n.originRootHostKey && (n.originRootHostKey = null);
        },
      },
    },
    Gy = {
      load: function(n, o, a) {
        var r,
          s = [],
          l = et(),
          u = et();
        return (
          E(Wy(n), function(t) {
            var e = Vy[t.type].load(n, t, a);
            E(e.regions, function(t) {
              var e = t.name;
              o && o.hasOwnProperty(e) && (t = t.cloneShallow((e = o[e]))),
                s.push(t),
                l.set(e, t),
                u.set(e, t.center);
            });
            var i = e.boundingRect;
            i && (r ? r.union(i) : (r = i.clone()));
          }),
          {
            regions: s,
            regionsMap: l,
            nameCoordMap: u,
            boundingRect: r || new Li(0, 0, 0, 0),
          }
        );
      },
      makeGraphic: Fy('makeGraphic'),
      removeGraphic: Fy('removeGraphic'),
    };
  function Fy(a) {
    return function(i, n) {
      var t = Wy(i),
        o = [];
      return (
        E(t, function(t) {
          var e = Vy[t.type][a];
          e && o.push(e(i, t, n));
        }),
        o
      );
    };
  }
  function Wy(t) {
    var e = Ad.retrieveMap(t) || [];
    return (
      D &&
        (e.length ||
          (function(t) {
            D &&
              console.error(
                'Map ' +
                  t +
                  ' not exists. The GeoJSON of the map must be provided.',
              );
          })(t)),
      e
    );
  }
  S(
    cc.extend({
      type: 'series.map',
      dependencies: ['geo'],
      layoutMode: 'box',
      needsDrawMap: !1,
      seriesGroup: [],
      getInitialData: function(t) {
        for (
          var e = ty(this, {
              coordDimensions: ['value'],
              encodeDefaulter: L(eh, this),
            }),
            i = e.mapDimension('value'),
            n = et(),
            o = [],
            a = [],
            r = 0,
            s = e.count();
          r < s;
          r++
        ) {
          var l = e.getName(r);
          n.set(l, !0),
            o.push({
              name: l,
              value: e.get(i, r),
              selected: jh(e, r, 'selected'),
            });
        }
        return (
          E(
            Gy.load(
              this.getMapType(),
              this.option.nameMap,
              this.option.nameProperty,
            ).regions,
            function(t) {
              var e = t.name;
              n.get(e) || (o.push({name: e}), a.push(e));
            },
          ),
          this.updateSelectedMap(o),
          e.appendValues([], a),
          e
        );
      },
      getHostGeoModel: function() {
        var t = this.option.geoIndex;
        return null != t ? this.dependentModels.geo[t] : null;
      },
      getMapType: function() {
        return (this.getHostGeoModel() || this).option.map;
      },
      getRawValue: function(t) {
        var e = this.getData();
        return e.get(e.mapDimension('value'), t);
      },
      getRegionModel: function(t) {
        var e = this.getData();
        return e.getItemModel(e.indexOfName(t));
      },
      formatTooltip: function(t) {
        for (
          var e = this.getData(),
            i = nu(this.getRawValue(t)),
            n = e.getName(t),
            o = this.seriesGroup,
            a = [],
            r = 0;
          r < o.length;
          r++
        ) {
          var s = o[r].originalData.indexOfName(n),
            l = e.mapDimension('value');
          isNaN(o[r].originalData.get(l, s)) || a.push(lu(o[r].name));
        }
        return a.join(', ') + '<br />' + lu(n + ' : ' + i);
      },
      getTooltipPosition: function(t) {
        if (null != t) {
          var e = this.getData().getName(t),
            i = this.coordinateSystem,
            n = i.getRegion(e);
          return n && i.dataToPoint(n.center);
        }
      },
      setZoom: function(t) {
        this.option.zoom = t;
      },
      setCenter: function(t) {
        this.option.center = t;
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'geo',
        map: '',
        left: 'center',
        top: 'center',
        aspectScale: 0.75,
        showLegendSymbol: !0,
        dataRangeHoverLink: !0,
        boundingCoords: null,
        center: null,
        zoom: 1,
        scaleLimit: null,
        label: {show: !1, color: '#000'},
        itemStyle: {borderWidth: 0.5, borderColor: '#444', areaColor: '#eee'},
        emphasis: {
          label: {show: !0, color: 'rgb(100,0,0)'},
          itemStyle: {areaColor: 'rgba(255,215,0,0.8)'},
        },
        nameProperty: 'name',
      },
    }),
    ey,
  );
  var Hy = '\0_ec_interaction_mutex';
  function Zy(t, e) {
    return !!Uy(t)[e];
  }
  function Uy(t) {
    return t[Hy] || (t[Hy] = {});
  }
  function Xy(i) {
    this.pointerChecker, (this._zr = i), (this._opt = {});
    var t = A,
      n = t(Yy, this),
      o = t(jy, this),
      a = t(qy, this),
      r = t(Ky, this),
      s = t($y, this);
    kt.call(this),
      (this.setPointerChecker = function(t) {
        this.pointerChecker = t;
      }),
      (this.enable = function(t, e) {
        this.disable(),
          (this._opt = C(k(e) || {}, {
            zoomOnMouseWheel: !0,
            moveOnMouseMove: !0,
            moveOnMouseWheel: !1,
            preventDefaultMouseMove: !0,
          })),
          null == t && (t = !0),
          (!0 !== t && 'move' !== t && 'pan' !== t) ||
            (i.on('mousedown', n), i.on('mousemove', o), i.on('mouseup', a)),
          (!0 !== t && 'scale' !== t && 'zoom' !== t) ||
            (i.on('mousewheel', r), i.on('pinch', s));
      }),
      (this.disable = function() {
        i.off('mousedown', n),
          i.off('mousemove', o),
          i.off('mouseup', a),
          i.off('mousewheel', r),
          i.off('pinch', s);
      }),
      (this.dispose = this.disable),
      (this.isDragging = function() {
        return this._dragging;
      }),
      (this.isPinching = function() {
        return this._pinching;
      });
  }
  function Yy(t) {
    if (!(qt(t) || (t.target && t.target.draggable))) {
      var e = t.offsetX,
        i = t.offsetY;
      this.pointerChecker &&
        this.pointerChecker(t, e, i) &&
        ((this._x = e), (this._y = i), (this._dragging = !0));
    }
  }
  function jy(t) {
    if (
      this._dragging &&
      tx('moveOnMouseMove', t, this._opt) &&
      'pinch' !== t.gestureEvent &&
      !Zy(this._zr, 'globalPan')
    ) {
      var e = t.offsetX,
        i = t.offsetY,
        n = this._x,
        o = this._y,
        a = e - n,
        r = i - o;
      (this._x = e),
        (this._y = i),
        this._opt.preventDefaultMouseMove && jt(t.event),
        Qy(this, 'pan', 'moveOnMouseMove', t, {
          dx: a,
          dy: r,
          oldX: n,
          oldY: o,
          newX: e,
          newY: i,
        });
    }
  }
  function qy(t) {
    qt(t) || (this._dragging = !1);
  }
  function Ky(t) {
    var e = tx('zoomOnMouseWheel', t, this._opt),
      i = tx('moveOnMouseWheel', t, this._opt),
      n = t.wheelDelta,
      o = Math.abs(n),
      a = t.offsetX,
      r = t.offsetY;
    if (0 !== n && (e || i)) {
      if (e) {
        var s = 3 < o ? 1.4 : 1 < o ? 1.2 : 1.1;
        Jy(this, 'zoom', 'zoomOnMouseWheel', t, {
          scale: 0 < n ? s : 1 / s,
          originX: a,
          originY: r,
        });
      }
      if (i) {
        var l = Math.abs(n);
        Jy(this, 'scrollMove', 'moveOnMouseWheel', t, {
          scrollDelta: (0 < n ? 1 : -1) * (3 < l ? 0.4 : 1 < l ? 0.15 : 0.05),
          originX: a,
          originY: r,
        });
      }
    }
  }
  function $y(t) {
    Zy(this._zr, 'globalPan') ||
      Jy(this, 'zoom', null, t, {
        scale: 1 < t.pinchScale ? 1.1 : 1 / 1.1,
        originX: t.pinchX,
        originY: t.pinchY,
      });
  }
  function Jy(t, e, i, n, o) {
    t.pointerChecker &&
      t.pointerChecker(n, o.originX, o.originY) &&
      (jt(n.event), Qy(t, e, i, n, o));
  }
  function Qy(t, e, i, n, o) {
    (o.isAvailableBehavior = A(tx, null, i, n)), t.trigger(e, o);
  }
  function tx(t, e, i) {
    var n = i[t];
    return !t || (n && (!B(n) || e.event[n + 'Key']));
  }
  function ex(t, e, i) {
    var n = t.target,
      o = n.position;
    (o[0] += e), (o[1] += i), n.dirty();
  }
  function ix(t, e, i, n) {
    var o = t.target,
      a = t.zoomLimit,
      r = o.position,
      s = o.scale,
      l = (t.zoom = t.zoom || 1);
    if (((l *= e), a)) {
      var u = a.min || 0,
        h = a.max || 1 / 0;
      l = Math.max(Math.min(h, l), u);
    }
    var c = l / t.zoom;
    (t.zoom = l),
      (r[0] -= (i - r[0]) * (c - 1)),
      (r[1] -= (n - r[1]) * (c - 1)),
      (s[0] *= c),
      (s[1] *= c),
      o.dirty();
  }
  Tf(
    {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},
    function() {},
  ),
    S(Xy, kt);
  var nx = {axisPointer: 1, tooltip: 1, brush: 1};
  function ox(t, e, i) {
    var n = e.getComponentByElement(t.topTarget),
      o = n && n.coordinateSystem;
    return n && n !== i && !nx[n.mainType] && o && o.model !== i;
  }
  function ax(t) {
    var e = t.getItemStyle(),
      i = t.get('areaColor');
    return null != i && (e.fill = i), e;
  }
  function rx(i, t) {
    t.eachChild(function(e) {
      E(e.__regions, function(t) {
        e.trigger(i.isSelected(t.name) ? 'emphasis' : 'normal');
      });
    });
  }
  function sx(t, e) {
    var i = new ki();
    (this.uid = Rl('ec_map_draw')),
      (this._controller = new Xy(t.getZr())),
      (this._controllerHost = {target: e ? i : null}),
      (this.group = i),
      (this._updateGroup = e),
      this._mouseDownFlag,
      this._mapName,
      this._initialized,
      i.add((this._regionsGroup = new ki())),
      i.add((this._backgroundGroup = new ki()));
  }
  sx.prototype = {
    constructor: sx,
    draw: function(_, t, e, i, n) {
      var w = 'geo' === _.mainType,
        b = _.getData && _.getData();
      w &&
        t.eachComponent({mainType: 'series', subType: 'map'}, function(t) {
          b || t.getHostGeoModel() !== _ || (b = t.getData());
        });
      var o = _.coordinateSystem;
      this._updateBackground(o);
      var S,
        M = this._regionsGroup,
        I = this.group,
        a = o.getTransformInfo(),
        T = !M.childAt(0) || n;
      if (T) (I.transform = a.roamTransform), I.decomposeTransform(), I.dirty();
      else {
        var r = new xe();
        (r.transform = a.roamTransform), r.decomposeTransform();
        var s = {scale: r.scale, position: r.position};
        (S = r.scale), pl(I, s, _);
      }
      var A = a.rawScale,
        D = a.rawPosition;
      M.removeAll();
      var C = ['itemStyle'],
        L = ['emphasis', 'itemStyle'],
        k = ['label'],
        P = ['emphasis', 'label'],
        N = et();
      E(o.regions, function(t) {
        var e = N.get(t.name) || N.set(t.name, new ki()),
          a = new vs({segmentIgnoreThreshold: 1, shape: {paths: []}});
        e.add(a);
        var i,
          n = (x = _.getRegionModel(t.name) || _).getModel(C),
          o = x.getModel(L),
          r = ax(n),
          s = ax(o),
          l = x.getModel(k),
          u = x.getModel(P);
        if (b) {
          i = b.indexOfName(t.name);
          var h = b.getItemVisual(i, 'color', !0);
          h && (r.fill = h);
        }
        function c(t) {
          return [t[0] * A[0] + D[0], t[1] * A[1] + D[1]];
        }
        E(t.geometries, function(t) {
          if ('polygon' === t.type) {
            for (var e = [], i = 0; i < t.exterior.length; ++i)
              e.push(c(t.exterior[i]));
            a.shape.paths.push(
              new is({segmentIgnoreThreshold: 1, shape: {points: e}}),
            );
            for (i = 0; i < (t.interiors ? t.interiors.length : 0); ++i) {
              for (var n = t.interiors[i], o = ((e = []), 0); o < n.length; ++o)
                e.push(c(n[o]));
              a.shape.paths.push(
                new is({segmentIgnoreThreshold: 1, shape: {points: e}}),
              );
            }
          }
        }),
          a.setStyle(r),
          (a.style.strokeNoScale = !0),
          (a.culling = !0);
        var d = l.get('show'),
          f = u.get('show'),
          p = b && isNaN(b.get(b.mapDimension('value'), i)),
          g = b && b.getItemLayout(i);
        if (w || (p && (d || f)) || (g && g.showLabel)) {
          var m,
            v = w ? t.name : i;
          (!b || 0 <= i) && (m = _);
          var y = new jr({
            position: c(t.center.slice()),
            scale: [1 / I.scale[0], 1 / I.scale[1]],
            z2: 10,
            silent: !0,
          });
          if (
            (ol(
              y.style,
              (y.hoverStyle = {}),
              l,
              u,
              {
                labelFetcher: m,
                labelDataIndex: v,
                defaultText: t.name,
                useInsideStyle: !1,
              },
              {textAlign: 'center', textVerticalAlign: 'middle'},
            ),
            !T)
          )
            pl(y, {scale: [1 / S[0], 1 / S[1]]}, _);
          e.add(y);
        }
        if (b) b.setItemGraphicEl(i, e);
        else {
          var x = _.getRegionModel(t.name);
          a.eventData = {
            componentType: 'geo',
            componentIndex: _.componentIndex,
            geoIndex: _.componentIndex,
            name: t.name,
            region: (x && x.option) || {},
          };
        }
        (e.__regions || (e.__regions = [])).push(t),
          (e.highDownSilentOnTouch = !!_.get('selectedMode')),
          tl(e, s),
          M.add(e);
      }),
        this._updateController(_, t, e),
        (function(n, o, a, r, s) {
          a.off('click'),
            a.off('mousedown'),
            o.get('selectedMode') &&
              (a.on('mousedown', function() {
                n._mouseDownFlag = !0;
              }),
              a.on('click', function(t) {
                if (n._mouseDownFlag) {
                  n._mouseDownFlag = !1;
                  for (var e = t.target; !e.__regions; ) e = e.parent;
                  if (e) {
                    var i = {
                      type:
                        ('geo' === o.mainType ? 'geo' : 'map') + 'ToggleSelect',
                      batch: O(e.__regions, function(t) {
                        return {name: t.name, from: s.uid};
                      }),
                    };
                    (i[o.mainType + 'Id'] = o.id),
                      r.dispatchAction(i),
                      rx(o, a);
                  }
                }
              }));
        })(this, _, M, e, i),
        rx(_, M);
    },
    remove: function() {
      this._regionsGroup.removeAll(),
        this._backgroundGroup.removeAll(),
        this._controller.dispose(),
        this._mapName && Gy.removeGraphic(this._mapName, this.uid),
        (this._mapName = null),
        (this._controllerHost = {});
    },
    _updateBackground: function(t) {
      var e = t.map;
      this._mapName !== e &&
        E(
          Gy.makeGraphic(e, this.uid),
          function(t) {
            this._backgroundGroup.add(t);
          },
          this,
        ),
        (this._mapName = e);
    },
    _updateController: function(n, t, o) {
      var a = n.coordinateSystem,
        e = this._controller,
        i = this._controllerHost;
      (i.zoomLimit = n.get('scaleLimit')),
        (i.zoom = a.getZoom()),
        e.enable(n.get('roam') || !1);
      var r = n.mainType;
      function s() {
        var t = {type: 'geoRoam', componentType: r};
        return (t[r + 'Id'] = n.id), t;
      }
      e.off('pan').on(
        'pan',
        function(t) {
          (this._mouseDownFlag = !1),
            ex(i, t.dx, t.dy),
            o.dispatchAction(P(s(), {dx: t.dx, dy: t.dy}));
        },
        this,
      ),
        e.off('zoom').on(
          'zoom',
          function(t) {
            if (
              ((this._mouseDownFlag = !1),
              ix(i, t.scale, t.originX, t.originY),
              o.dispatchAction(
                P(s(), {zoom: t.scale, originX: t.originX, originY: t.originY}),
              ),
              this._updateGroup)
            ) {
              var e = this.group.scale;
              this._regionsGroup.traverse(function(t) {
                'text' === t.type && t.attr('scale', [1 / e[0], 1 / e[1]]);
              });
            }
          },
          this,
        ),
        e.setPointerChecker(function(t, e, i) {
          return a.getViewRectAfterRoam().contain(e, i) && !ox(t, o, n);
        });
    },
  };
  var lx = '__seriesMapHighDown',
    ux = '__seriesMapCallKey';
  function hx(t) {
    var e = this[lx];
    e && e.recordVersion === this[ux] && cx(e, t);
  }
  function cx(t, e) {
    var i = t.circle,
      n = t.labelModel,
      o = t.hoverLabelModel,
      a = t.emphasisText,
      r = t.normalText;
    e
      ? (i.style.extendFrom(
          rl(
            {},
            o,
            {text: o.get('show') ? a : null},
            {isRectText: !0, useInsideStyle: !1},
            !0,
          ),
        ),
        (i.__mapOriginalZ2 = i.z2),
        (i.z2 += Is))
      : (rl(
          i.style,
          n,
          {
            text: n.get('show') ? r : null,
            textPosition: n.getShallow('position') || 'bottom',
          },
          {isRectText: !0, useInsideStyle: !1},
        ),
        i.dirty(!1),
        null != i.__mapOriginalZ2 &&
          ((i.z2 = i.__mapOriginalZ2), (i.__mapOriginalZ2 = null)));
  }
  function dx(t, e, i) {
    var n = t.getZoom(),
      o = t.getCenter(),
      a = e.zoom,
      r = t.dataToPoint(o);
    if (null != e.dx && null != e.dy) {
      (r[0] -= e.dx), (r[1] -= e.dy);
      o = t.pointToData(r);
      t.setCenter(o);
    }
    if (null != a) {
      if (i) {
        var s = i.min || 0,
          l = i.max || 1 / 0;
        a = Math.max(Math.min(n * a, l), s) / n;
      }
      (t.scale[0] *= a), (t.scale[1] *= a);
      var u = t.position,
        h = (e.originX - u[0]) * (a - 1),
        c = (e.originY - u[1]) * (a - 1);
      (u[0] -= h), (u[1] -= c), t.updateTransform();
      o = t.pointToData(r);
      t.setCenter(o), t.setZoom(a * n);
    }
    return {center: t.getCenter(), zoom: t.getZoom()};
  }
  Ef({
    type: 'map',
    render: function(t, e, i, n) {
      if (!n || 'mapToggleSelect' !== n.type || n.from !== this.uid) {
        var o = this.group;
        if ((o.removeAll(), !t.getHostGeoModel())) {
          if (
            n &&
            'geoRoam' === n.type &&
            'series' === n.componentType &&
            n.seriesId === t.id
          )
            (a = this._mapDraw) && o.add(a.group);
          else if (t.needsDrawMap) {
            var a = this._mapDraw || new sx(i, !0);
            o.add(a.group), a.draw(t, e, i, this, n), (this._mapDraw = a);
          } else
            this._mapDraw && this._mapDraw.remove(), (this._mapDraw = null);
          t.get('showLegendSymbol') &&
            e.getComponent('legend') &&
            this._renderSymbols(t, e, i);
        }
      }
    },
    remove: function() {
      this._mapDraw && this._mapDraw.remove(),
        (this._mapDraw = null),
        this.group.removeAll();
    },
    dispose: function() {
      this._mapDraw && this._mapDraw.remove(), (this._mapDraw = null);
    },
    _renderSymbols: function(x, t, e) {
      var _ = x.originalData,
        w = this.group;
      _.each(_.mapDimension('value'), function(t, e) {
        if (!isNaN(t)) {
          var i = _.getItemLayout(e);
          if (i && i.point) {
            var n = i.point,
              o = i.offset,
              a = new Kr({
                style: {fill: x.getData().getVisual('color')},
                shape: {cx: n[0] + 9 * o, cy: n[1], r: 3},
                silent: !0,
                z2: 8 + (o ? 0 : Is + 1),
              });
            if (!o) {
              var r = x.mainSeries.getData(),
                s = _.getName(e),
                l = r.indexOfName(s),
                u = _.getItemModel(e),
                h = u.getModel('label'),
                c = u.getModel('emphasis.label'),
                d = r.getItemGraphicEl(l),
                f = U(x.getFormattedLabel(l, 'normal'), s),
                p = U(x.getFormattedLabel(l, 'emphasis'), f),
                g = d[lx],
                m = Math.random();
              if (!g) {
                g = d[lx] = {};
                var v = L(hx, !0),
                  y = L(hx, !1);
                d.on('mouseover', v)
                  .on('mouseout', y)
                  .on('emphasis', v)
                  .on('normal', y);
              }
              P(g, {
                recordVersion: (d[ux] = m),
                circle: a,
                labelModel: h,
                hoverLabelModel: c,
                emphasisText: p,
                normalText: f,
              }),
                cx(g, !1);
            }
            w.add(a);
          }
        }
      });
    },
  }),
    Tf({type: 'geoRoam', event: 'geoRoam', update: 'updateTransform'}, function(
      n,
      t,
    ) {
      var o = n.componentType || 'series';
      t.eachComponent({mainType: o, query: n}, function(t) {
        var e = t.coordinateSystem;
        if ('geo' === e.type) {
          var i = dx(e, n, t.get('scaleLimit'));
          t.setCenter && t.setCenter(i.center),
            t.setZoom && t.setZoom(i.zoom),
            'series' === o &&
              E(t.seriesGroup, function(t) {
                t.setCenter(i.center), t.setZoom(i.zoom);
              });
        }
      });
    });
  var fx = Mt;
  function px() {
    xe.call(this);
  }
  function gx(t) {
    (this.name = t),
      this.zoomLimit,
      xe.call(this),
      (this._roamTransformable = new px()),
      (this._rawTransformable = new px()),
      this._center,
      this._zoom;
  }
  function mx(t, e, i, n) {
    var o = i.seriesModel,
      a = o ? o.coordinateSystem : null;
    return a === this ? a[t](n) : null;
  }
  function vx(t, e, i, n) {
    gx.call(this, t), (this.map = e);
    var o = Gy.load(e, i);
    (this._nameCoordMap = o.nameCoordMap),
      (this._regionsMap = o.regionsMap),
      (this._invertLongitute = null == n || n),
      (this.regions = o.regions),
      (this._rect = o.boundingRect);
  }
  function yx(t, e, i, n) {
    var o = i.geoModel,
      a = i.seriesModel,
      r = o
        ? o.coordinateSystem
        : a
        ? a.coordinateSystem ||
          (a.getReferringComponents('geo')[0] || {}).coordinateSystem
        : null;
    return r === this ? r[t](n) : null;
  }
  function xx(t, e) {
    var i = t.get('boundingCoords');
    if (null != i) {
      var n = i[0],
        o = i[1];
      isNaN(n[0]) || isNaN(n[1]) || isNaN(o[0]) || isNaN(o[1])
        ? D && console.error('Invalid boundingCoords')
        : this.setBoundingRect(n[0], n[1], o[0] - n[0], o[1] - n[1]);
    }
    var a,
      r = this.getBoundingRect(),
      s = t.get('layoutCenter'),
      l = t.get('layoutSize'),
      u = e.getWidth(),
      h = e.getHeight(),
      c = (r.width / r.height) * this.aspectScale,
      d = !1;
    if (
      (s &&
        l &&
        ((s = [Vl(s[0], u), Vl(s[1], h)]),
        (l = Vl(l, Math.min(u, h))),
        isNaN(s[0]) || isNaN(s[1]) || isNaN(l)
          ? D &&
            console.warn(
              'Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.',
            )
          : (d = !0)),
      d)
    ) {
      var f = {};
      1 < c
        ? ((f.width = l), (f.height = l / c))
        : ((f.height = l), (f.width = l * c)),
        (f.y = s[1] - f.height / 2),
        (f.x = s[0] - f.width / 2);
    } else ((a = t.getBoxLayoutParams()).aspect = c), (f = Iu(a, {width: u, height: h}));
    this.setViewRect(f.x, f.y, f.width, f.height),
      this.setCenter(t.get('center')),
      this.setZoom(t.get('zoom'));
  }
  function _x(i, t) {
    E(t.get('geoCoord'), function(t, e) {
      i.addGeoCoord(e, t);
    });
  }
  S(px, xe),
    (gx.prototype = {
      constructor: gx,
      type: 'view',
      dimensions: ['x', 'y'],
      setBoundingRect: function(t, e, i, n) {
        return (this._rect = new Li(t, e, i, n)), this._rect;
      },
      getBoundingRect: function() {
        return this._rect;
      },
      setViewRect: function(t, e, i, n) {
        this.transformTo(t, e, i, n), (this._viewRect = new Li(t, e, i, n));
      },
      transformTo: function(t, e, i, n) {
        var o = this.getBoundingRect(),
          a = this._rawTransformable;
        (a.transform = o.calculateTransform(new Li(t, e, i, n))),
          a.decomposeTransform(),
          this._updateTransform();
      },
      setCenter: function(t) {
        t && ((this._center = t), this._updateCenterAndZoom());
      },
      setZoom: function(t) {
        t = t || 1;
        var e = this.zoomLimit;
        e &&
          (null != e.max && (t = Math.min(e.max, t)),
          null != e.min && (t = Math.max(e.min, t))),
          (this._zoom = t),
          this._updateCenterAndZoom();
      },
      getDefaultCenter: function() {
        var t = this.getBoundingRect();
        return [t.x + t.width / 2, t.y + t.height / 2];
      },
      getCenter: function() {
        return this._center || this.getDefaultCenter();
      },
      getZoom: function() {
        return this._zoom || 1;
      },
      getRoamTransform: function() {
        return this._roamTransformable.getLocalTransform();
      },
      _updateCenterAndZoom: function() {
        var t = this._rawTransformable.getLocalTransform(),
          e = this._roamTransformable,
          i = this.getDefaultCenter(),
          n = this.getCenter(),
          o = this.getZoom();
        (n = Mt([], n, t)),
          (i = Mt([], i, t)),
          (e.origin = n),
          (e.position = [i[0] - n[0], i[1] - n[1]]),
          (e.scale = [o, o]),
          this._updateTransform();
      },
      _updateTransform: function() {
        var t = this._roamTransformable,
          e = this._rawTransformable;
        (e.parent = t).updateTransform(),
          e.updateTransform(),
          ue(this.transform || (this.transform = []), e.transform || se()),
          (this._rawTransform = e.getLocalTransform()),
          (this.invTransform = this.invTransform || []),
          pe(this.invTransform, this.transform),
          this.decomposeTransform();
      },
      getTransformInfo: function() {
        var t = this._roamTransformable.transform,
          e = this._rawTransformable;
        return {
          roamTransform: t ? Y(t) : se(),
          rawScale: Y(e.scale),
          rawPosition: Y(e.position),
        };
      },
      getViewRect: function() {
        return this._viewRect;
      },
      getViewRectAfterRoam: function() {
        var t = this.getBoundingRect().clone();
        return t.applyTransform(this.transform), t;
      },
      dataToPoint: function(t, e, i) {
        var n = e ? this._rawTransform : this.transform;
        return (i = i || []), n ? fx(i, t, n) : st(i, t);
      },
      pointToData: function(t) {
        var e = this.invTransform;
        return e ? fx([], t, e) : [t[0], t[1]];
      },
      convertToPixel: L(mx, 'dataToPoint'),
      convertFromPixel: L(mx, 'pointToData'),
      containPoint: function(t) {
        return this.getViewRectAfterRoam().contain(t[0], t[1]);
      },
    }),
    S(gx, xe),
    (vx.prototype = {
      constructor: vx,
      type: 'geo',
      dimensions: ['lng', 'lat'],
      containCoord: function(t) {
        for (var e = this.regions, i = 0; i < e.length; i++)
          if (e[i].contain(t)) return !0;
        return !1;
      },
      transformTo: function(t, e, i, n) {
        var o = this.getBoundingRect(),
          a = this._invertLongitute;
        (o = o.clone()), a && (o.y = -o.y - o.height);
        var r = this._rawTransformable;
        if (
          ((r.transform = o.calculateTransform(new Li(t, e, i, n))),
          r.decomposeTransform(),
          a)
        ) {
          var s = r.scale;
          s[1] = -s[1];
        }
        r.updateTransform(), this._updateTransform();
      },
      getRegion: function(t) {
        return this._regionsMap.get(t);
      },
      getRegionByCoord: function(t) {
        for (var e = this.regions, i = 0; i < e.length; i++)
          if (e[i].contain(t)) return e[i];
      },
      addGeoCoord: function(t, e) {
        this._nameCoordMap.set(t, e);
      },
      getGeoCoord: function(t) {
        return this._nameCoordMap.get(t);
      },
      getBoundingRect: function() {
        return this._rect;
      },
      dataToPoint: function(t, e, i) {
        if (('string' == typeof t && (t = this.getGeoCoord(t)), t))
          return gx.prototype.dataToPoint.call(this, t, e, i);
      },
      convertToPixel: L(yx, 'dataToPoint'),
      convertFromPixel: L(yx, 'pointToData'),
    }),
    S(vx, gx);
  var bx = {
    dimensions: vx.prototype.dimensions,
    create: function(t, s) {
      var l = [];
      t.eachComponent('geo', function(t, e) {
        var i = t.get('map'),
          n = t.get('aspectScale'),
          o = !0,
          a = Ad.retrieveMap(i);
        a && a[0] && 'svg' === a[0].type
          ? (null == n && (n = 1), (o = !1))
          : null == n && (n = 0.75);
        var r = new vx(i + e, i, t.get('nameMap'), o);
        (r.aspectScale = n),
          (r.zoomLimit = t.get('scaleLimit')),
          l.push(r),
          _x(r, t),
          ((t.coordinateSystem = r).model = t),
          (r.resize = xx),
          r.resize(t, s);
      }),
        t.eachSeries(function(t) {
          if ('geo' === t.get('coordinateSystem')) {
            var e = t.get('geoIndex') || 0;
            t.coordinateSystem = l[e];
          }
        });
      var i = {};
      return (
        t.eachSeriesByType('map', function(t) {
          if (!t.getHostGeoModel()) {
            var e = t.getMapType();
            (i[e] = i[e] || []), i[e].push(t);
          }
        }),
        E(i, function(t, e) {
          var i = new vx(
            e,
            e,
            g(
              O(t, function(t) {
                return t.get('nameMap');
              }),
            ),
          );
          (i.zoomLimit = Z.apply(
            null,
            O(t, function(t) {
              return t.get('scaleLimit');
            }),
          )),
            l.push(i),
            (i.resize = xx),
            (i.aspectScale = t[0].get('aspectScale')),
            i.resize(t[0], s),
            E(t, function(t) {
              _x((t.coordinateSystem = i), t);
            });
        }),
        l
      );
    },
    getFilledRegions: function(t, e, i) {
      for (var n = (t || []).slice(), o = et(), a = 0; a < n.length; a++)
        o.set(n[a].name, n[a]);
      return (
        E(Gy.load(e, i).regions, function(t) {
          var e = t.name;
          o.get(e) || n.push({name: e});
        }),
        n
      );
    },
  };
  Af('geo', bx);
  Df(function(i) {
    var o = {};
    i.eachSeriesByType('map', function(t) {
      var e = t.getMapType();
      if (!t.getHostGeoModel() && !o[e]) {
        var l = {};
        E(t.seriesGroup, function(t) {
          var r = t.coordinateSystem,
            s = t.originalData;
          t.get('showLegendSymbol') &&
            i.getComponent('legend') &&
            s.each(s.mapDimension('value'), function(t, e) {
              var i = s.getName(e),
                n = r.getRegion(i);
              if (n && !isNaN(t)) {
                var o = l[i] || 0,
                  a = r.dataToPoint(n.center);
                (l[i] = o + 1), s.setItemLayout(e, {point: a, offset: o});
              }
            });
        });
        var n = t.getData();
        n.each(function(t) {
          var e = n.getName(t),
            i = n.getItemLayout(t) || {};
          (i.showLabel = !l[e]), n.setItemLayout(t, i);
        }),
          (o[e] = !0);
      }
    });
  }),
    Cf(function(t) {
      t.eachSeriesByType('map', function(t) {
        var e = t.get('color'),
          i = t.getModel('itemStyle'),
          n = i.get('areaColor'),
          o = i.get('color') || e[t.seriesIndex % e.length];
        t.getData().setVisual({areaColor: n, color: o});
      });
    }),
    If(Ed.PROCESSOR.STATISTIC, function(t) {
      var n = {};
      t.eachSeriesByType('map', function(t) {
        var e = t.getHostGeoModel(),
          i = e ? 'o' + e.id : 'i' + t.getMapType();
        (n[i] = n[i] || []).push(t);
      }),
        E(n, function(t, e) {
          for (
            var i = (function(u, h) {
                var c = {};
                return (
                  E(u, function(n) {
                    n.each(n.mapDimension('value'), function(t, e) {
                      var i = 'ec-' + n.getName(e);
                      (c[i] = c[i] || []), isNaN(t) || c[i].push(t);
                    });
                  }),
                  u[0].map(u[0].mapDimension('value'), function(t, e) {
                    for (
                      var i,
                        n = 'ec-' + u[0].getName(e),
                        o = 0,
                        a = 1 / 0,
                        r = -1 / 0,
                        s = c[n].length,
                        l = 0;
                      l < s;
                      l++
                    )
                      (a = Math.min(a, c[n][l])),
                        (r = Math.max(r, c[n][l])),
                        (o += c[n][l]);
                    return (
                      (i =
                        'min' === h
                          ? a
                          : 'max' === h
                          ? r
                          : 'average' === h
                          ? o / s
                          : o),
                      0 === s ? NaN : i
                    );
                  })
                );
              })(
                O(t, function(t) {
                  return t.getData();
                }),
                t[0].get('mapValueCalculation'),
              ),
              n = 0;
            n < t.length;
            n++
          )
            t[n].originalData = t[n].getData();
          for (n = 0; n < t.length; n++)
            ((t[n].seriesGroup = t)[n].needsDrawMap =
              0 === n && !t[n].getHostGeoModel()),
              t[n].setData(i.cloneShallow()),
              (t[n].mainSeries = t[0]);
        });
    }),
    Mf(function(t) {
      var e = [];
      E(t.series, function(t) {
        t &&
          'map' === t.type &&
          (e.push(t), (t.map = t.map || t.mapType), C(t, t.mapLocation));
      });
    }),
    ly('map', [
      {
        type: 'mapToggleSelect',
        event: 'mapselectchanged',
        method: 'toggleSelected',
      },
      {type: 'mapSelect', event: 'mapselected', method: 'select'},
      {type: 'mapUnSelect', event: 'mapunselected', method: 'unSelect'},
    ]);
  var Sx = E,
    Mx = '\0__link_datas',
    Ix = '\0__link_mainData';
  function Tx(i) {
    var n = i.mainData,
      t = i.datas;
    t || ((t = {main: n}), (i.datasAttr = {main: 'data'})),
      (i.datas = i.mainData = null),
      kx(n, t, i),
      Sx(t, function(e) {
        Sx(n.TRANSFERABLE_METHODS, function(t) {
          e.wrapMethod(t, L(Ax, i));
        });
      }),
      n.wrapMethod('cloneShallow', L(Cx, i)),
      Sx(n.CHANGABLE_METHODS, function(t) {
        n.wrapMethod(t, L(Dx, i));
      }),
      q(t[n.dataType] === n);
  }
  function Ax(t, e) {
    if (
      (function(t) {
        return t[Ix] === t;
      })(this)
    ) {
      var i = P({}, this[Mx]);
      kx((i[this.dataType] = e), i, t);
    } else Px(e, this.dataType, this[Ix], t);
    return e;
  }
  function Dx(t, e) {
    return t.struct && t.struct.update(this), e;
  }
  function Cx(i, n) {
    return (
      Sx(n[Mx], function(t, e) {
        t !== n && Px(t.cloneShallow(), e, n, i);
      }),
      n
    );
  }
  function Lx(t) {
    var e = this[Ix];
    return null == t || null == e ? e : e[Mx][t];
  }
  function kx(i, t, n) {
    (i[Mx] = {}),
      Sx(t, function(t, e) {
        Px(t, e, i, n);
      });
  }
  function Px(t, e, i, n) {
    ((i[Mx][e] = t)[Ix] = i),
      (t.dataType = e),
      n.struct &&
        ((t[n.structAttr] = n.struct), (n.struct[n.datasAttr[e]] = t)),
      (t.getLinkedData = Lx);
  }
  function Nx(t, e) {
    (this.name = t || ''),
      (this.depth = 0),
      (this.height = 0),
      (this.parentNode = null),
      (this.dataIndex = -1),
      (this.children = []),
      (this.viewChildren = []),
      (this.hostTree = e);
  }
  function Ox(e, t) {
    this.root,
      this.data,
      (this._nodes = []),
      (this.hostModel = e),
      (this.levelModels = O(t || [], function(t) {
        return new Pl(t, e, e.ecModel);
      }));
  }
  function Ex(t, e) {
    var i = e.children;
    t.parentNode !== e && (i.push(t), (t.parentNode = e));
  }
  function Rx(t, e) {
    var i = t.isExpand ? t.children : [],
      n = t.parentNode.children,
      o = t.hierNode.i ? n[t.hierNode.i - 1] : null;
    if (i.length) {
      !(function(t) {
        var e = t.children,
          i = e.length,
          n = 0,
          o = 0;
        for (; 0 <= --i; ) {
          var a = e[i];
          (a.hierNode.prelim += n),
            (a.hierNode.modifier += n),
            (o += a.hierNode.change),
            (n += a.hierNode.shift + o);
        }
      })(t);
      var a = (i[0].hierNode.prelim + i[i.length - 1].hierNode.prelim) / 2;
      o
        ? ((t.hierNode.prelim = o.hierNode.prelim + e(t, o)),
          (t.hierNode.modifier = t.hierNode.prelim - a))
        : (t.hierNode.prelim = a);
    } else o && (t.hierNode.prelim = o.hierNode.prelim + e(t, o));
    t.parentNode.hierNode.defaultAncestor = (function(t, e, i, n) {
      if (e) {
        for (
          var o = t,
            a = t,
            r = a.parentNode.children[0],
            s = e,
            l = o.hierNode.modifier,
            u = a.hierNode.modifier,
            h = r.hierNode.modifier,
            c = s.hierNode.modifier;
          (s = Gx(s)), (a = Fx(a)), s && a;

        ) {
          (o = Gx(o)), (r = Fx(r)), (o.hierNode.ancestor = t);
          var d = s.hierNode.prelim + c - a.hierNode.prelim - u + n(s, a);
          0 < d &&
            (Wx(
              ((p = t),
              (g = i),
              (f = s).hierNode.ancestor.parentNode === p.parentNode
                ? f.hierNode.ancestor
                : g),
              t,
              d,
            ),
            (u += d),
            (l += d)),
            (c += s.hierNode.modifier),
            (u += a.hierNode.modifier),
            (l += o.hierNode.modifier),
            (h += r.hierNode.modifier);
        }
        s &&
          !Gx(o) &&
          ((o.hierNode.thread = s), (o.hierNode.modifier += c - l)),
          a &&
            !Fx(r) &&
            ((r.hierNode.thread = a), (r.hierNode.modifier += u - h), (i = t));
      }
      var f, p, g;
      return i;
    })(t, o, t.parentNode.hierNode.defaultAncestor || n[0], e);
  }
  function zx(t) {
    var e = t.hierNode.prelim + t.parentNode.hierNode.modifier;
    t.setLayout({x: e}, !0),
      (t.hierNode.modifier += t.parentNode.hierNode.modifier);
  }
  function Bx(t) {
    return arguments.length ? t : Hx;
  }
  function Vx(t, e) {
    var i = {};
    return (
      (t -= Math.PI / 2), (i.x = e * Math.cos(t)), (i.y = e * Math.sin(t)), i
    );
  }
  function Gx(t) {
    var e = t.children;
    return e.length && t.isExpand ? e[e.length - 1] : t.hierNode.thread;
  }
  function Fx(t) {
    var e = t.children;
    return e.length && t.isExpand ? e[0] : t.hierNode.thread;
  }
  function Wx(t, e, i) {
    var n = i / (e.hierNode.i - t.hierNode.i);
    (e.hierNode.change -= n),
      (e.hierNode.shift += i),
      (e.hierNode.modifier += i),
      (e.hierNode.prelim += i),
      (t.hierNode.change += n);
  }
  function Hx(t, e) {
    return t.parentNode === e.parentNode ? 1 : 2;
  }
  (Nx.prototype = {
    constructor: Nx,
    isRemoved: function() {
      return this.dataIndex < 0;
    },
    eachNode: function(t, e, i) {
      'function' == typeof t && ((i = e), (e = t), (t = null)),
        B((t = t || {})) && (t = {order: t});
      var n,
        o = t.order || 'preorder',
        a = this[t.attr || 'children'];
      'preorder' === o && (n = e.call(i, this));
      for (var r = 0; !n && r < a.length; r++) a[r].eachNode(t, e, i);
      'postorder' === o && e.call(i, this);
    },
    updateDepthAndHeight: function(t) {
      var e = 0;
      this.depth = t;
      for (var i = 0; i < this.children.length; i++) {
        var n = this.children[i];
        n.updateDepthAndHeight(t + 1), n.height > e && (e = n.height);
      }
      this.height = e + 1;
    },
    getNodeById: function(t) {
      if (this.getId() === t) return this;
      for (var e = 0, i = this.children, n = i.length; e < n; e++) {
        var o = i[e].getNodeById(t);
        if (o) return o;
      }
    },
    contains: function(t) {
      if (t === this) return !0;
      for (var e = 0, i = this.children, n = i.length; e < n; e++) {
        var o = i[e].contains(t);
        if (o) return o;
      }
    },
    getAncestors: function(t) {
      for (var e = [], i = t ? this : this.parentNode; i; )
        e.push(i), (i = i.parentNode);
      return e.reverse(), e;
    },
    getValue: function(t) {
      var e = this.hostTree.data;
      return e.get(e.getDimension(t || 'value'), this.dataIndex);
    },
    setLayout: function(t, e) {
      0 <= this.dataIndex &&
        this.hostTree.data.setItemLayout(this.dataIndex, t, e);
    },
    getLayout: function() {
      return this.hostTree.data.getItemLayout(this.dataIndex);
    },
    getModel: function(t) {
      if (!(this.dataIndex < 0)) {
        var e = this.hostTree.data.getItemModel(this.dataIndex),
          i = this.getLevelModel();
        return i ? e.getModel(t, i.getModel(t)) : e.getModel(t);
      }
    },
    getLevelModel: function() {
      return (this.hostTree.levelModels || [])[this.depth];
    },
    setVisual: function(t, e) {
      0 <= this.dataIndex &&
        this.hostTree.data.setItemVisual(this.dataIndex, t, e);
    },
    getVisual: function(t, e) {
      return this.hostTree.data.getItemVisual(this.dataIndex, t, e);
    },
    getRawIndex: function() {
      return this.hostTree.data.getRawIndex(this.dataIndex);
    },
    getId: function() {
      return this.hostTree.data.getId(this.dataIndex);
    },
    isAncestorOf: function(t) {
      for (var e = t.parentNode; e; ) {
        if (e === this) return !0;
        e = e.parentNode;
      }
      return !1;
    },
    isDescendantOf: function(t) {
      return t !== this && t.isAncestorOf(this);
    },
  }),
    (Ox.prototype = {
      constructor: Ox,
      type: 'tree',
      eachNode: function(t, e, i) {
        this.root.eachNode(t, e, i);
      },
      getNodeByDataIndex: function(t) {
        var e = this.data.getRawIndex(t);
        return this._nodes[e];
      },
      getNodeByName: function(t) {
        return this.root.getNodeByName(t);
      },
      update: function() {
        for (
          var t = this.data, e = this._nodes, i = 0, n = e.length;
          i < n;
          i++
        )
          e[i].dataIndex = -1;
        for (i = 0, n = t.count(); i < n; i++)
          e[t.getRawIndex(i)].dataIndex = i;
      },
      clearLayouts: function() {
        this.data.clearItemLayouts();
      },
    }),
    (Ox.createTree = function(t, e, i, n) {
      var s = new Ox(e, i && i.levels),
        l = [],
        u = 1;
      !(function t(e, i) {
        var n = e.value;
        u = Math.max(u, R(n) ? n.length : 1);
        l.push(e);
        var o = new Nx(e.name, s);
        i ? Ex(o, i) : (s.root = o);
        s._nodes.push(o);
        var a = e.children;
        if (a) for (var r = 0; r < a.length; r++) t(a[r], o);
      })(t),
        s.root.updateDepthAndHeight(0);
      var o = gp(l, {coordDimensions: ['value'], dimensionsCount: u}),
        a = new Qf(o, e);
      return (
        a.initData(l),
        n && n(a),
        Tx({mainData: a, struct: s, structAttr: 'tree'}),
        s.update(),
        s
      );
    }),
    cc.extend({
      type: 'series.tree',
      layoutInfo: null,
      layoutMode: 'box',
      getInitialData: function(t) {
        var e = {name: t.name, children: t.data},
          n = new Pl(t.leaves || {}, this, this.ecModel),
          o = Ox.createTree(e, this, {}, function(t) {
            t.wrapMethod('getItemModel', function(t, e) {
              var i = o.getNodeByDataIndex(e);
              return (
                (i.children.length && i.isExpand) || (t.parentModel = n), t
              );
            });
          });
        var i = 0;
        o.eachNode('preorder', function(t) {
          t.depth > i && (i = t.depth);
        });
        var a =
          t.expandAndCollapse && 0 <= t.initialTreeDepth
            ? t.initialTreeDepth
            : i;
        return (
          o.root.eachNode('preorder', function(t) {
            var e = t.hostTree.data.getRawDataItem(t.dataIndex);
            t.isExpand = e && null != e.collapsed ? !e.collapsed : t.depth <= a;
          }),
          o.data
        );
      },
      getOrient: function() {
        var t = this.get('orient');
        return (
          'horizontal' === t ? (t = 'LR') : 'vertical' === t && (t = 'TB'), t
        );
      },
      setZoom: function(t) {
        this.option.zoom = t;
      },
      setCenter: function(t) {
        this.option.center = t;
      },
      formatTooltip: function(t) {
        for (
          var e = this.getData().tree,
            i = e.root.children[0],
            n = e.getNodeByDataIndex(t),
            o = n.getValue(),
            a = n.name;
          n && n !== i;

        )
          (a = n.parentNode.name + '.' + a), (n = n.parentNode);
        return lu(a + (isNaN(o) || null == o ? '' : ' : ' + o));
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'view',
        left: '12%',
        top: '12%',
        right: '12%',
        bottom: '12%',
        layout: 'orthogonal',
        edgeShape: 'curve',
        edgeForkPosition: '50%',
        roam: !1,
        nodeScaleRatio: 0.4,
        center: null,
        zoom: 1,
        orient: 'LR',
        symbol: 'emptyCircle',
        symbolSize: 7,
        expandAndCollapse: !0,
        initialTreeDepth: 2,
        lineStyle: {color: '#ccc', width: 1.5, curveness: 0.5},
        itemStyle: {
          color: 'lightsteelblue',
          borderColor: '#c23531',
          borderWidth: 1.5,
        },
        label: {show: !0, color: '#555'},
        leaves: {label: {show: !0}},
        animationEasing: 'linear',
        animationDuration: 700,
        animationDurationUpdate: 1e3,
      },
    });
  var Zx = Ps({
    shape: {parentPoint: [], childPoints: [], orient: '', forkPosition: ''},
    style: {stroke: '#000', fill: null},
    buildPath: function(t, e) {
      var i = e.childPoints,
        n = i.length,
        o = e.parentPoint,
        a = i[0],
        r = i[n - 1];
      if (1 === n) return t.moveTo(o[0], o[1]), void t.lineTo(a[0], a[1]);
      var s = e.orient,
        l = 'TB' === s || 'BT' === s ? 0 : 1,
        u = 1 - l,
        h = Vl(e.forkPosition, 1),
        c = [];
      (c[l] = o[l]),
        (c[u] = o[u] + (r[u] - o[u]) * h),
        t.moveTo(o[0], o[1]),
        t.lineTo(c[0], c[1]),
        t.moveTo(a[0], a[1]),
        (c[l] = a[l]),
        t.lineTo(c[0], c[1]),
        (c[l] = r[l]),
        t.lineTo(c[0], c[1]),
        t.lineTo(r[0], r[1]);
      for (var d = 1; d < n - 1; d++) {
        var f = i[d];
        t.moveTo(f[0], f[1]), (c[l] = f[l]), t.lineTo(c[0], c[1]);
      }
    },
  });
  function Ux(t, e) {
    var i = t.getItemLayout(e);
    return (
      i && !isNaN(i.x) && !isNaN(i.y) && 'none' !== t.getItemVisual(e, 'symbol')
    );
  }
  function Xx(t, e, i) {
    return (
      (i.itemModel = e),
      (i.itemStyle = e.getModel('itemStyle').getItemStyle()),
      (i.hoverItemStyle = e.getModel('emphasis.itemStyle').getItemStyle()),
      (i.lineStyle = e.getModel('lineStyle').getLineStyle()),
      (i.labelModel = e.getModel('label')),
      (i.hoverLabelModel = e.getModel('emphasis.label')),
      !1 === t.isExpand && 0 !== t.children.length
        ? (i.symbolInnerColor = i.itemStyle.fill)
        : (i.symbolInnerColor = '#fff'),
      i
    );
  }
  function Yx(t, e, i, n, o, a) {
    var r = !i,
      s = t.tree.getNodeByDataIndex(e),
      l = s.getModel(),
      u = ((a = Xx(s, l, a)), t.tree.root),
      h = s.parentNode === u ? s : s.parentNode || s,
      c = t.getItemGraphicEl(h.dataIndex),
      d = h.getLayout(),
      f = c
        ? {
            x: c.position[0],
            y: c.position[1],
            rawX: c.__radialOldRawX,
            rawY: c.__radialOldRawY,
          }
        : d,
      p = s.getLayout();
    r
      ? (i = new Qg(t, e, a)).attr('position', [f.x, f.y])
      : i.updateData(t, e, a),
      (i.__radialOldRawX = i.__radialRawX),
      (i.__radialOldRawY = i.__radialRawY),
      (i.__radialRawX = p.rawX),
      (i.__radialRawY = p.rawY),
      n.add(i),
      t.setItemGraphicEl(e, i),
      pl(i, {position: [p.x, p.y]}, o);
    var g = i.getSymbolPath();
    if ('radial' === a.layout) {
      var m,
        v,
        y = u.children[0],
        x = y.getLayout(),
        _ = y.children.length;
      if (p.x === x.x && !0 === s.isExpand) {
        var w = {};
        (w.x =
          (y.children[0].getLayout().x + y.children[_ - 1].getLayout().x) / 2),
          (w.y =
            (y.children[0].getLayout().y + y.children[_ - 1].getLayout().y) /
            2),
          (m = Math.atan2(w.y - x.y, w.x - x.x)) < 0 && (m = 2 * Math.PI + m),
          (v = w.x < x.x) && (m -= Math.PI);
      } else
        (m = Math.atan2(p.y - x.y, p.x - x.x)) < 0 && (m = 2 * Math.PI + m),
          0 === s.children.length ||
          (0 !== s.children.length && !1 === s.isExpand)
            ? (v = p.x < x.x) && (m -= Math.PI)
            : (v = p.x > x.x) || (m -= Math.PI);
      var b = v ? 'left' : 'right',
        S = a.labelModel.get('rotate'),
        M = S * (Math.PI / 180);
      g.setStyle({
        textPosition: a.labelModel.get('position') || b,
        textRotation: null == S ? -m : M,
        textOrigin: 'center',
        verticalAlign: 'middle',
      });
    }
    !(function(t, e, i, n, o, a, r, s, l) {
      var u = l.edgeShape,
        h = n.__edge;
      if ('curve' === u)
        e.parentNode &&
          e.parentNode !== i &&
          pl(
            (h =
              h ||
              (n.__edge = new gs({
                shape: qx(l, o, o),
                style: C({opacity: 0, strokeNoScale: !0}, l.lineStyle),
              }))),
            {shape: qx(l, a, r), style: {opacity: 1}},
            t,
          );
      else if ('polyline' === u)
        if ('orthogonal' === l.layout) {
          if (
            e !== i &&
            e.children &&
            0 !== e.children.length &&
            !0 === e.isExpand
          ) {
            for (var c = e.children, d = [], f = 0; f < c.length; f++) {
              var p = c[f].getLayout();
              d.push([p.x, p.y]);
            }
            pl(
              (h =
                h ||
                (n.__edge = new Zx({
                  shape: {
                    parentPoint: [r.x, r.y],
                    childPoints: [[r.x, r.y]],
                    orient: l.orient,
                    forkPosition: l.edgeForkPosition,
                  },
                  style: C({opacity: 0, strokeNoScale: !0}, l.lineStyle),
                }))),
              {
                shape: {parentPoint: [r.x, r.y], childPoints: d},
                style: {opacity: 1},
              },
              t,
            );
          }
        } else if (D)
          throw new Error(
            'The polyline edgeShape can only be used in orthogonal layout',
          );
      s.add(h);
    })(o, s, u, i, f, d, p, n, a);
  }
  function jx(t, e, i, n, o, a) {
    for (
      var r,
        s = t.tree.getNodeByDataIndex(e),
        l = t.tree.root,
        u = s.getModel(),
        h = ((a = Xx(s, u, a)), s.parentNode === l ? s : s.parentNode || s),
        c = a.edgeShape;
      null == (r = h.getLayout());

    )
      h = h.parentNode === l ? h : h.parentNode || h;
    pl(i, {position: [r.x + 1, r.y + 1]}, o, function() {
      n.remove(i), t.setItemGraphicEl(e, null);
    }),
      i.fadeOut(null, {keepLabel: !0});
    var d = t.getItemGraphicEl(h.dataIndex).__edge,
      f =
        i.__edge || (!1 === h.isExpand || 1 === h.children.length ? d : void 0);
    c = a.edgeShape;
    f &&
      ('curve' === c
        ? pl(f, {shape: qx(a, r, r), style: {opacity: 0}}, o, function() {
            n.remove(f);
          })
        : 'polyline' === c &&
          'orthogonal' === a.layout &&
          pl(
            f,
            {
              shape: {parentPoint: [r.x, r.y], childPoints: [[r.x, r.y]]},
              style: {opacity: 0},
            },
            o,
            function() {
              n.remove(f);
            },
          ));
  }
  function qx(t, e, i) {
    var n,
      o,
      a,
      r,
      s,
      l,
      u,
      h,
      c = t.orient;
    if ('radial' !== t.layout)
      return (
        (s = e.x),
        (u = e.y),
        (l = i.x),
        (h = i.y),
        ('LR' !== c && 'RL' !== c) ||
          ((n = s + (l - s) * t.curvature),
          (o = u),
          (a = l + (s - l) * t.curvature),
          (r = h)),
        ('TB' !== c && 'BT' !== c) ||
          ((n = s),
          (o = u + (h - u) * t.curvature),
          (a = l),
          (r = h + (u - h) * t.curvature)),
        {x1: s, y1: u, x2: l, y2: h, cpx1: n, cpy1: o, cpx2: a, cpy2: r}
      );
    (s = e.rawX), (u = e.rawY), (l = i.rawX), (h = i.rawY);
    var d = Vx(s, u),
      f = Vx(s, u + (h - u) * t.curvature),
      p = Vx(l, h + (u - h) * t.curvature),
      g = Vx(l, h);
    return {
      x1: d.x,
      y1: d.y,
      x2: g.x,
      y2: g.y,
      cpx1: f.x,
      cpy1: f.y,
      cpx2: p.x,
      cpy2: p.y,
    };
  }
  function Kx(t, e) {
    for (var i, n = [t]; (i = n.pop()); )
      if ((e(i), i.isExpand)) {
        var o = i.children;
        if (o.length) for (var a = o.length - 1; 0 <= a; a--) n.push(o[a]);
      }
  }
  Ef({
    type: 'tree',
    init: function(t, e) {
      this._oldTree,
        (this._mainGroup = new ki()),
        (this._controller = new Xy(e.getZr())),
        (this._controllerHost = {target: this.group}),
        this.group.add(this._mainGroup);
    },
    render: function(n, t, i, e) {
      var o = n.getData(),
        a = n.layoutInfo,
        r = this._mainGroup,
        s = n.get('layout');
      'radial' === s
        ? r.attr('position', [a.x + a.width / 2, a.y + a.height / 2])
        : r.attr('position', [a.x, a.y]),
        this._updateViewCoordSys(n, a, s),
        this._updateController(n, t, i);
      var l = this._data,
        u = {
          expandAndCollapse: n.get('expandAndCollapse'),
          layout: s,
          edgeShape: n.get('edgeShape'),
          edgeForkPosition: n.get('edgeForkPosition'),
          orient: n.getOrient(),
          curvature: n.get('lineStyle.curveness'),
          symbolRotate: n.get('symbolRotate'),
          symbolOffset: n.get('symbolOffset'),
          hoverAnimation: n.get('hoverAnimation'),
          useNameLabel: !0,
          fadeIn: !0,
        };
      o
        .diff(l)
        .add(function(t) {
          Ux(o, t) && Yx(o, t, null, r, n, u);
        })
        .update(function(t, e) {
          var i = l.getItemGraphicEl(e);
          Ux(o, t) ? Yx(o, t, i, r, n, u) : i && jx(l, e, i, r, n, u);
        })
        .remove(function(t) {
          var e = l.getItemGraphicEl(t);
          e && jx(l, t, e, r, n, u);
        })
        .execute(),
        (this._nodeScaleRatio = n.get('nodeScaleRatio')),
        this._updateNodeAndLinkScale(n),
        !0 === u.expandAndCollapse &&
          o.eachItemGraphicEl(function(t, e) {
            t.off('click').on('click', function() {
              i.dispatchAction({
                type: 'treeExpandAndCollapse',
                seriesId: n.id,
                dataIndex: e,
              });
            });
          }),
        (this._data = o);
    },
    _updateViewCoordSys: function(t) {
      var i = t.getData(),
        n = [];
      i.each(function(t) {
        var e = i.getItemLayout(t);
        !e || isNaN(e.x) || isNaN(e.y) || n.push([+e.x, +e.y]);
      });
      var e = [],
        o = [];
      Ua(n, e, o);
      var a = this._min,
        r = this._max;
      o[0] - e[0] == 0 &&
        ((e[0] = a ? a[0] : e[0] - 1), (o[0] = r ? r[0] : o[0] + 1)),
        o[1] - e[1] == 0 &&
          ((e[1] = a ? a[1] : e[1] - 1), (o[1] = r ? r[1] : o[1] + 1));
      var s = (t.coordinateSystem = new gx());
      (s.zoomLimit = t.get('scaleLimit')),
        s.setBoundingRect(e[0], e[1], o[0] - e[0], o[1] - e[1]),
        s.setCenter(t.get('center')),
        s.setZoom(t.get('zoom')),
        this.group.attr({position: s.position, scale: s.scale}),
        (this._viewCoordSys = s),
        (this._min = e),
        (this._max = o);
    },
    _updateController: function(o, t, a) {
      var e = this._controller,
        i = this._controllerHost,
        r = this.group;
      e.setPointerChecker(function(t, e, i) {
        var n = r.getBoundingRect();
        return n.applyTransform(r.transform), n.contain(e, i) && !ox(t, a, o);
      }),
        e.enable(o.get('roam')),
        (i.zoomLimit = o.get('scaleLimit')),
        (i.zoom = o.coordinateSystem.getZoom()),
        e
          .off('pan')
          .off('zoom')
          .on(
            'pan',
            function(t) {
              ex(i, t.dx, t.dy),
                a.dispatchAction({
                  seriesId: o.id,
                  type: 'treeRoam',
                  dx: t.dx,
                  dy: t.dy,
                });
            },
            this,
          )
          .on(
            'zoom',
            function(t) {
              ix(i, t.scale, t.originX, t.originY),
                a.dispatchAction({
                  seriesId: o.id,
                  type: 'treeRoam',
                  zoom: t.scale,
                  originX: t.originX,
                  originY: t.originY,
                }),
                this._updateNodeAndLinkScale(o);
            },
            this,
          );
    },
    _updateNodeAndLinkScale: function(t) {
      var e = t.getData(),
        i = this._getNodeGlobalScale(t),
        n = [i, i];
      e.eachItemGraphicEl(function(t, e) {
        t.attr('scale', n);
      });
    },
    _getNodeGlobalScale: function(t) {
      var e = t.coordinateSystem;
      if ('view' !== e.type) return 1;
      var i = this._nodeScaleRatio,
        n = e.scale,
        o = (n && n[0]) || 1;
      return ((e.getZoom() - 1) * i + 1) / o;
    },
    dispose: function() {
      this._controller && this._controller.dispose(),
        (this._controllerHost = {});
    },
    remove: function() {
      this._mainGroup.removeAll(), (this._data = null);
    },
  }),
    Tf(
      {
        type: 'treeExpandAndCollapse',
        event: 'treeExpandAndCollapse',
        update: 'update',
      },
      function(n, t) {
        t.eachComponent(
          {mainType: 'series', subType: 'tree', query: n},
          function(t) {
            var e = n.dataIndex,
              i = t.getData().tree.getNodeByDataIndex(e);
            i.isExpand = !i.isExpand;
          },
        );
      },
    ),
    Tf({type: 'treeRoam', event: 'treeRoam', update: 'none'}, function(i, t) {
      t.eachComponent({mainType: 'series', subType: 'tree', query: i}, function(
        t,
      ) {
        var e = dx(t.coordinateSystem, i);
        t.setCenter && t.setCenter(e.center), t.setZoom && t.setZoom(e.zoom);
      });
    });
  function $x(t, e, i) {
    if (t && 0 <= w(e, t.type)) {
      var n = i.getData().tree.root,
        o = t.targetNode;
      if (('string' == typeof o && (o = n.getNodeById(o)), o && n.contains(o)))
        return {node: o};
      var a = t.targetNodeId;
      if (null != a && (o = n.getNodeById(a))) return {node: o};
    }
  }
  function Jx(t) {
    for (var e = []; t; ) (t = t.parentNode) && e.push(t);
    return e.reverse();
  }
  function Qx(t, e) {
    return 0 <= w(Jx(t), e);
  }
  function t_(t, e) {
    for (var i = []; t; ) {
      var n = t.dataIndex;
      i.push({name: t.name, dataIndex: n, value: e.getRawValue(n)}),
        (t = t.parentNode);
    }
    return i.reverse(), i;
  }
  Cf(zm('tree', 'circle')),
    Df(function(t, e) {
      t.eachSeriesByType('tree', function(t) {
        !(function(t, e) {
          var i = (function(t, e) {
            return Iu(t.getBoxLayoutParams(), {
              width: e.getWidth(),
              height: e.getHeight(),
            });
          })(t, e);
          t.layoutInfo = i;
          var n = t.get('layout'),
            o = 0,
            a = 0,
            r = null;
          r =
            'radial' === n
              ? ((o = 2 * Math.PI),
                (a = Math.min(i.height, i.width) / 2),
                Bx(function(t, e) {
                  return (t.parentNode === e.parentNode ? 1 : 2) / t.depth;
                }))
              : ((o = i.width), (a = i.height), Bx());
          var s = t.getData().tree.root,
            l = s.children[0];
          if (l) {
            !(function(t) {
              t.hierNode = {
                defaultAncestor: null,
                ancestor: t,
                prelim: 0,
                modifier: 0,
                change: 0,
                shift: 0,
                i: 0,
                thread: null,
              };
              for (var e, i, n = [t]; (e = n.pop()); )
                if (((i = e.children), e.isExpand && i.length))
                  for (var o = i.length - 1; 0 <= o; o--) {
                    var a = i[o];
                    (a.hierNode = {
                      defaultAncestor: null,
                      ancestor: a,
                      prelim: 0,
                      modifier: 0,
                      change: 0,
                      shift: 0,
                      i: o,
                      thread: null,
                    }),
                      n.push(a);
                  }
            })(s),
              (function(t, e, i) {
                for (var n, o = [t], a = []; (n = o.pop()); )
                  if ((a.push(n), n.isExpand)) {
                    var r = n.children;
                    if (r.length)
                      for (var s = 0; s < r.length; s++) o.push(r[s]);
                  }
                for (; (n = a.pop()); ) e(n, i);
              })(l, Rx, r),
              (s.hierNode.modifier = -l.hierNode.prelim),
              Kx(l, zx);
            var u = l,
              h = l,
              c = l;
            Kx(l, function(t) {
              var e = t.getLayout().x;
              e < u.getLayout().x && (u = t),
                e > h.getLayout().x && (h = t),
                t.depth > c.depth && (c = t);
            });
            var d = u === h ? 1 : r(u, h) / 2,
              f = d - u.getLayout().x,
              p = 0,
              g = 0,
              m = 0,
              v = 0;
            if ('radial' === n)
              (p = o / (h.getLayout().x + d + f)),
                (g = a / (c.depth - 1 || 1)),
                Kx(l, function(t) {
                  (m = (t.getLayout().x + f) * p), (v = (t.depth - 1) * g);
                  var e = Vx(m, v);
                  t.setLayout({x: e.x, y: e.y, rawX: m, rawY: v}, !0);
                });
            else {
              var y = t.getOrient();
              'RL' === y || 'LR' === y
                ? ((g = a / (h.getLayout().x + d + f)),
                  (p = o / (c.depth - 1 || 1)),
                  Kx(l, function(t) {
                    (v = (t.getLayout().x + f) * g),
                      (m =
                        'LR' === y ? (t.depth - 1) * p : o - (t.depth - 1) * p),
                      t.setLayout({x: m, y: v}, !0);
                  }))
                : ('TB' !== y && 'BT' !== y) ||
                  ((p = o / (h.getLayout().x + d + f)),
                  (g = a / (c.depth - 1 || 1)),
                  Kx(l, function(t) {
                    (m = (t.getLayout().x + f) * p),
                      (v =
                        'TB' === y ? (t.depth - 1) * g : a - (t.depth - 1) * g),
                      t.setLayout({x: m, y: v}, !0);
                  }));
            }
          }
        })(t, e);
      });
    }),
    cc.extend({
      type: 'series.treemap',
      layoutMode: 'box',
      dependencies: ['grid', 'polar'],
      preventUsingHoverLayer: !0,
      _viewRoot: null,
      defaultOption: {
        progressive: 0,
        left: 'center',
        top: 'middle',
        right: null,
        bottom: null,
        width: '80%',
        height: '80%',
        sort: !0,
        clipWindow: 'origin',
        squareRatio: 0.5 * (1 + Math.sqrt(5)),
        leafDepth: null,
        drillDownIcon: '▶',
        zoomToNodeRatio: 0.1024,
        roam: !0,
        nodeClick: 'zoomToNode',
        animation: !0,
        animationDurationUpdate: 900,
        animationEasing: 'quinticInOut',
        breadcrumb: {
          show: !0,
          height: 22,
          left: 'center',
          top: 'bottom',
          emptyItemWidth: 25,
          itemStyle: {
            color: 'rgba(0,0,0,0.7)',
            borderColor: 'rgba(255,255,255,0.7)',
            borderWidth: 1,
            shadowColor: 'rgba(150,150,150,1)',
            shadowBlur: 3,
            shadowOffsetX: 0,
            shadowOffsetY: 0,
            textStyle: {color: '#fff'},
          },
          emphasis: {textStyle: {}},
        },
        label: {
          show: !0,
          distance: 0,
          padding: 5,
          position: 'inside',
          color: '#fff',
          ellipsis: !0,
        },
        upperLabel: {
          show: !1,
          position: [0, '50%'],
          height: 20,
          color: '#fff',
          ellipsis: !0,
          verticalAlign: 'middle',
        },
        itemStyle: {
          color: null,
          colorAlpha: null,
          colorSaturation: null,
          borderWidth: 0,
          gapWidth: 0,
          borderColor: '#fff',
          borderColorSaturation: null,
        },
        emphasis: {
          upperLabel: {
            show: !0,
            position: [0, '50%'],
            color: '#fff',
            ellipsis: !0,
            verticalAlign: 'middle',
          },
        },
        visualDimension: 0,
        visualMin: null,
        visualMax: null,
        color: [],
        colorAlpha: null,
        colorSaturation: null,
        colorMappingBy: 'index',
        visibleMin: 10,
        childrenVisibleMin: null,
        levels: [],
      },
      getInitialData: function(t, e) {
        var i = {name: t.name, children: t.data};
        !(function i(t) {
          var n = 0;
          E(t.children, function(t) {
            i(t);
            var e = t.value;
            R(e) && (e = e[0]), (n += e);
          });
          var e = t.value;
          R(e) && (e = e[0]);
          (null != e && !isNaN(e)) || (e = n);
          e < 0 && (e = 0);
          R(t.value) ? (t.value[0] = e) : (t.value = e);
        })(i);
        var n = t.levels || [],
          o = O(
            (n = t.levels = (function(t, e) {
              var n,
                i = e.get('color');
              if (!i) return;
              if (
                (E((t = t || []), function(t) {
                  var e = new Pl(t),
                    i = e.get('color');
                  (e.get('itemStyle.color') || (i && 'none' !== i)) && (n = !0);
                }),
                !n)
              ) {
                (t[0] || (t[0] = {})).color = i.slice();
              }
              return t;
            })(n, e)) || [],
            function(t) {
              return new Pl(t, this, e);
            },
            this,
          ),
          a = Ox.createTree(i, this, null, function(t) {
            t.wrapMethod('getItemModel', function(t, e) {
              var i = a.getNodeByDataIndex(e),
                n = o[i.depth];
              return n && (t.parentModel = n), t;
            });
          });
        return a.data;
      },
      optionUpdated: function() {
        this.resetViewRoot();
      },
      formatTooltip: function(t) {
        var e = this.getData(),
          i = this.getRawValue(t),
          n = R(i) ? nu(i[0]) : nu(i);
        return lu(e.getName(t) + ': ' + n);
      },
      getDataParams: function(t) {
        var e = cc.prototype.getDataParams.apply(this, arguments),
          i = this.getData().tree.getNodeByDataIndex(t);
        return (e.treePathInfo = t_(i, this)), e;
      },
      setLayoutInfo: function(t) {
        (this.layoutInfo = this.layoutInfo || {}), P(this.layoutInfo, t);
      },
      mapIdToIndex: function(t) {
        var e = this._idIndexMap;
        e || ((e = this._idIndexMap = et()), (this._idIndexMapCount = 0));
        var i = e.get(t);
        return null == i && e.set(t, (i = this._idIndexMapCount++)), i;
      },
      getViewRoot: function() {
        return this._viewRoot;
      },
      resetViewRoot: function(t) {
        t ? (this._viewRoot = t) : (t = this._viewRoot);
        var e = this.getRawData().tree.root;
        (t && (t === e || e.contains(t))) || (this._viewRoot = e);
      },
    });
  var e_ = 5;
  function i_(t) {
    (this.group = new ki()), t.add(this.group);
  }
  function n_(t, e, i, n, o, a) {
    var r = [
      [o ? t : t - e_, e],
      [t + i, e],
      [t + i, e + n],
      [o ? t : t - e_, e + n],
    ];
    return (
      a || r.splice(2, 0, [t + i + e_, e + n / 2]),
      o || r.push([t, e + n / 2]),
      r
    );
  }
  i_.prototype = {
    constructor: i_,
    render: function(t, e, i, n) {
      var o = t.getModel('breadcrumb'),
        a = this.group;
      if ((a.removeAll(), o.get('show') && i)) {
        var r = o.getModel('itemStyle'),
          s = r.getModel('textStyle'),
          l = {
            pos: {
              left: o.get('left'),
              right: o.get('right'),
              top: o.get('top'),
              bottom: o.get('bottom'),
            },
            box: {width: e.getWidth(), height: e.getHeight()},
            emptyItemWidth: o.get('emptyItemWidth'),
            totalWidth: 0,
            renderList: [],
          };
        this._prepare(i, l, s),
          this._renderContent(t, l, r, s, n),
          Tu(a, l.pos, l.box);
      }
    },
    _prepare: function(t, e, i) {
      for (var n = t; n; n = n.parentNode) {
        var o = n.getModel().get('name'),
          a = i.getTextRect(o),
          r = Math.max(a.width + 16, e.emptyItemWidth);
        (e.totalWidth += r + 8),
          e.renderList.push({node: n, text: o, width: r});
      }
    },
    _renderContent: function(t, e, i, n, o) {
      for (
        var a,
          r,
          s = 0,
          l = e.emptyItemWidth,
          u = t.get('breadcrumb.height'),
          h = (function(t, e, i) {
            var n = e.width,
              o = e.height,
              a = Vl(t.x, n),
              r = Vl(t.y, o),
              s = Vl(t.x2, n),
              l = Vl(t.y2, o);
            return (
              (isNaN(a) || isNaN(parseFloat(t.x))) && (a = 0),
              (isNaN(s) || isNaN(parseFloat(t.x2))) && (s = n),
              (isNaN(r) || isNaN(parseFloat(t.y))) && (r = 0),
              (isNaN(l) || isNaN(parseFloat(t.y2))) && (l = o),
              (i = au(i || 0)),
              {
                width: Math.max(s - a - i[1] - i[3], 0),
                height: Math.max(l - r - i[0] - i[2], 0),
              }
            );
          })(e.pos, e.box),
          c = e.totalWidth,
          d = e.renderList,
          f = d.length - 1;
        0 <= f;
        f--
      ) {
        var p = d[f],
          g = p.node,
          m = p.width,
          v = p.text;
        c > h.width && ((c -= m - l), (m = l), (v = null));
        var y = new is({
          shape: {points: n_(s, 0, m, u, f === d.length - 1, 0 === f)},
          style: C(i.getItemStyle(), {
            lineJoin: 'bevel',
            text: v,
            textFill: n.getTextColor(),
            textFont: n.getFont(),
          }),
          z: 10,
          onclick: L(o, g),
        });
        this.group.add(y),
          (a = t),
          (r = g),
          (y.eventData = {
            componentType: 'series',
            componentSubType: 'treemap',
            componentIndex: a.componentIndex,
            seriesIndex: a.componentIndex,
            seriesName: a.name,
            seriesType: 'treemap',
            selfType: 'breadcrumb',
            nodeData: {dataIndex: r && r.dataIndex, name: r && r.name},
            treePathInfo: r && t_(r, a),
          }),
          (s += m + 8);
      }
    },
    remove: function() {
      this.group.removeAll();
    },
  };
  function o_(t) {
    var e = p_(t);
    return (e.stroke = e.fill = e.lineWidth = null), e;
  }
  var a_ = A,
    r_ = ki,
    s_ = us,
    l_ = E,
    u_ = ['label'],
    h_ = ['emphasis', 'label'],
    c_ = ['upperLabel'],
    d_ = ['emphasis', 'upperLabel'],
    f_ = 10,
    p_ = fa([
      ['fill', 'color'],
      ['stroke', 'strokeColor'],
      ['lineWidth', 'strokeWidth'],
      ['shadowBlur'],
      ['shadowOffsetX'],
      ['shadowOffsetY'],
      ['shadowColor'],
    ]);
  function g_(h, r, s, l, u, e, c, t, i, n) {
    if (c) {
      var d = c.getLayout(),
        o = h.getData();
      if ((o.setItemGraphicEl(c.dataIndex, null), d && d.isInView)) {
        var f = d.width,
          p = d.height,
          g = d.borderWidth,
          m = d.invisible,
          v = c.getRawIndex(),
          y = t && t.getRawIndex(),
          a = c.viewChildren,
          x = d.upperHeight,
          _ = a && a.length,
          w = c.getModel('itemStyle'),
          b = c.getModel('emphasis.itemStyle'),
          S = L('nodeGroup', r_);
        if (S) {
          if (
            (i.add(S),
            S.attr('position', [d.x || 0, d.y || 0]),
            (S.__tmNodeWidth = f),
            (S.__tmNodeHeight = p),
            d.isAboveViewRoot)
          )
            return S;
          var M = c.getModel(),
            I = L('background', s_, n, 1);
          if (
            (I &&
              (function(t, e, i) {
                if (
                  ((e.dataIndex = c.dataIndex),
                  (e.seriesIndex = h.seriesIndex),
                  e.setShape({x: 0, y: 0, width: f, height: p}),
                  m)
                )
                  A(e);
                else {
                  e.invisible = !1;
                  var n = c.getVisual('borderColor', !0),
                    o = b.get('borderColor'),
                    a = o_(w);
                  a.fill = n;
                  var r = p_(b);
                  if (((r.fill = o), i)) {
                    var s = f - 2 * g;
                    D(a, r, n, s, x, {x: g, y: 0, width: s, height: x});
                  } else a.text = r.text = null;
                  e.setStyle(a), js(e, r);
                }
                t.add(e);
              })(S, I, _ && d.upperLabelHeight),
            _)
          )
            il(S) && el(S, !1),
              I && (el(I, !0), o.setItemGraphicEl(c.dataIndex, I));
          else {
            var T = L('content', s_, n, 2);
            T &&
              (function(t, e) {
                (e.dataIndex = c.dataIndex), (e.seriesIndex = h.seriesIndex);
                var i = Math.max(f - 2 * g, 0),
                  n = Math.max(p - 2 * g, 0);
                if (
                  ((e.culling = !0),
                  e.setShape({x: g, y: g, width: i, height: n}),
                  m)
                )
                  A(e);
                else {
                  e.invisible = !1;
                  var o = c.getVisual('color', !0),
                    a = o_(w);
                  a.fill = o;
                  var r = p_(b);
                  D(a, r, o, i, n), e.setStyle(a), js(e, r);
                }
                t.add(e);
              })(S, T),
              I && il(I) && el(I, !1),
              el(S, !0),
              o.setItemGraphicEl(c.dataIndex, S);
          }
          return S;
        }
      }
    }
    function A(t) {
      t.invisible || e.push(t);
    }
    function D(t, e, i, n, o, a) {
      var r = M.get('name'),
        s = M.getModel(a ? c_ : u_),
        l = M.getModel(a ? d_ : h_),
        u = s.getShallow('show');
      ol(t, e, s, l, {
        defaultText: u ? r : null,
        autoColor: i,
        isRectText: !0,
        labelFetcher: h,
        labelDataIndex: c.dataIndex,
        labelProp: a ? 'upperLabel' : 'label',
      }),
        C(t, a, d),
        C(e, a, d),
        a && (t.textRect = k(a)),
        (t.truncate =
          u && s.get('ellipsis')
            ? {outerWidth: n, outerHeight: o, minChar: 2}
            : null);
    }
    function C(t, e, i) {
      var n = t.text;
      if (!e && i.isLeafRoot && null != n) {
        var o = h.get('drillDownIcon', !0);
        t.text = o ? o + ' ' + n : n;
      }
    }
    function L(t, e, i, n) {
      var o = null != y && s[t][y],
        a = u[t];
      return (
        o
          ? ((s[t][y] = null),
            (function(t, e, i) {
              (t[v] = {}).old =
                'nodeGroup' === i ? e.position.slice() : P({}, e.shape);
            })(a, o, t))
          : m ||
            (((o = new e({
              z: (function(t, e) {
                var i = t * f_ + e;
                return (i - 1) / i;
              })(i, n),
            })).__tmDepth = i),
            (function(t, e, i) {
              var n = (t[v] = {}),
                o = c.parentNode;
              if (o && (!l || 'drillDown' === l.direction)) {
                var a = 0,
                  r = 0,
                  s = u.background[o.getRawIndex()];
                !l && s && s.old && ((a = s.old.width), (r = s.old.height)),
                  (n.old =
                    'nodeGroup' === i
                      ? [0, r]
                      : {x: a, y: r, width: 0, height: 0});
              }
              n.fadein = 'nodeGroup' !== i;
            })(a, 0, (o.__tmStorageName = t))),
        (r[t][v] = o)
      );
    }
  }
  Ef({
    type: 'treemap',
    init: function(t, e) {
      this._containerGroup,
        (this._storage = {nodeGroup: [], background: [], content: []}),
        this._oldTree,
        this._breadcrumb,
        this._controller,
        (this._state = 'ready');
    },
    render: function(t, e, i, n) {
      if (
        !(
          w(
            e.findComponents({
              mainType: 'series',
              subType: 'treemap',
              query: n,
            }),
            t,
          ) < 0
        )
      ) {
        (this.seriesModel = t), (this.api = i), (this.ecModel = e);
        var o = $x(n, ['treemapZoomToNode', 'treemapRootToNode'], t),
          a = n && n.type,
          r = t.layoutInfo,
          s = !this._oldTree,
          l = this._storage,
          u =
            'treemapRootToNode' === a && o && l
              ? {
                  rootNodeGroup: l.nodeGroup[o.node.getRawIndex()],
                  direction: n.direction,
                }
              : null,
          h = this._giveContainerGroup(r),
          c = this._doRender(h, t, u);
        s || (a && 'treemapZoomToNode' !== a && 'treemapRootToNode' !== a)
          ? c.renderFinally()
          : this._doAnimation(h, c, t, u),
          this._resetController(i),
          this._renderBreadcrumb(t, i, o);
      }
    },
    _giveContainerGroup: function(t) {
      var e = this._containerGroup;
      return (
        e ||
          ((e = this._containerGroup = new r_()),
          this._initEvents(e),
          this.group.add(e)),
        e.attr('position', [t.x, t.y]),
        e
      );
    },
    _doRender: function(t, e, i) {
      var n = e.getData().tree,
        o = this._oldTree,
        a = {nodeGroup: [], background: [], content: []},
        r = {nodeGroup: [], background: [], content: []},
        s = this._storage,
        l = [],
        c = L(g_, e, r, s, i, a, l);
      !(function a(r, s, l, u, h) {
        u
          ? l_((s = r), function(t, e) {
              t.isRemoved() || i(e, e);
            })
          : new zf(s, r, t, t)
              .add(i)
              .update(i)
              .remove(L(i, null))
              .execute();
        function t(t) {
          return t.getId();
        }
        function i(t, e) {
          var i = null != t ? r[t] : null,
            n = null != e ? s[e] : null,
            o = c(i, n, l, h);
          o &&
            a(
              (i && i.viewChildren) || [],
              (n && n.viewChildren) || [],
              o,
              u,
              h + 1,
            );
        }
      })(
        n.root ? [n.root] : [],
        o && o.root ? [o.root] : [],
        t,
        n === o || !o,
        0,
      );
      var u,
        h,
        d =
          ((h = {nodeGroup: [], background: [], content: []}),
          (u = s) &&
            l_(u, function(t, e) {
              var i = h[e];
              l_(t, function(t) {
                t && (i.push(t), (t.__tmWillDelete = 1));
              });
            }),
          h);
      return (
        (this._oldTree = n),
        (this._storage = r),
        {
          lastsForAnimation: a,
          willDeleteEls: d,
          renderFinally: function() {
            l_(d, function(t) {
              l_(t, function(t) {
                t.parent && t.parent.remove(t);
              });
            }),
              l_(l, function(t) {
                (t.invisible = !0), t.dirty();
              });
          },
        }
      );
    },
    _doAnimation: function(t, a, e, s) {
      if (e.get('animation')) {
        var l = e.get('animationDurationUpdate'),
          u = e.get('animationEasing'),
          h = (function() {
            var a,
              r = [],
              s = {};
            return {
              add: function(t, e, i, n, o) {
                return (
                  B(n) && ((o = n), (n = 0)),
                  !s[t.id] &&
                    ((s[t.id] = 1),
                    r.push({el: t, target: e, time: i, delay: n, easing: o}),
                    !0)
                );
              },
              done: function(t) {
                return (a = t), this;
              },
              start: function() {
                for (var t = r.length, e = 0, i = r.length; e < i; e++) {
                  var n = r[e];
                  n.el.animateTo(n.target, n.time, n.delay, n.easing, o);
                }
                return this;
                function o() {
                  --t || ((r.length = 0), (s = {}), a && a());
                }
              },
            };
          })();
        l_(a.willDeleteEls, function(t, r) {
          l_(t, function(t, e) {
            if (!t.invisible) {
              var i,
                n = t.parent;
              if (s && 'drillDown' === s.direction)
                i =
                  n === s.rootNodeGroup
                    ? {
                        shape: {
                          x: 0,
                          y: 0,
                          width: n.__tmNodeWidth,
                          height: n.__tmNodeHeight,
                        },
                        style: {opacity: 0},
                      }
                    : {style: {opacity: 0}};
              else {
                var o = 0,
                  a = 0;
                n.__tmWillDelete ||
                  ((o = n.__tmNodeWidth / 2), (a = n.__tmNodeHeight / 2)),
                  (i =
                    'nodeGroup' === r
                      ? {position: [o, a], style: {opacity: 0}}
                      : {
                          shape: {x: o, y: a, width: 0, height: 0},
                          style: {opacity: 0},
                        });
              }
              i && h.add(t, i, l, u);
            }
          });
        }),
          l_(
            this._storage,
            function(t, o) {
              l_(t, function(t, e) {
                var i = a.lastsForAnimation[o][e],
                  n = {};
                i &&
                  ('nodeGroup' === o
                    ? i.old &&
                      ((n.position = t.position.slice()),
                      t.attr('position', i.old))
                    : (i.old && ((n.shape = P({}, t.shape)), t.setShape(i.old)),
                      i.fadein
                        ? (t.setStyle('opacity', 0), (n.style = {opacity: 1}))
                        : 1 !== t.style.opacity && (n.style = {opacity: 1})),
                  h.add(t, n, l, u));
              });
            },
            this,
          ),
          (this._state = 'animating'),
          h
            .done(
              a_(function() {
                (this._state = 'ready'), a.renderFinally();
              }, this),
            )
            .start();
      }
    },
    _resetController: function(t) {
      var e = this._controller;
      e ||
        ((e = this._controller = new Xy(t.getZr())).enable(
          this.seriesModel.get('roam'),
        ),
        e.on('pan', a_(this._onPan, this)),
        e.on('zoom', a_(this._onZoom, this)));
      var n = new Li(0, 0, t.getWidth(), t.getHeight());
      e.setPointerChecker(function(t, e, i) {
        return n.contain(e, i);
      });
    },
    _clearController: function() {
      var t = this._controller;
      t && (t.dispose(), (t = null));
    },
    _onPan: function(t) {
      if (
        'animating' !== this._state &&
        (3 < Math.abs(t.dx) || 3 < Math.abs(t.dy))
      ) {
        var e = this.seriesModel.getData().tree.root;
        if (!e) return;
        var i = e.getLayout();
        if (!i) return;
        this.api.dispatchAction({
          type: 'treemapMove',
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: i.x + t.dx,
            y: i.y + t.dy,
            width: i.width,
            height: i.height,
          },
        });
      }
    },
    _onZoom: function(t) {
      var e = t.originX,
        i = t.originY;
      if ('animating' !== this._state) {
        var n = this.seriesModel.getData().tree.root;
        if (!n) return;
        var o = n.getLayout();
        if (!o) return;
        var a = new Li(o.x, o.y, o.width, o.height),
          r = this.seriesModel.layoutInfo;
        (e -= r.x), (i -= r.y);
        var s = se();
        ce(s, s, [-e, -i]),
          fe(s, s, [t.scale, t.scale]),
          ce(s, s, [e, i]),
          a.applyTransform(s),
          this.api.dispatchAction({
            type: 'treemapRender',
            from: this.uid,
            seriesId: this.seriesModel.id,
            rootRect: {x: a.x, y: a.y, width: a.width, height: a.height},
          });
      }
    },
    _initEvents: function(t) {
      t.on(
        'click',
        function(t) {
          if ('ready' === this._state) {
            var e = this.seriesModel.get('nodeClick', !0);
            if (e) {
              var i = this.findTarget(t.offsetX, t.offsetY);
              if (i) {
                var n = i.node;
                if (n.getLayout().isLeafRoot) this._rootToNode(i);
                else if ('zoomToNode' === e) this._zoomToNode(i);
                else if ('link' === e) {
                  var o = n.hostTree.data.getItemModel(n.dataIndex),
                    a = o.get('link', !0),
                    r = o.get('target', !0) || 'blank';
                  a && yu(a, r);
                }
              }
            }
          }
        },
        this,
      );
    },
    _renderBreadcrumb: function(e, t, i) {
      (i =
        i ||
        ((i =
          null != e.get('leafDepth', !0)
            ? {node: e.getViewRoot()}
            : this.findTarget(t.getWidth() / 2, t.getHeight() / 2)) || {
          node: e.getData().tree.root,
        })),
        (this._breadcrumb || (this._breadcrumb = new i_(this.group))).render(
          e,
          t,
          i.node,
          a_(function(t) {
            'animating' !== this._state &&
              (Qx(e.getViewRoot(), t)
                ? this._rootToNode({node: t})
                : this._zoomToNode({node: t}));
          }, this),
        );
    },
    remove: function() {
      this._clearController(),
        this._containerGroup && this._containerGroup.removeAll(),
        (this._storage = {nodeGroup: [], background: [], content: []}),
        (this._state = 'ready'),
        this._breadcrumb && this._breadcrumb.remove();
    },
    dispose: function() {
      this._clearController();
    },
    _zoomToNode: function(t) {
      this.api.dispatchAction({
        type: 'treemapZoomToNode',
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t.node,
      });
    },
    _rootToNode: function(t) {
      this.api.dispatchAction({
        type: 'treemapRootToNode',
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t.node,
      });
    },
    findTarget: function(o, a) {
      var r;
      return (
        this.seriesModel.getViewRoot().eachNode(
          {attr: 'viewChildren', order: 'preorder'},
          function(t) {
            var e = this._storage.background[t.getRawIndex()];
            if (e) {
              var i = e.transformCoordToLocal(o, a),
                n = e.shape;
              if (
                !(
                  n.x <= i[0] &&
                  i[0] <= n.x + n.width &&
                  n.y <= i[1] &&
                  i[1] <= n.y + n.height
                )
              )
                return !1;
              r = {node: t, offsetX: i[0], offsetY: i[1]};
            }
          },
          this,
        ),
        r
      );
    },
  });
  for (
    var m_ = function() {},
      v_ = ['treemapZoomToNode', 'treemapRender', 'treemapMove'],
      y_ = 0;
    y_ < v_.length;
    y_++
  )
    Tf({type: v_[y_], update: 'updateView'}, m_);
  Tf({type: 'treemapRootToNode', update: 'updateView'}, function(o, t) {
    t.eachComponent(
      {mainType: 'series', subType: 'treemap', query: o},
      function(t, e) {
        var i = $x(o, ['treemapZoomToNode', 'treemapRootToNode'], t);
        if (i) {
          var n = t.getViewRoot();
          n && (o.direction = Qx(n, i.node) ? 'rollUp' : 'drillDown'),
            t.resetViewRoot(i.node);
        }
      },
    );
  });
  var x_ = E,
    __ = V,
    w_ = -1,
    b_ = function(t) {
      var e = t.mappingMethod,
        i = t.type,
        n = (this.option = k(t));
      (this.type = i), (this.mappingMethod = e), (this._normalizeData = N_[e]);
      var o = S_[i];
      (this.applyVisual = o.applyVisual),
        (this.getColorMapper = o.getColorMapper),
        (this._doMap = o._doMap[e]),
        'piecewise' === e
          ? (M_(n),
            (function(i) {
              var t = i.pieceList;
              (i.hasSpecialVisual = !1),
                E(t, function(t, e) {
                  (t.originIndex = e),
                    null != t.visual && (i.hasSpecialVisual = !0);
                });
            })(n))
          : 'category' === e
          ? n.categories
            ? (function(t) {
                var e = t.categories,
                  i = t.visual,
                  n = (t.categoryMap = {});
                if (
                  (x_(e, function(t, e) {
                    n[t] = e;
                  }),
                  !R(i))
                ) {
                  var o = [];
                  V(i)
                    ? x_(i, function(t, e) {
                        var i = n[e];
                        o[null != i ? i : w_] = t;
                      })
                    : (o[w_] = i),
                    (i = P_(t, o));
                }
                for (var a = e.length - 1; 0 <= a; a--)
                  null == i[a] && (delete n[e[a]], e.pop());
              })(n)
            : M_(n, !0)
          : (q('linear' !== e || n.dataExtent), M_(n));
    };
  b_.prototype = {
    constructor: b_,
    mapValueToVisual: function(t) {
      var e = this._normalizeData(t);
      return this._doMap(e, t);
    },
    getNormalizer: function() {
      return A(this._normalizeData, this);
    },
  };
  var S_ = (b_.visualHandlers = {
    color: {
      applyVisual: A_('color'),
      getColorMapper: function() {
        var o = this.option;
        return A(
          'category' === o.mappingMethod
            ? function(t, e) {
                return e || (t = this._normalizeData(t)), D_.call(this, t);
              }
            : function(t, e, i) {
                var n = !!i;
                return (
                  e || (t = this._normalizeData(t)),
                  (i = Ye(t, o.parsedVisual, i)),
                  n ? i : Qe(i, 'rgba')
                );
              },
          this,
        );
      },
      _doMap: {
        linear: function(t) {
          return Qe(Ye(t, this.option.parsedVisual), 'rgba');
        },
        category: D_,
        piecewise: function(t, e) {
          var i = k_.call(this, e);
          return (
            null == i && (i = Qe(Ye(t, this.option.parsedVisual), 'rgba')), i
          );
        },
        fixed: C_,
      },
    },
    colorHue: I_(function(t, e) {
      return $e(t, e);
    }),
    colorSaturation: I_(function(t, e) {
      return $e(t, null, e);
    }),
    colorLightness: I_(function(t, e) {
      return $e(t, null, null, e);
    }),
    colorAlpha: I_(function(t, e) {
      return Je(t, e);
    }),
    opacity: {applyVisual: A_('opacity'), _doMap: L_([0, 1])},
    liftZ: {
      applyVisual: A_('liftZ'),
      _doMap: {linear: C_, category: C_, piecewise: C_, fixed: C_},
    },
    symbol: {
      applyVisual: function(t, e, i) {
        var n = this.mapValueToVisual(t);
        if (B(n)) i('symbol', n);
        else if (__(n)) for (var o in n) n.hasOwnProperty(o) && i(o, n[o]);
      },
      _doMap: {
        linear: T_,
        category: D_,
        piecewise: function(t, e) {
          var i = k_.call(this, e);
          return null == i && (i = T_.call(this, t)), i;
        },
        fixed: C_,
      },
    },
    symbolSize: {applyVisual: A_('symbolSize'), _doMap: L_([0, 1])},
  });
  function M_(t, e) {
    var i = t.visual,
      n = [];
    V(i)
      ? x_(i, function(t) {
          n.push(t);
        })
      : null != i && n.push(i);
    e ||
      1 !== n.length ||
      {color: 1, symbol: 1}.hasOwnProperty(t.type) ||
      (n[1] = n[0]),
      P_(t, n);
  }
  function I_(n) {
    return {
      applyVisual: function(t, e, i) {
        (t = this.mapValueToVisual(t)), i('color', n(e('color'), t));
      },
      _doMap: L_([0, 1]),
    };
  }
  function T_(t) {
    var e = this.option.visual;
    return e[Math.round(Bl(t, [0, 1], [0, e.length - 1], !0))] || {};
  }
  function A_(n) {
    return function(t, e, i) {
      i(n, this.mapValueToVisual(t));
    };
  }
  function D_(t) {
    var e = this.option.visual;
    return e[this.option.loop && t !== w_ ? t % e.length : t];
  }
  function C_() {
    return this.option.visual[0];
  }
  function L_(n) {
    return {
      linear: function(t) {
        return Bl(t, n, this.option.visual, !0);
      },
      category: D_,
      piecewise: function(t, e) {
        var i = k_.call(this, e);
        return null == i && (i = Bl(t, n, this.option.visual, !0)), i;
      },
      fixed: C_,
    };
  }
  function k_(t) {
    var e = this.option,
      i = e.pieceList;
    if (e.hasSpecialVisual) {
      var n = i[b_.findPieceIndex(t, i)];
      if (n && n.visual) return n.visual[this.type];
    }
  }
  function P_(t, e) {
    return (
      (t.visual = e),
      'color' === t.type &&
        (t.parsedVisual = O(e, function(t) {
          return He(t);
        })),
      e
    );
  }
  var N_ = {
    linear: function(t) {
      return Bl(t, this.option.dataExtent, [0, 1], !0);
    },
    piecewise: function(t) {
      var e = this.option.pieceList,
        i = b_.findPieceIndex(t, e, !0);
      if (null != i) return Bl(i, [0, e.length - 1], [0, 1], !0);
    },
    category: function(t) {
      var e = this.option.categories ? this.option.categoryMap[t] : t;
      return null == e ? w_ : e;
    },
    fixed: nt,
  };
  function O_(t, e, i) {
    return t ? e <= i : e < i;
  }
  (b_.listVisualTypes = function() {
    var i = [];
    return (
      E(S_, function(t, e) {
        i.push(e);
      }),
      i
    );
  }),
    (b_.addVisualHandler = function(t, e) {
      S_[t] = e;
    }),
    (b_.isValidType = function(t) {
      return S_.hasOwnProperty(t);
    }),
    (b_.eachVisual = function(t, e, i) {
      V(t) ? E(t, e, i) : e.call(i, t);
    }),
    (b_.mapVisual = function(t, n, o) {
      var a,
        r = R(t) ? [] : V(t) ? {} : ((a = !0), null);
      return (
        b_.eachVisual(t, function(t, e) {
          var i = n.call(o, t, e);
          a ? (r = i) : (r[e] = i);
        }),
        r
      );
    }),
    (b_.retrieveVisuals = function(i) {
      var n,
        o = {};
      return (
        i &&
          x_(S_, function(t, e) {
            i.hasOwnProperty(e) && ((o[e] = i[e]), (n = !0));
          }),
        n ? o : null
      );
    }),
    (b_.prepareVisualTypes = function(t) {
      if (__(t)) {
        var i = [];
        x_(t, function(t, e) {
          i.push(e);
        }),
          (t = i);
      } else {
        if (!R(t)) return [];
        t = t.slice();
      }
      return (
        t.sort(function(t, e) {
          return 'color' === e && 'color' !== t && 0 === t.indexOf('color')
            ? 1
            : -1;
        }),
        t
      );
    }),
    (b_.dependsOn = function(t, e) {
      return 'color' === e ? !(!t || 0 !== t.indexOf(e)) : t === e;
    }),
    (b_.findPieceIndex = function(n, t, e) {
      for (var o, a = 1 / 0, i = 0, r = t.length; i < r; i++) {
        var s = t[i].value;
        if (null != s) {
          if (s === n || ('string' == typeof s && s === n + '')) return i;
          e && c(s, i);
        }
      }
      for (i = 0, r = t.length; i < r; i++) {
        var l = t[i],
          u = l.interval,
          h = l.close;
        if (u) {
          if (u[0] === -1 / 0) {
            if (O_(h[1], n, u[1])) return i;
          } else if (u[1] === 1 / 0) {
            if (O_(h[0], u[0], n)) return i;
          } else if (O_(h[0], u[0], n) && O_(h[1], n, u[1])) return i;
          e && c(u[0], i), e && c(u[1], i);
        }
      }
      if (e) return n === 1 / 0 ? t.length - 1 : n === -1 / 0 ? 0 : o;
      function c(t, e) {
        var i = Math.abs(t - n);
        i < a && ((a = i), (o = e));
      }
    });
  var E_ = R,
    R_ = 'itemStyle',
    z_ = {
      seriesType: 'treemap',
      reset: function(t, e, i, n) {
        var o = t.getData().tree,
          a = o.root,
          r = t.getModel(R_);
        a.isRemoved() ||
          !(function n(t, e, o, a, r, s) {
            var l = t.getModel();
            var i = t.getLayout();
            if (!i || i.invisible || !i.isInView) return;
            var u = t.getModel(R_);
            var h = o[t.depth];
            var c = B_(u, e, h, a);
            var d = u.get('borderColor');
            var f = u.get('borderColorSaturation');
            var p;
            null != f &&
              ((p = V_(c)),
              (g = f),
              (d = null != (m = p) ? $e(m, null, null, g) : null));
            var g, m;
            t.setVisual('borderColor', d);
            var v = t.viewChildren;
            if (v && v.length) {
              var y = F_(t, l, i, u, c, v);
              E(v, function(t, e) {
                if (t.depth >= r.length || t === r[t.depth]) {
                  var i = H_(l, c, t, e, y, s);
                  n(t, i, o, a, r, s);
                }
              });
            } else (p = V_(c)), t.setVisual('color', p);
          })(
            a,
            {},
            O(o.levelModels, function(t) {
              return t ? t.get(R_) : null;
            }),
            r,
            t.getViewRoot().getAncestors(),
            t,
          );
      },
    };
  function B_(i, n, o, a) {
    var r = P({}, n);
    return (
      E(['color', 'colorAlpha', 'colorSaturation'], function(t) {
        var e = i.get(t, !0);
        null == e && o && (e = o[t]),
          null == e && (e = n[t]),
          null == e && (e = a.get(t)),
          null != e && (r[t] = e);
      }),
      r
    );
  }
  function V_(t) {
    var e = G_(t, 'color');
    if (e) {
      var i = G_(t, 'colorAlpha'),
        n = G_(t, 'colorSaturation');
      return n && (e = $e(e, null, null, n)), i && (e = Je(e, i)), e;
    }
  }
  function G_(t, e) {
    var i = t[e];
    if (null != i && 'none' !== i) return i;
  }
  function F_(t, e, i, n, o, a) {
    if (a && a.length) {
      var r =
        W_(e, 'color') ||
        (null != o.color &&
          'none' !== o.color &&
          (W_(e, 'colorAlpha') || W_(e, 'colorSaturation')));
      if (r) {
        var s = e.get('visualMin'),
          l = e.get('visualMax'),
          u = i.dataExtent.slice();
        null != s && s < u[0] && (u[0] = s),
          null != l && l > u[1] && (u[1] = l);
        var h = e.get('colorMappingBy'),
          c = {type: r.name, dataExtent: u, visual: r.range};
        'color' !== c.type || ('index' !== h && 'id' !== h)
          ? (c.mappingMethod = 'linear')
          : ((c.mappingMethod = 'category'), (c.loop = !0));
        var d = new b_(c);
        return (d.__drColorMappingBy = h), d;
      }
    }
  }
  function W_(t, e) {
    var i = t.get(e);
    return E_(i) && i.length ? {name: e, range: i} : null;
  }
  function H_(t, e, i, n, o, a) {
    var r = P({}, e);
    if (o) {
      var s = o.type,
        l = 'color' === s && o.__drColorMappingBy,
        u =
          'index' === l
            ? n
            : 'id' === l
            ? a.mapIdToIndex(i.getId())
            : i.getValue(t.get('visualDimension'));
      r[s] = o.mapValueToVisual(u);
    }
    return r;
  }
  var Z_ = Math.max,
    U_ = Math.min,
    X_ = Z,
    Y_ = E,
    j_ = ['itemStyle', 'borderWidth'],
    q_ = ['itemStyle', 'gapWidth'],
    K_ = ['upperLabel', 'show'],
    $_ = ['upperLabel', 'height'],
    J_ = {
      seriesType: 'treemap',
      reset: function(t, e, i, n) {
        var o = i.getWidth(),
          a = i.getHeight(),
          r = t.option,
          s = Iu(t.getBoxLayoutParams(), {
            width: i.getWidth(),
            height: i.getHeight(),
          }),
          l = r.size || [],
          u = Vl(X_(s.width, l[0]), o),
          h = Vl(X_(s.height, l[1]), a),
          c = n && n.type,
          d = $x(n, ['treemapZoomToNode', 'treemapRootToNode'], t),
          f = 'treemapRender' === c || 'treemapMove' === c ? n.rootRect : null,
          p = t.getViewRoot(),
          g = Jx(p);
        if ('treemapMove' !== c) {
          var m =
              'treemapZoomToNode' === c
                ? (function(t, e, i, n, o) {
                    var a,
                      r = (e || {}).node,
                      s = [n, o];
                    if (!r || r === i) return s;
                    var l = n * o,
                      u = l * t.option.zoomToNodeRatio;
                    for (; (a = r.parentNode); ) {
                      for (
                        var h = 0, c = a.children, d = 0, f = c.length;
                        d < f;
                        d++
                      )
                        h += c[d].getValue();
                      var p = r.getValue();
                      if (0 === p) return s;
                      u *= h / p;
                      var g = a.getModel(),
                        m = g.get(j_),
                        v = Math.max(m, iw(g));
                      (u += 4 * m * m + (3 * m + v) * Math.pow(u, 0.5)),
                        Xl < u && (u = Xl),
                        (r = a);
                    }
                    u < l && (u = l);
                    var y = Math.pow(u / l, 0.5);
                    return [n * y, o * y];
                  })(t, d, p, u, h)
                : f
                ? [f.width, f.height]
                : [u, h],
            v = r.sort;
          v && 'asc' !== v && 'desc' !== v && (v = 'desc');
          var y = {squareRatio: r.squareRatio, sort: v, leafDepth: r.leafDepth};
          p.hostTree.clearLayouts();
          var x = {x: 0, y: 0, width: m[0], height: m[1], area: m[0] * m[1]};
          p.setLayout(x),
            (function t(e, i, n, o) {
              var a;
              var r;
              if (e.isRemoved()) return;
              var s = e.getLayout();
              a = s.width;
              r = s.height;
              var l = e.getModel();
              var u = l.get(j_);
              var h = l.get(q_) / 2;
              var c = iw(l);
              var d = Math.max(u, c);
              var f = u - h;
              var p = d - h;
              var l = e.getModel();
              e.setLayout(
                {borderWidth: u, upperHeight: d, upperLabelHeight: c},
                !0,
              );
              a = Z_(a - 2 * f, 0);
              r = Z_(r - f - p, 0);
              var g = a * r;
              var m = Q_(e, l, g, i, n, o);
              if (!m.length) return;
              var v = {x: f, y: p, width: a, height: r};
              var y = U_(a, r);
              var x = 1 / 0;
              var _ = [];
              _.area = 0;
              for (var w = 0, b = m.length; w < b; ) {
                var S = m[w];
                _.push(S), (_.area += S.getLayout().area);
                var M = tw(_, y, i.squareRatio);
                x =
                  M <= x
                    ? (w++, M)
                    : ((_.area -= _.pop().getLayout().area),
                      ew(_, y, v, h, !1),
                      (y = U_(v.width, v.height)),
                      (_.length = _.area = 0),
                      1 / 0);
              }
              _.length && ew(_, y, v, h, !0);
              if (!n) {
                var I = l.get('childrenVisibleMin');
                null != I && g < I && (n = !0);
              }
              for (var w = 0, b = m.length; w < b; w++) t(m[w], i, n, o + 1);
            })(p, y, !1, 0);
          x = p.getLayout();
          Y_(g, function(t, e) {
            var i = (g[e + 1] || p).getValue();
            t.setLayout(
              P({dataExtent: [i, i], borderWidth: 0, upperHeight: 0}, x),
            );
          });
        }
        var _ = t.getData().tree.root;
        _.setLayout(
          (function(t, e, i) {
            if (e) return {x: e.x, y: e.y};
            var n = {x: 0, y: 0};
            if (!i) return n;
            var o = i.node,
              a = o.getLayout();
            if (!a) return n;
            var r = [a.width / 2, a.height / 2],
              s = o;
            for (; s; ) {
              var l = s.getLayout();
              (r[0] += l.x), (r[1] += l.y), (s = s.parentNode);
            }
            return {x: t.width / 2 - r[0], y: t.height / 2 - r[1]};
          })(s, f, d),
          !0,
        ),
          t.setLayoutInfo(s),
          (function e(t, i, n, o, a) {
            var r = t.getLayout();
            var s = n[a];
            var l = s && s === t;
            if ((s && !l) || (a === n.length && t !== o)) return;
            t.setLayout(
              {
                isInView: !0,
                invisible: !l && !i.intersect(r),
                isAboveViewRoot: l,
              },
              !0,
            );
            var u = new Li(i.x - r.x, i.y - r.y, i.width, i.height);
            Y_(t.viewChildren || [], function(t) {
              e(t, u, n, o, a + 1);
            });
          })(_, new Li(-s.x, -s.y, o, a), g, p, 0);
      },
    };
  function Q_(t, e, i, n, o, a) {
    var r = t.children || [],
      s = n.sort;
    'asc' !== s && 'desc' !== s && (s = null);
    var l = null != n.leafDepth && n.leafDepth <= a;
    if (o && !l) return (t.viewChildren = []);
    !(function(t, n) {
      n &&
        t.sort(function(t, e) {
          var i =
            'asc' === n
              ? t.getValue() - e.getValue()
              : e.getValue() - t.getValue();
          return 0 == i
            ? 'asc' === n
              ? t.dataIndex - e.dataIndex
              : e.dataIndex - t.dataIndex
            : i;
        });
    })(
      (r = I(r, function(t) {
        return !t.isRemoved();
      })),
      s,
    );
    var u = (function(t, e, i) {
      for (var n = 0, o = 0, a = e.length; o < a; o++) n += e[o].getValue();
      var r = t.get('visualDimension');
      if (e && e.length)
        if ('value' === r && i)
          (s = [e[e.length - 1].getValue(), e[0].getValue()]),
            'asc' === i && s.reverse();
        else {
          var s = [1 / 0, -1 / 0];
          Y_(e, function(t) {
            var e = t.getValue(r);
            e < s[0] && (s[0] = e), e > s[1] && (s[1] = e);
          });
        }
      else s = [NaN, NaN];
      return {sum: n, dataExtent: s};
    })(e, r, s);
    if (0 === u.sum) return (t.viewChildren = []);
    if (
      ((u.sum = (function(t, e, i, n, o) {
        if (!n) return i;
        for (
          var a = t.get('visibleMin'), r = o.length, s = r, l = r - 1;
          0 <= l;
          l--
        ) {
          var u = o['asc' === n ? r - l - 1 : l].getValue();
          (u / i) * e < a && ((s = l), (i -= u));
        }
        return 'asc' === n ? o.splice(0, r - s) : o.splice(s, r - s), i;
      })(e, i, u.sum, s, r)),
      0 === u.sum)
    )
      return (t.viewChildren = []);
    for (var h = 0, c = r.length; h < c; h++) {
      var d = (r[h].getValue() / u.sum) * i;
      r[h].setLayout({area: d});
    }
    return (
      l && (r.length && t.setLayout({isLeafRoot: !0}, !0), (r.length = 0)),
      (t.viewChildren = r),
      t.setLayout({dataExtent: u.dataExtent}, !0),
      r
    );
  }
  function tw(t, e, i) {
    for (var n, o = 0, a = 1 / 0, r = 0, s = t.length; r < s; r++)
      (n = t[r].getLayout().area) && (n < a && (a = n), o < n && (o = n));
    var l = t.area * t.area,
      u = e * e * i;
    return l ? Z_((u * o) / l, l / (u * a)) : 1 / 0;
  }
  function ew(t, e, i, n, o) {
    var a = e === i.width ? 0 : 1,
      r = 1 - a,
      s = ['x', 'y'],
      l = ['width', 'height'],
      u = i[s[a]],
      h = e ? t.area / e : 0;
    (o || h > i[l[r]]) && (h = i[l[r]]);
    for (var c = 0, d = t.length; c < d; c++) {
      var f = t[c],
        p = {},
        g = h ? f.getLayout().area / h : 0,
        m = (p[l[r]] = Z_(h - 2 * n, 0)),
        v = i[s[a]] + i[l[a]] - u,
        y = c === d - 1 || v < g ? v : g,
        x = (p[l[a]] = Z_(y - 2 * n, 0));
      (p[s[r]] = i[s[r]] + U_(n, m / 2)),
        (p[s[a]] = u + U_(n, x / 2)),
        (u += y),
        f.setLayout(p, !0);
    }
    (i[s[r]] += h), (i[l[r]] -= h);
  }
  function iw(t) {
    return t.get(K_) ? t.get($_) : 0;
  }
  function nw(t) {
    return '_EC_' + t;
  }
  Cf(z_), Df(J_);
  function ow(t) {
    (this._directed = t || !1),
      (this.nodes = []),
      (this.edges = []),
      (this._nodesMap = {}),
      (this._edgesMap = {}),
      this.data,
      this.edgeData;
  }
  var aw = ow.prototype;
  function rw(t, e) {
    (this.id = null == t ? '' : t),
      (this.inEdges = []),
      (this.outEdges = []),
      (this.edges = []),
      this.hostGraph,
      (this.dataIndex = null == e ? -1 : e);
  }
  function sw(t, e, i) {
    (this.node1 = t), (this.node2 = e), (this.dataIndex = null == i ? -1 : i);
  }
  (aw.type = 'graph'),
    (aw.isDirected = function() {
      return this._directed;
    }),
    (aw.addNode = function(t, e) {
      t = null == t ? '' + e : '' + t;
      var i = this._nodesMap;
      if (!i[nw(t)]) {
        var n = new rw(t, e);
        return (n.hostGraph = this).nodes.push(n), (i[nw(t)] = n);
      }
      D && console.error('Graph nodes have duplicate name or id');
    }),
    (aw.getNodeByIndex = function(t) {
      var e = this.data.getRawIndex(t);
      return this.nodes[e];
    }),
    (aw.getNodeById = function(t) {
      return this._nodesMap[nw(t)];
    }),
    (aw.addEdge = function(t, e, i) {
      var n = this._nodesMap,
        o = this._edgesMap;
      if (
        ('number' == typeof t && (t = this.nodes[t]),
        'number' == typeof e && (e = this.nodes[e]),
        rw.isInstance(t) || (t = n[nw(t)]),
        rw.isInstance(e) || (e = n[nw(e)]),
        t && e)
      ) {
        var a = t.id + '-' + e.id;
        if (!o[a]) {
          var r = new sw(t, e, i);
          return (
            (r.hostGraph = this)._directed &&
              (t.outEdges.push(r), e.inEdges.push(r)),
            t.edges.push(r),
            t !== e && e.edges.push(r),
            this.edges.push(r),
            (o[a] = r)
          );
        }
      }
    }),
    (aw.getEdgeByIndex = function(t) {
      var e = this.edgeData.getRawIndex(t);
      return this.edges[e];
    }),
    (aw.getEdge = function(t, e) {
      rw.isInstance(t) && (t = t.id), rw.isInstance(e) && (e = e.id);
      var i = this._edgesMap;
      return this._directed ? i[t + '-' + e] : i[t + '-' + e] || i[e + '-' + t];
    }),
    (aw.eachNode = function(t, e) {
      for (var i = this.nodes, n = i.length, o = 0; o < n; o++)
        0 <= i[o].dataIndex && t.call(e, i[o], o);
    }),
    (aw.eachEdge = function(t, e) {
      for (var i = this.edges, n = i.length, o = 0; o < n; o++)
        0 <= i[o].dataIndex &&
          0 <= i[o].node1.dataIndex &&
          0 <= i[o].node2.dataIndex &&
          t.call(e, i[o], o);
    }),
    (aw.breadthFirstTraverse = function(t, e, i, n) {
      if ((rw.isInstance(e) || (e = this._nodesMap[nw(e)]), e)) {
        for (
          var o = 'out' === i ? 'outEdges' : 'in' === i ? 'inEdges' : 'edges',
            a = 0;
          a < this.nodes.length;
          a++
        )
          this.nodes[a].__visited = !1;
        if (!t.call(n, e, null))
          for (var r = [e]; r.length; ) {
            var s = r.shift(),
              l = s[o];
            for (a = 0; a < l.length; a++) {
              var u = l[a],
                h = u.node1 === s ? u.node2 : u.node1;
              if (!h.__visited) {
                if (t.call(n, h, s)) return;
                r.push(h), (h.__visited = !0);
              }
            }
          }
      }
    }),
    (aw.update = function() {
      for (
        var t = this.data,
          i = this.edgeData,
          e = this.nodes,
          n = this.edges,
          o = 0,
          a = e.length;
        o < a;
        o++
      )
        e[o].dataIndex = -1;
      for (o = 0, a = t.count(); o < a; o++) e[t.getRawIndex(o)].dataIndex = o;
      i.filterSelf(function(t) {
        var e = n[i.getRawIndex(t)];
        return 0 <= e.node1.dataIndex && 0 <= e.node2.dataIndex;
      });
      for (o = 0, a = n.length; o < a; o++) n[o].dataIndex = -1;
      for (o = 0, a = i.count(); o < a; o++) n[i.getRawIndex(o)].dataIndex = o;
    }),
    (aw.clone = function() {
      for (
        var t = new ow(this._directed), e = this.nodes, i = this.edges, n = 0;
        n < e.length;
        n++
      )
        t.addNode(e[n].id, e[n].dataIndex);
      for (n = 0; n < i.length; n++) {
        var o = i[n];
        t.addEdge(o.node1.id, o.node2.id, o.dataIndex);
      }
      return t;
    }),
    (rw.prototype = {
      constructor: rw,
      degree: function() {
        return this.edges.length;
      },
      inDegree: function() {
        return this.inEdges.length;
      },
      outDegree: function() {
        return this.outEdges.length;
      },
      getModel: function(t) {
        if (!(this.dataIndex < 0))
          return this.hostGraph.data.getItemModel(this.dataIndex).getModel(t);
      },
    }),
    (sw.prototype.getModel = function(t) {
      if (!(this.dataIndex < 0))
        return this.hostGraph.edgeData.getItemModel(this.dataIndex).getModel(t);
    });
  function lw(i, n) {
    return {
      getValue: function(t) {
        var e = this[i][n];
        return e.get(e.getDimension(t || 'value'), this.dataIndex);
      },
      setVisual: function(t, e) {
        0 <= this.dataIndex && this[i][n].setItemVisual(this.dataIndex, t, e);
      },
      getVisual: function(t, e) {
        return this[i][n].getItemVisual(this.dataIndex, t, e);
      },
      setLayout: function(t, e) {
        0 <= this.dataIndex && this[i][n].setItemLayout(this.dataIndex, t, e);
      },
      getLayout: function() {
        return this[i][n].getItemLayout(this.dataIndex);
      },
      getGraphicEl: function() {
        return this[i][n].getItemGraphicEl(this.dataIndex);
      },
      getRawIndex: function() {
        return this[i][n].getRawIndex(this.dataIndex);
      },
    };
  }
  S(rw, lw('hostGraph', 'data')),
    S(sw, lw('hostGraph', 'edgeData')),
    (ow.Node = rw),
    (ow.Edge = sw),
    ua(rw),
    ua(sw);
  function uw(t, e, i, n, o) {
    for (var a = new ow(n), r = 0; r < t.length; r++)
      a.addNode(Z(t[r].id, t[r].name, r), r);
    var s = [],
      l = [],
      u = 0;
    for (r = 0; r < e.length; r++) {
      var h = e[r],
        c = h.source,
        d = h.target;
      a.addEdge(c, d, u) && (l.push(h), s.push(Z(h.id, c + ' > ' + d)), u++);
    }
    var f,
      p = i.get('coordinateSystem');
    if ('cartesian2d' === p || 'polar' === p) f = bp(t, i);
    else {
      var g = dh.get(p),
        m = (g && 'view' !== g.type && g.dimensions) || [];
      w(m, 'value') < 0 && m.concat(['value']);
      var v = gp(t, {coordDimensions: m});
      (f = new Qf(v, i)).initData(t);
    }
    var y = new Qf(['value'], i);
    return (
      y.initData(l, s),
      o && o(f, y),
      Tx({
        mainData: f,
        struct: a,
        structAttr: 'graph',
        datas: {node: f, edge: y},
        datasAttr: {node: 'data', edge: 'edgeData'},
      }),
      a.update(),
      a
    );
  }
  var hw = Of({
      type: 'series.graph',
      init: function(t) {
        hw.superApply(this, 'init', arguments);
        var e = this;
        function i() {
          return e._categoriesData;
        }
        (this.legendVisualProvider = new iy(i, i)),
          this.fillDataTextStyle(t.edges || t.links),
          this._updateCategoriesData();
      },
      mergeOption: function(t) {
        hw.superApply(this, 'mergeOption', arguments),
          this.fillDataTextStyle(t.edges || t.links),
          this._updateCategoriesData();
      },
      mergeDefaultAndTheme: function(t) {
        hw.superApply(this, 'mergeDefaultAndTheme', arguments),
          Ho(t, ['edgeLabel'], ['show']);
      },
      getInitialData: function(t, s) {
        var e = t.edges || t.links || [],
          i = t.data || t.nodes || [],
          l = this;
        if (i && e)
          return uw(i, e, this, !0, function(t, e) {
            t.wrapMethod('getItemModel', function(t) {
              var e = l._categoriesModels[t.getShallow('category')];
              return (
                e && ((e.parentModel = t.parentModel), (t.parentModel = e)), t
              );
            });
            var i = l.getModel('edgeLabel'),
              n = new Pl({label: i.option}, i.parentModel, s),
              o = l.getModel('emphasis.edgeLabel'),
              a = new Pl({emphasis: {label: o.option}}, o.parentModel, s);
            function r(t) {
              return (t = this.parsePath(t)) && 'label' === t[0]
                ? n
                : t && 'emphasis' === t[0] && 'label' === t[1]
                ? a
                : this.parentModel;
            }
            e.wrapMethod('getItemModel', function(t) {
              return t.customizeGetParent(r), t;
            });
          }).data;
      },
      getGraph: function() {
        return this.getData().graph;
      },
      getEdgeData: function() {
        return this.getGraph().edgeData;
      },
      getCategoriesData: function() {
        return this._categoriesData;
      },
      formatTooltip: function(t, e, i) {
        if ('edge' !== i)
          return hw.superApply(this, 'formatTooltip', arguments);
        var n = this.getData(),
          o = this.getDataParams(t, i),
          a = n.graph.getEdgeByIndex(t),
          r = n.getName(a.node1.dataIndex),
          s = n.getName(a.node2.dataIndex),
          l = [];
        return (
          null != r && l.push(r),
          null != s && l.push(s),
          (l = lu(l.join(' > '))),
          o.value && (l += ' : ' + lu(o.value)),
          l
        );
      },
      _updateCategoriesData: function() {
        var t = O(this.option.categories || [], function(t) {
            return null != t.value ? t : P({value: 0}, t);
          }),
          e = new Qf(['value'], this);
        e.initData(t),
          (this._categoriesData = e),
          (this._categoriesModels = e.mapArray(function(t) {
            return e.getItemModel(t, !0);
          }));
      },
      setZoom: function(t) {
        this.option.zoom = t;
      },
      setCenter: function(t) {
        this.option.center = t;
      },
      isAnimationEnabled: function() {
        return (
          hw.superCall(this, 'isAnimationEnabled') &&
          !('force' === this.get('layout') && this.get('force.layoutAnimation'))
        );
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'view',
        legendHoverLink: !0,
        hoverAnimation: !0,
        layout: null,
        focusNodeAdjacency: !1,
        circular: {rotateLabel: !1},
        force: {
          initLayout: null,
          repulsion: [0, 50],
          gravity: 0.1,
          friction: 0.6,
          edgeLength: 30,
          layoutAnimation: !0,
        },
        left: 'center',
        top: 'center',
        symbol: 'circle',
        symbolSize: 10,
        edgeSymbol: ['none', 'none'],
        edgeSymbolSize: 10,
        edgeLabel: {position: 'middle', distance: 5},
        draggable: !1,
        roam: !1,
        center: null,
        zoom: 1,
        nodeScaleRatio: 0.6,
        label: {show: !1, formatter: '{b}'},
        itemStyle: {},
        lineStyle: {color: '#aaa', width: 1, curveness: 0, opacity: 0.5},
        emphasis: {label: {show: !0}},
      },
    }),
    cw = cs.prototype,
    dw = gs.prototype;
  function fw(t) {
    return isNaN(+t.cpx1) || isNaN(+t.cpy1);
  }
  var pw = Ps({
      type: 'ec-line',
      style: {stroke: '#000', fill: null},
      shape: {x1: 0, y1: 0, x2: 0, y2: 0, percent: 1, cpx1: null, cpy1: null},
      buildPath: function(t, e) {
        this[fw(e) ? '_buildPathLine' : '_buildPathCurve'](t, e);
      },
      _buildPathLine: cw.buildPath,
      _buildPathCurve: dw.buildPath,
      pointAt: function(t) {
        return this[fw(this.shape) ? '_pointAtLine' : '_pointAtCurve'](t);
      },
      _pointAtLine: cw.pointAt,
      _pointAtCurve: dw.pointAt,
      tangentAt: function(t) {
        var e = this.shape,
          i = fw(e) ? [e.x2 - e.x1, e.y2 - e.y1] : this._tangentAtCurve(t);
        return yt(i, i);
      },
      _tangentAtCurve: dw.tangentAt,
    }),
    gw = ['fromSymbol', 'toSymbol'];
  function mw(t) {
    return '_' + t + 'Type';
  }
  function vw(t, e, i) {
    var n = e.getItemVisual(i, 'color'),
      o = e.getItemVisual(i, t),
      a = e.getItemVisual(i, t + 'Size');
    if (o && 'none' !== o) {
      R(a) || (a = [a, a]);
      var r = Dg(o, -a[0] / 2, -a[1] / 2, a[0], a[1], n);
      return (r.name = t), r;
    }
  }
  function yw(t, e) {
    (t.x1 = e[0][0]),
      (t.y1 = e[0][1]),
      (t.x2 = e[1][0]),
      (t.y2 = e[1][1]),
      (t.percent = 1);
    var i = e[2];
    i ? ((t.cpx1 = i[0]), (t.cpy1 = i[1])) : ((t.cpx1 = NaN), (t.cpy1 = NaN));
  }
  function xw(t, e, i) {
    ki.call(this), this._createLine(t, e, i);
  }
  var _w = xw.prototype;
  function ww(t) {
    (this._ctor = t || xw), (this.group = new ki());
  }
  (_w.beforeUpdate = function() {
    var t = this.childOfName('fromSymbol'),
      e = this.childOfName('toSymbol'),
      i = this.childOfName('label');
    if (t || e || !i.ignore) {
      for (var n = 1, o = this.parent; o; )
        o.scale && (n /= o.scale[0]), (o = o.parent);
      var a = this.childOfName('line');
      if (this.__dirty || a.__dirty) {
        var r = a.shape.percent,
          s = a.pointAt(0),
          l = a.pointAt(r),
          u = dt([], l, s);
        if ((yt(u, u), t)) {
          t.attr('position', s);
          var h = a.tangentAt(0);
          t.attr('rotation', Math.PI / 2 - Math.atan2(h[1], h[0])),
            t.attr('scale', [n * r, n * r]);
        }
        if (e) {
          e.attr('position', l);
          h = a.tangentAt(1);
          e.attr('rotation', -Math.PI / 2 - Math.atan2(h[1], h[0])),
            e.attr('scale', [n * r, n * r]);
        }
        if (!i.ignore) {
          var c, d, f, p;
          i.attr('position', l);
          var g = i.__labelDistance,
            m = g[0] * n,
            v = g[1] * n,
            y = r / 2,
            x = [(h = a.tangentAt(y))[1], -h[0]],
            _ = a.pointAt(y);
          0 < x[1] && ((x[0] = -x[0]), (x[1] = -x[1]));
          var w,
            b = h[0] < 0 ? -1 : 1;
          if ('start' !== i.__position && 'end' !== i.__position) {
            var S = -Math.atan2(h[1], h[0]);
            l[0] < s[0] && (S = Math.PI + S), i.attr('rotation', S);
          }
          switch (i.__position) {
            case 'insideStartTop':
            case 'insideMiddleTop':
            case 'insideEndTop':
            case 'middle':
              (w = -v), (f = 'bottom');
              break;
            case 'insideStartBottom':
            case 'insideMiddleBottom':
            case 'insideEndBottom':
              (w = v), (f = 'top');
              break;
            default:
              (w = 0), (f = 'middle');
          }
          switch (i.__position) {
            case 'end':
              (c = [u[0] * m + l[0], u[1] * v + l[1]]),
                (d = 0.8 < u[0] ? 'left' : u[0] < -0.8 ? 'right' : 'center'),
                (f = 0.8 < u[1] ? 'top' : u[1] < -0.8 ? 'bottom' : 'middle');
              break;
            case 'start':
              (c = [-u[0] * m + s[0], -u[1] * v + s[1]]),
                (d = 0.8 < u[0] ? 'right' : u[0] < -0.8 ? 'left' : 'center'),
                (f = 0.8 < u[1] ? 'bottom' : u[1] < -0.8 ? 'top' : 'middle');
              break;
            case 'insideStartTop':
            case 'insideStart':
            case 'insideStartBottom':
              (c = [m * b + s[0], s[1] + w]),
                (d = h[0] < 0 ? 'right' : 'left'),
                (p = [-m * b, -w]);
              break;
            case 'insideMiddleTop':
            case 'insideMiddle':
            case 'insideMiddleBottom':
            case 'middle':
              (c = [_[0], _[1] + w]), (d = 'center'), (p = [0, -w]);
              break;
            case 'insideEndTop':
            case 'insideEnd':
            case 'insideEndBottom':
              (c = [-m * b + l[0], l[1] + w]),
                (d = 0 <= h[0] ? 'right' : 'left'),
                (p = [m * b, -w]);
          }
          i.attr({
            style: {
              textVerticalAlign: i.__verticalAlign || f,
              textAlign: i.__textAlign || d,
            },
            position: c,
            scale: [n, n],
            origin: p,
          });
        }
      }
    }
  }),
    (_w._createLine = function(i, n, t) {
      var e = i.hostModel,
        o = (function(t) {
          var e = new pw({name: 'line', subPixelOptimize: !0});
          return yw(e.shape, t), e;
        })(i.getItemLayout(n));
      (o.shape.percent = 0), gl(o, {shape: {percent: 1}}, e, n), this.add(o);
      var a = new jr({name: 'label', lineLabelOriginalOpacity: 1});
      this.add(a),
        E(
          gw,
          function(t) {
            var e = vw(t, i, n);
            this.add(e), (this[mw(t)] = i.getItemVisual(n, t));
          },
          this,
        ),
        this._updateCommonStl(i, n, t);
    }),
    (_w.updateData = function(o, a, t) {
      var e = o.hostModel,
        i = this.childOfName('line'),
        n = o.getItemLayout(a),
        r = {shape: {}};
      yw(r.shape, n),
        pl(i, r, e, a),
        E(
          gw,
          function(t) {
            var e = o.getItemVisual(a, t),
              i = mw(t);
            if (this[i] !== e) {
              this.remove(this.childOfName(t));
              var n = vw(t, o, a);
              this.add(n);
            }
            this[i] = e;
          },
          this,
        ),
        this._updateCommonStl(o, a, t);
    }),
    (_w._updateCommonStl = function(t, e, i) {
      var n = t.hostModel,
        o = this.childOfName('line'),
        a = i && i.lineStyle,
        r = i && i.hoverLineStyle,
        s = i && i.labelModel,
        l = i && i.hoverLabelModel;
      if (!i || t.hasItemOption) {
        var u = t.getItemModel(e);
        (a = u.getModel('lineStyle').getLineStyle()),
          (r = u.getModel('emphasis.lineStyle').getLineStyle()),
          (s = u.getModel('label')),
          (l = u.getModel('emphasis.label'));
      }
      var h = t.getItemVisual(e, 'color'),
        c = X(t.getItemVisual(e, 'opacity'), a.opacity, 1);
      o.useStyle(
        C({strokeNoScale: !0, fill: 'none', stroke: h, opacity: c}, a),
      ),
        (o.hoverStyle = r),
        E(
          gw,
          function(t) {
            var e = this.childOfName(t);
            e && (e.setColor(h), e.setStyle({opacity: c}));
          },
          this,
        );
      var d,
        f,
        p = s.getShallow('show'),
        g = l.getShallow('show'),
        m = this.childOfName('label');
      if (
        (p || g) &&
        ((d = h || '#000'),
        null == (f = n.getFormattedLabel(e, 'normal', t.dataType)))
      ) {
        var v = n.getRawValue(e);
        f = null == v ? t.getName(e) : isFinite(v) ? Gl(v) : v;
      }
      var y = p ? f : null,
        x = g ? U(n.getFormattedLabel(e, 'emphasis', t.dataType), f) : null,
        _ = m.style;
      if (null != y || null != x) {
        rl(m.style, s, {text: y}, {autoColor: d}),
          (m.__textAlign = _.textAlign),
          (m.__verticalAlign = _.textVerticalAlign),
          (m.__position = s.get('position') || 'middle');
        var w = s.get('distance');
        R(w) || (w = [w, w]), (m.__labelDistance = w);
      }
      (m.hoverStyle =
        null != x
          ? {
              text: x,
              textFill: l.getTextColor(!0),
              fontStyle: l.getShallow('fontStyle'),
              fontWeight: l.getShallow('fontWeight'),
              fontSize: l.getShallow('fontSize'),
              fontFamily: l.getShallow('fontFamily'),
            }
          : {text: null}),
        (m.ignore = !p && !g),
        tl(this);
    }),
    (_w.highlight = function() {
      this.trigger('emphasis');
    }),
    (_w.downplay = function() {
      this.trigger('normal');
    }),
    (_w.updateLayout = function(t, e) {
      this.setLinePoints(t.getItemLayout(e));
    }),
    (_w.setLinePoints = function(t) {
      var e = this.childOfName('line');
      yw(e.shape, t), e.dirty();
    }),
    b(xw, ki);
  var bw = ww.prototype;
  function Sw(t) {
    var e = t.hostModel;
    return {
      lineStyle: e.getModel('lineStyle').getLineStyle(),
      hoverLineStyle: e.getModel('emphasis.lineStyle').getLineStyle(),
      labelModel: e.getModel('label'),
      hoverLabelModel: e.getModel('emphasis.label'),
    };
  }
  function Mw(t) {
    return isNaN(t[0]) || isNaN(t[1]);
  }
  function Iw(t) {
    return !Mw(t[0]) && !Mw(t[1]);
  }
  function Tw(t) {
    var e = t.coordinateSystem;
    if ('view' !== e.type) return 1;
    var i = t.option.nodeScaleRatio,
      n = e.scale,
      o = (n && n[0]) || 1;
    return ((e.getZoom() - 1) * i + 1) / o;
  }
  function Aw(t) {
    var e = t.getVisual('symbolSize');
    return e instanceof Array && (e = (e[0] + e[1]) / 2), +e;
  }
  (bw.isPersistent = function() {
    return !0;
  }),
    (bw.updateData = function(i) {
      var n = this,
        e = n.group,
        o = n._lineData;
      (n._lineData = i), o || e.removeAll();
      var a = Sw(i);
      i.diff(o)
        .add(function(t) {
          !(function(t, e, i, n) {
            if (!Iw(e.getItemLayout(i))) return;
            var o = new t._ctor(e, i, n);
            e.setItemGraphicEl(i, o), t.group.add(o);
          })(n, i, t, a);
        })
        .update(function(t, e) {
          !(function(t, e, i, n, o, a) {
            var r = e.getItemGraphicEl(n);
            if (!Iw(i.getItemLayout(o))) return t.group.remove(r);
            r ? r.updateData(i, o, a) : (r = new t._ctor(i, o, a));
            i.setItemGraphicEl(o, r), t.group.add(r);
          })(n, o, i, e, t, a);
        })
        .remove(function(t) {
          e.remove(o.getItemGraphicEl(t));
        })
        .execute();
    }),
    (bw.updateLayout = function() {
      var i = this._lineData;
      i &&
        i.eachItemGraphicEl(function(t, e) {
          t.updateLayout(i, e);
        }, this);
    }),
    (bw.incrementalPrepareUpdate = function(t) {
      (this._seriesScope = Sw(t)),
        (this._lineData = null),
        this.group.removeAll();
    }),
    (bw.incrementalUpdate = function(t, e) {
      function i(t) {
        t.isGroup ||
          (function(t) {
            return t.animators && 0 < t.animators.length;
          })(t) ||
          (t.incremental = t.useHoverLayer = !0);
      }
      for (var n = t.start; n < t.end; n++) {
        if (Iw(e.getItemLayout(n))) {
          var o = new this._ctor(e, n, this._seriesScope);
          o.traverse(i), this.group.add(o), e.setItemGraphicEl(n, o);
        }
      }
    }),
    (bw.remove = function() {
      this._clearIncremental(),
        (this._incremental = null),
        this.group.removeAll();
    }),
    (bw._clearIncremental = function() {
      var t = this._incremental;
      t && t.clearDisplaybles();
    });
  var Dw = [],
    Cw = [],
    Lw = [],
    kw = Na,
    Pw = bt,
    Nw = Math.abs;
  function Ow(t, e, i) {
    for (
      var n,
        o = t[0],
        a = t[1],
        r = t[2],
        s = 1 / 0,
        l = i * i,
        u = 0.1,
        h = 0.1;
      h <= 0.9;
      h += 0.1
    ) {
      (Dw[0] = kw(o[0], a[0], r[0], h)),
        (Dw[1] = kw(o[1], a[1], r[1], h)),
        (f = Nw(Pw(Dw, e) - l)) < s && ((s = f), (n = h));
    }
    for (var c = 0; c < 32; c++) {
      var d = n + u;
      (Cw[0] = kw(o[0], a[0], r[0], n)),
        (Cw[1] = kw(o[1], a[1], r[1], n)),
        (Lw[0] = kw(o[0], a[0], r[0], d)),
        (Lw[1] = kw(o[1], a[1], r[1], d));
      var f = Pw(Cw, e) - l;
      if (Nw(f) < 0.01) break;
      var p = Pw(Lw, e) - l;
      (u /= 2),
        f < 0 ? (0 <= p ? (n += u) : (n -= u)) : 0 <= p ? (n -= u) : (n += u);
    }
    return n;
  }
  function Ew(t, l) {
    var u = [],
      h = Ra,
      c = [[], [], []],
      d = [[], []],
      f = [];
    (l /= 2),
      t.eachEdge(function(t, e) {
        var i = t.getLayout(),
          n = t.getVisual('fromSymbol'),
          o = t.getVisual('toSymbol');
        i.__original ||
          ((i.__original = [lt(i[0]), lt(i[1])]),
          i[2] && i.__original.push(lt(i[2])));
        var a = i.__original;
        if (null != i[2]) {
          if (
            (st(c[0], a[0]), st(c[1], a[2]), st(c[2], a[1]), n && 'none' !== n)
          ) {
            var r = Aw(t.node1),
              s = Ow(c, a[0], r * l);
            h(c[0][0], c[1][0], c[2][0], s, u),
              (c[0][0] = u[3]),
              (c[1][0] = u[4]),
              h(c[0][1], c[1][1], c[2][1], s, u),
              (c[0][1] = u[3]),
              (c[1][1] = u[4]);
          }
          if (o && 'none' !== o) {
            (r = Aw(t.node2)), (s = Ow(c, a[1], r * l));
            h(c[0][0], c[1][0], c[2][0], s, u),
              (c[1][0] = u[1]),
              (c[2][0] = u[2]),
              h(c[0][1], c[1][1], c[2][1], s, u),
              (c[1][1] = u[1]),
              (c[2][1] = u[2]);
          }
          st(i[0], c[0]), st(i[1], c[2]), st(i[2], c[1]);
        } else {
          if (
            (st(d[0], a[0]),
            st(d[1], a[1]),
            dt(f, d[1], d[0]),
            yt(f, f),
            n && 'none' !== n)
          ) {
            r = Aw(t.node1);
            ct(d[0], d[0], f, r * l);
          }
          if (o && 'none' !== o) {
            r = Aw(t.node2);
            ct(d[1], d[1], f, -r * l);
          }
          st(i[0], d[0]), st(i[1], d[1]);
        }
      });
  }
  var Rw = '__focusNodeAdjacency',
    zw = '__unfocusNodeAdjacency',
    Bw = ['itemStyle', 'opacity'],
    Vw = ['lineStyle', 'opacity'];
  function Gw(t, e) {
    var i = t.getVisual('opacity');
    return null != i ? i : t.getModel().get(e);
  }
  function Fw(t, e, i) {
    var n = t.getGraphicEl(),
      o = Gw(t, e);
    null != i && (null == o && (o = 1), (o *= i)),
      n.downplay && n.downplay(),
      n.traverse(function(t) {
        if (!t.isGroup) {
          var e = t.lineLabelOriginalOpacity;
          (null != e && null == i) || (e = o), t.setStyle('opacity', e);
        }
      });
  }
  function Ww(t, e) {
    var i = Gw(t, e),
      n = t.getGraphicEl();
    n.traverse(function(t) {
      t.isGroup || t.setStyle('opacity', i);
    }),
      n.highlight && n.highlight();
  }
  Ef({
    type: 'graph',
    init: function(t, e) {
      var i = new um(),
        n = new ww(),
        o = this.group;
      (this._controller = new Xy(e.getZr())),
        (this._controllerHost = {target: o}),
        o.add(i.group),
        o.add(n.group),
        (this._symbolDraw = i),
        (this._lineDraw = n),
        (this._firstRender = !0);
    },
    render: function(o, t, a) {
      var r = this,
        e = o.coordinateSystem;
      this._model = o;
      var i = this._symbolDraw,
        n = this._lineDraw,
        s = this.group;
      if ('view' === e.type) {
        var l = {position: e.position, scale: e.scale};
        this._firstRender ? s.attr(l) : pl(s, l, o);
      }
      Ew(o.getGraph(), Tw(o));
      var u = o.getData();
      i.updateData(u);
      var h = o.getEdgeData();
      n.updateData(h),
        this._updateNodeAndLinkScale(),
        this._updateController(o, t, a),
        clearTimeout(this._layoutTimeout);
      var c = o.forceLayout,
        d = o.get('force.layoutAnimation');
      c && this._startForceLayoutIteration(c, d),
        u.eachItemGraphicEl(function(t, e) {
          var i = u.getItemModel(e);
          t.off('drag').off('dragend');
          var n = i.get('draggable');
          n &&
            t
              .on(
                'drag',
                function() {
                  c &&
                    (c.warmUp(),
                    this._layouting || this._startForceLayoutIteration(c, d),
                    c.setFixed(e),
                    u.setItemLayout(e, t.position));
                },
                this,
              )
              .on(
                'dragend',
                function() {
                  c && c.setUnfixed(e);
                },
                this,
              ),
            t.setDraggable(n && c),
            t[Rw] && t.off('mouseover', t[Rw]),
            t[zw] && t.off('mouseout', t[zw]),
            i.get('focusNodeAdjacency') &&
              (t.on(
                'mouseover',
                (t[Rw] = function() {
                  r._clearTimer(),
                    a.dispatchAction({
                      type: 'focusNodeAdjacency',
                      seriesId: o.id,
                      dataIndex: t.dataIndex,
                    });
                }),
              ),
              t.on(
                'mouseout',
                (t[zw] = function() {
                  r._dispatchUnfocus(a);
                }),
              ));
        }, this),
        u.graph.eachEdge(function(t) {
          var e = t.getGraphicEl();
          e[Rw] && e.off('mouseover', e[Rw]),
            e[zw] && e.off('mouseout', e[zw]),
            t.getModel().get('focusNodeAdjacency') &&
              (e.on(
                'mouseover',
                (e[Rw] = function() {
                  r._clearTimer(),
                    a.dispatchAction({
                      type: 'focusNodeAdjacency',
                      seriesId: o.id,
                      edgeDataIndex: t.dataIndex,
                    });
                }),
              ),
              e.on(
                'mouseout',
                (e[zw] = function() {
                  r._dispatchUnfocus(a);
                }),
              ));
        });
      var f = 'circular' === o.get('layout') && o.get('circular.rotateLabel'),
        p = u.getLayout('cx'),
        g = u.getLayout('cy');
      u.eachItemGraphicEl(function(t, e) {
        var i = u.getItemModel(e).get('label.rotate') || 0,
          n = t.getSymbolPath();
        if (f) {
          var o = u.getItemLayout(e),
            a = Math.atan2(o[1] - g, o[0] - p);
          a < 0 && (a = 2 * Math.PI + a);
          var r = o[0] < p;
          r && (a -= Math.PI);
          var s = r ? 'left' : 'right';
          al(
            n,
            {textRotation: -a, textPosition: s, textOrigin: 'center'},
            {textPosition: s},
          );
        } else al(n, {textRotation: (i *= Math.PI / 180)});
      }),
        (this._firstRender = !1);
    },
    dispose: function() {
      this._controller && this._controller.dispose(),
        (this._controllerHost = {}),
        this._clearTimer();
    },
    _dispatchUnfocus: function(t, e) {
      var i = this;
      this._clearTimer(),
        (this._unfocusDelayTimer = setTimeout(function() {
          (i._unfocusDelayTimer = null),
            t.dispatchAction({
              type: 'unfocusNodeAdjacency',
              seriesId: i._model.id,
            });
        }, 500));
    },
    _clearTimer: function() {
      this._unfocusDelayTimer &&
        (clearTimeout(this._unfocusDelayTimer),
        (this._unfocusDelayTimer = null));
    },
    focusNodeAdjacency: function(t, e, i, n) {
      var o = t.getData().graph,
        a = n.dataIndex,
        r = n.edgeDataIndex,
        s = o.getNodeByIndex(a),
        l = o.getEdgeByIndex(r);
      (s || l) &&
        (o.eachNode(function(t) {
          Fw(t, Bw, 0.1);
        }),
        o.eachEdge(function(t) {
          Fw(t, Vw, 0.1);
        }),
        s &&
          (Ww(s, Bw),
          E(s.edges, function(t) {
            t.dataIndex < 0 || (Ww(t, Vw), Ww(t.node1, Bw), Ww(t.node2, Bw));
          })),
        l && (Ww(l, Vw), Ww(l.node1, Bw), Ww(l.node2, Bw)));
    },
    unfocusNodeAdjacency: function(t, e, i, n) {
      var o = t.getData().graph;
      o.eachNode(function(t) {
        Fw(t, Bw);
      }),
        o.eachEdge(function(t) {
          Fw(t, Vw);
        });
    },
    _startForceLayoutIteration: function(t, i) {
      var n = this;
      !(function e() {
        t.step(function(t) {
          n.updateLayout(n._model),
            (n._layouting = !t) &&
              (i ? (n._layoutTimeout = setTimeout(e, 16)) : e());
        });
      })();
    },
    _updateController: function(o, t, a) {
      var e = this._controller,
        i = this._controllerHost,
        r = this.group;
      e.setPointerChecker(function(t, e, i) {
        var n = r.getBoundingRect();
        return n.applyTransform(r.transform), n.contain(e, i) && !ox(t, a, o);
      }),
        'view' === o.coordinateSystem.type
          ? (e.enable(o.get('roam')),
            (i.zoomLimit = o.get('scaleLimit')),
            (i.zoom = o.coordinateSystem.getZoom()),
            e
              .off('pan')
              .off('zoom')
              .on('pan', function(t) {
                ex(i, t.dx, t.dy),
                  a.dispatchAction({
                    seriesId: o.id,
                    type: 'graphRoam',
                    dx: t.dx,
                    dy: t.dy,
                  });
              })
              .on(
                'zoom',
                function(t) {
                  ix(i, t.scale, t.originX, t.originY),
                    a.dispatchAction({
                      seriesId: o.id,
                      type: 'graphRoam',
                      zoom: t.scale,
                      originX: t.originX,
                      originY: t.originY,
                    }),
                    this._updateNodeAndLinkScale(),
                    Ew(o.getGraph(), Tw(o)),
                    this._lineDraw.updateLayout();
                },
                this,
              ))
          : e.disable();
    },
    _updateNodeAndLinkScale: function() {
      var t = this._model,
        e = t.getData(),
        i = Tw(t),
        n = [i, i];
      e.eachItemGraphicEl(function(t, e) {
        t.attr('scale', n);
      });
    },
    updateLayout: function(t) {
      Ew(t.getGraph(), Tw(t)),
        this._symbolDraw.updateLayout(),
        this._lineDraw.updateLayout();
    },
    remove: function(t, e) {
      this._symbolDraw && this._symbolDraw.remove(),
        this._lineDraw && this._lineDraw.remove();
    },
  }),
    Tf(
      {
        type: 'focusNodeAdjacency',
        event: 'focusNodeAdjacency',
        update: 'series:focusNodeAdjacency',
      },
      function() {},
    ),
    Tf(
      {
        type: 'unfocusNodeAdjacency',
        event: 'unfocusNodeAdjacency',
        update: 'series:unfocusNodeAdjacency',
      },
      function() {},
    );
  Tf({type: 'graphRoam', event: 'graphRoam', update: 'none'}, function(i, t) {
    t.eachComponent({mainType: 'series', query: i}, function(t) {
      var e = dx(t.coordinateSystem, i);
      t.setCenter && t.setCenter(e.center), t.setZoom && t.setZoom(e.zoom);
    });
  });
  function Hw(t) {
    return t instanceof Array || (t = [t, t]), t;
  }
  function Zw(t) {
    var e = t.coordinateSystem;
    if (!e || 'view' === e.type) {
      var i = t.getGraph();
      i.eachNode(function(t) {
        var e = t.getModel();
        t.setLayout([+e.get('x'), +e.get('y')]);
      }),
        Uw(i);
    }
  }
  function Uw(t) {
    t.eachEdge(function(t) {
      var e = t.getModel().get('lineStyle.curveness') || 0,
        i = lt(t.node1.getLayout()),
        n = lt(t.node2.getLayout()),
        o = [i, n];
      +e &&
        o.push([
          (i[0] + n[0]) / 2 - (i[1] - n[1]) * e,
          (i[1] + n[1]) / 2 - (n[0] - i[0]) * e,
        ]),
        t.setLayout(o);
    });
  }
  var Xw = Math.PI,
    Yw = [];
  function jw(t, e) {
    var i = t.coordinateSystem;
    if (!i || 'view' === i.type) {
      var n = i.getBoundingRect(),
        o = t.getData(),
        a = o.graph,
        s = n.width / 2 + n.x,
        l = n.height / 2 + n.y,
        r = Math.min(n.width, n.height) / 2,
        u = o.count();
      o.setLayout({cx: s, cy: l}),
        u &&
          (qw[e](t, i, a, o, r, s, l, u),
          a.eachEdge(function(t) {
            var e,
              i = t.getModel().get('lineStyle.curveness') || 0,
              n = lt(t.node1.getLayout()),
              o = lt(t.node2.getLayout()),
              a = (n[0] + o[0]) / 2,
              r = (n[1] + o[1]) / 2;
            +i && (e = [s * (i *= 3) + a * (1 - i), l * i + r * (1 - i)]),
              t.setLayout([n, o, e]);
          }));
    }
  }
  var qw = {
      value: function(t, e, i, n, o, a, r, s) {
        var l = 0,
          u = n.getSum('value'),
          h = (2 * Math.PI) / (u || s);
        i.eachNode(function(t) {
          var e = t.getValue('value'),
            i = (h * (u ? e : 1)) / 2;
          (l += i),
            t.setLayout([o * Math.cos(l) + a, o * Math.sin(l) + r]),
            (l += i);
        });
      },
      symbolSize: function(t, e, i, n, o, a, r, s) {
        var l = 0;
        Yw.length = s;
        var u = Tw(t);
        i.eachNode(function(t) {
          var e = Aw(t);
          isNaN(e) && (e = 2), e < 0 && (e = 0), (e *= u);
          var i = Math.asin(e / 2 / o);
          isNaN(i) && (i = Xw / 2), (Yw[t.dataIndex] = i), (l += 2 * i);
        });
        var h = (2 * Xw - l) / s / 2,
          c = 0;
        i.eachNode(function(t) {
          var e = h + Yw[t.dataIndex];
          (c += e),
            t.setLayout([o * Math.cos(c) + a, o * Math.sin(c) + r]),
            (c += e);
        });
      },
    },
    Kw = ct;
  If(function(t) {
    var a = t.findComponents({mainType: 'legend'});
    a &&
      a.length &&
      t.eachSeriesByType(
        'graph',
        function(t) {
          var e = t.getCategoriesData(),
            n = t.getGraph().data,
            o = e.mapArray(e.getName);
          n.filterSelf(function(t) {
            var e = n.getItemModel(t).getShallow('category');
            if (null != e) {
              'number' == typeof e && (e = o[e]);
              for (var i = 0; i < a.length; i++)
                if (!a[i].isSelected(e)) return !1;
            }
            return !0;
          });
        },
        this,
      );
  }),
    Cf(zm('graph', 'circle', null)),
    Cf(function(t) {
      var h = {};
      t.eachSeriesByType('graph', function(s) {
        var l = s.getCategoriesData(),
          o = s.getData(),
          u = {};
        l.each(function(t) {
          var e = l.getName(t);
          u['ec-' + e] = t;
          var i = l.getItemModel(t),
            n = i.get('itemStyle.color') || s.getColorFromPalette(e, h);
          l.setItemVisual(t, 'color', n);
          for (
            var o = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'],
              a = 0;
            a < o.length;
            a++
          ) {
            var r = i.getShallow(o[a], !0);
            null != r && l.setItemVisual(t, o[a], r);
          }
        }),
          l.count() &&
            o.each(function(t) {
              var e = o.getItemModel(t).getShallow('category');
              if (null != e) {
                'string' == typeof e && (e = u['ec-' + e]);
                for (
                  var i = [
                      'color',
                      'opacity',
                      'symbol',
                      'symbolSize',
                      'symbolKeepAspect',
                    ],
                    n = 0;
                  n < i.length;
                  n++
                )
                  null == o.getItemVisual(t, i[n], !0) &&
                    o.setItemVisual(t, i[n], l.getItemVisual(e, i[n]));
              }
            });
      });
    }),
    Cf(function(t) {
      t.eachSeriesByType('graph', function(t) {
        var s = t.getGraph(),
          l = t.getEdgeData(),
          e = Hw(t.get('edgeSymbol')),
          i = Hw(t.get('edgeSymbolSize')),
          u = 'lineStyle.color'.split('.'),
          h = 'lineStyle.opacity'.split('.');
        l.setVisual('fromSymbol', e && e[0]),
          l.setVisual('toSymbol', e && e[1]),
          l.setVisual('fromSymbolSize', i && i[0]),
          l.setVisual('toSymbolSize', i && i[1]),
          l.setVisual('color', t.get(u)),
          l.setVisual('opacity', t.get(h)),
          l.each(function(t) {
            var e = l.getItemModel(t),
              i = s.getEdgeByIndex(t),
              n = Hw(e.getShallow('symbol', !0)),
              o = Hw(e.getShallow('symbolSize', !0)),
              a = e.get(u),
              r = e.get(h);
            switch (a) {
              case 'source':
                a = i.node1.getVisual('color');
                break;
              case 'target':
                a = i.node2.getVisual('color');
            }
            n[0] && i.setVisual('fromSymbol', n[0]),
              n[1] && i.setVisual('toSymbol', n[1]),
              o[0] && i.setVisual('fromSymbolSize', o[0]),
              o[1] && i.setVisual('toSymbolSize', o[1]),
              i.setVisual('color', a),
              i.setVisual('opacity', r);
          });
      });
    }),
    Df(function(t, e) {
      t.eachSeriesByType('graph', function(t) {
        var e = t.get('layout'),
          i = t.coordinateSystem;
        if (i && 'view' !== i.type) {
          var n = t.getData(),
            o = [];
          E(i.dimensions, function(t) {
            o = o.concat(n.mapDimension(t, !0));
          });
          for (var a = 0; a < n.count(); a++) {
            for (var r = [], s = !1, l = 0; l < o.length; l++) {
              var u = n.get(o[l], a);
              isNaN(u) || (s = !0), r.push(u);
            }
            s
              ? n.setItemLayout(a, i.dataToPoint(r))
              : n.setItemLayout(a, [NaN, NaN]);
          }
          Uw(n.graph);
        } else (e && 'none' !== e) || Zw(t);
      });
    }),
    Df(Ed.VISUAL.POST_CHART_LAYOUT, function(t) {
      t.eachSeriesByType('graph', function(t) {
        'circular' === t.get('layout') && jw(t, 'symbolSize');
      });
    }),
    Df(function(t) {
      t.eachSeriesByType('graph', function(t) {
        if (!(l = t.coordinateSystem) || 'view' === l.type)
          if ('force' === t.get('layout')) {
            var c = t.preservedPoints || {},
              d = t.getGraph(),
              f = d.data,
              e = d.edgeData,
              i = t.getModel('force'),
              n = i.get('initLayout');
            t.preservedPoints
              ? f.each(function(t) {
                  var e = f.getId(t);
                  f.setItemLayout(t, c[e] || [NaN, NaN]);
                })
              : n && 'none' !== n
              ? 'circular' === n && jw(t, 'value')
              : Zw(t);
            var o = f.getDataExtent('value'),
              a = e.getDataExtent('value'),
              r = i.get('repulsion'),
              s = i.get('edgeLength');
            R(r) || (r = [r, r]), R(s) || (s = [s, s]), (s = [s[1], s[0]]);
            var l,
              u = f.mapArray('value', function(t, e) {
                var i = f.getItemLayout(e),
                  n = Bl(t, o, r);
                return (
                  isNaN(n) && (n = (r[0] + r[1]) / 2),
                  {
                    w: n,
                    rep: n,
                    fixed: f.getItemModel(e).get('fixed'),
                    p: !i || isNaN(i[0]) || isNaN(i[1]) ? null : i,
                  }
                );
              }),
              h = e.mapArray('value', function(t, e) {
                var i = d.getEdgeByIndex(e),
                  n = Bl(t, a, s);
                isNaN(n) && (n = (s[0] + s[1]) / 2);
                var o = i.getModel();
                return {
                  n1: u[i.node1.dataIndex],
                  n2: u[i.node2.dataIndex],
                  d: n,
                  curveness: o.get('lineStyle.curveness') || 0,
                  ignoreForceLayout: o.get('ignoreForceLayout'),
                };
              }),
              p = (l = t.coordinateSystem).getBoundingRect(),
              g = (function(f, p, t) {
                for (
                  var e = t.rect,
                    i = e.width,
                    n = e.height,
                    g = [e.x + i / 2, e.y + n / 2],
                    m = null == t.gravity ? 0.1 : t.gravity,
                    o = 0;
                  o < f.length;
                  o++
                ) {
                  var a = f[o];
                  a.p ||
                    (a.p = rt(
                      i * (Math.random() - 0.5) + g[0],
                      n * (Math.random() - 0.5) + g[1],
                    )),
                    (a.pp = lt(a.p)),
                    (a.edges = null);
                }
                var r = null == t.friction ? 0.6 : t.friction,
                  v = r;
                return {
                  warmUp: function() {
                    v = 0.8 * r;
                  },
                  setFixed: function(t) {
                    f[t].fixed = !0;
                  },
                  setUnfixed: function(t) {
                    f[t].fixed = !1;
                  },
                  step: function(t) {
                    for (var e = [], i = f.length, n = 0; n < p.length; n++) {
                      var o = p[n];
                      if (!o.ignoreForceLayout) {
                        var a = o.n1;
                        dt(e, (u = o.n2).p, a.p);
                        var r = ft(e) - o.d,
                          s = u.w / (a.w + u.w);
                        isNaN(s) && (s = 0),
                          yt(e, e),
                          a.fixed || Kw(a.p, a.p, e, s * r * v),
                          u.fixed || Kw(u.p, u.p, e, -(1 - s) * r * v);
                      }
                    }
                    for (n = 0; n < i; n++) {
                      (d = f[n]).fixed ||
                        (dt(e, g, d.p), Kw(d.p, d.p, e, m * v));
                    }
                    for (n = 0; n < i; n++) {
                      a = f[n];
                      for (var l = n + 1; l < i; l++) {
                        var u;
                        dt(e, (u = f[l]).p, a.p),
                          0 === (r = ft(e)) &&
                            (ut(e, Math.random() - 0.5, Math.random() - 0.5),
                            (r = 1));
                        var h = (a.rep + u.rep) / r / r;
                        a.fixed || Kw(a.pp, a.pp, e, h),
                          u.fixed || Kw(u.pp, u.pp, e, -h);
                      }
                    }
                    var c = [];
                    for (n = 0; n < i; n++) {
                      var d;
                      (d = f[n]).fixed ||
                        (dt(c, d.p, d.pp), Kw(d.p, d.p, c, v), st(d.pp, d.p));
                    }
                    (v *= 0.992), t && t(f, p, v < 0.01);
                  },
                };
              })(u, h, {
                rect: p,
                gravity: i.get('gravity'),
                friction: i.get('friction'),
              }),
              m = g.step;
            (g.step = function(h) {
              for (var t = 0, e = u.length; t < e; t++)
                u[t].fixed && st(u[t].p, d.getNodeByIndex(t).getLayout());
              m(function(t, e, i) {
                for (var n = 0, o = t.length; n < o; n++)
                  t[n].fixed || d.getNodeByIndex(n).setLayout(t[n].p),
                    (c[f.getId(n)] = t[n].p);
                for (n = 0, o = e.length; n < o; n++) {
                  var a = e[n],
                    r = d.getEdgeByIndex(n),
                    s = a.n1.p,
                    l = a.n2.p,
                    u = r.getLayout();
                  ((u = u ? u.slice() : [])[0] = u[0] || []),
                    (u[1] = u[1] || []),
                    st(u[0], s),
                    st(u[1], l),
                    +a.curveness &&
                      (u[2] = [
                        (s[0] + l[0]) / 2 - (s[1] - l[1]) * a.curveness,
                        (s[1] + l[1]) / 2 - (l[0] - s[0]) * a.curveness,
                      ]),
                    r.setLayout(u);
                }
                h && h(i);
              });
            }),
              (t.forceLayout = g),
              (t.preservedPoints = c),
              g.step();
          } else t.forceLayout = null;
      });
    }),
    Af('graphView', {
      create: function(t, d) {
        var f = [];
        return (
          t.eachSeriesByType('graph', function(t) {
            var e = t.get('coordinateSystem');
            if (!e || 'view' === e) {
              var i = t.getData(),
                n = [],
                o = [];
              Ua(
                i.mapArray(function(t) {
                  var e = i.getItemModel(t);
                  return [+e.get('x'), +e.get('y')];
                }),
                n,
                o,
              ),
                o[0] - n[0] == 0 && ((o[0] += 1), (n[0] -= 1)),
                o[1] - n[1] == 0 && ((o[1] += 1), (n[1] -= 1));
              var a = (o[0] - n[0]) / (o[1] - n[1]),
                r = (function(t, e, i) {
                  var n = t.getBoxLayoutParams();
                  return (
                    (n.aspect = i),
                    Iu(n, {width: e.getWidth(), height: e.getHeight()})
                  );
                })(t, d, a);
              isNaN(a) &&
                ((n = [r.x, r.y]), (o = [r.x + r.width, r.y + r.height]));
              var s = o[0] - n[0],
                l = o[1] - n[1],
                u = r.width,
                h = r.height,
                c = (t.coordinateSystem = new gx());
              (c.zoomLimit = t.get('scaleLimit')),
                c.setBoundingRect(n[0], n[1], s, l),
                c.setViewRect(r.x, r.y, u, h),
                c.setCenter(t.get('center')),
                c.setZoom(t.get('zoom')),
                f.push(c);
            }
          }),
          f
        );
      },
    });
  cc.extend({
    type: 'series.gauge',
    getInitialData: function(t, e) {
      return ty(this, ['value']);
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      center: ['50%', '50%'],
      legendHoverLink: !0,
      radius: '75%',
      startAngle: 225,
      endAngle: -45,
      clockwise: !0,
      min: 0,
      max: 100,
      splitNumber: 10,
      axisLine: {
        show: !0,
        lineStyle: {
          color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],
          width: 30,
        },
      },
      splitLine: {
        show: !0,
        length: 30,
        lineStyle: {color: '#eee', width: 2, type: 'solid'},
      },
      axisTick: {
        show: !0,
        splitNumber: 5,
        length: 8,
        lineStyle: {color: '#eee', width: 1, type: 'solid'},
      },
      axisLabel: {show: !0, distance: 5, color: 'auto'},
      pointer: {show: !0, length: '80%', width: 8},
      itemStyle: {color: 'auto'},
      title: {show: !0, offsetCenter: [0, '-40%'], color: '#333', fontSize: 15},
      detail: {
        show: !0,
        backgroundColor: 'rgba(0,0,0,0)',
        borderWidth: 0,
        borderColor: '#ccc',
        width: 100,
        height: null,
        padding: [5, 10],
        offsetCenter: [0, '40%'],
        color: 'auto',
        fontSize: 30,
      },
    },
  });
  var $w = Lr.extend({
    type: 'echartsGaugePointer',
    shape: {angle: 0, width: 10, r: 10, x: 0, y: 0},
    buildPath: function(t, e) {
      var i = Math.cos,
        n = Math.sin,
        o = e.r,
        a = e.width,
        r = e.angle,
        s = e.x - i(r) * a * (o / 3 <= a ? 1 : 2),
        l = e.y - n(r) * a * (o / 3 <= a ? 1 : 2);
      (r = e.angle - Math.PI / 2),
        t.moveTo(s, l),
        t.lineTo(e.x + i(r) * a, e.y + n(r) * a),
        t.lineTo(e.x + i(e.angle) * o, e.y + n(e.angle) * o),
        t.lineTo(e.x - i(r) * a, e.y - n(r) * a),
        t.lineTo(s, l);
    },
  });
  function Jw(t, e) {
    return (
      e &&
        ('string' == typeof e
          ? (t = e.replace('{value}', null != t ? t : ''))
          : 'function' == typeof e && (t = e(t))),
      t
    );
  }
  var Qw = 2 * Math.PI,
    tb =
      (Mc.extend({
        type: 'gauge',
        render: function(t, e, i) {
          this.group.removeAll();
          var n = t.get('axisLine.lineStyle.color'),
            o = (function(t, e) {
              var i = t.get('center'),
                n = e.getWidth(),
                o = e.getHeight(),
                a = Math.min(n, o);
              return {
                cx: Vl(i[0], e.getWidth()),
                cy: Vl(i[1], e.getHeight()),
                r: Vl(t.get('radius'), a / 2),
              };
            })(t, i);
          this._renderMain(t, e, i, n, o);
        },
        dispose: function() {},
        _renderMain: function(t, e, i, n, o) {
          for (
            var a = this.group,
              r = t.getModel('axisLine'),
              s = r.getModel('lineStyle'),
              l = t.get('clockwise'),
              u = (-t.get('startAngle') / 180) * Math.PI,
              h = ((g = (-t.get('endAngle') / 180) * Math.PI) - u) % Qw,
              c = u,
              d = s.get('width'),
              f = r.get('show'),
              p = 0;
            f && p < n.length;
            p++
          ) {
            var g,
              m = Math.min(Math.max(n[p][0], 0), 1),
              v = new Jr({
                shape: {
                  startAngle: c,
                  endAngle: (g = u + h * m),
                  cx: o.cx,
                  cy: o.cy,
                  clockwise: l,
                  r0: o.r - d,
                  r: o.r,
                },
                silent: !0,
              });
            v.setStyle({fill: n[p][1]}),
              v.setStyle(
                s.getLineStyle(['color', 'borderWidth', 'borderColor']),
              ),
              a.add(v),
              (c = g);
          }
          function y(t) {
            if (t <= 0) return n[0][1];
            for (var e = 0; e < n.length; e++)
              if (n[e][0] >= t && (0 === e ? 0 : n[e - 1][0]) < t)
                return n[e][1];
            return n[e - 1][1];
          }
          if (!l) {
            var x = u;
            (u = g), (g = x);
          }
          this._renderTicks(t, e, i, y, o, u, g, l),
            this._renderPointer(t, e, i, y, o, u, g, l),
            this._renderTitle(t, e, i, y, o),
            this._renderDetail(t, e, i, y, o);
        },
        _renderTicks: function(t, e, i, n, o, a, r, s) {
          for (
            var l = this.group,
              u = o.cx,
              h = o.cy,
              c = o.r,
              d = +t.get('min'),
              f = +t.get('max'),
              p = t.getModel('splitLine'),
              g = t.getModel('axisTick'),
              m = t.getModel('axisLabel'),
              v = t.get('splitNumber'),
              y = g.get('splitNumber'),
              x = Vl(p.get('length'), c),
              _ = Vl(g.get('length'), c),
              w = a,
              b = (r - a) / v,
              S = b / y,
              M = p.getModel('lineStyle').getLineStyle(),
              I = g.getModel('lineStyle').getLineStyle(),
              T = 0;
            T <= v;
            T++
          ) {
            var A = Math.cos(w),
              D = Math.sin(w);
            if (p.get('show')) {
              var C = new cs({
                shape: {
                  x1: A * c + u,
                  y1: D * c + h,
                  x2: A * (c - x) + u,
                  y2: D * (c - x) + h,
                },
                style: M,
                silent: !0,
              });
              'auto' === M.stroke && C.setStyle({stroke: n(T / v)}), l.add(C);
            }
            if (m.get('show')) {
              var L = Jw(Gl((T / v) * (f - d) + d), m.get('formatter')),
                k = m.get('distance'),
                P = n(T / v);
              l.add(
                new jr({
                  style: rl(
                    {},
                    m,
                    {
                      text: L,
                      x: A * (c - x - k) + u,
                      y: D * (c - x - k) + h,
                      textVerticalAlign:
                        D < -0.4 ? 'top' : 0.4 < D ? 'bottom' : 'middle',
                      textAlign:
                        A < -0.4 ? 'left' : 0.4 < A ? 'right' : 'center',
                    },
                    {autoColor: P},
                  ),
                  silent: !0,
                }),
              );
            }
            if (g.get('show') && T !== v) {
              for (var N = 0; N <= y; N++) {
                (A = Math.cos(w)), (D = Math.sin(w));
                var O = new cs({
                  shape: {
                    x1: A * c + u,
                    y1: D * c + h,
                    x2: A * (c - _) + u,
                    y2: D * (c - _) + h,
                  },
                  silent: !0,
                  style: I,
                });
                'auto' === I.stroke && O.setStyle({stroke: n((T + N / y) / v)}),
                  l.add(O),
                  (w += S);
              }
              w -= S;
            } else w += b;
          }
        },
        _renderPointer: function(n, t, e, o, a, i, r, s) {
          var l = this.group,
            u = this._data;
          if (n.get('pointer.show')) {
            var h = [+n.get('min'), +n.get('max')],
              c = [i, r],
              d = n.getData(),
              f = d.mapDimension('value');
            d
              .diff(u)
              .add(function(t) {
                var e = new $w({shape: {angle: i}});
                gl(e, {shape: {angle: Bl(d.get(f, t), h, c, !0)}}, n),
                  l.add(e),
                  d.setItemGraphicEl(t, e);
              })
              .update(function(t, e) {
                var i = u.getItemGraphicEl(e);
                pl(i, {shape: {angle: Bl(d.get(f, t), h, c, !0)}}, n),
                  l.add(i),
                  d.setItemGraphicEl(t, i);
              })
              .remove(function(t) {
                var e = u.getItemGraphicEl(t);
                l.remove(e);
              })
              .execute(),
              d.eachItemGraphicEl(function(t, e) {
                var i = d.getItemModel(e),
                  n = i.getModel('pointer');
                t.setShape({
                  x: a.cx,
                  y: a.cy,
                  width: Vl(n.get('width'), a.r),
                  r: Vl(n.get('length'), a.r),
                }),
                  t.useStyle(i.getModel('itemStyle').getItemStyle()),
                  'auto' === t.style.fill &&
                    t.setStyle('fill', o(Bl(d.get(f, e), h, [0, 1], !0))),
                  tl(t, i.getModel('emphasis.itemStyle').getItemStyle());
              }),
              (this._data = d);
          } else
            u &&
              u.eachItemGraphicEl(function(t) {
                l.remove(t);
              });
        },
        _renderTitle: function(t, e, i, n, o) {
          var a = t.getData(),
            r = a.mapDimension('value'),
            s = t.getModel('title');
          if (s.get('show')) {
            var l = s.get('offsetCenter'),
              u = o.cx + Vl(l[0], o.r),
              h = o.cy + Vl(l[1], o.r),
              c = +t.get('min'),
              d = +t.get('max'),
              f = n(Bl(t.getData().get(r, 0), [c, d], [0, 1], !0));
            this.group.add(
              new jr({
                silent: !0,
                style: rl(
                  {},
                  s,
                  {
                    x: u,
                    y: h,
                    text: a.getName(0),
                    textAlign: 'center',
                    textVerticalAlign: 'middle',
                  },
                  {autoColor: f, forceRich: !0},
                ),
              }),
            );
          }
        },
        _renderDetail: function(t, e, i, n, o) {
          var a = t.getModel('detail'),
            r = +t.get('min'),
            s = +t.get('max');
          if (a.get('show')) {
            var l = a.get('offsetCenter'),
              u = o.cx + Vl(l[0], o.r),
              h = o.cy + Vl(l[1], o.r),
              c = Vl(a.get('width'), o.r),
              d = Vl(a.get('height'), o.r),
              f = t.getData(),
              p = f.get(f.mapDimension('value'), 0),
              g = n(Bl(p, [r, s], [0, 1], !0));
            this.group.add(
              new jr({
                silent: !0,
                style: rl(
                  {},
                  a,
                  {
                    x: u,
                    y: h,
                    text: Jw(p, a.get('formatter')),
                    textWidth: isNaN(c) ? null : c,
                    textHeight: isNaN(d) ? null : d,
                    textAlign: 'center',
                    textVerticalAlign: 'middle',
                  },
                  {autoColor: g, forceRich: !0},
                ),
              }),
            );
          }
        },
      }),
      Of({
        type: 'series.funnel',
        init: function(t) {
          tb.superApply(this, 'init', arguments),
            (this.legendVisualProvider = new iy(
              A(this.getData, this),
              A(this.getRawData, this),
            )),
            this._defaultLabelLine(t);
        },
        getInitialData: function(t, e) {
          return ty(this, {
            coordDimensions: ['value'],
            encodeDefaulter: L(eh, this),
          });
        },
        _defaultLabelLine: function(t) {
          Ho(t, 'labelLine', ['show']);
          var e = t.labelLine,
            i = t.emphasis.labelLine;
          (e.show = e.show && t.label.show),
            (i.show = i.show && t.emphasis.label.show);
        },
        getDataParams: function(t) {
          var e = this.getData(),
            i = tb.superCall(this, 'getDataParams', t),
            n = e.mapDimension('value'),
            o = e.getSum(n);
          return (
            (i.percent = o ? +((e.get(n, t) / o) * 100).toFixed(2) : 0),
            i.$vars.push('percent'),
            i
          );
        },
        defaultOption: {
          zlevel: 0,
          z: 2,
          legendHoverLink: !0,
          left: 80,
          top: 60,
          right: 80,
          bottom: 60,
          minSize: '0%',
          maxSize: '100%',
          sort: 'descending',
          gap: 0,
          funnelAlign: 'center',
          label: {show: !0, position: 'outer'},
          labelLine: {
            show: !0,
            length: 20,
            lineStyle: {width: 1, type: 'solid'},
          },
          itemStyle: {borderColor: '#fff', borderWidth: 1},
          emphasis: {label: {show: !0}},
        },
      }));
  function eb(t, e) {
    ki.call(this);
    var i = new is(),
      n = new ns(),
      o = new jr();
    this.add(i),
      this.add(n),
      this.add(o),
      (this.highDownOnUpdate = function(t, e) {
        'emphasis' === e
          ? ((n.ignore = n.hoverIgnore), (o.ignore = o.hoverIgnore))
          : ((n.ignore = n.normalIgnore), (o.ignore = o.normalIgnore));
      }),
      this.updateData(t, e, !0);
  }
  var ib = eb.prototype,
    nb = ['itemStyle', 'opacity'];
  (ib.updateData = function(t, e, i) {
    var n = this.childAt(0),
      o = t.hostModel,
      a = t.getItemModel(e),
      r = t.getItemLayout(e),
      s = t.getItemModel(e).get(nb);
    (s = null == s ? 1 : s),
      n.useStyle({}),
      i
        ? (n.setShape({points: r.points}),
          n.setStyle({opacity: 0}),
          gl(n, {style: {opacity: s}}, o, e))
        : pl(n, {style: {opacity: s}, shape: {points: r.points}}, o, e);
    var l = a.getModel('itemStyle'),
      u = t.getItemVisual(e, 'color');
    n.setStyle(C({lineJoin: 'round', fill: u}, l.getItemStyle(['opacity']))),
      (n.hoverStyle = l.getModel('emphasis').getItemStyle()),
      this._updateLabel(t, e),
      tl(this);
  }),
    (ib._updateLabel = function(t, e) {
      var i = this.childAt(1),
        n = this.childAt(2),
        o = t.hostModel,
        a = t.getItemModel(e),
        r = t.getItemLayout(e).label,
        s = t.getItemVisual(e, 'color');
      pl(i, {shape: {points: r.linePoints || r.linePoints}}, o, e),
        pl(n, {style: {x: r.x, y: r.y}}, o, e),
        n.attr({rotation: r.rotation, origin: [r.x, r.y], z2: 10});
      var l = a.getModel('label'),
        u = a.getModel('emphasis.label'),
        h = a.getModel('labelLine'),
        c = a.getModel('emphasis.labelLine');
      s = t.getItemVisual(e, 'color');
      ol(
        n.style,
        (n.hoverStyle = {}),
        l,
        u,
        {
          labelFetcher: t.hostModel,
          labelDataIndex: e,
          defaultText: t.getName(e),
          autoColor: s,
          useInsideStyle: !!r.inside,
        },
        {textAlign: r.textAlign, textVerticalAlign: r.verticalAlign},
      ),
        (n.ignore = n.normalIgnore = !l.get('show')),
        (n.hoverIgnore = !u.get('show')),
        (i.ignore = i.normalIgnore = !h.get('show')),
        (i.hoverIgnore = !c.get('show')),
        i.setStyle({stroke: s}),
        i.setStyle(h.getModel('lineStyle').getLineStyle()),
        (i.hoverStyle = c.getModel('lineStyle').getLineStyle());
    }),
    b(eb, ki);
  Mc.extend({
    type: 'funnel',
    render: function(t, e, i) {
      var n = t.getData(),
        o = this._data,
        a = this.group;
      n
        .diff(o)
        .add(function(t) {
          var e = new eb(n, t);
          n.setItemGraphicEl(t, e), a.add(e);
        })
        .update(function(t, e) {
          var i = o.getItemGraphicEl(e);
          i.updateData(n, t), a.add(i), n.setItemGraphicEl(t, i);
        })
        .remove(function(t) {
          var e = o.getItemGraphicEl(t);
          a.remove(e);
        })
        .execute(),
        (this._data = n);
    },
    remove: function() {
      this.group.removeAll(), (this._data = null);
    },
    dispose: function() {},
  });
  Cf(uy('funnel')),
    Df(function(t, w, e) {
      t.eachSeriesByType('funnel', function(t) {
        var o = t.getData(),
          a = o.mapDimension('value'),
          e = t.get('sort'),
          r = (function(t, e) {
            return Iu(t.getBoxLayoutParams(), {
              width: e.getWidth(),
              height: e.getHeight(),
            });
          })(t, w),
          i = (function(t, e) {
            for (
              var i = t.mapDimension('value'),
                n = t.mapArray(i, function(t) {
                  return t;
                }),
                o = [],
                a = 'ascending' === e,
                r = 0,
                s = t.count();
              r < s;
              r++
            )
              o[r] = r;
            return (
              'function' == typeof e
                ? o.sort(e)
                : 'none' !== e &&
                  o.sort(function(t, e) {
                    return a ? n[t] - n[e] : n[e] - n[t];
                  }),
              o
            );
          })(o, e),
          s = [Vl(t.get('minSize'), r.width), Vl(t.get('maxSize'), r.width)],
          n = o.getDataExtent(a),
          l = t.get('min'),
          u = t.get('max');
        null == l && (l = Math.min(n[0], 0)), null == u && (u = n[1]);
        function h(t, e) {
          var i,
            n = Bl(o.get(a, t) || 0, [l, u], s, !0);
          switch (c) {
            case 'left':
              i = r.x;
              break;
            case 'center':
              i = r.x + (r.width - n) / 2;
              break;
            case 'right':
              i = r.x + r.width - n;
          }
          return [[i, e], [i + n, e]];
        }
        var c = t.get('funnelAlign'),
          d = t.get('gap'),
          f = (r.height - d * (o.count() - 1)) / o.count(),
          p = r.y;
        'ascending' === e &&
          ((f = -f), (d = -d), (p += r.height), (i = i.reverse()));
        for (var g = 0; g < i.length; g++) {
          var m = i[g],
            v = i[g + 1],
            y = o.getItemModel(m).get('itemStyle.height');
          null == y
            ? (y = f)
            : ((y = Vl(y, r.height)), 'ascending' === e && (y = -y));
          var x = h(m, p),
            _ = h(v, p + y);
          (p += y + d),
            o.setItemLayout(m, {points: x.concat(_.slice().reverse())});
        }
        !(function(g) {
          g.each(function(t) {
            var e,
              i,
              n,
              o,
              a = g.getItemModel(t),
              r = a.getModel('label').get('position'),
              s = a.getModel('labelLine'),
              l = g.getItemLayout(t),
              u = l.points,
              h =
                'inner' === r ||
                'inside' === r ||
                'center' === r ||
                'insideLeft' === r ||
                'insideRight' === r;
            if (h)
              (e =
                'insideLeft' === r
                  ? ((i = (u[0][0] + u[3][0]) / 2 + 5),
                    (n = (u[0][1] + u[3][1]) / 2),
                    'left')
                  : 'insideRight' === r
                  ? ((i = (u[1][0] + u[2][0]) / 2 - 5),
                    (n = (u[1][1] + u[2][1]) / 2),
                    'right')
                  : ((i = (u[0][0] + u[1][0] + u[2][0] + u[3][0]) / 4),
                    (n = (u[0][1] + u[1][1] + u[2][1] + u[3][1]) / 4),
                    'center')),
                (o = [[i, n], [i, n]]);
            else {
              var c,
                d,
                f,
                p = s.get('length');
              e =
                'left' === r
                  ? ((c = (u[3][0] + u[0][0]) / 2),
                    (d = (u[3][1] + u[0][1]) / 2),
                    (i = (f = c - p) - 5),
                    'right')
                  : 'right' === r
                  ? ((c = (u[1][0] + u[2][0]) / 2),
                    (d = (u[1][1] + u[2][1]) / 2),
                    (i = (f = c + p) + 5),
                    'left')
                  : 'rightTop' === r
                  ? ((c = u[1][0]), (d = u[1][1]), (i = (f = c + p) + 5), 'top')
                  : 'rightBottom' === r
                  ? ((c = u[2][0]),
                    (d = u[2][1]),
                    (i = (f = c + p) + 5),
                    'bottom')
                  : 'leftTop' === r
                  ? ((c = u[0][0]),
                    (d = u[1][1]),
                    (i = (f = c - p) - 5),
                    'right')
                  : 'leftBottom' === r
                  ? ((c = u[3][0]),
                    (d = u[2][1]),
                    (i = (f = c - p) - 5),
                    'right')
                  : ((c = (u[1][0] + u[2][0]) / 2),
                    (d = (u[1][1] + u[2][1]) / 2),
                    (i = (f = c + p) + 5),
                    'left');
              (o = [[c, d], [f, d]]), (n = d);
            }
            l.label = {
              linePoints: o,
              x: i,
              y: n,
              verticalAlign: 'middle',
              textAlign: e,
              inside: h,
            };
          });
        })(o);
      });
    }),
    If(my('funnel'));
  function ob(t, e, i, n, o) {
    Yg.call(this, t, e, i), (this.type = n || 'value'), (this.axisIndex = o);
  }
  (ob.prototype = {
    constructor: ob,
    model: null,
    isHorizontal: function() {
      return 'horizontal' !== this.coordinateSystem.getModel().get('layout');
    },
  }),
    b(ob, Yg);
  function ab(t, e, i, n, o, a) {
    t = t || 0;
    var r = i[1] - i[0];
    if (
      (null != o && (o = sb(o, [0, r])),
      null != a && (a = Math.max(a, null != o ? o : 0)),
      'all' === n)
    ) {
      var s = Math.abs(e[1] - e[0]);
      (o = a = sb((s = sb(s, [0, r])), [o, a])), (n = 0);
    }
    (e[0] = sb(e[0], i)), (e[1] = sb(e[1], i));
    var l = rb(e, n);
    e[n] += t;
    var u = o || 0,
      h = i.slice();
    l.sign < 0 ? (h[0] += u) : (h[1] -= u), (e[n] = sb(e[n], h));
    var c = rb(e, n);
    return (
      null != o &&
        (c.sign !== l.sign || c.span < o) &&
        (e[1 - n] = e[n] + l.sign * o),
      (c = rb(e, n)),
      null != a && c.span > a && (e[1 - n] = e[n] + c.sign * a),
      e
    );
  }
  function rb(t, e) {
    var i = t[e] - t[1 - e];
    return {span: Math.abs(i), sign: 0 < i ? -1 : i < 0 ? 1 : e ? -1 : 1};
  }
  function sb(t, e) {
    return Math.min(
      null != e[1] ? e[1] : 1 / 0,
      Math.max(null != e[0] ? e[0] : -1 / 0, t),
    );
  }
  var lb = E,
    ub = Math.min,
    hb = Math.max,
    cb = Math.floor,
    db = Math.ceil,
    fb = Gl,
    pb = Math.PI;
  function gb(t, e, i) {
    (this._axesMap = et()),
      (this._axesLayout = {}),
      (this.dimensions = t.dimensions),
      this._rect,
      (this._model = t),
      this._init(t, e, i);
  }
  function mb(t, e) {
    return ub(hb(t, e[0]), e[1]);
  }
  (gb.prototype = {
    type: 'parallel',
    constructor: gb,
    _init: function(t, r, e) {
      var i = t.dimensions,
        s = t.parallelAxisIndex;
      lb(
        i,
        function(t, e) {
          var i = s[e],
            n = r.getComponent('parallelAxis', i),
            o = this._axesMap.set(
              t,
              new ob(t, pg(n), [0, 0], n.get('type'), i),
            ),
            a = 'category' === o.type;
          (o.onBand = a && n.get('boundaryGap')),
            (o.inverse = n.get('inverse')),
            ((n.axis = o).model = n),
            (o.coordinateSystem = n.coordinateSystem = this);
        },
        this,
      );
    },
    update: function(t, e) {
      this._updateAxesFromSeries(this._model, t);
    },
    containPoint: function(t) {
      var e = this._makeLayoutInfo(),
        i = e.axisBase,
        n = e.layoutBase,
        o = e.pixelDimIndex,
        a = t[1 - o],
        r = t[o];
      return (
        i <= a && a <= i + e.axisLength && n <= r && r <= n + e.layoutLength
      );
    },
    getModel: function() {
      return this._model;
    },
    _updateAxesFromSeries: function(e, n) {
      n.eachSeries(function(t) {
        if (e.contains(t, n)) {
          var i = t.getData();
          lb(
            this.dimensions,
            function(t) {
              var e = this._axesMap.get(t);
              e.scale.unionExtentFromData(i, i.mapDimension(t)),
                fg(e.scale, e.model);
            },
            this,
          );
        }
      }, this);
    },
    resize: function(t, e) {
      (this._rect = Iu(t.getBoxLayoutParams(), {
        width: e.getWidth(),
        height: e.getHeight(),
      })),
        this._layoutAxes();
    },
    getRect: function() {
      return this._rect;
    },
    _makeLayoutInfo: function() {
      var t,
        e = this._model,
        i = this._rect,
        n = ['x', 'y'],
        o = ['width', 'height'],
        a = e.get('layout'),
        r = 'horizontal' === a ? 0 : 1,
        s = i[o[r]],
        l = [0, s],
        u = this.dimensions.length,
        h = mb(e.get('axisExpandWidth'), l),
        c = mb(e.get('axisExpandCount') || 0, [0, u]),
        d =
          e.get('axisExpandable') && 3 < u && c < u && 1 < c && 0 < h && 0 < s,
        f = e.get('axisExpandWindow');
      f
        ? ((t = mb(f[1] - f[0], l)), (f[1] = f[0] + t))
        : ((t = mb(h * (c - 1), l)),
          ((f = [h * (e.get('axisExpandCenter') || cb(u / 2)) - t / 2])[1] =
            f[0] + t));
      var p = (s - t) / (u - c);
      p < 3 && (p = 0);
      var g = [cb(fb(f[0] / h, 1)) + 1, db(fb(f[1] / h, 1)) - 1],
        m = (p / h) * f[0];
      return {
        layout: a,
        pixelDimIndex: r,
        layoutBase: i[n[r]],
        layoutLength: s,
        axisBase: i[n[1 - r]],
        axisLength: i[o[1 - r]],
        axisExpandable: d,
        axisExpandWidth: h,
        axisCollapseWidth: p,
        axisExpandWindow: f,
        axisCount: u,
        winInnerIndices: g,
        axisExpandWindow0Pos: m,
      };
    },
    _layoutAxes: function() {
      var l = this._rect,
        t = this._axesMap,
        e = this.dimensions,
        u = this._makeLayoutInfo(),
        h = u.layout;
      t.each(function(t) {
        var e = [0, u.axisLength],
          i = t.inverse ? 1 : 0;
        t.setExtent(e[i], e[1 - i]);
      }),
        lb(
          e,
          function(t, e) {
            var i = (u.axisExpandable
                ? function(t, e) {
                    var i,
                      n,
                      o = e.layoutLength,
                      a = e.axisExpandWidth,
                      r = e.axisCount,
                      s = e.axisCollapseWidth,
                      l = e.winInnerIndices,
                      u = s,
                      h = !1;
                    t < l[0]
                      ? ((i = t * s), (n = s))
                      : t <= l[1]
                      ? ((i =
                          e.axisExpandWindow0Pos +
                          t * a -
                          e.axisExpandWindow[0]),
                        (u = a),
                        (h = !0))
                      : ((i = o - (r - 1 - t) * s), (n = s));
                    return {
                      position: i,
                      axisNameAvailableWidth: u,
                      axisLabelShow: h,
                      nameTruncateMaxWidth: n,
                    };
                  }
                : function(t, e) {
                    var i = e.layoutLength / (e.axisCount - 1);
                    return {
                      position: i * t,
                      axisNameAvailableWidth: i,
                      axisLabelShow: !0,
                    };
                  })(e, u),
              n = {
                horizontal: {x: i.position, y: u.axisLength},
                vertical: {x: 0, y: i.position},
              },
              o = {horizontal: pb / 2, vertical: 0},
              a = [n[h].x + l.x, n[h].y + l.y],
              r = o[h],
              s = se();
            de(s, s, r),
              ce(s, s, a),
              (this._axesLayout[t] = {
                position: a,
                rotation: r,
                transform: s,
                axisNameAvailableWidth: i.axisNameAvailableWidth,
                axisLabelShow: i.axisLabelShow,
                nameTruncateMaxWidth: i.nameTruncateMaxWidth,
                tickDirection: 1,
                labelDirection: 1,
              });
          },
          this,
        );
    },
    getAxis: function(t) {
      return this._axesMap.get(t);
    },
    dataToPoint: function(t, e) {
      return this.axisCoordToPoint(this._axesMap.get(e).dataToCoord(t), e);
    },
    eachActiveState: function(e, t, i, n) {
      null == i && (i = 0), null == n && (n = e.count());
      var o = this._axesMap,
        a = this.dimensions,
        r = [],
        s = [];
      E(a, function(t) {
        r.push(e.mapDimension(t)), s.push(o.get(t).model);
      });
      for (var l = this.hasAxisBrushed(), u = i; u < n; u++) {
        var h;
        if (l) {
          h = 'active';
          for (var c = e.getValues(r, u), d = 0, f = a.length; d < f; d++) {
            if ('inactive' === s[d].getActiveState(c[d])) {
              h = 'inactive';
              break;
            }
          }
        } else h = 'normal';
        t(h, u);
      }
    },
    hasAxisBrushed: function() {
      for (
        var t = this.dimensions, e = this._axesMap, i = !1, n = 0, o = t.length;
        n < o;
        n++
      )
        'normal' !== e.get(t[n]).model.getActiveState() && (i = !0);
      return i;
    },
    axisCoordToPoint: function(t, e) {
      return vl([t, 0], this._axesLayout[e].transform);
    },
    getAxisLayout: function(t) {
      return k(this._axesLayout[t]);
    },
    getSlidedAxisExpandWindow: function(t) {
      var e = this._makeLayoutInfo(),
        i = e.pixelDimIndex,
        n = e.axisExpandWindow.slice(),
        o = n[1] - n[0],
        a = [0, e.axisExpandWidth * (e.axisCount - 1)];
      if (!this.containPoint(t)) return {behavior: 'none', axisExpandWindow: n};
      var r,
        s = t[i] - e.layoutBase - e.axisExpandWindow0Pos,
        l = 'slide',
        u = e.axisCollapseWidth,
        h = this._model.get('axisExpandSlideTriggerArea'),
        c = null != h[0];
      if (u)
        c && u && s < o * h[0]
          ? ((l = 'jump'), (r = s - o * h[2]))
          : c && u && s > o * (1 - h[0])
          ? ((l = 'jump'), (r = s - o * (1 - h[2])))
          : 0 <= (r = s - o * h[1]) && (r = s - o * (1 - h[1])) <= 0 && (r = 0),
          (r *= e.axisExpandWidth / u) ? ab(r, n, a, 'all') : (l = 'none');
      else {
        o = n[1] - n[0];
        ((n = [hb(0, (a[1] * s) / o - o / 2)])[1] = ub(a[1], n[0] + o)),
          (n[0] = n[1] - o);
      }
      return {axisExpandWindow: n, behavior: l};
    },
  }),
    dh.register('parallel', {
      create: function(n, o) {
        var a = [];
        return (
          n.eachComponent('parallel', function(t, e) {
            var i = new gb(t, n, o);
            (i.name = 'parallel_' + e),
              i.resize(t, o),
              ((t.coordinateSystem = i).model = t),
              a.push(i);
          }),
          n.eachSeries(function(t) {
            if ('parallel' === t.get('coordinateSystem')) {
              var e = n.queryComponents({
                mainType: 'parallel',
                index: t.get('parallelIndex'),
                id: t.get('parallelId'),
              })[0];
              t.coordinateSystem = e.coordinateSystem;
            }
          }),
          a
        );
      },
    });
  var vb = Ou.extend({
    type: 'baseParallelAxis',
    axis: null,
    activeIntervals: [],
    getAreaSelectStyle: function() {
      return fa([
        ['fill', 'color'],
        ['lineWidth', 'borderWidth'],
        ['stroke', 'borderColor'],
        ['width', 'width'],
        ['opacity', 'opacity'],
      ])(this.getModel('areaSelectStyle'));
    },
    setActiveIntervals: function(t) {
      var e = (this.activeIntervals = k(t));
      if (e) for (var i = e.length - 1; 0 <= i; i--) Fl(e[i]);
    },
    getActiveState: function(t) {
      var e = this.activeIntervals;
      if (!e.length) return 'normal';
      if (null == t || isNaN(t)) return 'inactive';
      if (1 === e.length) {
        var i = e[0];
        if (i[0] <= t && t <= i[1]) return 'active';
      } else
        for (var n = 0, o = e.length; n < o; n++)
          if (e[n][0] <= t && t <= e[n][1]) return 'active';
      return 'inactive';
    },
  });
  m(vb.prototype, xg),
    Ym(
      'parallel',
      vb,
      function(t, e) {
        return e.type || (e.data ? 'category' : 'value');
      },
      {
        type: 'value',
        dim: null,
        areaSelectStyle: {
          width: 20,
          borderWidth: 1,
          borderColor: 'rgba(160,197,232)',
          color: 'rgba(160,197,232)',
          opacity: 0.3,
        },
        realtime: !0,
        z: 10,
      },
    ),
    Ou.extend({
      type: 'parallel',
      dependencies: ['parallelAxis'],
      coordinateSystem: null,
      dimensions: null,
      parallelAxisIndex: null,
      layoutMode: 'box',
      defaultOption: {
        zlevel: 0,
        z: 0,
        left: 80,
        top: 60,
        right: 80,
        bottom: 60,
        layout: 'horizontal',
        axisExpandable: !1,
        axisExpandCenter: null,
        axisExpandCount: 0,
        axisExpandWidth: 50,
        axisExpandRate: 17,
        axisExpandDebounce: 50,
        axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],
        axisExpandTriggerOn: 'click',
        parallelAxisDefault: null,
      },
      init: function() {
        Ou.prototype.init.apply(this, arguments), this.mergeOption({});
      },
      mergeOption: function(t) {
        var e = this.option;
        t && m(e, t, !0), this._initDimensions();
      },
      contains: function(t, e) {
        var i = t.get('parallelIndex');
        return null != i && e.getComponent('parallel', i) === this;
      },
      setAxisExpand: function(e) {
        E(
          [
            'axisExpandable',
            'axisExpandCenter',
            'axisExpandCount',
            'axisExpandWidth',
            'axisExpandWindow',
          ],
          function(t) {
            e.hasOwnProperty(t) && (this.option[t] = e[t]);
          },
          this,
        );
      },
      _initDimensions: function() {
        var e = (this.dimensions = []),
          i = (this.parallelAxisIndex = []);
        E(
          I(
            this.dependentModels.parallelAxis,
            function(t) {
              return (t.get('parallelIndex') || 0) === this.componentIndex;
            },
            this,
          ),
          function(t) {
            e.push('dim' + t.get('dim')), i.push(t.componentIndex);
          },
        );
      },
    });
  Tf({type: 'axisAreaSelect', event: 'axisAreaSelected'}, function(e, t) {
    t.eachComponent({mainType: 'parallelAxis', query: e}, function(t) {
      t.axis.model.setActiveIntervals(e.intervals);
    });
  }),
    Tf('parallelAxisExpand', function(e, t) {
      t.eachComponent({mainType: 'parallel', query: e}, function(t) {
        t.setAxisExpand(e);
      });
    });
  var yb = L,
    xb = E,
    _b = O,
    wb = Math.min,
    bb = Math.max,
    Sb = Math.pow,
    Mb = 1e4,
    Ib = 6,
    Tb = 6,
    Ab = 'globalPan',
    Db = {w: [0, 0], e: [0, 1], n: [1, 0], s: [1, 1]},
    Cb = {
      w: 'ew',
      e: 'ew',
      n: 'ns',
      s: 'ns',
      ne: 'nesw',
      sw: 'nesw',
      nw: 'nwse',
      se: 'nwse',
    },
    Lb = {
      brushStyle: {
        lineWidth: 2,
        stroke: 'rgba(0,0,0,0.3)',
        fill: 'rgba(0,0,0,0.1)',
      },
      transformable: !0,
      brushMode: 'single',
      removeOnClick: !1,
    },
    kb = 0;
  function Pb(t) {
    D && q(t),
      kt.call(this),
      (this._zr = t),
      (this.group = new ki()),
      this._brushType,
      this._brushOption,
      this._panels,
      (this._track = []),
      this._dragging,
      (this._covers = []),
      this._creatingCover,
      this._creatingPanel,
      this._enableGlobalPan,
      D && this._mounted,
      (this._uid = 'brushController_' + kb++),
      (this._handlers = {}),
      xb(
        oS,
        function(t, e) {
          this._handlers[e] = A(t, this);
        },
        this,
      );
  }
  function Nb(t, e) {
    var i = rS[e.brushType].createCover(t, e);
    return (i.__brushOption = e), Rb(i, e), t.group.add(i), i;
  }
  function Ob(t, e) {
    var i = Bb(e);
    return i.endCreating && (i.endCreating(t, e), Rb(e, e.__brushOption)), e;
  }
  function Eb(t, e) {
    var i = e.__brushOption;
    Bb(e).updateCoverShape(t, e, i.range, i);
  }
  function Rb(t, e) {
    var i = e.z;
    null == i && (i = Mb),
      t.traverse(function(t) {
        (t.z = i), (t.z2 = i);
      });
  }
  function zb(t, e) {
    Bb(e).updateCommon(t, e), Eb(t, e);
  }
  function Bb(t) {
    return rS[t.__brushOption.brushType];
  }
  function Vb(t, e, i) {
    var n,
      o = t._panels;
    if (!o) return !0;
    var a = t._transform;
    return (
      xb(o, function(t) {
        t.isTargetByCursor(e, i, a) && (n = t);
      }),
      n
    );
  }
  function Gb(t, e) {
    var i = t._panels;
    if (!i) return !0;
    var n = e.__brushOption.panelId;
    return null == n || i[n];
  }
  function Fb(e) {
    var t = e._covers,
      i = t.length;
    return (
      xb(
        t,
        function(t) {
          e.group.remove(t);
        },
        e,
      ),
      (t.length = 0),
      !!i
    );
  }
  function Wb(t, e) {
    var i = _b(t._covers, function(t) {
      var e = t.__brushOption,
        i = k(e.range);
      return {brushType: e.brushType, panelId: e.panelId, range: i};
    });
    t.trigger('brush', i, {isEnd: !!e.isEnd, removeOnClick: !!e.removeOnClick});
  }
  function Hb(t) {
    var e = t.length - 1;
    return e < 0 && (e = 0), [t[0], t[e]];
  }
  function Zb(e, i, t, n) {
    var o = new ki();
    return (
      o.add(
        new us({
          name: 'main',
          style: jb(t),
          silent: !0,
          draggable: !0,
          cursor: 'move',
          drift: yb(e, i, o, 'nswe'),
          ondragend: yb(Wb, i, {isEnd: !0}),
        }),
      ),
      xb(n, function(t) {
        o.add(
          new us({
            name: t,
            style: {opacity: 0},
            draggable: !0,
            silent: !0,
            invisible: !0,
            drift: yb(e, i, o, t),
            ondragend: yb(Wb, i, {isEnd: !0}),
          }),
        );
      }),
      o
    );
  }
  function Ub(t, e, i, n) {
    var o = n.brushStyle.lineWidth || 0,
      a = bb(o, Tb),
      r = i[0][0],
      s = i[1][0],
      l = r - o / 2,
      u = s - o / 2,
      h = i[0][1],
      c = i[1][1],
      d = h - a + o / 2,
      f = c - a + o / 2,
      p = h - r,
      g = c - s,
      m = p + o,
      v = g + o;
    Yb(t, e, 'main', r, s, p, g),
      n.transformable &&
        (Yb(t, e, 'w', l, u, a, v),
        Yb(t, e, 'e', d, u, a, v),
        Yb(t, e, 'n', l, u, m, a),
        Yb(t, e, 's', l, f, m, a),
        Yb(t, e, 'nw', l, u, a, a),
        Yb(t, e, 'ne', d, u, a, a),
        Yb(t, e, 'sw', l, f, a, a),
        Yb(t, e, 'se', d, f, a, a));
  }
  function Xb(n, o) {
    var t = o.__brushOption,
      a = t.transformable,
      e = o.childAt(0);
    e.useStyle(jb(t)),
      e.attr({silent: !a, cursor: a ? 'move' : 'default'}),
      xb(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function(t) {
        var e = o.childOfName(t),
          i = (function t(e, i) {
            {
              if (1 < i.length) {
                i = i.split('');
                var n = [t(e, i[0]), t(e, i[1])];
                return (
                  ('e' !== n[0] && 'w' !== n[0]) || n.reverse(), n.join('')
                );
              }
              var o = {w: 'left', e: 'right', n: 'top', s: 'bottom'},
                a = {left: 'w', right: 'e', top: 'n', bottom: 's'},
                n = yl(o[i], ml(e.group));
              return a[n];
            }
          })(n, t);
        e &&
          e.attr({
            silent: !a,
            invisible: !a,
            cursor: a ? Cb[i] + '-resize' : null,
          });
      });
  }
  function Yb(t, e, i, n, o, a, r) {
    var s = e.childOfName(i);
    s &&
      s.setShape(
        (function(t) {
          var e = wb(t[0][0], t[1][0]),
            i = wb(t[0][1], t[1][1]),
            n = bb(t[0][0], t[1][0]),
            o = bb(t[0][1], t[1][1]);
          return {x: e, y: i, width: n - e, height: o - i};
        })(Qb(t, e, [[n, o], [n + a, o + r]])),
      );
  }
  function jb(t) {
    return C({strokeNoScale: !0}, t.brushStyle);
  }
  function qb(t, e, i, n) {
    var o = [wb(t, i), wb(e, n)],
      a = [bb(t, i), bb(e, n)];
    return [[o[0], a[0]], [o[1], a[1]]];
  }
  function Kb(t, e, i, n, o, a, r, s) {
    var l = n.__brushOption,
      u = t(l.range),
      h = Jb(i, a, r);
    xb(o.split(''), function(t) {
      var e = Db[t];
      u[e[0]][e[1]] += h[e[0]];
    }),
      (l.range = e(qb(u[0][0], u[1][0], u[0][1], u[1][1]))),
      zb(i, n),
      Wb(i, {isEnd: !1});
  }
  function $b(t, e, i, n, o) {
    var a = e.__brushOption.range,
      r = Jb(t, i, n);
    xb(a, function(t) {
      (t[0] += r[0]), (t[1] += r[1]);
    }),
      zb(t, e),
      Wb(t, {isEnd: !1});
  }
  function Jb(t, e, i) {
    var n = t.group,
      o = n.transformCoordToLocal(e, i),
      a = n.transformCoordToLocal(0, 0);
    return [o[0] - a[0], o[1] - a[1]];
  }
  function Qb(t, e, i) {
    var n = Gb(t, e);
    return n && !0 !== n ? n.clipPath(i, t._transform) : k(i);
  }
  function tS(t) {
    var e = t.event;
    e.preventDefault && e.preventDefault();
  }
  function eS(t, e, i) {
    return t.childOfName('main').contain(e, i);
  }
  function iS(t, e, i, n) {
    var o,
      a = t._creatingCover,
      r = t._creatingPanel,
      s = t._brushOption;
    if (
      (t._track.push(i.slice()),
      (function(t) {
        var e = t._track;
        if (!e.length) return !1;
        var i = e[e.length - 1],
          n = e[0],
          o = i[0] - n[0],
          a = i[1] - n[1],
          r = Sb(o * o + a * a, 0.5);
        return Ib < r;
      })(t) || a)
    ) {
      if (r && !a) {
        'single' === s.brushMode && Fb(t);
        var l = k(s);
        (l.brushType = nS(l.brushType, r)),
          (l.panelId = !0 === r ? null : r.panelId),
          (a = t._creatingCover = Nb(t, l)),
          t._covers.push(a);
      }
      if (a) {
        var u = rS[nS(t._brushType, r)];
        (a.__brushOption.range = u.getCreatingRange(Qb(t, a, t._track))),
          n && (Ob(t, a), u.updateCommon(t, a)),
          Eb(t, a),
          (o = {isEnd: n});
      }
    } else n && 'single' === s.brushMode && s.removeOnClick && Vb(t, e, i) && Fb(t) && (o = {isEnd: n, removeOnClick: !0});
    return o;
  }
  function nS(t, e) {
    return 'auto' === t
      ? (D &&
          q(
            e && e.defaultBrushType,
            'MUST have defaultBrushType when brushType is "atuo"',
          ),
        e.defaultBrushType)
      : t;
  }
  (Pb.prototype = {
    constructor: Pb,
    enableBrush: function(t) {
      return (
        D && q(this._mounted),
        this._brushType &&
          (function(t) {
            var e = t._zr;
            (function(t, e, i) {
              var n = Uy(t);
              n[e] === i && (n[e] = null);
            })(e, Ab, t._uid),
              (function(i, t) {
                xb(t, function(t, e) {
                  i.off(e, t);
                });
              })(e, t._handlers),
              (t._brushType = t._brushOption = null);
          })(this),
        t.brushType &&
          (function(t, e) {
            var i = t._zr;
            t._enableGlobalPan ||
              (function(t, e, i) {
                Uy(t)[e] = i;
              })(i, Ab, t._uid);
            (function(i, t) {
              xb(t, function(t, e) {
                i.on(e, t);
              });
            })(i, t._handlers),
              (t._brushType = e.brushType),
              (t._brushOption = m(k(Lb), e, !0));
          })(this, t),
        this
      );
    },
    setPanels: function(t) {
      if (t && t.length) {
        var e = (this._panels = {});
        E(t, function(t) {
          e[t.panelId] = k(t);
        });
      } else this._panels = null;
      return this;
    },
    mount: function(t) {
      (t = t || {}),
        D && (this._mounted = !0),
        (this._enableGlobalPan = t.enableGlobalPan);
      var e = this.group;
      return (
        this._zr.add(e),
        e.attr({
          position: t.position || [0, 0],
          rotation: t.rotation || 0,
          scale: t.scale || [1, 1],
        }),
        (this._transform = e.getLocalTransform()),
        this
      );
    },
    eachCover: function(t, e) {
      xb(this._covers, t, e);
    },
    updateCovers: function(o) {
      D && q(this._mounted),
        (o = O(o, function(t) {
          return m(k(Lb), t, !0);
        }));
      var i = '\0-brush-index-',
        a = this._covers,
        r = (this._covers = []),
        s = this,
        l = this._creatingCover;
      return (
        new zf(
          a,
          o,
          function(t, e) {
            return n(t.__brushOption, e);
          },
          n,
        )
          .add(t)
          .update(t)
          .remove(function(t) {
            a[t] !== l && s.group.remove(a[t]);
          })
          .execute(),
        this
      );
      function n(t, e) {
        return (null != t.id ? t.id : i + e) + '-' + t.brushType;
      }
      function t(t, e) {
        var i = o[t];
        if (null != e && a[e] === l) r[t] = a[e];
        else {
          var n = (r[t] =
            null != e ? ((a[e].__brushOption = i), a[e]) : Ob(s, Nb(s, i)));
          zb(s, n);
        }
      }
    },
    unmount: function() {
      if (!D || this._mounted)
        return (
          this.enableBrush(!1),
          Fb(this),
          this._zr.remove(this.group),
          D && (this._mounted = !1),
          this
        );
    },
    dispose: function() {
      this.unmount(), this.off();
    },
  }),
    S(Pb, kt);
  var oS = {
    mousedown: function(t) {
      if (this._dragging) aS(this, t);
      else if (!t.target || !t.target.draggable) {
        tS(t);
        var e = this.group.transformCoordToLocal(t.offsetX, t.offsetY);
        (this._creatingCover = null),
          (this._creatingPanel = Vb(this, t, e)) &&
            ((this._dragging = !0), (this._track = [e.slice()]));
      }
    },
    mousemove: function(t) {
      var e = t.offsetX,
        i = t.offsetY,
        n = this.group.transformCoordToLocal(e, i);
      if (
        ((function(t, e, i) {
          if (
            t._brushType &&
            !(function(t, e, i) {
              var n = t._zr;
              return e < 0 || e > n.getWidth() || i < 0 || i > n.getHeight();
            })(t, e)
          ) {
            var n = t._zr,
              o = t._covers,
              a = Vb(t, e, i);
            if (!t._dragging)
              for (var r = 0; r < o.length; r++) {
                var s = o[r].__brushOption;
                if (
                  a &&
                  (!0 === a || s.panelId === a.panelId) &&
                  rS[s.brushType].contain(o[r], i[0], i[1])
                )
                  return;
              }
            a && n.setCursorStyle('crosshair');
          }
        })(this, t, n),
        this._dragging)
      ) {
        tS(t);
        var o = iS(this, t, n, !1);
        o && Wb(this, o);
      }
    },
    mouseup: function(t) {
      aS(this, t);
    },
  };
  function aS(t, e) {
    if (t._dragging) {
      tS(e);
      var i = e.offsetX,
        n = e.offsetY,
        o = t.group.transformCoordToLocal(i, n),
        a = iS(t, e, o, !0);
      (t._dragging = !1),
        (t._track = []),
        (t._creatingCover = null),
        a && Wb(t, a);
    }
  }
  var rS = {
    lineX: sS(0),
    lineY: sS(1),
    rect: {
      createCover: function(t, e) {
        return Zb(
          yb(
            Kb,
            function(t) {
              return t;
            },
            function(t) {
              return t;
            },
          ),
          t,
          e,
          ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],
        );
      },
      getCreatingRange: function(t) {
        var e = Hb(t);
        return qb(e[1][0], e[1][1], e[0][0], e[0][1]);
      },
      updateCoverShape: function(t, e, i, n) {
        Ub(t, e, i, n);
      },
      updateCommon: Xb,
      contain: eS,
    },
    polygon: {
      createCover: function(t, e) {
        var i = new ki();
        return i.add(new ns({name: 'main', style: jb(e), silent: !0})), i;
      },
      getCreatingRange: function(t) {
        return t;
      },
      endCreating: function(t, e) {
        e.remove(e.childAt(0)),
          e.add(
            new is({
              name: 'main',
              draggable: !0,
              drift: yb($b, t, e),
              ondragend: yb(Wb, t, {isEnd: !0}),
            }),
          );
      },
      updateCoverShape: function(t, e, i, n) {
        e.childAt(0).setShape({points: Qb(t, e, i)});
      },
      updateCommon: Xb,
      contain: eS,
    },
  };
  function sS(l) {
    return {
      createCover: function(t, e) {
        return Zb(
          yb(
            Kb,
            function(t) {
              var e = [t, [0, 100]];
              return l && e.reverse(), e;
            },
            function(t) {
              return t[l];
            },
          ),
          t,
          e,
          [['w', 'e'], ['n', 's']][l],
        );
      },
      getCreatingRange: function(t) {
        var e = Hb(t);
        return [wb(e[0][l], e[1][l]), bb(e[0][l], e[1][l])];
      },
      updateCoverShape: function(t, e, i, n) {
        var o,
          a = Gb(t, e);
        if (!0 !== a && a.getLinearBrushOtherExtent)
          o = a.getLinearBrushOtherExtent(l, t._transform);
        else {
          var r = t._zr;
          o = [0, [r.getWidth(), r.getHeight()][1 - l]];
        }
        var s = [i, o];
        l && s.reverse(), Ub(t, e, s, n);
      },
      updateCommon: Xb,
      contain: eS,
    };
  }
  function lS(i) {
    return (
      (i = cS(i)),
      function(t, e) {
        return _l(t, i);
      }
    );
  }
  function uS(o, a) {
    return (
      (o = cS(o)),
      function(t) {
        var e = null != a ? a : t,
          i = e ? o.width : o.height,
          n = e ? o.x : o.y;
        return [n, n + (i || 0)];
      }
    );
  }
  function hS(n, o, a) {
    return (
      (n = cS(n)),
      function(t, e, i) {
        return n.contain(e[0], e[1]) && !ox(t, o, a);
      }
    );
  }
  function cS(t) {
    return Li.create(t);
  }
  var dS = ['axisLine', 'axisTickLabel', 'axisName'],
    fS = Nf({
      type: 'parallelAxis',
      init: function(t, e) {
        fS.superApply(this, 'init', arguments),
          (this._brushController = new Pb(e.getZr())).on(
            'brush',
            A(this._onBrush, this),
          );
      },
      render: function(t, e, i, n) {
        if (
          !(function(t, e, i) {
            return (
              i &&
              'axisAreaSelect' === i.type &&
              e.findComponents({mainType: 'parallelAxis', query: i})[0] === t
            );
          })(t, e, n)
        ) {
          (this.axisModel = t), (this.api = i), this.group.removeAll();
          var o = this._axisGroup;
          if (
            ((this._axisGroup = new ki()),
            this.group.add(this._axisGroup),
            t.get('show'))
          ) {
            var a = (function(t, e) {
                return e.getComponent('parallel', t.get('parallelIndex'));
              })(t, e),
              r = a.coordinateSystem,
              s = t.getAreaSelectStyle(),
              l = s.width,
              u = t.axis.dim,
              h = P({strokeContainThreshold: l}, r.getAxisLayout(u)),
              c = new rv(t, h);
            E(dS, c.add, c),
              this._axisGroup.add(c.getGroup()),
              this._refreshBrushController(h, s, t, a, l, i);
            var d = n && !1 === n.animation ? null : t;
            xl(o, this._axisGroup, d);
          }
        }
      },
      _refreshBrushController: function(t, e, i, n, o, a) {
        var r = i.axis.getExtent(),
          s = r[1] - r[0],
          l = Math.min(30, 0.1 * Math.abs(s)),
          u = Li.create({x: r[0], y: -o / 2, width: s, height: o});
        (u.x -= l),
          (u.width += 2 * l),
          this._brushController
            .mount({
              enableGlobalPan: !0,
              rotation: t.rotation,
              position: t.position,
            })
            .setPanels([
              {
                panelId: 'pl',
                clipPath: lS(u),
                isTargetByCursor: hS(u, a, n),
                getLinearBrushOtherExtent: uS(u, 0),
              },
            ])
            .enableBrush({brushType: 'lineX', brushStyle: e, removeOnClick: !0})
            .updateCovers(
              (function(t) {
                var e = t.axis;
                return O(t.activeIntervals, function(t) {
                  return {
                    brushType: 'lineX',
                    panelId: 'pl',
                    range: [e.dataToCoord(t[0], !0), e.dataToCoord(t[1], !0)],
                  };
                });
              })(i),
            );
      },
      _onBrush: function(t, e) {
        var i = this.axisModel,
          n = i.axis,
          o = O(t, function(t) {
            return [
              n.coordToData(t.range[0], !0),
              n.coordToData(t.range[1], !0),
            ];
          });
        (!i.option.realtime !== e.isEnd && !e.removeOnClick) ||
          this.api.dispatchAction({
            type: 'axisAreaSelect',
            parallelAxisId: i.id,
            intervals: o,
          });
      },
      dispose: function() {
        this._brushController.dispose();
      },
    });
  Nf({
    type: 'parallel',
    render: function(t, e, i) {
      (this._model = t),
        (this._api = i),
        this._handlers ||
          ((this._handlers = {}),
          E(
            pS,
            function(t, e) {
              i.getZr().on(e, (this._handlers[e] = A(t, this)));
            },
            this,
          )),
        Ec(
          this,
          '_throttledDispatchExpand',
          t.get('axisExpandRate'),
          'fixRate',
        );
    },
    dispose: function(t, i) {
      E(this._handlers, function(t, e) {
        i.getZr().off(e, t);
      }),
        (this._handlers = null);
    },
    _throttledDispatchExpand: function(t) {
      this._dispatchExpand(t);
    },
    _dispatchExpand: function(t) {
      t && this._api.dispatchAction(P({type: 'parallelAxisExpand'}, t));
    },
  });
  var pS = {
    mousedown: function(t) {
      gS(this, 'click') && (this._mouseDownPoint = [t.offsetX, t.offsetY]);
    },
    mouseup: function(t) {
      var e = this._mouseDownPoint;
      if (gS(this, 'click') && e) {
        var i = [t.offsetX, t.offsetY];
        if (5 < Math.pow(e[0] - i[0], 2) + Math.pow(e[1] - i[1], 2)) return;
        var n = this._model.coordinateSystem.getSlidedAxisExpandWindow([
          t.offsetX,
          t.offsetY,
        ]);
        'none' !== n.behavior &&
          this._dispatchExpand({axisExpandWindow: n.axisExpandWindow});
      }
      this._mouseDownPoint = null;
    },
    mousemove: function(t) {
      if (!this._mouseDownPoint && gS(this, 'mousemove')) {
        var e = this._model,
          i = e.coordinateSystem.getSlidedAxisExpandWindow([
            t.offsetX,
            t.offsetY,
          ]),
          n = i.behavior;
        'jump' === n &&
          this._throttledDispatchExpand.debounceNextCall(
            e.get('axisExpandDebounce'),
          ),
          this._throttledDispatchExpand(
            'none' === n
              ? null
              : {
                  axisExpandWindow: i.axisExpandWindow,
                  animation: 'jump' === n && null,
                },
          );
      }
    },
  };
  function gS(t, e) {
    var i = t._model;
    return i.get('axisExpandable') && i.get('axisExpandTriggerOn') === e;
  }
  Mf(function(t) {
    !(function(t) {
      if (t.parallel) return;
      var e = !1;
      E(t.series, function(t) {
        t && 'parallel' === t.type && (e = !0);
      }),
        e && (t.parallel = [{}]);
    })(t),
      (function(n) {
        E(Wo(n.parallelAxis), function(t) {
          if (V(t)) {
            var e = t.parallelIndex || 0,
              i = Wo(n.parallel)[e];
            i && i.parallelAxisDefault && m(t, i.parallelAxisDefault, !1);
          }
        });
      })(t);
  }),
    cc.extend({
      type: 'series.parallel',
      dependencies: ['parallel'],
      visualColorAccessPath: 'lineStyle.color',
      getInitialData: function(t, e) {
        var i = this.getSource();
        return (
          (function(t, e) {
            if (t.encodeDefine) return;
            var i = e.ecModel.getComponent('parallel', e.get('parallelIndex'));
            if (!i) return;
            var n = (t.encodeDefine = et());
            E(i.dimensions, function(t) {
              var e = (function(t) {
                return +t.replace('dim', '');
              })(t);
              n.set(t, e);
            });
          })(i, this),
          bp(i, this)
        );
      },
      getRawIndicesByActiveState: function(i) {
        var t = this.coordinateSystem,
          n = this.getData(),
          o = [];
        return (
          t.eachActiveState(n, function(t, e) {
            i === t && o.push(n.getRawIndex(e));
          }),
          o
        );
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'parallel',
        parallelIndex: 0,
        label: {show: !1},
        inactiveOpacity: 0.05,
        activeOpacity: 1,
        lineStyle: {width: 1, opacity: 0.45, type: 'solid'},
        emphasis: {label: {show: !1}},
        progressive: 500,
        smooth: !1,
        animationEasing: 'linear',
      },
    });
  Mc.extend({
    type: 'parallel',
    init: function() {
      (this._dataGroup = new ki()),
        this.group.add(this._dataGroup),
        this._data,
        this._initialized;
    },
    render: function(a, t, e, r) {
      var i = this._dataGroup,
        s = a.getData(),
        l = this._data,
        u = a.coordinateSystem,
        h = u.dimensions,
        c = yS(a);
      if (
        (s
          .diff(l)
          .add(function(t) {
            xS(vS(s, i, t, h, u), s, t, c);
          })
          .update(function(t, e) {
            var i = l.getItemGraphicEl(e),
              n = mS(s, t, h, u);
            s.setItemGraphicEl(t, i);
            var o = r && !1 === r.animation ? null : a;
            pl(i, {shape: {points: n}}, o, t), xS(i, s, t, c);
          })
          .remove(function(t) {
            var e = l.getItemGraphicEl(t);
            i.remove(e);
          })
          .execute(),
        !this._initialized)
      ) {
        this._initialized = !0;
        var n = (function(t, e, i) {
          var n = t.model,
            o = t.getRect(),
            a = new us({
              shape: {x: o.x, y: o.y, width: o.width, height: o.height},
            }),
            r = 'horizontal' === n.get('layout') ? 'width' : 'height';
          return (
            a.setShape(r, 0),
            gl(a, {shape: {width: o.width, height: o.height}}, e, i),
            a
          );
        })(u, a, function() {
          setTimeout(function() {
            i.removeClipPath();
          });
        });
        i.setClipPath(n);
      }
      this._data = s;
    },
    incrementalPrepareRender: function(t, e, i) {
      (this._initialized = !0),
        (this._data = null),
        this._dataGroup.removeAll();
    },
    incrementalRender: function(t, e, i) {
      for (
        var n = e.getData(),
          o = e.coordinateSystem,
          a = o.dimensions,
          r = yS(e),
          s = t.start;
        s < t.end;
        s++
      ) {
        var l = vS(n, this._dataGroup, s, a, o);
        (l.incremental = !0), xS(l, n, s, r);
      }
    },
    dispose: function() {},
    remove: function() {
      this._dataGroup && this._dataGroup.removeAll(), (this._data = null);
    },
  });
  function mS(t, e, i, n) {
    for (var o, a = [], r = 0; r < i.length; r++) {
      var s = i[r],
        l = t.get(t.mapDimension(s), e);
      (o = l),
        ('category' === n.getAxis(s).type
          ? null == o
          : null == o || isNaN(o)) || a.push(n.dataToPoint(l, s));
    }
    return a;
  }
  function vS(t, e, i, n, o) {
    var a = mS(t, i, n, o),
      r = new ns({shape: {points: a}, silent: !0, z2: 10});
    return e.add(r), t.setItemGraphicEl(i, r), r;
  }
  function yS(t) {
    var e = t.get('smooth', !0);
    return (
      !0 === e && (e = 0.3),
      {
        lineStyle: t.getModel('lineStyle').getLineStyle(),
        smooth: null != e ? e : 0.3,
      }
    );
  }
  function xS(t, e, i, n) {
    var o = n.lineStyle;
    e.hasItemOption &&
      (o = e
        .getItemModel(i)
        .getModel('lineStyle')
        .getLineStyle());
    t.useStyle(o);
    var a = t.style;
    (a.fill = null),
      (a.stroke = e.getItemVisual(i, 'color')),
      (a.opacity = e.getItemVisual(i, 'opacity')),
      n.smooth && (t.shape.smooth = n.smooth);
  }
  var _S = ['lineStyle', 'normal', 'opacity'];
  Cf({
    seriesType: 'parallel',
    reset: function(t, e, i) {
      var n = t.getModel('itemStyle'),
        o = t.getModel('lineStyle'),
        a = e.get('color'),
        r = o.get('color') || n.get('color') || a[t.seriesIndex % a.length],
        s = t.get('inactiveOpacity'),
        l = t.get('activeOpacity'),
        u = t.getModel('lineStyle').getLineStyle(),
        h = t.coordinateSystem,
        c = t.getData(),
        d = {normal: u.opacity, active: l, inactive: s};
      return (
        c.setVisual('color', r),
        {
          progress: function(t, o) {
            h.eachActiveState(
              o,
              function(t, e) {
                var i = d[t];
                if ('normal' === t && o.hasItemOption) {
                  var n = o.getItemModel(e).get(_S, !0);
                  null != n && (i = n);
                }
                o.setItemVisual(e, 'opacity', i);
              },
              t.start,
              t.end,
            );
          },
        }
      );
    },
  });
  var wS = cc.extend({
      type: 'series.sankey',
      layoutInfo: null,
      levelModels: null,
      getInitialData: function(t, e) {
        for (
          var i = t.edges || t.links,
            n = t.data || t.nodes,
            o = t.levels,
            a = (this.levelModels = {}),
            r = 0;
          r < o.length;
          r++
        )
          if (null != o[r].depth && 0 <= o[r].depth)
            a[o[r].depth] = new Pl(o[r], this, e);
          else if (D)
            throw new Error(
              'levels[i].depth is mandatory and should be natural number',
            );
        if (n && i)
          return uw(n, i, this, !0, function(t, e) {
            t.wrapMethod('getItemModel', function(t, n) {
              return (
                t.customizeGetParent(function(t) {
                  var e = this.parentModel,
                    i = e.getData().getItemLayout(n).depth;
                  return e.levelModels[i] || this.parentModel;
                }),
                t
              );
            }),
              e.wrapMethod('getItemModel', function(t, n) {
                return (
                  t.customizeGetParent(function(t) {
                    var e = this.parentModel,
                      i = e
                        .getGraph()
                        .getEdgeByIndex(n)
                        .node1.getLayout().depth;
                    return e.levelModels[i] || this.parentModel;
                  }),
                  t
                );
              });
          }).data;
      },
      setNodePosition: function(t, e) {
        var i = this.option.data[t];
        (i.localX = e[0]), (i.localY = e[1]);
      },
      getGraph: function() {
        return this.getData().graph;
      },
      getEdgeData: function() {
        return this.getGraph().edgeData;
      },
      formatTooltip: function(t, e, i) {
        if ('edge' === i) {
          var n = this.getDataParams(t, i),
            o = n.data,
            a = o.source + ' -- ' + o.target;
          return n.value && (a += ' : ' + n.value), lu(a);
        }
        if ('node' !== i) return wS.superCall(this, 'formatTooltip', t, e);
        var r = this.getGraph()
            .getNodeByIndex(t)
            .getLayout().value,
          s = this.getDataParams(t, i).data.name;
        if (r) a = s + ' : ' + r;
        return lu(a);
      },
      optionUpdated: function() {
        var t = this.option;
        !0 === t.focusNodeAdjacency && (t.focusNodeAdjacency = 'allEdges');
      },
      getDataParams: function(t, e) {
        var i = wS.superCall(this, 'getDataParams', t, e);
        if (null == i.value && 'node' === e) {
          var n = this.getGraph()
            .getNodeByIndex(t)
            .getLayout().value;
          i.value = n;
        }
        return i;
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'view',
        layout: null,
        left: '5%',
        top: '5%',
        right: '20%',
        bottom: '5%',
        orient: 'horizontal',
        nodeWidth: 20,
        nodeGap: 8,
        draggable: !0,
        focusNodeAdjacency: !1,
        layoutIterations: 32,
        label: {show: !0, position: 'right', color: '#000', fontSize: 12},
        levels: [],
        nodeAlign: 'justify',
        itemStyle: {borderWidth: 1, borderColor: '#333'},
        lineStyle: {color: '#314656', opacity: 0.2, curveness: 0.5},
        emphasis: {label: {show: !0}, lineStyle: {opacity: 0.5}},
        animationEasing: 'linear',
        animationDuration: 1e3,
      },
    }),
    bS = ['itemStyle', 'opacity'],
    SS = ['emphasis', 'itemStyle', 'opacity'],
    MS = ['lineStyle', 'opacity'],
    IS = ['emphasis', 'lineStyle', 'opacity'];
  function TS(t, e) {
    return t.getVisual('opacity') || t.getModel().get(e);
  }
  function AS(t, e, i) {
    var n = t.getGraphicEl(),
      o = TS(t, e);
    null != i && (null == o && (o = 1), (o *= i)),
      n.downplay && n.downplay(),
      n.traverse(function(t) {
        'group' !== t.type && t.setStyle('opacity', o);
      });
  }
  function DS(t, e) {
    var i = TS(t, e),
      n = t.getGraphicEl();
    n.traverse(function(t) {
      'group' !== t.type && t.setStyle('opacity', i);
    }),
      n.highlight && n.highlight();
  }
  var CS = Ps({
    shape: {
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 0,
      cpx1: 0,
      cpy1: 0,
      cpx2: 0,
      cpy2: 0,
      extent: 0,
      orient: '',
    },
    buildPath: function(t, e) {
      var i = e.extent;
      t.moveTo(e.x1, e.y1),
        t.bezierCurveTo(e.cpx1, e.cpy1, e.cpx2, e.cpy2, e.x2, e.y2),
        'vertical' === e.orient
          ? (t.lineTo(e.x2 + i, e.y2),
            t.bezierCurveTo(
              e.cpx2 + i,
              e.cpy2,
              e.cpx1 + i,
              e.cpy1,
              e.x1 + i,
              e.y1,
            ))
          : (t.lineTo(e.x2, e.y2 + i),
            t.bezierCurveTo(
              e.cpx2,
              e.cpy2 + i,
              e.cpx1,
              e.cpy1 + i,
              e.x1,
              e.y1 + i,
            )),
        t.closePath();
    },
    highlight: function() {
      this.trigger('emphasis');
    },
    downplay: function() {
      this.trigger('normal');
    },
  });
  Ef({
    type: 'sankey',
    _model: null,
    _focusAdjacencyDisabled: !1,
    render: function(w, t, n) {
      var o = this,
        e = w.getGraph(),
        b = this.group,
        i = w.layoutInfo,
        S = i.width,
        M = i.height,
        u = w.getData(),
        I = w.getData('edge'),
        T = w.get('orient');
      (this._model = w),
        b.removeAll(),
        b.attr('position', [i.x, i.y]),
        e.eachEdge(function(t) {
          var e = new CS();
          (e.dataIndex = t.dataIndex),
            (e.seriesIndex = w.seriesIndex),
            (e.dataType = 'edge');
          var i,
            n,
            o,
            a,
            r,
            s,
            l,
            u,
            h = t.getModel('lineStyle'),
            c = h.get('curveness'),
            d = t.node1.getLayout(),
            f = t.node1.getModel(),
            p = f.get('localX'),
            g = f.get('localY'),
            m = t.node2.getLayout(),
            v = t.node2.getModel(),
            y = v.get('localX'),
            x = v.get('localY'),
            _ = t.getLayout();
          switch (
            ((e.shape.extent = Math.max(1, _.dy)),
            (u =
              'vertical' === (e.shape.orient = T)
                ? ((i = (null != p ? p * S : d.x) + _.sy),
                  (n = (null != g ? g * M : d.y) + d.dy),
                  (o = (null != y ? y * S : m.x) + _.ty),
                  (r = i),
                  (s = n * (1 - c) + (a = null != x ? x * M : m.y) * c),
                  (l = o),
                  n * c + a * (1 - c))
                : ((i = (null != p ? p * S : d.x) + d.dx),
                  (n = (null != g ? g * M : d.y) + _.sy),
                  (r = i * (1 - c) + (o = null != y ? y * S : m.x) * c),
                  (s = n),
                  (l = i * c + o * (1 - c)),
                  (a = (null != x ? x * M : m.y) + _.ty))),
            e.setShape({
              x1: i,
              y1: n,
              x2: o,
              y2: a,
              cpx1: r,
              cpy1: s,
              cpx2: l,
              cpy2: u,
            }),
            e.setStyle(h.getItemStyle()),
            e.style.fill)
          ) {
            case 'source':
              e.style.fill = t.node1.getVisual('color');
              break;
            case 'target':
              e.style.fill = t.node2.getVisual('color');
          }
          tl(e, t.getModel('emphasis.lineStyle').getItemStyle()),
            b.add(e),
            I.setItemGraphicEl(t.dataIndex, e);
        }),
        e.eachNode(function(t) {
          var e = t.getLayout(),
            i = t.getModel(),
            n = i.get('localX'),
            o = i.get('localY'),
            a = i.getModel('label'),
            r = i.getModel('emphasis.label'),
            s = new us({
              shape: {
                x: null != n ? n * S : e.x,
                y: null != o ? o * M : e.y,
                width: e.dx,
                height: e.dy,
              },
              style: i.getModel('itemStyle').getItemStyle(),
            }),
            l = t.getModel('emphasis.itemStyle').getItemStyle();
          ol(s.style, l, a, r, {
            labelFetcher: w,
            labelDataIndex: t.dataIndex,
            defaultText: t.id,
            isRectText: !0,
          }),
            s.setStyle('fill', t.getVisual('color')),
            tl(s, l),
            b.add(s),
            u.setItemGraphicEl(t.dataIndex, s),
            (s.dataType = 'node');
        }),
        u.eachItemGraphicEl(function(t, i) {
          var e = u.getItemModel(i);
          e.get('draggable') &&
            ((t.drift = function(t, e) {
              (o._focusAdjacencyDisabled = !0),
                (this.shape.x += t),
                (this.shape.y += e),
                this.dirty(),
                n.dispatchAction({
                  type: 'dragNode',
                  seriesId: w.id,
                  dataIndex: u.getRawIndex(i),
                  localX: this.shape.x / S,
                  localY: this.shape.y / M,
                });
            }),
            (t.ondragend = function() {
              o._focusAdjacencyDisabled = !1;
            }),
            (t.draggable = !0),
            (t.cursor = 'move')),
            (t.highlight = function() {
              this.trigger('emphasis');
            }),
            (t.downplay = function() {
              this.trigger('normal');
            }),
            t.focusNodeAdjHandler && t.off('mouseover', t.focusNodeAdjHandler),
            t.unfocusNodeAdjHandler &&
              t.off('mouseout', t.unfocusNodeAdjHandler),
            e.get('focusNodeAdjacency') &&
              (t.on(
                'mouseover',
                (t.focusNodeAdjHandler = function() {
                  o._focusAdjacencyDisabled ||
                    (o._clearTimer(),
                    n.dispatchAction({
                      type: 'focusNodeAdjacency',
                      seriesId: w.id,
                      dataIndex: t.dataIndex,
                    }));
                }),
              ),
              t.on(
                'mouseout',
                (t.unfocusNodeAdjHandler = function() {
                  o._focusAdjacencyDisabled || o._dispatchUnfocus(n);
                }),
              ));
        }),
        I.eachItemGraphicEl(function(t, e) {
          var i = I.getItemModel(e);
          t.focusNodeAdjHandler && t.off('mouseover', t.focusNodeAdjHandler),
            t.unfocusNodeAdjHandler &&
              t.off('mouseout', t.unfocusNodeAdjHandler),
            i.get('focusNodeAdjacency') &&
              (t.on(
                'mouseover',
                (t.focusNodeAdjHandler = function() {
                  o._focusAdjacencyDisabled ||
                    (o._clearTimer(),
                    n.dispatchAction({
                      type: 'focusNodeAdjacency',
                      seriesId: w.id,
                      edgeDataIndex: t.dataIndex,
                    }));
                }),
              ),
              t.on(
                'mouseout',
                (t.unfocusNodeAdjHandler = function() {
                  o._focusAdjacencyDisabled || o._dispatchUnfocus(n);
                }),
              ));
        }),
        !this._data &&
          w.get('animation') &&
          b.setClipPath(
            (function(t, e, i) {
              var n = new us({
                shape: {
                  x: t.x - 10,
                  y: t.y - 10,
                  width: 0,
                  height: t.height + 20,
                },
              });
              return gl(n, {shape: {width: t.width + 20}}, e, i), n;
            })(b.getBoundingRect(), w, function() {
              b.removeClipPath();
            }),
          ),
        (this._data = w.getData());
    },
    dispose: function() {
      this._clearTimer();
    },
    _dispatchUnfocus: function(t) {
      var e = this;
      this._clearTimer(),
        (this._unfocusDelayTimer = setTimeout(function() {
          (e._unfocusDelayTimer = null),
            t.dispatchAction({
              type: 'unfocusNodeAdjacency',
              seriesId: e._model.id,
            });
        }, 500));
    },
    _clearTimer: function() {
      this._unfocusDelayTimer &&
        (clearTimeout(this._unfocusDelayTimer),
        (this._unfocusDelayTimer = null));
    },
    focusNodeAdjacency: function(t, e, i, n) {
      var o = t.getData(),
        a = o.graph,
        r = n.dataIndex,
        s = o.getItemModel(r),
        l = n.edgeDataIndex;
      if (null != r || null != l) {
        var u = a.getNodeByIndex(r),
          h = a.getEdgeByIndex(l);
        if (
          (a.eachNode(function(t) {
            AS(t, bS, 0.1);
          }),
          a.eachEdge(function(t) {
            AS(t, MS, 0.1);
          }),
          u)
        ) {
          DS(u, SS);
          var c = s.get('focusNodeAdjacency');
          'outEdges' === c
            ? E(u.outEdges, function(t) {
                t.dataIndex < 0 || (DS(t, IS), DS(t.node2, SS));
              })
            : 'inEdges' === c
            ? E(u.inEdges, function(t) {
                t.dataIndex < 0 || (DS(t, IS), DS(t.node1, SS));
              })
            : 'allEdges' === c &&
              E(u.edges, function(t) {
                t.dataIndex < 0 ||
                  (DS(t, IS),
                  t.node1 !== u && DS(t.node1, SS),
                  t.node2 !== u && DS(t.node2, SS));
              });
        }
        h && (DS(h, IS), DS(h.node1, SS), DS(h.node2, SS));
      }
    },
    unfocusNodeAdjacency: function(t, e, i, n) {
      var o = t.getGraph();
      o.eachNode(function(t) {
        AS(t, bS);
      }),
        o.eachEdge(function(t) {
          AS(t, MS);
        });
    },
  }),
    Tf({type: 'dragNode', event: 'dragnode', update: 'update'}, function(e, t) {
      t.eachComponent(
        {mainType: 'series', subType: 'sankey', query: e},
        function(t) {
          t.setNodePosition(e.dataIndex, [e.localX, e.localY]);
        },
      );
    });
  function LS(t) {
    var e = t.hostGraph.data.getRawDataItem(t.dataIndex);
    return null != e.depth && 0 <= e.depth;
  }
  function kS(t, l, u, h, c) {
    var d = 'vertical' === c ? 'x' : 'y';
    E(t, function(t) {
      var e, i, n;
      t.sort(function(t, e) {
        return t.getLayout()[d] - e.getLayout()[d];
      });
      for (
        var o = 0, a = t.length, r = 'vertical' === c ? 'dx' : 'dy', s = 0;
        s < a;
        s++
      )
        0 < (n = o - (i = t[s]).getLayout()[d]) &&
          ((e = i.getLayout()[d] + n),
          'vertical' === c ? i.setLayout({x: e}, !0) : i.setLayout({y: e}, !0)),
          (o = i.getLayout()[d] + i.getLayout()[r] + l);
      if (0 < (n = o - l - ('vertical' === c ? h : u)))
        for (
          e = i.getLayout()[d] - n,
            'vertical' === c
              ? i.setLayout({x: e}, !0)
              : i.setLayout({y: e}, !0),
            o = e,
            s = a - 2;
          0 <= s;
          --s
        )
          0 < (n = (i = t[s]).getLayout()[d] + i.getLayout()[r] + l - o) &&
            ((e = i.getLayout()[d] - n),
            'vertical' === c
              ? i.setLayout({x: e}, !0)
              : i.setLayout({y: e}, !0)),
            (o = i.getLayout()[d]);
    });
  }
  function PS(t, a, r) {
    E(t.slice().reverse(), function(t) {
      E(t, function(t) {
        if (t.outEdges.length) {
          var e = VS(t.outEdges, NS, r) / VS(t.outEdges, BS, r);
          if (isNaN(e)) {
            var i = t.outEdges.length;
            e = i ? VS(t.outEdges, OS, r) / i : 0;
          }
          if ('vertical' === r) {
            var n = t.getLayout().x + (e - zS(t, r)) * a;
            t.setLayout({x: n}, !0);
          } else {
            var o = t.getLayout().y + (e - zS(t, r)) * a;
            t.setLayout({y: o}, !0);
          }
        }
      });
    });
  }
  function NS(t, e) {
    return zS(t.node2, e) * t.getValue();
  }
  function OS(t, e) {
    return zS(t.node2, e);
  }
  function ES(t, e) {
    return zS(t.node1, e) * t.getValue();
  }
  function RS(t, e) {
    return zS(t.node1, e);
  }
  function zS(t, e) {
    return 'vertical' === e
      ? t.getLayout().x + t.getLayout().dx / 2
      : t.getLayout().y + t.getLayout().dy / 2;
  }
  function BS(t) {
    return t.getValue();
  }
  function VS(t, e, i) {
    for (var n = 0, o = t.length, a = -1; ++a < o; ) {
      var r = +e.call(t, t[a], i);
      isNaN(r) || (n += r);
    }
    return n;
  }
  function GS(t, a, r) {
    E(t, function(t) {
      E(t, function(t) {
        if (t.inEdges.length) {
          var e = VS(t.inEdges, ES, r) / VS(t.inEdges, BS, r);
          if (isNaN(e)) {
            var i = t.inEdges.length;
            e = i ? VS(t.inEdges, RS, r) / i : 0;
          }
          if ('vertical' === r) {
            var n = t.getLayout().x + (e - zS(t, r)) * a;
            t.setLayout({x: n}, !0);
          } else {
            var o = t.getLayout().y + (e - zS(t, r)) * a;
            t.setLayout({y: o}, !0);
          }
        }
      });
    });
  }
  Df(function(t, u, e) {
    t.eachSeriesByType('sankey', function(t) {
      var e = t.get('nodeWidth'),
        i = t.get('nodeGap'),
        n = (function(t, e) {
          return Iu(t.getBoxLayoutParams(), {
            width: e.getWidth(),
            height: e.getHeight(),
          });
        })(t, u),
        o = (t.layoutInfo = n).width,
        a = n.height,
        r = t.getGraph(),
        s = r.nodes,
        l = r.edges;
      !(function(t) {
        E(t, function(t) {
          var e = VS(t.outEdges, BS),
            i = VS(t.inEdges, BS),
            n = t.getValue() || 0,
            o = Math.max(e, i, n);
          t.setLayout({value: o}, !0);
        });
      })(s),
        (function(t, e, i, n, o, a, r, s, l) {
          (function(t, e, i, n, o, a, r) {
            for (
              var s = [], l = [], u = [], h = [], c = 0, d = 0;
              d < e.length;
              d++
            )
              s[d] = 1;
            for (d = 0; d < t.length; d++)
              (l[d] = t[d].inEdges.length), 0 === l[d] && u.push(t[d]);
            var f = -1;
            for (; u.length; ) {
              for (var p = 0; p < u.length; p++) {
                var g = u[p],
                  m = g.hostGraph.data.getRawDataItem(g.dataIndex),
                  v = null != m.depth && 0 <= m.depth;
                v && m.depth > f && (f = m.depth),
                  g.setLayout({depth: v ? m.depth : c}, !0),
                  'vertical' === a
                    ? g.setLayout({dy: i}, !0)
                    : g.setLayout({dx: i}, !0);
                for (var y = 0; y < g.outEdges.length; y++) {
                  var x = g.outEdges[y],
                    _ = e.indexOf(x);
                  s[_] = 0;
                  var w = x.node2,
                    b = t.indexOf(w);
                  0 == --l[b] && h.indexOf(w) < 0 && h.push(w);
                }
              }
              ++c, (u = h), (h = []);
            }
            for (d = 0; d < s.length; d++)
              if (1 === s[d])
                throw new Error(
                  'Sankey is a DAG, the original data has cycle!',
                );
            var S = c - 1 < f ? f : c - 1;
            r &&
              'left' !== r &&
              (function(t, e, i, n) {
                if ('right' === e) {
                  for (var o = [], a = t, r = 0; a.length; ) {
                    for (var s = 0; s < a.length; s++) {
                      var l = a[s];
                      l.setLayout({skNodeHeight: r}, !0);
                      for (var u = 0; u < l.inEdges.length; u++) {
                        var h = l.inEdges[u];
                        o.indexOf(h.node1) < 0 && o.push(h.node1);
                      }
                    }
                    (a = o), (o = []), ++r;
                  }
                  E(t, function(t) {
                    LS(t) ||
                      t.setLayout(
                        {depth: Math.max(0, n - t.getLayout().skNodeHeight)},
                        !0,
                      );
                  });
                } else
                  'justify' === e &&
                    (function(t, e) {
                      E(t, function(t) {
                        LS(t) ||
                          t.outEdges.length ||
                          t.setLayout({depth: e}, !0);
                      });
                    })(t, n);
              })(t, r, 0, S);
            !(function(t, i, n) {
              E(t, function(t) {
                var e = t.getLayout().depth * i;
                'vertical' === n
                  ? t.setLayout({y: e}, !0)
                  : t.setLayout({x: e}, !0);
              });
            })(t, 'vertical' === a ? (o - i) / S : (n - i) / S, a);
          })(t, e, i, o, a, s, l),
            (function(t, e, i, n, o, a, r) {
              var s = (function(t, e) {
                var i = [],
                  n = 'vertical' === e ? 'y' : 'x',
                  o = na(t, function(t) {
                    return t.getLayout()[n];
                  });
                return (
                  o.keys.sort(function(t, e) {
                    return t - e;
                  }),
                  E(o.keys, function(t) {
                    i.push(o.buckets.get(t));
                  }),
                  i
                );
              })(t, r);
              (function(t, e, o, a, r, s) {
                var l = 1 / 0;
                E(t, function(t) {
                  var e = t.length,
                    i = 0;
                  E(t, function(t) {
                    i += t.getLayout().value;
                  });
                  var n =
                    'vertical' === s
                      ? (a - (e - 1) * r) / i
                      : (o - (e - 1) * r) / i;
                  n < l && (l = n);
                }),
                  E(t, function(t) {
                    E(t, function(t, e) {
                      var i = t.getLayout().value * l;
                      'vertical' === s
                        ? (t.setLayout({x: e}, !0), t.setLayout({dx: i}, !0))
                        : (t.setLayout({y: e}, !0), t.setLayout({dy: i}, !0));
                    });
                  }),
                  E(e, function(t) {
                    var e = +t.getValue() * l;
                    t.setLayout({dy: e}, !0);
                  });
              })(s, e, i, n, o, r),
                kS(s, o, i, n, r);
              for (var l = 1; 0 < a; a--)
                PS(s, (l *= 0.99), r),
                  kS(s, o, i, n, r),
                  GS(s, l, r),
                  kS(s, o, i, n, r);
            })(t, e, a, o, n, r, s),
            (function(t, e) {
              var i = 'vertical' === e ? 'x' : 'y';
              E(t, function(t) {
                t.outEdges.sort(function(t, e) {
                  return t.node2.getLayout()[i] - e.node2.getLayout()[i];
                }),
                  t.inEdges.sort(function(t, e) {
                    return t.node1.getLayout()[i] - e.node1.getLayout()[i];
                  });
              }),
                E(t, function(t) {
                  var e = 0,
                    i = 0;
                  E(t.outEdges, function(t) {
                    t.setLayout({sy: e}, !0), (e += t.getLayout().dy);
                  }),
                    E(t.inEdges, function(t) {
                      t.setLayout({ty: i}, !0), (i += t.getLayout().dy);
                    });
                });
            })(t, s);
        })(
          s,
          l,
          e,
          i,
          o,
          a,
          0 !==
            I(s, function(t) {
              return 0 === t.getLayout().value;
            }).length
            ? 0
            : t.get('layoutIterations'),
          t.get('orient'),
          t.get('nodeAlign'),
        );
    });
  }),
    Cf(function(t, e) {
      t.eachSeriesByType('sankey', function(n) {
        var t = n.getGraph().nodes;
        if (t.length) {
          var o = 1 / 0,
            a = -1 / 0;
          E(t, function(t) {
            var e = t.getLayout().value;
            e < o && (o = e), a < e && (a = e);
          }),
            E(t, function(t) {
              var e = new b_({
                  type: 'color',
                  mappingMethod: 'linear',
                  dataExtent: [o, a],
                  visual: n.get('color'),
                }).mapValueToVisual(t.getLayout().value),
                i = t.getModel().get('itemStyle.color');
              null != i ? t.setVisual('color', i) : t.setVisual('color', e);
            });
        }
      });
    });
  var FS = {
    _baseAxisDim: null,
    getInitialData: function(t, e) {
      var i,
        n,
        o = e.getComponent('xAxis', this.get('xAxisIndex')),
        a = e.getComponent('yAxis', this.get('yAxisIndex')),
        r = o.get('type'),
        s = a.get('type');
      'category' === r
        ? ((t.layout = 'horizontal'), (i = o.getOrdinalMeta()), (n = !0))
        : 'category' === s
        ? ((t.layout = 'vertical'), (i = a.getOrdinalMeta()), (n = !0))
        : (t.layout = t.layout || 'horizontal');
      var l = ['x', 'y'],
        u = 'horizontal' === t.layout ? 0 : 1,
        h = (this._baseAxisDim = l[u]),
        c = l[1 - u],
        d = [o, a],
        f = d[u].get('type'),
        p = d[1 - u].get('type'),
        g = t.data;
      if (g && n) {
        var m = [];
        E(g, function(t, e) {
          var i;
          t.value && R(t.value)
            ? ((i = t.value.slice()), t.value.unshift(e))
            : R(t)
            ? ((i = t.slice()), t.unshift(e))
            : (i = t),
            m.push(i);
        }),
          (t.data = m);
      }
      var v = this.defaultValueDimensions,
        y = [
          {
            name: h,
            type: Ff(f),
            ordinalMeta: i,
            otherDims: {tooltip: !1, itemName: 0},
            dimsDef: ['base'],
          },
          {name: c, type: Ff(p), dimsDef: v.slice()},
        ];
      return ty(this, {
        coordDimensions: y,
        dimensionsCount: v.length + 1,
        encodeDefaulter: L(th, y, this),
      });
    },
    getBaseAxis: function() {
      var t = this._baseAxisDim;
      return this.ecModel.getComponent(t + 'Axis', this.get(t + 'AxisIndex'))
        .axis;
    },
  };
  S(
    cc.extend({
      type: 'series.boxplot',
      dependencies: ['xAxis', 'yAxis', 'grid'],
      defaultValueDimensions: [
        {name: 'min', defaultTooltip: !0},
        {name: 'Q1', defaultTooltip: !0},
        {name: 'median', defaultTooltip: !0},
        {name: 'Q3', defaultTooltip: !0},
        {name: 'max', defaultTooltip: !0},
      ],
      dimensions: null,
      defaultOption: {
        zlevel: 0,
        z: 2,
        coordinateSystem: 'cartesian2d',
        legendHoverLink: !0,
        hoverAnimation: !0,
        layout: null,
        boxWidth: [7, 50],
        itemStyle: {color: '#fff', borderWidth: 1},
        emphasis: {
          itemStyle: {
            borderWidth: 2,
            shadowBlur: 5,
            shadowOffsetX: 2,
            shadowOffsetY: 2,
            shadowColor: 'rgba(0,0,0,0.4)',
          },
        },
        animationEasing: 'elasticOut',
        animationDuration: 800,
      },
    }),
    FS,
    !0,
  );
  var WS = ['itemStyle'],
    HS = ['emphasis', 'itemStyle'],
    ZS =
      (Mc.extend({
        type: 'boxplot',
        render: function(t, e, i) {
          var o = t.getData(),
            a = this.group,
            r = this._data;
          this._data || a.removeAll();
          var s = 'horizontal' === t.get('layout') ? 1 : 0;
          o
            .diff(r)
            .add(function(t) {
              if (o.hasValue(t)) {
                var e = US(o.getItemLayout(t), o, t, s, !0);
                o.setItemGraphicEl(t, e), a.add(e);
              }
            })
            .update(function(t, e) {
              var i = r.getItemGraphicEl(e);
              if (o.hasValue(t)) {
                var n = o.getItemLayout(t);
                i ? XS(n, i, o, t) : (i = US(n, o, t, s)),
                  a.add(i),
                  o.setItemGraphicEl(t, i);
              } else a.remove(i);
            })
            .remove(function(t) {
              var e = r.getItemGraphicEl(t);
              e && a.remove(e);
            })
            .execute(),
            (this._data = o);
        },
        remove: function(t) {
          var e = this.group,
            i = this._data;
          (this._data = null),
            i &&
              i.eachItemGraphicEl(function(t) {
                t && e.remove(t);
              });
        },
        dispose: nt,
      }),
      Lr.extend({
        type: 'boxplotBoxPath',
        shape: {},
        buildPath: function(t, e) {
          var i = e.points,
            n = 0;
          for (t.moveTo(i[n][0], i[n][1]), n++; n < 4; n++)
            t.lineTo(i[n][0], i[n][1]);
          for (t.closePath(); n < i.length; n++)
            t.moveTo(i[n][0], i[n][1]), n++, t.lineTo(i[n][0], i[n][1]);
        },
      }));
  function US(t, e, i, n, o) {
    var a = t.ends,
      r = new ZS({
        shape: {
          points: o
            ? (function(t, e, i) {
                return O(t, function(t) {
                  return ((t = t.slice())[e] = i.initBaseline), t;
                });
              })(a, n, t)
            : a,
        },
      });
    return XS(t, r, e, i, o), r;
  }
  function XS(t, e, i, n, o) {
    var a = i.hostModel;
    (0,
    Il[o ? 'initProps' : 'updateProps'])(e, {shape: {points: t.ends}}, a, n);
    var r = i.getItemModel(n),
      s = r.getModel(WS),
      l = i.getItemVisual(n, 'color'),
      u = s.getItemStyle(['borderColor']);
    (u.stroke = l),
      (u.strokeNoScale = !0),
      e.useStyle(u),
      (e.z2 = 100),
      tl(e, r.getModel(HS).getItemStyle());
  }
  var YS = ['itemStyle', 'borderColor'],
    jS = E;
  Cf(function(n, t) {
    var o = n.get('color');
    n.eachRawSeriesByType('boxplot', function(t) {
      var e = o[t.seriesIndex % o.length],
        i = t.getData();
      i.setVisual({legendSymbol: 'roundRect', color: t.get(YS) || e}),
        n.isSeriesFiltered(t) ||
          i.each(function(t) {
            var e = i.getItemModel(t);
            i.setItemVisual(t, {color: e.get(YS, !0)});
          });
    });
  }),
    Df(function(t) {
      var e = (function(t) {
        var n = [],
          o = [];
        return (
          t.eachSeriesByType('boxplot', function(t) {
            var e = t.getBaseAxis(),
              i = w(o, e);
            i < 0 &&
              ((i = o.length),
              (o[i] = e),
              (n[i] = {axis: e, seriesModels: []})),
              n[i].seriesModels.push(t);
          }),
          n
        );
      })(t);
      jS(e, function(i) {
        var t = i.seriesModels;
        t.length &&
          ((function(t) {
            var e,
              i,
              n = t.axis,
              o = t.seriesModels,
              a = o.length,
              r = (t.boxWidthList = []),
              s = (t.boxOffsetList = []),
              l = [];
            if ('category' === n.type) i = n.getBandWidth();
            else {
              var u = 0;
              jS(o, function(t) {
                u = Math.max(u, t.getData().count());
              }),
                (e = n.getExtent()),
                Math.abs(e[1] - e[0]);
            }
            jS(o, function(t) {
              var e = t.get('boxWidth');
              R(e) || (e = [e, e]),
                l.push([Vl(e[0], i) || 0, Vl(e[1], i) || 0]);
            });
            var h = 0.8 * i - 2,
              c = (h / a) * 0.3,
              d = (h - c * (a - 1)) / a,
              f = d / 2 - h / 2;
            jS(o, function(t, e) {
              s.push(f),
                (f += c + d),
                r.push(Math.min(Math.max(d, l[e][0]), l[e][1]));
            });
          })(i),
          jS(t, function(t, e) {
            !(function(t, r, e) {
              var s = t.coordinateSystem,
                l = t.getData(),
                a = e / 2,
                u = 'horizontal' === t.get('layout') ? 0 : 1,
                h = 1 - u,
                i = ['x', 'y'],
                n = l.mapDimension(i[u]),
                o = l.mapDimension(i[h], !0);
              if (null == n || o.length < 5) return;
              for (var c = 0; c < l.count(); c++) {
                var d = l.get(n, c),
                  f = x(d, o[2], c),
                  p = x(d, o[0], c),
                  g = x(d, o[1], c),
                  m = x(d, o[3], c),
                  v = x(d, o[4], c),
                  y = [];
                _(y, g, 0),
                  _(y, m, 1),
                  y.push(p, g, v, m),
                  w(y, p),
                  w(y, v),
                  w(y, f),
                  l.setItemLayout(c, {initBaseline: f[h], ends: y});
              }
              function x(t, e, i) {
                var n,
                  o = l.get(e, i),
                  a = [];
                return (
                  (a[u] = t),
                  (a[h] = o),
                  isNaN(t) || isNaN(o)
                    ? (n = [NaN, NaN])
                    : ((n = s.dataToPoint(a))[u] += r),
                  n
                );
              }
              function _(t, e, i) {
                var n = e.slice(),
                  o = e.slice();
                (n[u] += a), (o[u] -= a), i ? t.push(n, o) : t.push(o, n);
              }
              function w(t, e) {
                var i = e.slice(),
                  n = e.slice();
                (i[u] -= a), (n[u] += a), t.push(i, n);
              }
            })(t, i.boxOffsetList[e], i.boxWidthList[e]);
          }));
      });
    }),
    S(
      cc.extend({
        type: 'series.candlestick',
        dependencies: ['xAxis', 'yAxis', 'grid'],
        defaultValueDimensions: [
          {name: 'open', defaultTooltip: !0},
          {name: 'close', defaultTooltip: !0},
          {name: 'lowest', defaultTooltip: !0},
          {name: 'highest', defaultTooltip: !0},
        ],
        dimensions: null,
        defaultOption: {
          zlevel: 0,
          z: 2,
          coordinateSystem: 'cartesian2d',
          legendHoverLink: !0,
          hoverAnimation: !0,
          layout: null,
          clip: !0,
          itemStyle: {
            color: '#c23531',
            color0: '#314656',
            borderWidth: 1,
            borderColor: '#c23531',
            borderColor0: '#314656',
          },
          emphasis: {itemStyle: {borderWidth: 2}},
          barMaxWidth: null,
          barMinWidth: null,
          barWidth: null,
          large: !0,
          largeThreshold: 600,
          progressive: 3e3,
          progressiveThreshold: 1e4,
          progressiveChunkMode: 'mod',
          animationUpdate: !1,
          animationEasing: 'linear',
          animationDuration: 300,
        },
        getShadowDim: function() {
          return 'open';
        },
        brushSelector: function(t, e, i) {
          var n = e.getItemLayout(t);
          return n && i.rect(n.brushRect);
        },
      }),
      FS,
      !0,
    );
  var qS = ['itemStyle'],
    KS = ['emphasis', 'itemStyle'],
    $S = ['color', 'color0', 'borderColor', 'borderColor0'],
    JS =
      (Mc.extend({
        type: 'candlestick',
        render: function(t, e, i) {
          this.group.removeClipPath(),
            this._updateDrawMode(t),
            this._isLargeDraw ? this._renderLarge(t) : this._renderNormal(t);
        },
        incrementalPrepareRender: function(t, e, i) {
          this._clear(), this._updateDrawMode(t);
        },
        incrementalRender: function(t, e, i, n) {
          this._isLargeDraw
            ? this._incrementalRenderLarge(t, e)
            : this._incrementalRenderNormal(t, e);
        },
        _updateDrawMode: function(t) {
          var e = t.pipelineContext.large;
          (null == this._isLargeDraw || e ^ this._isLargeDraw) &&
            ((this._isLargeDraw = e), this._clear());
        },
        _renderNormal: function(o) {
          var a = o.getData(),
            r = this._data,
            s = this.group,
            l = a.getLayout('isSimpleBox'),
            u = o.get('clip', !0),
            t = o.coordinateSystem,
            h = t.getArea && t.getArea();
          this._data || s.removeAll(),
            a
              .diff(r)
              .add(function(t) {
                if (a.hasValue(t)) {
                  var e,
                    i = a.getItemLayout(t);
                  if (u && tM(h, i)) return;
                  gl((e = QS(i, t, !0)), {shape: {points: i.ends}}, o, t),
                    eM(e, a, t, l),
                    s.add(e),
                    a.setItemGraphicEl(t, e);
                }
              })
              .update(function(t, e) {
                var i = r.getItemGraphicEl(e);
                if (a.hasValue(t)) {
                  var n = a.getItemLayout(t);
                  u && tM(h, n)
                    ? s.remove(i)
                    : (i
                        ? pl(i, {shape: {points: n.ends}}, o, t)
                        : (i = QS(n, t)),
                      eM(i, a, t, l),
                      s.add(i),
                      a.setItemGraphicEl(t, i));
                } else s.remove(i);
              })
              .remove(function(t) {
                var e = r.getItemGraphicEl(t);
                e && s.remove(e);
              })
              .execute(),
            (this._data = a);
        },
        _renderLarge: function(t) {
          this._clear(), nM(t, this.group);
          var e = t.get('clip', !0) ? Lm(t.coordinateSystem, !1, t) : null;
          e ? this.group.setClipPath(e) : this.group.removeClipPath();
        },
        _incrementalRenderNormal: function(t, e) {
          for (
            var i, n = e.getData(), o = n.getLayout('isSimpleBox');
            null != (i = t.next());

          ) {
            var a;
            eM((a = QS(n.getItemLayout(i), i)), n, i, o),
              (a.incremental = !0),
              this.group.add(a);
          }
        },
        _incrementalRenderLarge: function(t, e) {
          nM(e, this.group, !0);
        },
        remove: function(t) {
          this._clear();
        },
        _clear: function() {
          this.group.removeAll(), (this._data = null);
        },
        dispose: nt,
      }),
      Lr.extend({
        type: 'normalCandlestickBox',
        shape: {},
        buildPath: function(t, e) {
          var i = e.points;
          this.__simpleBox
            ? (t.moveTo(i[4][0], i[4][1]), t.lineTo(i[6][0], i[6][1]))
            : (t.moveTo(i[0][0], i[0][1]),
              t.lineTo(i[1][0], i[1][1]),
              t.lineTo(i[2][0], i[2][1]),
              t.lineTo(i[3][0], i[3][1]),
              t.closePath(),
              t.moveTo(i[4][0], i[4][1]),
              t.lineTo(i[5][0], i[5][1]),
              t.moveTo(i[6][0], i[6][1]),
              t.lineTo(i[7][0], i[7][1]));
        },
      }));
  function QS(t, e, i) {
    var n = t.ends;
    return new JS({
      shape: {
        points: i
          ? (function(t, e) {
              return O(t, function(t) {
                return ((t = t.slice())[1] = e.initBaseline), t;
              });
            })(n, t)
          : n,
      },
      z2: 100,
    });
  }
  function tM(t, e) {
    for (var i = !0, n = 0; n < e.ends.length; n++)
      if (t.contain(e.ends[n][0], e.ends[n][1])) {
        i = !1;
        break;
      }
    return i;
  }
  function eM(t, e, i, n) {
    var o = e.getItemModel(i),
      a = o.getModel(qS),
      r = e.getItemVisual(i, 'color'),
      s = e.getItemVisual(i, 'borderColor') || r,
      l = a.getItemStyle($S);
    t.useStyle(l),
      (t.style.strokeNoScale = !0),
      (t.style.fill = r),
      (t.style.stroke = s),
      (t.__simpleBox = n),
      tl(t, o.getModel(KS).getItemStyle());
  }
  var iM = Lr.extend({
    type: 'largeCandlestickBox',
    shape: {},
    buildPath: function(t, e) {
      for (var i = e.points, n = 0; n < i.length; )
        if (this.__sign === i[n++]) {
          var o = i[n++];
          t.moveTo(o, i[n++]), t.lineTo(o, i[n++]);
        } else n += 3;
    },
  });
  function nM(t, e, i) {
    var n = t.getData(),
      o = n.getLayout('largePoints'),
      a = new iM({shape: {points: o}, __sign: 1});
    e.add(a);
    var r = new iM({shape: {points: o}, __sign: -1});
    e.add(r),
      oM(1, a, t, n),
      oM(-1, r, t, n),
      i && ((a.incremental = !0), (r.incremental = !0));
  }
  function oM(t, e, i, n) {
    var o = 0 < t ? 'P' : 'N',
      a = n.getVisual('borderColor' + o) || n.getVisual('color' + o),
      r = i.getModel(qS).getItemStyle($S);
    e.useStyle(r), (e.style.fill = null), (e.style.stroke = a);
  }
  var aM = ['itemStyle', 'borderColor'],
    rM = ['itemStyle', 'borderColor0'],
    sM = ['itemStyle', 'color'],
    lM = ['itemStyle', 'color0'],
    uM = {
      seriesType: 'candlestick',
      plan: wc(),
      performRawSeries: !0,
      reset: function(t, e) {
        if (
          (t
            .getData()
            .setVisual({
              legendSymbol: 'roundRect',
              colorP: a(1, t),
              colorN: a(-1, t),
              borderColorP: r(1, t),
              borderColorN: r(-1, t),
            }),
          !e.isSeriesFiltered(t))
        )
          return (
            !t.pipelineContext.large && {
              progress: function(t, e) {
                var i;
                for (; null != (i = t.next()); ) {
                  var n = e.getItemModel(i),
                    o = e.getItemLayout(i).sign;
                  e.setItemVisual(i, {color: a(o, n), borderColor: r(o, n)});
                }
              },
            }
          );
        function a(t, e) {
          return e.get(0 < t ? sM : lM);
        }
        function r(t, e) {
          return e.get(0 < t ? aM : rM);
        }
      },
    },
    hM = 'undefined' != typeof Float32Array ? Float32Array : Array,
    cM = {
      seriesType: 'candlestick',
      plan: wc(),
      reset: function(t) {
        var x = t.coordinateSystem,
          e = t.getData(),
          _ = (function(t, e) {
            var i,
              n = t.getBaseAxis(),
              o =
                'category' === n.type
                  ? n.getBandWidth()
                  : ((i = n.getExtent()), Math.abs(i[1] - i[0]) / e.count()),
              a = Vl(U(t.get('barMaxWidth'), o), o),
              r = Vl(U(t.get('barMinWidth'), 1), o),
              s = t.get('barWidth');
            return null != s ? Vl(s, o) : Math.max(Math.min(o / 2, a), r);
          })(t, e),
          i = ['x', 'y'],
          w = e.mapDimension(i[0]),
          n = e.mapDimension(i[1], !0),
          b = n[0],
          S = n[1],
          M = n[2],
          I = n[3];
        if (
          (e.setLayout({candleWidth: _, isSimpleBox: _ <= 1.3}),
          !(null == w || n.length < 4))
        )
          return {
            progress: t.pipelineContext.large
              ? function(t, e) {
                  var i,
                    n,
                    o = new hM(4 * t.count),
                    a = 0,
                    r = [],
                    s = [];
                  for (; null != (n = t.next()); ) {
                    var l = e.get(w, n),
                      u = e.get(b, n),
                      h = e.get(S, n),
                      c = e.get(M, n),
                      d = e.get(I, n);
                    isNaN(l) || isNaN(c) || isNaN(d)
                      ? ((o[a++] = NaN), (a += 3))
                      : ((o[a++] = dM(e, n, u, h, S)),
                        (r[0] = l),
                        (r[1] = c),
                        (i = x.dataToPoint(r, null, s)),
                        (o[a++] = i ? i[0] : NaN),
                        (o[a++] = i ? i[1] : NaN),
                        (r[1] = d),
                        (i = x.dataToPoint(r, null, s)),
                        (o[a++] = i ? i[1] : NaN));
                  }
                  e.setLayout('largePoints', o);
                }
              : function(t, e) {
                  var i;
                  for (; null != (i = t.next()); ) {
                    var n = e.get(w, i),
                      o = e.get(b, i),
                      a = e.get(S, i),
                      r = e.get(M, i),
                      s = e.get(I, i),
                      l = Math.min(o, a),
                      u = Math.max(o, a),
                      h = g(l, n),
                      c = g(u, n),
                      d = g(r, n),
                      f = g(s, n),
                      p = [];
                    m(p, c, 0),
                      m(p, h, 1),
                      p.push(y(f), y(c), y(d), y(h)),
                      e.setItemLayout(i, {
                        sign: dM(e, i, o, a, S),
                        initBaseline: a < o ? c[1] : h[1],
                        ends: p,
                        brushRect: v(r, s, n),
                      });
                  }
                  function g(t, e) {
                    var i = [];
                    return (
                      (i[0] = e),
                      (i[1] = t),
                      isNaN(e) || isNaN(t) ? [NaN, NaN] : x.dataToPoint(i)
                    );
                  }
                  function m(t, e, i) {
                    var n = e.slice(),
                      o = e.slice();
                    (n[0] = Gs(n[0] + _ / 2, 1, !1)),
                      (o[0] = Gs(o[0] - _ / 2, 1, !0)),
                      i ? t.push(n, o) : t.push(o, n);
                  }
                  function v(t, e, i) {
                    var n = g(t, i),
                      o = g(e, i);
                    return (
                      (n[0] -= _ / 2),
                      (o[0] -= _ / 2),
                      {x: n[0], y: n[1], width: _, height: o[1] - n[1]}
                    );
                  }
                  function y(t) {
                    return (t[0] = Gs(t[0], 1)), t;
                  }
                },
          };
      },
    };
  function dM(t, e, i, n, o) {
    return n < i ? -1 : i < n ? 1 : 0 < e ? (t.get(o, e - 1) <= n ? 1 : -1) : 1;
  }
  Mf(function(t) {
    t &&
      R(t.series) &&
      E(t.series, function(t) {
        V(t) && 'k' === t.type && (t.type = 'candlestick');
      });
  }),
    Cf(uM),
    Df(cM),
    cc.extend({
      type: 'series.effectScatter',
      dependencies: ['grid', 'polar'],
      getInitialData: function(t, e) {
        return bp(this.getSource(), this, {useEncodeDefaulter: !0});
      },
      brushSelector: 'point',
      defaultOption: {
        coordinateSystem: 'cartesian2d',
        zlevel: 0,
        z: 2,
        legendHoverLink: !0,
        effectType: 'ripple',
        progressive: 0,
        showEffectOn: 'render',
        rippleEffect: {period: 4, scale: 2.5, brushType: 'fill'},
        symbolSize: 10,
      },
    });
  function fM(t, e) {
    var i = e.rippleEffectColor || e.color;
    t.eachChild(function(t) {
      t.attr({
        z: e.z,
        zlevel: e.zlevel,
        style: {
          stroke: 'stroke' === e.brushType ? i : null,
          fill: 'fill' === e.brushType ? i : null,
        },
      });
    });
  }
  function pM(t, e) {
    ki.call(this);
    var i = new Qg(t, e),
      n = new ki();
    this.add(i),
      this.add(n),
      (n.beforeUpdate = function() {
        this.attr(i.getScale());
      }),
      this.updateData(t, e);
  }
  var gM = pM.prototype;
  (gM.stopEffectAnimation = function() {
    this.childAt(1).removeAll();
  }),
    (gM.startEffectAnimation = function(t) {
      for (
        var e = t.symbolType, i = t.color, n = this.childAt(1), o = 0;
        o < 3;
        o++
      ) {
        var a = Dg(e, -1, -1, 2, 2, i);
        a.attr({
          style: {strokeNoScale: !0},
          z2: 99,
          silent: !0,
          scale: [0.5, 0.5],
        });
        var r = (-o / 3) * t.period + t.effectOffset;
        a
          .animate('', !0)
          .when(t.period, {scale: [t.rippleScale / 2, t.rippleScale / 2]})
          .delay(r)
          .start(),
          a
            .animateStyle(!0)
            .when(t.period, {opacity: 0})
            .delay(r)
            .start(),
          n.add(a);
      }
      fM(n, t);
    }),
    (gM.updateEffectAnimation = function(t) {
      for (
        var e = this._effectCfg,
          i = this.childAt(1),
          n = ['symbolType', 'period', 'rippleScale'],
          o = 0;
        o < n.length;
        o++
      ) {
        var a = n[o];
        if (e[a] !== t[a])
          return this.stopEffectAnimation(), void this.startEffectAnimation(t);
      }
      fM(i, t);
    }),
    (gM.highlight = function() {
      this.trigger('emphasis');
    }),
    (gM.downplay = function() {
      this.trigger('normal');
    }),
    (gM.updateData = function(t, e) {
      var i = t.hostModel;
      this.childAt(0).updateData(t, e);
      var n = this.childAt(1),
        o = t.getItemModel(e),
        a = t.getItemVisual(e, 'symbol'),
        r = (function(t) {
          return R(t) || (t = [+t, +t]), t;
        })(t.getItemVisual(e, 'symbolSize')),
        s = t.getItemVisual(e, 'color');
      n.attr('scale', r),
        n.traverse(function(t) {
          t.attr({fill: s});
        });
      var l = o.getShallow('symbolOffset');
      if (l) {
        var u = n.position;
        (u[0] = Vl(l[0], r[0])), (u[1] = Vl(l[1], r[1]));
      }
      var h = t.getItemVisual(e, 'symbolRotate');
      n.rotation = ((h || 0) * Math.PI) / 180 || 0;
      var c = {};
      if (
        ((c.showEffectOn = i.get('showEffectOn')),
        (c.rippleScale = o.get('rippleEffect.scale')),
        (c.brushType = o.get('rippleEffect.brushType')),
        (c.period = 1e3 * o.get('rippleEffect.period')),
        (c.effectOffset = e / t.count()),
        (c.z = o.getShallow('z') || 0),
        (c.zlevel = o.getShallow('zlevel') || 0),
        (c.symbolType = a),
        (c.color = s),
        (c.rippleEffectColor = o.get('rippleEffect.color')),
        this.off('mouseover')
          .off('mouseout')
          .off('emphasis')
          .off('normal'),
        'render' === c.showEffectOn)
      )
        this._effectCfg
          ? this.updateEffectAnimation(c)
          : this.startEffectAnimation(c),
          (this._effectCfg = c);
      else {
        (this._effectCfg = null), this.stopEffectAnimation();
        var d = this.childAt(0),
          f = function() {
            d.highlight(),
              'render' !== c.showEffectOn && this.startEffectAnimation(c);
          },
          p = function() {
            d.downplay(),
              'render' !== c.showEffectOn && this.stopEffectAnimation();
          };
        this.on('mouseover', f, this)
          .on('mouseout', p, this)
          .on('emphasis', f, this)
          .on('normal', p, this);
      }
      this._effectCfg = c;
    }),
    (gM.fadeOut = function(t) {
      this.off('mouseover')
        .off('mouseout')
        .off('emphasis')
        .off('normal'),
        t && t();
    }),
    b(pM, ki),
    Ef({
      type: 'effectScatter',
      init: function() {
        this._symbolDraw = new um(pM);
      },
      render: function(t, e, i) {
        var n = t.getData(),
          o = this._symbolDraw;
        o.updateData(n), this.group.add(o.group);
      },
      updateTransform: function(t, e, i) {
        var n = t.getData();
        this.group.dirty();
        var o = Bm().reset(t);
        o.progress && o.progress({start: 0, end: n.count()}, n),
          this._symbolDraw.updateLayout(n);
      },
      _updateGroupTransform: function(t) {
        var e = t.coordinateSystem;
        e &&
          e.getRoamTransform &&
          ((this.group.transform = ge(e.getRoamTransform())),
          this.group.decomposeTransform());
      },
      remove: function(t, e) {
        this._symbolDraw && this._symbolDraw.remove(e);
      },
      dispose: function() {},
    }),
    Cf(zm('effectScatter', 'circle')),
    Df(Bm('effectScatter'));
  var mM = 'undefined' == typeof Uint32Array ? Array : Uint32Array,
    vM = 'undefined' == typeof Float64Array ? Array : Float64Array;
  function yM(t) {
    var e = t.data;
    e &&
      e[0] &&
      e[0][0] &&
      e[0][0].coord &&
      (D &&
        console.warn(
          'Lines data configuration has been changed to { coords:[[1,2],[2,3]] }',
        ),
      (t.data = O(e, function(t) {
        var e = {coords: [t[0].coord, t[1].coord]};
        return (
          t[0].name && (e.fromName = t[0].name),
          t[1].name && (e.toName = t[1].name),
          g([e, t[0], t[1]])
        );
      })));
  }
  var xM = cc.extend({
    type: 'series.lines',
    dependencies: ['grid', 'polar'],
    visualColorAccessPath: 'lineStyle.color',
    init: function(t) {
      (t.data = t.data || []), yM(t);
      var e = this._processFlatCoordsArray(t.data);
      (this._flatCoords = e.flatCoords),
        (this._flatCoordsOffset = e.flatCoordsOffset),
        e.flatCoords && (t.data = new Float32Array(e.count)),
        xM.superApply(this, 'init', arguments);
    },
    mergeOption: function(t) {
      if (((t.data = t.data || []), yM(t), t.data)) {
        var e = this._processFlatCoordsArray(t.data);
        (this._flatCoords = e.flatCoords),
          (this._flatCoordsOffset = e.flatCoordsOffset),
          e.flatCoords && (t.data = new Float32Array(e.count));
      }
      xM.superApply(this, 'mergeOption', arguments);
    },
    appendData: function(t) {
      var e = this._processFlatCoordsArray(t.data);
      e.flatCoords &&
        (this._flatCoords
          ? ((this._flatCoords = it(this._flatCoords, e.flatCoords)),
            (this._flatCoordsOffset = it(
              this._flatCoordsOffset,
              e.flatCoordsOffset,
            )))
          : ((this._flatCoords = e.flatCoords),
            (this._flatCoordsOffset = e.flatCoordsOffset)),
        (t.data = new Float32Array(e.count))),
        this.getRawData().appendData(t.data);
    },
    _getCoordsFromItemModel: function(t) {
      var e = this.getData().getItemModel(t),
        i = e.option instanceof Array ? e.option : e.getShallow('coords');
      if (D && !(i instanceof Array && 0 < i.length && i[0] instanceof Array))
        throw new Error(
          'Invalid coords ' +
            JSON.stringify(i) +
            '. Lines must have 2d coords array in data item.',
        );
      return i;
    },
    getLineCoordsCount: function(t) {
      return this._flatCoordsOffset
        ? this._flatCoordsOffset[2 * t + 1]
        : this._getCoordsFromItemModel(t).length;
    },
    getLineCoords: function(t, e) {
      if (this._flatCoordsOffset) {
        for (
          var i = this._flatCoordsOffset[2 * t],
            n = this._flatCoordsOffset[2 * t + 1],
            o = 0;
          o < n;
          o++
        )
          (e[o] = e[o] || []),
            (e[o][0] = this._flatCoords[i + 2 * o]),
            (e[o][1] = this._flatCoords[i + 2 * o + 1]);
        return n;
      }
      var a = this._getCoordsFromItemModel(t);
      for (o = 0; o < a.length; o++)
        (e[o] = e[o] || []), (e[o][0] = a[o][0]), (e[o][1] = a[o][1]);
      return a.length;
    },
    _processFlatCoordsArray: function(t) {
      var e = 0;
      if (
        (this._flatCoords && (e = this._flatCoords.length),
        'number' != typeof t[0])
      )
        return {flatCoordsOffset: null, flatCoords: null, count: t.length};
      for (
        var i = t.length,
          n = new mM(i),
          o = new vM(i),
          a = 0,
          r = 0,
          s = 0,
          l = 0;
        l < i;

      ) {
        s++;
        var u = t[l++];
        (n[r++] = a + e), (n[r++] = u);
        for (var h = 0; h < u; h++) {
          var c = t[l++],
            d = t[l++];
          if (((o[a++] = c), (o[a++] = d), i < l && D))
            throw new Error('Invalid data format.');
        }
      }
      return {
        flatCoordsOffset: new Uint32Array(n.buffer, 0, r),
        flatCoords: o,
        count: s,
      };
    },
    getInitialData: function(t, e) {
      if (D && !dh.get(t.coordinateSystem))
        throw new Error('Unkown coordinate system ' + t.coordinateSystem);
      var a = new Qf(['value'], this);
      return (
        (a.hasItemOption = !1),
        a.initData(t.data, [], function(t, e, i, n) {
          if (t instanceof Array) return NaN;
          a.hasItemOption = !0;
          var o = t.value;
          return null != o ? (o instanceof Array ? o[n] : o) : void 0;
        }),
        a
      );
    },
    formatTooltip: function(t) {
      var e = this.getData().getItemModel(t),
        i = e.get('name');
      if (i) return i;
      var n = e.get('fromName'),
        o = e.get('toName'),
        a = [];
      return null != n && a.push(n), null != o && a.push(o), lu(a.join(' > '));
    },
    preventIncremental: function() {
      return !!this.get('effect.show');
    },
    getProgressive: function() {
      var t = this.option.progressive;
      return null == t
        ? this.option.large
          ? 1e4
          : this.get('progressive')
        : t;
    },
    getProgressiveThreshold: function() {
      var t = this.option.progressiveThreshold;
      return null == t
        ? this.option.large
          ? 2e4
          : this.get('progressiveThreshold')
        : t;
    },
    defaultOption: {
      coordinateSystem: 'geo',
      zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      hoverAnimation: !0,
      xAxisIndex: 0,
      yAxisIndex: 0,
      symbol: ['none', 'none'],
      symbolSize: [10, 10],
      geoIndex: 0,
      effect: {
        show: !1,
        period: 4,
        constantSpeed: 0,
        symbol: 'circle',
        symbolSize: 3,
        loop: !0,
        trailLength: 0.2,
      },
      large: !1,
      largeThreshold: 2e3,
      polyline: !1,
      clip: !0,
      label: {show: !1, position: 'end'},
      lineStyle: {opacity: 0.5},
    },
  });
  function _M(t, e, i) {
    ki.call(this),
      this.add(this.createLine(t, e, i)),
      this._updateEffectSymbol(t, e);
  }
  var wM = _M.prototype;
  function bM(t, e, i) {
    ki.call(this), this._createPolyline(t, e, i);
  }
  (wM.createLine = function(t, e, i) {
    return new xw(t, e, i);
  }),
    (wM._updateEffectSymbol = function(t, e) {
      var i = t.getItemModel(e).getModel('effect'),
        n = i.get('symbolSize'),
        o = i.get('symbol');
      R(n) || (n = [n, n]);
      var a = i.get('color') || t.getItemVisual(e, 'color'),
        r = this.childAt(1);
      this._symbolType !== o &&
        (this.remove(r),
        ((r = Dg(o, -0.5, -0.5, 1, 1, a)).z2 = 100),
        (r.culling = !0),
        this.add(r)),
        r &&
          (r.setStyle('shadowColor', a),
          r.setStyle(i.getItemStyle(['color'])),
          r.attr('scale', n),
          r.setColor(a),
          r.attr('scale', n),
          (this._symbolType = o),
          (this._symbolScale = n),
          this._updateEffectAnimation(t, i, e));
    }),
    (wM._updateEffectAnimation = function(e, t, i) {
      var n = this.childAt(1);
      if (n) {
        var o = this,
          a = e.getItemLayout(i),
          r = 1e3 * t.get('period'),
          s = t.get('loop'),
          l = t.get('constantSpeed'),
          u = Z(t.get('delay'), function(t) {
            return ((t / e.count()) * r) / 3;
          }),
          h = 'function' == typeof u;
        if (
          ((n.ignore = !0),
          this.updateAnimationPoints(n, a),
          0 < l && (r = (this.getLineLength(n) / l) * 1e3),
          r !== this._period || s !== this._loop)
        ) {
          n.stopAnimation();
          var c = u;
          h && (c = u(i)), 0 < n.__t && (c = -r * n.__t), (n.__t = 0);
          var d = n
            .animate('', s)
            .when(r, {__t: 1})
            .delay(c)
            .during(function() {
              o.updateSymbolPosition(n);
            });
          s ||
            d.done(function() {
              o.remove(n);
            }),
            d.start();
        }
        (this._period = r), (this._loop = s);
      }
    }),
    (wM.getLineLength = function(t) {
      return _t(t.__p1, t.__cp1) + _t(t.__cp1, t.__p2);
    }),
    (wM.updateAnimationPoints = function(t, e) {
      (t.__p1 = e[0]),
        (t.__p2 = e[1]),
        (t.__cp1 = e[2] || [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2]);
    }),
    (wM.updateData = function(t, e, i) {
      this.childAt(0).updateData(t, e, i), this._updateEffectSymbol(t, e);
    }),
    (wM.updateSymbolPosition = function(t) {
      var e = t.__p1,
        i = t.__p2,
        n = t.__cp1,
        o = t.__t,
        a = t.position,
        r = [a[0], a[1]],
        s = Na,
        l = Oa;
      (a[0] = s(e[0], n[0], i[0], o)), (a[1] = s(e[1], n[1], i[1], o));
      var u = l(e[0], n[0], i[0], o),
        h = l(e[1], n[1], i[1], o);
      if (
        ((t.rotation = -Math.atan2(h, u) - Math.PI / 2),
        'line' === this._symbolType ||
          'rect' === this._symbolType ||
          'roundRect' === this._symbolType)
      )
        if (void 0 !== t.__lastT && t.__lastT < t.__t) {
          var c = 1.05 * _t(r, a);
          t.attr('scale', [t.scale[0], c]),
            1 === o &&
              ((a[0] = r[0] + (a[0] - r[0]) / 2),
              (a[1] = r[1] + (a[1] - r[1]) / 2));
        } else if (1 === t.__lastT) {
          c = 2 * _t(e, a);
          t.attr('scale', [t.scale[0], c]);
        } else t.attr('scale', this._symbolScale);
      (t.__lastT = t.__t), (t.ignore = !1);
    }),
    (wM.updateLayout = function(t, e) {
      this.childAt(0).updateLayout(t, e);
      var i = t.getItemModel(e).getModel('effect');
      this._updateEffectAnimation(t, i, e);
    }),
    b(_M, ki);
  var SM = bM.prototype;
  function MM(t, e, i) {
    _M.call(this, t, e, i), (this._lastFrame = 0), (this._lastFramePercent = 0);
  }
  (SM._createPolyline = function(t, e, i) {
    var n = t.getItemLayout(e),
      o = new ns({shape: {points: n}});
    this.add(o), this._updateCommonStl(t, e, i);
  }),
    (SM.updateData = function(t, e, i) {
      var n = t.hostModel;
      pl(this.childAt(0), {shape: {points: t.getItemLayout(e)}}, n, e),
        this._updateCommonStl(t, e, i);
    }),
    (SM._updateCommonStl = function(t, e, i) {
      var n = this.childAt(0),
        o = t.getItemModel(e),
        a = t.getItemVisual(e, 'color'),
        r = i && i.lineStyle,
        s = i && i.hoverLineStyle;
      (i && !t.hasItemOption) ||
        ((r = o.getModel('lineStyle').getLineStyle()),
        (s = o.getModel('emphasis.lineStyle').getLineStyle())),
        n.useStyle(C({strokeNoScale: !0, fill: 'none', stroke: a}, r)),
        (n.hoverStyle = s),
        tl(this);
    }),
    (SM.updateLayout = function(t, e) {
      this.childAt(0).setShape('points', t.getItemLayout(e));
    }),
    b(bM, ki);
  var IM = MM.prototype;
  (IM.createLine = function(t, e, i) {
    return new bM(t, e, i);
  }),
    (IM.updateAnimationPoints = function(t, e) {
      this._points = e;
      for (var i = [0], n = 0, o = 1; o < e.length; o++) {
        var a = e[o - 1],
          r = e[o];
        (n += _t(a, r)), i.push(n);
      }
      if (0 !== n) {
        for (o = 0; o < i.length; o++) i[o] /= n;
        (this._offsets = i), (this._length = n);
      }
    }),
    (IM.getLineLength = function(t) {
      return this._length;
    }),
    (IM.updateSymbolPosition = function(t) {
      var e = t.__t,
        i = this._points,
        n = this._offsets,
        o = i.length;
      if (n) {
        var a = this._lastFrame;
        if (e < this._lastFramePercent) {
          for (r = Math.min(a + 1, o - 1); 0 <= r && !(n[r] <= e); r--);
          r = Math.min(r, o - 2);
        } else {
          for (var r = a; r < o && !(n[r] > e); r++);
          r = Math.min(r - 1, o - 2);
        }
        St(t.position, i[r], i[r + 1], (e - n[r]) / (n[r + 1] - n[r]));
        var s = i[r + 1][0] - i[r][0],
          l = i[r + 1][1] - i[r][1];
        (t.rotation = -Math.atan2(l, s) - Math.PI / 2),
          (this._lastFrame = r),
          (this._lastFramePercent = e),
          (t.ignore = !1);
      }
    }),
    b(MM, _M);
  var TM = Ps({
    shape: {polyline: !1, curveness: 0, segs: []},
    buildPath: function(t, e) {
      var i = e.segs,
        n = e.curveness;
      if (e.polyline)
        for (var o = 0; o < i.length; ) {
          var a = i[o++];
          if (0 < a) {
            t.moveTo(i[o++], i[o++]);
            for (var r = 1; r < a; r++) t.lineTo(i[o++], i[o++]);
          }
        }
      else
        for (o = 0; o < i.length; ) {
          var s = i[o++],
            l = i[o++],
            u = i[o++],
            h = i[o++];
          if ((t.moveTo(s, l), 0 < n)) {
            var c = (s + u) / 2 - (l - h) * n,
              d = (l + h) / 2 - (u - s) * n;
            t.quadraticCurveTo(c, d, u, h);
          } else t.lineTo(u, h);
        }
    },
    findDataIndex: function(t, e) {
      var i = this.shape,
        n = i.segs,
        o = i.curveness;
      if (i.polyline)
        for (var a = 0, r = 0; r < n.length; ) {
          var s = n[r++];
          if (0 < s)
            for (var l = n[r++], u = n[r++], h = 1; h < s; h++) {
              if (hr(l, u, (c = n[r++]), (d = n[r++]))) return a;
            }
          a++;
        }
      else
        for (a = 0, r = 0; r < n.length; ) {
          (l = n[r++]), (u = n[r++]);
          var c = n[r++],
            d = n[r++];
          if (0 < o) {
            if (
              dr(
                l,
                u,
                (l + c) / 2 - (u - d) * o,
                (u + d) / 2 - (c - l) * o,
                c,
                d,
              )
            )
              return a;
          } else if (hr(l, u, c, d)) return a;
          a++;
        }
      return -1;
    },
  });
  function AM() {
    this.group = new ki();
  }
  var DM = AM.prototype;
  (DM.isPersistent = function() {
    return !this._incremental;
  }),
    (DM.updateData = function(t) {
      this.group.removeAll();
      var e = new TM({rectHover: !0, cursor: 'default'});
      e.setShape({segs: t.getLayout('linesPoints')}),
        this._setCommon(e, t),
        this.group.add(e),
        (this._incremental = null);
    }),
    (DM.incrementalPrepareUpdate = function(t) {
      this.group.removeAll(),
        this._clearIncremental(),
        5e5 < t.count()
          ? (this._incremental || (this._incremental = new _s({silent: !0})),
            this.group.add(this._incremental))
          : (this._incremental = null);
    }),
    (DM.incrementalUpdate = function(t, e) {
      var i = new TM();
      i.setShape({segs: e.getLayout('linesPoints')}),
        this._setCommon(i, e, !!this._incremental),
        this._incremental
          ? this._incremental.addDisplayable(i, !0)
          : ((i.rectHover = !0),
            (i.cursor = 'default'),
            (i.__startIndex = t.start),
            this.group.add(i));
    }),
    (DM.remove = function() {
      this._clearIncremental(),
        (this._incremental = null),
        this.group.removeAll();
    }),
    (DM._setCommon = function(i, t, e) {
      var n = t.hostModel;
      i.setShape({
        polyline: n.get('polyline'),
        curveness: n.get('lineStyle.curveness'),
      }),
        i.useStyle(n.getModel('lineStyle').getLineStyle()),
        (i.style.strokeNoScale = !0);
      var o = t.getVisual('color');
      o && i.setStyle('stroke', o),
        i.setStyle('fill'),
        e ||
          ((i.seriesIndex = n.seriesIndex),
          i.on('mousemove', function(t) {
            i.dataIndex = null;
            var e = i.findDataIndex(t.offsetX, t.offsetY);
            0 < e && (i.dataIndex = e + i.__startIndex);
          }));
    }),
    (DM._clearIncremental = function() {
      var t = this._incremental;
      t && t.clearDisplaybles();
    });
  var CM = {
    seriesType: 'lines',
    plan: wc(),
    reset: function(g) {
      var m = g.coordinateSystem,
        v = g.get('polyline'),
        y = g.pipelineContext.large;
      return {
        progress: function(t, e) {
          var i = [];
          if (y) {
            var n,
              o = t.end - t.start;
            if (v) {
              for (var a = 0, r = t.start; r < t.end; r++)
                a += g.getLineCoordsCount(r);
              n = new Float32Array(o + 2 * a);
            } else n = new Float32Array(4 * o);
            var s = 0,
              l = [];
            for (r = t.start; r < t.end; r++) {
              var u = g.getLineCoords(r, i);
              v && (n[s++] = u);
              for (var h = 0; h < u; h++)
                (l = m.dataToPoint(i[h], !1, l)),
                  (n[s++] = l[0]),
                  (n[s++] = l[1]);
            }
            e.setLayout('linesPoints', n);
          } else
            for (r = t.start; r < t.end; r++) {
              var c = e.getItemModel(r),
                d = ((u = g.getLineCoords(r, i)), []);
              if (v) for (var f = 0; f < u; f++) d.push(m.dataToPoint(i[f]));
              else {
                (d[0] = m.dataToPoint(i[0])), (d[1] = m.dataToPoint(i[1]));
                var p = c.get('lineStyle.curveness');
                +p &&
                  (d[2] = [
                    (d[0][0] + d[1][0]) / 2 - (d[0][1] - d[1][1]) * p,
                    (d[0][1] + d[1][1]) / 2 - (d[1][0] - d[0][0]) * p,
                  ]);
              }
              e.setItemLayout(r, d);
            }
        },
      };
    },
  };
  function LM(t) {
    return t instanceof Array || (t = [t, t]), t;
  }
  Ef({
    type: 'lines',
    init: function() {},
    render: function(e, t, i) {
      var n = e.getData(),
        o = this._updateLineDraw(n, e),
        a = e.get('zlevel'),
        r = e.get('effect.trailLength'),
        s = i.getZr(),
        l = 'svg' === s.painter.getType();
      if (
        (l || s.painter.getLayer(a).clear(!0),
        null == this._lastZlevel ||
          l ||
          s.configLayer(this._lastZlevel, {motionBlur: !1}),
        this._showEffect(e) && r)
      ) {
        if (D) {
          var u = !1;
          t.eachSeries(function(t) {
            t !== e && t.get('zlevel') === a && (u = !0);
          }),
            u &&
              console.warn(
                'Lines with trail effect should have an individual zlevel',
              );
        }
        l ||
          s.configLayer(a, {
            motionBlur: !0,
            lastFrameAlpha: Math.max(Math.min(r / 10 + 0.9, 1), 0),
          });
      }
      o.updateData(n);
      var h = e.get('clip', !0) && Lm(e.coordinateSystem, !1, e);
      h ? this.group.setClipPath(h) : this.group.removeClipPath(),
        (this._lastZlevel = a),
        (this._finished = !0);
    },
    incrementalPrepareRender: function(t, e, i) {
      var n = t.getData();
      this._updateLineDraw(n, t).incrementalPrepareUpdate(n),
        this._clearLayer(i),
        (this._finished = !1);
    },
    incrementalRender: function(t, e, i) {
      this._lineDraw.incrementalUpdate(t, e.getData()),
        (this._finished = t.end === e.getData().count());
    },
    updateTransform: function(t, e, i) {
      var n = t.getData(),
        o = t.pipelineContext;
      if (!this._finished || o.large || o.progressiveRender)
        return {update: !0};
      var a = CM.reset(t);
      a.progress && a.progress({start: 0, end: n.count()}, n),
        this._lineDraw.updateLayout(),
        this._clearLayer(i);
    },
    _updateLineDraw: function(t, e) {
      var i = this._lineDraw,
        n = this._showEffect(e),
        o = !!e.get('polyline'),
        a = e.pipelineContext.large;
      return (
        D && n && a && console.warn('Large lines not support effect'),
        (i &&
          n === this._hasEffet &&
          o === this._isPolyline &&
          a === this._isLargeDraw) ||
          (i && i.remove(),
          (i = this._lineDraw = a
            ? new AM()
            : new ww(o ? (n ? MM : bM) : n ? _M : xw)),
          (this._hasEffet = n),
          (this._isPolyline = o),
          (this._isLargeDraw = a),
          this.group.removeAll()),
        this.group.add(i.group),
        i
      );
    },
    _showEffect: function(t) {
      return !!t.get('effect.show');
    },
    _clearLayer: function(t) {
      var e = t.getZr();
      'svg' === e.painter.getType() ||
        null == this._lastZlevel ||
        e.painter.getLayer(this._lastZlevel).clear(!0);
    },
    remove: function(t, e) {
      this._lineDraw && this._lineDraw.remove(),
        (this._lineDraw = null),
        this._clearLayer(e);
    },
    dispose: function() {},
  });
  var kM = 'lineStyle.opacity'.split('.'),
    PM = {
      seriesType: 'lines',
      reset: function(t, e, i) {
        var n = LM(t.get('symbol')),
          o = LM(t.get('symbolSize')),
          a = t.getData();
        return (
          a.setVisual('fromSymbol', n && n[0]),
          a.setVisual('toSymbol', n && n[1]),
          a.setVisual('fromSymbolSize', o && o[0]),
          a.setVisual('toSymbolSize', o && o[1]),
          a.setVisual('opacity', t.get(kM)),
          {
            dataEach: a.hasItemOption
              ? function(t, e) {
                  var i = t.getItemModel(e),
                    n = LM(i.getShallow('symbol', !0)),
                    o = LM(i.getShallow('symbolSize', !0)),
                    a = i.get(kM);
                  n[0] && t.setItemVisual(e, 'fromSymbol', n[0]),
                    n[1] && t.setItemVisual(e, 'toSymbol', n[1]),
                    o[0] && t.setItemVisual(e, 'fromSymbolSize', o[0]),
                    o[1] && t.setItemVisual(e, 'toSymbolSize', o[1]),
                    t.setItemVisual(e, 'opacity', a);
                }
              : null,
          }
        );
      },
    };
  Df(CM),
    Cf(PM),
    cc.extend({
      type: 'series.heatmap',
      getInitialData: function(t, e) {
        return bp(this.getSource(), this, {generateCoord: 'value'});
      },
      preventIncremental: function() {
        var t = dh.get(this.get('coordinateSystem'));
        if (t && t.dimensions)
          return 'lng' === t.dimensions[0] && 'lat' === t.dimensions[1];
      },
      defaultOption: {
        coordinateSystem: 'cartesian2d',
        zlevel: 0,
        z: 2,
        geoIndex: 0,
        blurSize: 30,
        pointSize: 20,
        maxOpacity: 1,
        minOpacity: 0,
      },
    });
  function NM() {
    var t = y();
    (this.canvas = t),
      (this.blurSize = 30),
      (this.pointSize = 20),
      (this.maxOpacity = 1),
      (this.minOpacity = 0),
      (this._gradientPixels = {});
  }
  (NM.prototype = {
    update: function(t, e, i, n, o, a) {
      var r = this._getBrush(),
        s = this._getGradient(t, o, 'inRange'),
        l = this._getGradient(t, o, 'outOfRange'),
        u = this.pointSize + this.blurSize,
        h = this.canvas,
        c = h.getContext('2d'),
        d = t.length;
      (h.width = e), (h.height = i);
      for (var f = 0; f < d; ++f) {
        var p = t[f],
          g = p[0],
          m = p[1],
          v = n(p[2]);
        (c.globalAlpha = v), c.drawImage(r, g - u, m - u);
      }
      if (!h.width || !h.height) return h;
      for (
        var y = c.getImageData(0, 0, h.width, h.height),
          x = y.data,
          _ = 0,
          w = x.length,
          b = this.minOpacity,
          S = this.maxOpacity - b;
        _ < w;

      ) {
        v = x[_ + 3] / 256;
        var M = 4 * Math.floor(255 * v);
        if (0 < v) {
          var I = a(v) ? s : l;
          0 < v && (v = v * S + b),
            (x[_++] = I[M]),
            (x[_++] = I[1 + M]),
            (x[_++] = I[2 + M]),
            (x[_++] = I[3 + M] * v * 256);
        } else _ += 4;
      }
      return c.putImageData(y, 0, 0), h;
    },
    _getBrush: function() {
      var t = this._brushCanvas || (this._brushCanvas = y()),
        e = this.pointSize + this.blurSize,
        i = 2 * e;
      (t.width = i), (t.height = i);
      var n = t.getContext('2d');
      return (
        n.clearRect(0, 0, i, i),
        (n.shadowOffsetX = i),
        (n.shadowBlur = this.blurSize),
        (n.shadowColor = '#000'),
        n.beginPath(),
        n.arc(-e, e, this.pointSize, 0, 2 * Math.PI, !0),
        n.closePath(),
        n.fill(),
        t
      );
    },
    _getGradient: function(t, e, i) {
      for (
        var n = this._gradientPixels,
          o = n[i] || (n[i] = new Uint8ClampedArray(1024)),
          a = [0, 0, 0, 0],
          r = 0,
          s = 0;
        s < 256;
        s++
      )
        e[i](s / 255, !0, a),
          (o[r++] = a[0]),
          (o[r++] = a[1]),
          (o[r++] = a[2]),
          (o[r++] = a[3]);
      return o;
    },
  }),
    Ef({
      type: 'heatmap',
      render: function(i, t, e) {
        var n;
        if (
          (t.eachComponent('visualMap', function(e) {
            e.eachTargetSeries(function(t) {
              t === i && (n = e);
            });
          }),
          D && !n)
        )
          throw new Error('Heatmap must use with visualMap');
        this.group.removeAll(), (this._incrementalDisplayable = null);
        var o = i.coordinateSystem;
        'cartesian2d' === o.type || 'calendar' === o.type
          ? this._renderOnCartesianAndCalendar(i, e, 0, i.getData().count())
          : (function(t) {
              var e = t.dimensions;
              return 'lng' === e[0] && 'lat' === e[1];
            })(o) && this._renderOnGeo(o, i, n, e);
      },
      incrementalPrepareRender: function(t, e, i) {
        this.group.removeAll();
      },
      incrementalRender: function(t, e, i, n) {
        e.coordinateSystem &&
          this._renderOnCartesianAndCalendar(e, n, t.start, t.end, !0);
      },
      _renderOnCartesianAndCalendar: function(t, e, i, n, o) {
        var a,
          r,
          s = t.coordinateSystem;
        if ('cartesian2d' === s.type) {
          var l = s.getAxis('x'),
            u = s.getAxis('y');
          if (D) {
            if ('category' !== l.type || 'category' !== u.type)
              throw new Error(
                'Heatmap on cartesian must have two category axes',
              );
            if (!l.onBand || !u.onBand)
              throw new Error(
                'Heatmap on cartesian must have two axes with boundaryGap true',
              );
          }
          (a = l.getBandWidth()), (r = u.getBandWidth());
        }
        for (
          var h = this.group,
            c = t.getData(),
            d = 'emphasis.itemStyle',
            f = 'emphasis.label',
            p = t.getModel('itemStyle').getItemStyle(['color']),
            g = t.getModel(d).getItemStyle(),
            m = t.getModel('label'),
            v = t.getModel(f),
            y = s.type,
            x =
              'cartesian2d' === y
                ? [
                    c.mapDimension('x'),
                    c.mapDimension('y'),
                    c.mapDimension('value'),
                  ]
                : [c.mapDimension('time'), c.mapDimension('value')],
            _ = i;
          _ < n;
          _++
        ) {
          var w;
          if ('cartesian2d' === y) {
            if (isNaN(c.get(x[2], _))) continue;
            var b = s.dataToPoint([c.get(x[0], _), c.get(x[1], _)]);
            w = new us({
              shape: {
                x: Math.floor(Math.round(b[0]) - a / 2),
                y: Math.floor(Math.round(b[1]) - r / 2),
                width: Math.ceil(a),
                height: Math.ceil(r),
              },
              style: {
                fill: c.getItemVisual(_, 'color'),
                opacity: c.getItemVisual(_, 'opacity'),
              },
            });
          } else {
            if (isNaN(c.get(x[1], _))) continue;
            w = new us({
              z2: 1,
              shape: s.dataToRect([c.get(x[0], _)]).contentShape,
              style: {
                fill: c.getItemVisual(_, 'color'),
                opacity: c.getItemVisual(_, 'opacity'),
              },
            });
          }
          var S = c.getItemModel(_);
          c.hasItemOption &&
            ((p = S.getModel('itemStyle').getItemStyle(['color'])),
            (g = S.getModel(d).getItemStyle()),
            (m = S.getModel('label')),
            (v = S.getModel(f)));
          var M = t.getRawValue(_),
            I = '-';
          M && null != M[2] && (I = M[2]),
            ol(p, g, m, v, {
              labelFetcher: t,
              labelDataIndex: _,
              defaultText: I,
              isRectText: !0,
            }),
            w.setStyle(p),
            tl(w, c.hasItemOption ? g : P({}, g)),
            (w.incremental = o) && (w.useHoverLayer = !0),
            h.add(w),
            c.setItemGraphicEl(_, w);
        }
      },
      _renderOnGeo: function(o, t, e, i) {
        var n = e.targetVisuals.inRange,
          a = e.targetVisuals.outOfRange,
          r = t.getData(),
          s = this._hmLayer || this._hmLayer || new NM();
        (s.blurSize = t.get('blurSize')),
          (s.pointSize = t.get('pointSize')),
          (s.minOpacity = t.get('minOpacity')),
          (s.maxOpacity = t.get('maxOpacity'));
        var l = o.getViewRect().clone(),
          u = o.getRoamTransform();
        l.applyTransform(u);
        var h = Math.max(l.x, 0),
          c = Math.max(l.y, 0),
          d = Math.min(l.width + l.x, i.getWidth()),
          f = Math.min(l.height + l.y, i.getHeight()),
          p = d - h,
          g = f - c,
          m = [
            r.mapDimension('lng'),
            r.mapDimension('lat'),
            r.mapDimension('value'),
          ],
          v = r.mapArray(m, function(t, e, i) {
            var n = o.dataToPoint([t, e]);
            return (n[0] -= h), (n[1] -= c), n.push(i), n;
          }),
          y = e.getExtent(),
          x =
            'visualMap.continuous' === e.type
              ? (function(t, e) {
                  var i = t[1] - t[0];
                  return (
                    (e = [(e[0] - t[0]) / i, (e[1] - t[0]) / i]),
                    function(t) {
                      return t >= e[0] && t <= e[1];
                    }
                  );
                })(y, e.option.range)
              : (function(e, n, o) {
                  var i = e[1] - e[0],
                    a = (n = O(n, function(t) {
                      return {
                        interval: [
                          (t.interval[0] - e[0]) / i,
                          (t.interval[1] - e[0]) / i,
                        ],
                      };
                    })).length,
                    r = 0;
                  return function(t) {
                    for (var e = r; e < a; e++) {
                      if ((i = n[e].interval)[0] <= t && t <= i[1]) {
                        r = e;
                        break;
                      }
                    }
                    if (e === a)
                      for (e = r - 1; 0 <= e; e--) {
                        var i;
                        if ((i = n[e].interval)[0] <= t && t <= i[1]) {
                          r = e;
                          break;
                        }
                      }
                    return 0 <= e && e < a && o[e];
                  };
                })(y, e.getPieceList(), e.option.selected);
        s.update(
          v,
          p,
          g,
          n.color.getNormalizer(),
          {
            inRange: n.color.getColorMapper(),
            outOfRange: a.color.getColorMapper(),
          },
          x,
        );
        var _ = new eo({
          style: {width: p, height: g, x: h, y: c, image: s.canvas},
          silent: !0,
        });
        this.group.add(_);
      },
      dispose: function() {},
    });
  var OM = Nv.extend({
      type: 'series.pictorialBar',
      dependencies: ['grid'],
      defaultOption: {
        symbol: 'circle',
        symbolSize: null,
        symbolRotate: null,
        symbolPosition: null,
        symbolOffset: null,
        symbolMargin: null,
        symbolRepeat: !1,
        symbolRepeatDirection: 'end',
        symbolClip: !1,
        symbolBoundingData: null,
        symbolPatternSize: 400,
        barGap: '-100%',
        progressive: 0,
        hoverAnimation: !1,
      },
      getInitialData: function(t) {
        return (
          (t.stack = null), OM.superApply(this, 'getInitialData', arguments)
        );
      },
    }),
    EM = ['itemStyle', 'borderWidth'],
    RM = [
      {xy: 'x', wh: 'width', index: 0, posDesc: ['left', 'right']},
      {xy: 'y', wh: 'height', index: 1, posDesc: ['top', 'bottom']},
    ],
    zM = new Kr();
  Ef({
    type: 'pictorialBar',
    render: function(t, e, i) {
      var r = this.group,
        s = t.getData(),
        l = this._data,
        n = t.coordinateSystem,
        o = !!n.getBaseAxis().isHorizontal(),
        a = n.grid.getRect(),
        u = {
          ecSize: {width: i.getWidth(), height: i.getHeight()},
          seriesModel: t,
          coordSys: n,
          coordSysExtent: [[a.x, a.x + a.width], [a.y, a.y + a.height]],
          isHorizontal: o,
          valueDim: RM[+o],
          categoryDim: RM[1 - o],
        };
      return (
        s
          .diff(l)
          .add(function(t) {
            if (s.hasValue(t)) {
              var e = UM(s, t),
                i = BM(s, t, e, u),
                n = qM(s, u, i);
              s.setItemGraphicEl(t, n), r.add(n), tI(n, u, i);
            }
          })
          .update(function(t, e) {
            var i = l.getItemGraphicEl(e);
            if (s.hasValue(t)) {
              var n = UM(s, t),
                o = BM(s, t, n, u),
                a = $M(s, o);
              i &&
                a !== i.__pictorialShapeStr &&
                (r.remove(i), s.setItemGraphicEl(t, null), (i = null)),
                i
                  ? (function(t, e, i) {
                      var n = i.animationModel,
                        o = i.dataIndex;
                      pl(
                        t.__pictorialBundle,
                        {position: i.bundlePosition.slice()},
                        n,
                        o,
                      ),
                        i.symbolRepeat ? FM(t, e, i, !0) : WM(t, e, i, !0);
                      HM(t, i, !0), ZM(t, e, i, !0);
                    })(i, u, o)
                  : (i = qM(s, u, o, !0)),
                s.setItemGraphicEl(t, i),
                (i.__pictorialSymbolMeta = o),
                r.add(i),
                tI(i, u, o);
            } else r.remove(i);
          })
          .remove(function(t) {
            var e = l.getItemGraphicEl(t);
            e && KM(l, t, e.__pictorialSymbolMeta.animationModel, e);
          })
          .execute(),
        (this._data = s),
        this.group
      );
    },
    dispose: nt,
    remove: function(e, t) {
      var i = this.group,
        n = this._data;
      e.get('animation')
        ? n &&
          n.eachItemGraphicEl(function(t) {
            KM(n, t.dataIndex, e, t);
          })
        : i.removeAll();
    },
  });
  function BM(t, e, i, n) {
    var o = t.getItemLayout(e),
      a = i.get('symbolRepeat'),
      r = i.get('symbolClip'),
      s = i.get('symbolPosition') || 'start',
      l = ((i.get('symbolRotate') || 0) * Math.PI) / 180 || 0,
      u = i.get('symbolPatternSize') || 2,
      h = i.isAnimationEnabled(),
      c = {
        dataIndex: e,
        layout: o,
        itemModel: i,
        symbolType: t.getItemVisual(e, 'symbol') || 'circle',
        color: t.getItemVisual(e, 'color'),
        symbolClip: r,
        symbolRepeat: a,
        symbolRepeatDirection: i.get('symbolRepeatDirection'),
        symbolPatternSize: u,
        rotation: l,
        animationModel: h ? i : null,
        hoverAnimation: h && i.get('hoverAnimation'),
        z2: i.getShallow('z', !0) || 0,
      };
    !(function(t, e, i, n, o) {
      var a,
        r = n.valueDim,
        s = t.get('symbolBoundingData'),
        l = n.coordSys.getOtherAxis(n.coordSys.getBaseAxis()),
        u = l.toGlobalCoord(l.dataToCoord(0)),
        h = 1 - +(i[r.wh] <= 0);
      if (R(s)) {
        var c = [VM(l, s[0]) - u, VM(l, s[1]) - u];
        c[1] < c[0] && c.reverse(), (a = c[h]);
      } else
        a =
          null != s
            ? VM(l, s) - u
            : e
            ? n.coordSysExtent[r.index][h] - u
            : i[r.wh];
      (o.boundingLength = a), e && (o.repeatCutLength = i[r.wh]);
      o.pxSign = 0 < a ? 1 : a < 0 ? -1 : 0;
    })(i, a, o, n, c),
      (function(t, e, i, n, o, a, r, s, l, u) {
        var h = l.valueDim,
          c = l.categoryDim,
          d = Math.abs(i[c.wh]),
          f = t.getItemVisual(e, 'symbolSize');
        f = R(f) ? f.slice() : (null == f && (f = '100%'), [f, f]);
        (f[c.index] = Vl(f[c.index], d)),
          (f[h.index] = Vl(f[h.index], n ? d : Math.abs(a))),
          (u.symbolSize = f),
          ((u.symbolScale = [f[0] / s, f[1] / s])[h.index] *=
            (l.isHorizontal ? -1 : 1) * r);
      })(t, e, o, a, 0, c.boundingLength, c.pxSign, u, n, c),
      (function(t, e, i, n, o) {
        var a = t.get(EM) || 0;
        a &&
          (zM.attr({scale: e.slice(), rotation: i}),
          zM.updateTransform(),
          (a /= zM.getLineScale()),
          (a *= e[n.valueDim.index]));
        o.valueLineWidth = a;
      })(i, c.symbolScale, l, n, c);
    var d = c.symbolSize,
      f = i.get('symbolOffset');
    return (
      R(f) && (f = [Vl(f[0], d[0]), Vl(f[1], d[1])]),
      (function(t, e, i, n, o, a, r, s, l, u, h, c) {
        var d = h.categoryDim,
          f = h.valueDim,
          p = c.pxSign,
          g = Math.max(e[f.index] + s, 0),
          m = g;
        if (n) {
          var v = Math.abs(l),
            y = Z(t.get('symbolMargin'), '15%') + '',
            x = !1;
          y.lastIndexOf('!') === y.length - 1 &&
            ((x = !0), (y = y.slice(0, y.length - 1))),
            (y = Vl(y, e[f.index]));
          var _ = Math.max(g + 2 * y, 0),
            w = x ? 0 : 2 * y,
            b = eu(n),
            S = b ? n : eI((v + w) / _);
          (_ = g + 2 * (y = (v - S * g) / 2 / (x ? S : S - 1))),
            (w = x ? 0 : 2 * y),
            b || 'fixed' === n || (S = u ? eI((Math.abs(u) + w) / _) : 0),
            (m = S * _ - w),
            (c.repeatTimes = S),
            (c.symbolMargin = y);
        }
        var M = p * (m / 2),
          I = (c.pathPosition = []);
        (I[d.index] = i[d.wh] / 2),
          (I[f.index] = 'start' === r ? M : 'end' === r ? l - M : l / 2),
          a && ((I[0] += a[0]), (I[1] += a[1]));
        var T = (c.bundlePosition = []);
        (T[d.index] = i[d.xy]), (T[f.index] = i[f.xy]);
        var A = (c.barRectShape = P({}, i));
        (A[f.wh] = p * Math.max(Math.abs(i[f.wh]), Math.abs(I[f.index] + M))),
          (A[d.wh] = i[d.wh]);
        var D = (c.clipShape = {});
        (D[d.xy] = -i[d.xy]),
          (D[d.wh] = h.ecSize[d.wh]),
          (D[f.xy] = 0),
          (D[f.wh] = i[f.wh]);
      })(
        i,
        d,
        o,
        a,
        0,
        f,
        s,
        c.valueLineWidth,
        c.boundingLength,
        c.repeatCutLength,
        n,
        c,
      ),
      c
    );
  }
  function VM(t, e) {
    return t.toGlobalCoord(t.dataToCoord(t.scale.parse(e)));
  }
  function GM(t) {
    var e = t.symbolPatternSize,
      i = Dg(t.symbolType, -e / 2, -e / 2, e, e, t.color);
    return (
      i.attr({culling: !0}),
      'image' !== i.type && i.setStyle({strokeNoScale: !0}),
      i
    );
  }
  function FM(t, e, o, i) {
    var n = t.__pictorialBundle,
      a = o.symbolSize,
      r = o.valueLineWidth,
      s = o.pathPosition,
      l = e.valueDim,
      u = o.repeatTimes || 0,
      h = 0,
      c = a[e.valueDim.index] + r + 2 * o.symbolMargin;
    for (
      JM(t, function(t) {
        (t.__pictorialAnimationIndex = h),
          (t.__pictorialRepeatTimes = u),
          h < u
            ? QM(t, null, p(h), o, i)
            : QM(t, null, {scale: [0, 0]}, o, i, function() {
                n.remove(t);
              }),
          jM(t, o),
          h++;
      });
      h < u;
      h++
    ) {
      var d = GM(o);
      (d.__pictorialAnimationIndex = h),
        (d.__pictorialRepeatTimes = u),
        n.add(d);
      var f = p(h);
      QM(
        d,
        {position: f.position, scale: [0, 0]},
        {scale: f.scale, rotation: f.rotation},
        o,
        i,
      ),
        d.on('mouseover', g).on('mouseout', m),
        jM(d, o);
    }
    function p(t) {
      var e = s.slice(),
        i = o.pxSign,
        n = t;
      return (
        ('start' === o.symbolRepeatDirection ? 0 < i : i < 0) &&
          (n = u - 1 - t),
        (e[l.index] = c * (n - u / 2 + 0.5) + s[l.index]),
        {position: e, scale: o.symbolScale.slice(), rotation: o.rotation}
      );
    }
    function g() {
      JM(t, function(t) {
        t.trigger('emphasis');
      });
    }
    function m() {
      JM(t, function(t) {
        t.trigger('normal');
      });
    }
  }
  function WM(t, e, i, n) {
    var o = t.__pictorialBundle,
      a = t.__pictorialMainPath;
    a
      ? QM(
          a,
          null,
          {
            position: i.pathPosition.slice(),
            scale: i.symbolScale.slice(),
            rotation: i.rotation,
          },
          i,
          n,
        )
      : ((a = t.__pictorialMainPath = GM(i)),
        o.add(a),
        QM(
          a,
          {
            position: i.pathPosition.slice(),
            scale: [0, 0],
            rotation: i.rotation,
          },
          {scale: i.symbolScale.slice()},
          i,
          n,
        ),
        a
          .on('mouseover', function() {
            this.trigger('emphasis');
          })
          .on('mouseout', function() {
            this.trigger('normal');
          })),
      jM(a, i);
  }
  function HM(t, e, i) {
    var n = P({}, e.barRectShape),
      o = t.__pictorialBarRect;
    o
      ? QM(o, null, {shape: n}, e, i)
      : ((o = t.__pictorialBarRect = new us({
          z2: 2,
          shape: n,
          silent: !0,
          style: {stroke: 'transparent', fill: 'transparent', lineWidth: 0},
        })),
        t.add(o));
  }
  function ZM(t, e, i, n) {
    if (i.symbolClip) {
      var o = t.__pictorialClipPath,
        a = P({}, i.clipShape),
        r = e.valueDim,
        s = i.animationModel,
        l = i.dataIndex;
      if (o) pl(o, {shape: a}, s, l);
      else {
        (a[r.wh] = 0),
          (o = new us({shape: a})),
          t.__pictorialBundle.setClipPath(o),
          (t.__pictorialClipPath = o);
        var u = {};
        (u[r.wh] = i.clipShape[r.wh]),
          Il[n ? 'updateProps' : 'initProps'](o, {shape: u}, s, l);
      }
    }
  }
  function UM(t, e) {
    var i = t.getItemModel(e);
    return (i.getAnimationDelayParams = XM), (i.isAnimationEnabled = YM), i;
  }
  function XM(t) {
    return {
      index: t.__pictorialAnimationIndex,
      count: t.__pictorialRepeatTimes,
    };
  }
  function YM() {
    return (
      this.parentModel.isAnimationEnabled() && !!this.getShallow('animation')
    );
  }
  function jM(t, e) {
    t.off('emphasis').off('normal');
    var i = e.symbolScale.slice();
    e.hoverAnimation &&
      t
        .on('emphasis', function() {
          this.animateTo({scale: [1.1 * i[0], 1.1 * i[1]]}, 400, 'elasticOut');
        })
        .on('normal', function() {
          this.animateTo({scale: i.slice()}, 400, 'elasticOut');
        });
  }
  function qM(t, e, i, n) {
    var o = new ki(),
      a = new ki();
    return (
      o.add(a),
      (o.__pictorialBundle = a).attr('position', i.bundlePosition.slice()),
      i.symbolRepeat ? FM(o, e, i) : WM(o, 0, i),
      HM(o, i, n),
      ZM(o, e, i, n),
      (o.__pictorialShapeStr = $M(t, i)),
      (o.__pictorialSymbolMeta = i),
      o
    );
  }
  function KM(t, e, i, n) {
    var o = n.__pictorialBarRect;
    o && (o.style.text = null);
    var a = [];
    JM(n, function(t) {
      a.push(t);
    }),
      n.__pictorialMainPath && a.push(n.__pictorialMainPath),
      n.__pictorialClipPath && (i = null),
      E(a, function(t) {
        pl(t, {scale: [0, 0]}, i, e, function() {
          n.parent && n.parent.remove(n);
        });
      }),
      t.setItemGraphicEl(e, null);
  }
  function $M(t, e) {
    return [
      t.getItemVisual(e.dataIndex, 'symbol') || 'none',
      !!e.symbolRepeat,
      !!e.symbolClip,
    ].join(':');
  }
  function JM(e, i, n) {
    E(e.__pictorialBundle.children(), function(t) {
      t !== e.__pictorialBarRect && i.call(n, t);
    });
  }
  function QM(t, e, i, n, o, a) {
    e && t.attr(e),
      n.symbolClip && !o
        ? i && t.attr(i)
        : i &&
          Il[o ? 'updateProps' : 'initProps'](
            t,
            i,
            n.animationModel,
            n.dataIndex,
            a,
          );
  }
  function tI(t, e, i) {
    var n = i.color,
      o = i.dataIndex,
      a = i.itemModel,
      r = a.getModel('itemStyle').getItemStyle(['color']),
      s = a.getModel('emphasis.itemStyle').getItemStyle(),
      l = a.getShallow('cursor');
    JM(t, function(t) {
      t.setColor(n),
        t.setStyle(C({fill: n, opacity: i.opacity}, r)),
        tl(t, s),
        l && (t.cursor = l),
        (t.z2 = i.z2);
    });
    var u = {},
      h = (e.valueDim.posDesc[+(0 < i.boundingLength)], t.__pictorialBarRect);
    Ov(h.style, u, a, n, e.seriesModel, o), tl(h, u);
  }
  function eI(t) {
    var e = Math.round(t);
    return Math.abs(t - e) < 1e-4 ? e : Math.ceil(t);
  }
  Df(L(Zp, 'pictorialBar')), Cf(zm('pictorialBar', 'roundRect'));
  function iI(t, e, i, n, o) {
    Yg.call(this, t, e, i),
      (this.type = n || 'value'),
      (this.position = o || 'bottom'),
      (this.orient = null);
  }
  function nI(t, e, i) {
    (this.dimension = 'single'),
      (this.dimensions = ['single']),
      (this._axis = null),
      this._rect,
      this._init(t, e, i),
      (this.model = t);
  }
  function oI(t, e) {
    e = e || {};
    var i = t.coordinateSystem,
      n = t.axis,
      o = {},
      a = n.position,
      r = n.orient,
      s = i.getRect(),
      l = [s.x, s.x + s.width, s.y, s.y + s.height],
      u = {
        horizontal: {top: l[2], bottom: l[3]},
        vertical: {left: l[0], right: l[1]},
      };
    o.position = [
      'vertical' === r ? u.vertical[a] : l[0],
      'horizontal' === r ? u.horizontal[a] : l[3],
    ];
    o.rotation = (Math.PI / 2) * {horizontal: 0, vertical: 1}[r];
    (o.labelDirection = o.tickDirection = o.nameDirection = {
      top: -1,
      bottom: 1,
      right: 1,
      left: -1,
    }[a]),
      t.get('axisTick.inside') && (o.tickDirection = -o.tickDirection),
      Z(e.labelInside, t.get('axisLabel.inside')) &&
        (o.labelDirection = -o.labelDirection);
    var h = e.rotate;
    return (
      null == h && (h = t.get('axisLabel.rotate')),
      (o.labelRotation = 'top' === a ? -h : h),
      (o.z2 = 1),
      o
    );
  }
  (iI.prototype = {
    constructor: iI,
    model: null,
    isHorizontal: function() {
      var t = this.position;
      return 'top' === t || 'bottom' === t;
    },
    pointToData: function(t, e) {
      return this.coordinateSystem.pointToData(t, e)[0];
    },
    toGlobalCoord: null,
    toLocalCoord: null,
  }),
    b(iI, Yg),
    dh.register('single', {
      create: function(n, o) {
        var a = [];
        return (
          n.eachComponent('singleAxis', function(t, e) {
            var i = new nI(t, n, o);
            (i.name = 'single_' + e),
              i.resize(t, o),
              (t.coordinateSystem = i),
              a.push(i);
          }),
          n.eachSeries(function(t) {
            if ('singleAxis' === t.get('coordinateSystem')) {
              var e = n.queryComponents({
                mainType: 'singleAxis',
                index: t.get('singleAxisIndex'),
                id: t.get('singleAxisId'),
              })[0];
              t.coordinateSystem = e && e.coordinateSystem;
            }
          }),
          a
        );
      },
      dimensions: (nI.prototype = {
        type: 'singleAxis',
        axisPointerEnabled: !0,
        constructor: nI,
        _init: function(t, e, i) {
          var n = this.dimension,
            o = new iI(n, pg(t), [0, 0], t.get('type'), t.get('position')),
            a = 'category' === o.type;
          (o.onBand = a && t.get('boundaryGap')),
            (o.inverse = t.get('inverse')),
            (o.orient = t.get('orient')),
            ((t.axis = o).model = t),
            ((o.coordinateSystem = this)._axis = o);
        },
        update: function(t, e) {
          t.eachSeries(function(t) {
            if (t.coordinateSystem === this) {
              var e = t.getData();
              E(
                e.mapDimension(this.dimension, !0),
                function(t) {
                  this._axis.scale.unionExtentFromData(e, t);
                },
                this,
              ),
                fg(this._axis.scale, this._axis.model);
            }
          }, this);
        },
        resize: function(t, e) {
          (this._rect = Iu(
            {
              left: t.get('left'),
              top: t.get('top'),
              right: t.get('right'),
              bottom: t.get('bottom'),
              width: t.get('width'),
              height: t.get('height'),
            },
            {width: e.getWidth(), height: e.getHeight()},
          )),
            this._adjustAxis();
        },
        getRect: function() {
          return this._rect;
        },
        _adjustAxis: function() {
          var t = this._rect,
            e = this._axis,
            i = e.isHorizontal(),
            n = i ? [0, t.width] : [0, t.height],
            o = e.reverse ? 1 : 0;
          e.setExtent(n[o], n[1 - o]),
            this._updateAxisTransform(e, i ? t.x : t.y);
        },
        _updateAxisTransform: function(t, e) {
          var i = t.getExtent(),
            n = i[0] + i[1],
            o = t.isHorizontal();
          (t.toGlobalCoord = o
            ? function(t) {
                return t + e;
              }
            : function(t) {
                return n - t + e;
              }),
            (t.toLocalCoord = o
              ? function(t) {
                  return t - e;
                }
              : function(t) {
                  return n - t + e;
                });
        },
        getAxis: function() {
          return this._axis;
        },
        getBaseAxis: function() {
          return this._axis;
        },
        getAxes: function() {
          return [this._axis];
        },
        getTooltipAxes: function() {
          return {baseAxes: [this.getAxis()]};
        },
        containPoint: function(t) {
          var e = this.getRect(),
            i = this.getAxis();
          return 'horizontal' === i.orient
            ? i.contain(i.toLocalCoord(t[0])) &&
                t[1] >= e.y &&
                t[1] <= e.y + e.height
            : i.contain(i.toLocalCoord(t[1])) &&
                t[0] >= e.y &&
                t[0] <= e.y + e.height;
        },
        pointToData: function(t) {
          var e = this.getAxis();
          return [
            e.coordToData(e.toLocalCoord(t['horizontal' === e.orient ? 0 : 1])),
          ];
        },
        dataToPoint: function(t) {
          var e = this.getAxis(),
            i = this.getRect(),
            n = [],
            o = 'horizontal' === e.orient ? 0 : 1;
          return (
            t instanceof Array && (t = t[0]),
            (n[o] = e.toGlobalCoord(e.dataToCoord(+t))),
            (n[1 - o] = 0 == o ? i.y + i.height / 2 : i.x + i.width / 2),
            n
          );
        },
      }).dimensions,
    });
  var aI = ['axisLine', 'axisTickLabel', 'axisName'],
    rI = ['splitArea', 'splitLine'],
    sI = Sv.extend({
      type: 'singleAxis',
      axisPointerClass: 'SingleAxisPointer',
      render: function(e, t, i, n) {
        var o = this.group;
        o.removeAll();
        var a = this._axisGroup;
        this._axisGroup = new ki();
        var r = oI(e),
          s = new rv(e, r);
        E(aI, s.add, s),
          o.add(this._axisGroup),
          o.add(s.getGroup()),
          E(
            rI,
            function(t) {
              e.get(t + '.show') && this['_' + t](e);
            },
            this,
          ),
          xl(a, this._axisGroup, e),
          sI.superCall(this, 'render', e, t, i, n);
      },
      remove: function() {
        Cv(this);
      },
      _splitLine: function(t) {
        var e = t.axis;
        if (!e.scale.isBlank()) {
          var i = t.getModel('splitLine'),
            n = i.getModel('lineStyle'),
            o = n.get('width'),
            a = n.get('color');
          a = a instanceof Array ? a : [a];
          for (
            var r = t.coordinateSystem.getRect(),
              s = e.isHorizontal(),
              l = [],
              u = 0,
              h = e.getTicksCoords({tickModel: i}),
              c = [],
              d = [],
              f = 0;
            f < h.length;
            ++f
          ) {
            var p = e.toGlobalCoord(h[f].coord);
            s
              ? ((c[0] = p), (c[1] = r.y), (d[0] = p), (d[1] = r.y + r.height))
              : ((c[0] = r.x), (c[1] = p), (d[0] = r.x + r.width), (d[1] = p));
            var g = u++ % a.length;
            (l[g] = l[g] || []),
              l[g].push(
                new cs({
                  subPixelOptimize: !0,
                  shape: {x1: c[0], y1: c[1], x2: d[0], y2: d[1]},
                  style: {lineWidth: o},
                  silent: !0,
                }),
              );
          }
          for (f = 0; f < l.length; ++f)
            this.group.add(
              Bs(l[f], {
                style: {
                  stroke: a[f % a.length],
                  lineDash: n.getLineDash(o),
                  lineWidth: o,
                },
                silent: !0,
              }),
            );
        }
      },
      _splitArea: function(t) {
        Dv(this, this._axisGroup, t, t);
      },
    }),
    lI = Ou.extend({
      type: 'singleAxis',
      layoutMode: 'box',
      axis: null,
      coordinateSystem: null,
      getCoordSysModel: function() {
        return this;
      },
    });
  m(lI.prototype, xg),
    Ym(
      'single',
      lI,
      function(t, e) {
        return e.type || (e.data ? 'category' : 'value');
      },
      {
        left: '5%',
        top: '5%',
        right: '5%',
        bottom: '5%',
        type: 'value',
        position: 'bottom',
        orient: 'horizontal',
        axisLine: {show: !0, lineStyle: {width: 1, type: 'solid'}},
        tooltip: {show: !0},
        axisTick: {show: !0, length: 6, lineStyle: {width: 1}},
        axisLabel: {show: !0, interval: 'auto'},
        splitLine: {show: !0, lineStyle: {type: 'dashed', opacity: 0.2}},
      },
    );
  function uI(t, e) {
    var i,
      n = [],
      o = t.seriesIndex;
    if (null == o || !(i = e.getSeriesByIndex(o))) return {point: []};
    var a = i.getData(),
      r = Ko(a, t);
    if (null == r || r < 0 || R(r)) return {point: []};
    var s = a.getItemGraphicEl(r),
      l = i.coordinateSystem;
    if (i.getTooltipPosition) n = i.getTooltipPosition(r) || [];
    else if (l && l.dataToPoint)
      n =
        l.dataToPoint(
          a.getValues(
            O(l.dimensions, function(t) {
              return a.mapDimension(t);
            }),
            r,
            !0,
          ),
        ) || [];
    else if (s) {
      var u = s.getBoundingRect().clone();
      u.applyTransform(s.transform),
        (n = [u.x + u.width / 2, u.y + u.height / 2]);
    }
    return {point: n, el: s};
  }
  var hI = E,
    cI = L,
    dI = $o();
  function fI(t, e, i, n, o) {
    var a = t.axis;
    if (!a.scale.isBlank() && a.containData(e))
      if (t.involveSeries) {
        var r = (function(l, t) {
            var u = t.axis,
              h = u.dim,
              c = l,
              d = [],
              f = Number.MAX_VALUE,
              p = -1;
            return (
              hI(t.seriesModels, function(e, t) {
                var i,
                  n,
                  o = e.getData().mapDimension(h, !0);
                if (e.getAxisTooltipData) {
                  var a = e.getAxisTooltipData(o, l, u);
                  (n = a.dataIndices), (i = a.nestestValue);
                } else {
                  if (
                    !(n = e
                      .getData()
                      .indicesOfNearest(
                        o[0],
                        l,
                        'category' === u.type ? 0.5 : null,
                      )).length
                  )
                    return;
                  i = e.getData().get(o[0], n[0]);
                }
                if (null != i && isFinite(i)) {
                  var r = l - i,
                    s = Math.abs(r);
                  s <= f &&
                    ((s < f || (0 <= r && p < 0)) &&
                      ((f = s), (p = r), (c = i), (d.length = 0)),
                    hI(n, function(t) {
                      d.push({
                        seriesIndex: e.seriesIndex,
                        dataIndexInside: t,
                        dataIndex: e.getData().getRawIndex(t),
                      });
                    }));
                }
              }),
              {payloadBatch: d, snapToValue: c}
            );
          })(e, t),
          s = r.payloadBatch,
          l = r.snapToValue;
        s[0] && null == o.seriesIndex && P(o, s[0]),
          !n && t.snap && a.containData(l) && null != l && (e = l),
          i.showPointer(t, e, s, o),
          i.showTooltip(t, r, l);
      } else i.showPointer(t, e);
  }
  function pI(t, e, i, n) {
    t[e.key] = {value: i, payloadBatch: n};
  }
  function gI(t, e, i, n) {
    var o = i.payloadBatch,
      a = e.axis,
      r = a.model,
      s = e.axisPointerModel;
    if (e.triggerTooltip && o.length) {
      var l = e.coordSys.model,
        u = bv(l),
        h = t.map[u];
      h ||
        ((h = t.map[u] = {
          coordSysId: l.id,
          coordSysIndex: l.componentIndex,
          coordSysType: l.type,
          coordSysMainType: l.mainType,
          dataByAxis: [],
        }),
        t.list.push(h)),
        h.dataByAxis.push({
          axisDim: a.dim,
          axisIndex: r.componentIndex,
          axisType: r.type,
          axisId: r.id,
          value: n,
          valueLabelOpt: {
            precision: s.get('label.precision'),
            formatter: s.get('label.formatter'),
          },
          seriesDataIndices: o.slice(),
        });
    }
  }
  function mI(t) {
    var e = t.axis.model,
      i = {},
      n = (i.axisDim = t.axis.dim);
    return (
      (i.axisIndex = i[n + 'AxisIndex'] = e.componentIndex),
      (i.axisName = i[n + 'AxisName'] = e.name),
      (i.axisId = i[n + 'AxisId'] = e.id),
      i
    );
  }
  function vI(t) {
    return !t || null == t[0] || isNaN(t[0]) || null == t[1] || isNaN(t[1]);
  }
  Pf({
    type: 'axisPointer',
    coordSysAxesInfo: null,
    defaultOption: {
      show: 'auto',
      triggerOn: null,
      zlevel: 0,
      z: 50,
      type: 'line',
      snap: !1,
      triggerTooltip: !0,
      value: null,
      status: null,
      link: [],
      animation: null,
      animationDurationUpdate: 200,
      lineStyle: {color: '#aaa', width: 1, type: 'solid'},
      shadowStyle: {color: 'rgba(150,150,150,0.3)'},
      label: {
        show: !0,
        formatter: null,
        precision: 'auto',
        margin: 3,
        color: '#fff',
        padding: [5, 7, 5, 7],
        backgroundColor: 'auto',
        borderColor: null,
        borderWidth: 0,
        shadowBlur: 3,
        shadowColor: '#aaa',
      },
      handle: {
        show: !1,
        icon:
          'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',
        size: 45,
        margin: 50,
        color: '#333',
        shadowBlur: 3,
        shadowColor: '#aaa',
        shadowOffsetX: 0,
        shadowOffsetY: 2,
        throttle: 40,
      },
    },
  });
  var yI = $o(),
    xI = E;
  function _I(t, e, i) {
    if (!v.node) {
      var n = e.getZr();
      yI(n).records || (yI(n).records = {}),
        (function(o, a) {
          if (yI(o).initialized) return;
          function t(t, n) {
            o.on(t, function(e) {
              var i = (function(i) {
                var n = {showTip: [], hideTip: []},
                  o = function(t) {
                    var e = n[t.type];
                    e
                      ? e.push(t)
                      : ((t.dispatchAction = o), i.dispatchAction(t));
                  };
                return {dispatchAction: o, pendings: n};
              })(a);
              xI(yI(o).records, function(t) {
                t && n(t, e, i.dispatchAction);
              }),
                (function(t, e) {
                  var i,
                    n = t.showTip.length,
                    o = t.hideTip.length;
                  n ? (i = t.showTip[n - 1]) : o && (i = t.hideTip[o - 1]);
                  i && ((i.dispatchAction = null), e.dispatchAction(i));
                })(i.pendings, a);
            });
          }
          (yI(o).initialized = !0),
            t('click', L(bI, 'click')),
            t('mousemove', L(bI, 'mousemove')),
            t('globalout', wI);
        })(n, e),
        ((yI(n).records[t] || (yI(n).records[t] = {})).handler = i);
    }
  }
  function wI(t, e, i) {
    t.handler('leave', null, i);
  }
  function bI(t, e, i, n) {
    e.handler(t, i, n);
  }
  function SI(t, e) {
    if (!v.node) {
      var i = e.getZr();
      (yI(i).records || {})[t] && (yI(i).records[t] = null);
    }
  }
  var MI = Nf({
      type: 'axisPointer',
      render: function(t, e, i) {
        var n = e.getComponent('tooltip'),
          o =
            t.get('triggerOn') ||
            (n && n.get('triggerOn')) ||
            'mousemove|click';
        _I('axisPointer', i, function(t, e, i) {
          'none' !== o &&
            ('leave' === t || 0 <= o.indexOf(t)) &&
            i({
              type: 'updateAxisPointer',
              currTrigger: t,
              x: e && e.offsetX,
              y: e && e.offsetY,
            });
        });
      },
      remove: function(t, e) {
        SI(e.getZr(), 'axisPointer'),
          MI.superApply(this._model, 'remove', arguments);
      },
      dispose: function(t, e) {
        SI('axisPointer', e), MI.superApply(this._model, 'dispose', arguments);
      },
    }),
    II = $o(),
    TI = k,
    AI = A;
  function DI() {}
  function CI(t, e, i, n) {
    !(function i(n, t) {
      {
        if (V(n) && V(t)) {
          var o = !0;
          return (
            E(t, function(t, e) {
              o = o && i(n[e], t);
            }),
            !!o
          );
        }
        return n === t;
      }
    })(II(i).lastProp, n) &&
      ((II(i).lastProp = n), e ? pl(i, n, t) : (i.stopAnimation(), i.attr(n)));
  }
  function LI(t, e) {
    t[e.get('label.show') ? 'show' : 'hide']();
  }
  function kI(t) {
    return {position: t.position.slice(), rotation: t.rotation || 0};
  }
  function PI(t, e, i) {
    var n = e.get('z'),
      o = e.get('zlevel');
    t &&
      t.traverse(function(t) {
        'group' !== t.type &&
          (null != n && (t.z = n), null != o && (t.zlevel = o), (t.silent = i));
      });
  }
  function NI(t) {
    var e,
      i = t.get('type'),
      n = t.getModel(i + 'Style');
    return (
      'line' === i
        ? ((e = n.getLineStyle()).fill = null)
        : 'shadow' === i && ((e = n.getAreaStyle()).stroke = null),
      e
    );
  }
  function OI(t, e, i, n, o) {
    var a = EI(i.get('value'), e.axis, e.ecModel, i.get('seriesDataIndices'), {
        precision: i.get('label.precision'),
        formatter: i.get('label.formatter'),
      }),
      r = i.getModel('label'),
      s = au(r.get('padding') || 0),
      l = r.getFont(),
      u = vn(a, l),
      h = o.position,
      c = u.width + s[1] + s[3],
      d = u.height + s[0] + s[2],
      f = o.align;
    'right' === f && (h[0] -= c), 'center' === f && (h[0] -= c / 2);
    var p = o.verticalAlign;
    'bottom' === p && (h[1] -= d),
      'middle' === p && (h[1] -= d / 2),
      (function(t, e, i, n) {
        var o = n.getWidth(),
          a = n.getHeight();
        (t[0] = Math.min(t[0] + e, o) - e),
          (t[1] = Math.min(t[1] + i, a) - i),
          (t[0] = Math.max(t[0], 0)),
          (t[1] = Math.max(t[1], 0));
      })(h, c, d, n);
    var g = r.get('backgroundColor');
    (g && 'auto' !== g) || (g = e.get('axisLine.lineStyle.color')),
      (t.label = {
        shape: {x: 0, y: 0, width: c, height: d, r: r.get('borderRadius')},
        position: h.slice(),
        style: {
          text: a,
          textFont: l,
          textFill: r.getTextColor(),
          textPosition: 'inside',
          textPadding: s,
          fill: g,
          stroke: r.get('borderColor') || 'transparent',
          lineWidth: r.get('borderWidth') || 0,
          shadowBlur: r.get('shadowBlur'),
          shadowColor: r.get('shadowColor'),
          shadowOffsetX: r.get('shadowOffsetX'),
          shadowOffsetY: r.get('shadowOffsetY'),
        },
        z2: 10,
      });
  }
  function EI(t, e, o, i, n) {
    t = e.scale.parse(t);
    var a = e.scale.getLabel(t, {precision: n.precision}),
      r = n.formatter;
    if (r) {
      var s = {
        value: mg(e, t),
        axisDimension: e.dim,
        axisIndex: e.index,
        seriesData: [],
      };
      E(i, function(t) {
        var e = o.getSeriesByIndex(t.seriesIndex),
          i = t.dataIndexInside,
          n = e && e.getDataParams(i);
        n && s.seriesData.push(n);
      }),
        B(r) ? (a = r.replace('{value}', a)) : z(r) && (a = r(s));
    }
    return a;
  }
  function RI(t, e, i) {
    var n = se();
    return (
      de(n, n, i.rotation),
      ce(n, n, i.position),
      vl(
        [
          t.dataToCoord(e),
          (i.labelOffset || 0) + (i.labelDirection || 1) * (i.labelMargin || 0),
        ],
        n,
      )
    );
  }
  function zI(t, e, i, n, o, a) {
    var r = rv.innerTextLayout(i.rotation, 0, i.labelDirection);
    (i.labelMargin = o.get('label.margin')),
      OI(e, n, o, a, {
        position: RI(n.axis, t, i),
        align: r.textAlign,
        verticalAlign: r.textVerticalAlign,
      });
  }
  function BI(t, e, i) {
    return {x1: t[(i = i || 0)], y1: t[1 - i], x2: e[i], y2: e[1 - i]};
  }
  function VI(t, e, i) {
    return {x: t[(i = i || 0)], y: t[1 - i], width: e[i], height: e[1 - i]};
  }
  function GI(t, e, i, n, o, a) {
    return {
      cx: t,
      cy: e,
      r0: i,
      r: n,
      startAngle: o,
      endAngle: a,
      clockwise: !0,
    };
  }
  sa(
    ((DI.prototype = {
      _group: null,
      _lastGraphicKey: null,
      _handle: null,
      _dragging: !1,
      _lastValue: null,
      _lastStatus: null,
      _payloadInfo: null,
      animationThreshold: 15,
      render: function(t, e, i, n) {
        var o = e.get('value'),
          a = e.get('status');
        if (
          ((this._axisModel = t),
          (this._axisPointerModel = e),
          (this._api = i),
          n || this._lastValue !== o || this._lastStatus !== a)
        ) {
          (this._lastValue = o), (this._lastStatus = a);
          var r = this._group,
            s = this._handle;
          if (!a || 'hide' === a) return r && r.hide(), void (s && s.hide());
          r && r.show(), s && s.show();
          var l = {};
          this.makeElOption(l, o, t, e, i);
          var u = l.graphicKey;
          u !== this._lastGraphicKey && this.clear(i),
            (this._lastGraphicKey = u);
          var h = (this._moveAnimation = this.determineAnimation(t, e));
          if (r) {
            var c = L(CI, e, h);
            this.updatePointerEl(r, l, c, e), this.updateLabelEl(r, l, c, e);
          } else
            (r = this._group = new ki()),
              this.createPointerEl(r, l, t, e),
              this.createLabelEl(r, l, t, e),
              i.getZr().add(r);
          PI(r, e, !0), this._renderHandle(o);
        }
      },
      remove: function(t) {
        this.clear(t);
      },
      dispose: function(t) {
        this.clear(t);
      },
      determineAnimation: function(t, e) {
        var i = e.get('animation'),
          n = t.axis,
          o = 'category' === n.type,
          a = e.get('snap');
        if (!a && !o) return !1;
        if ('auto' !== i && null != i) return !0 === i;
        var r = this.animationThreshold;
        if (o && n.getBandWidth() > r) return !0;
        if (a) {
          var s = _v(t).seriesDataCount,
            l = n.getExtent();
          return Math.abs(l[0] - l[1]) / s > r;
        }
        return !1;
      },
      makeElOption: function(t, e, i, n, o) {},
      createPointerEl: function(t, e, i, n) {
        var o = e.pointer;
        if (o) {
          var a = (II(t).pointerEl = new Il[o.type](TI(e.pointer)));
          t.add(a);
        }
      },
      createLabelEl: function(t, e, i, n) {
        if (e.label) {
          var o = (II(t).labelEl = new us(TI(e.label)));
          t.add(o), LI(o, n);
        }
      },
      updatePointerEl: function(t, e, i) {
        var n = II(t).pointerEl;
        n &&
          e.pointer &&
          (n.setStyle(e.pointer.style), i(n, {shape: e.pointer.shape}));
      },
      updateLabelEl: function(t, e, i, n) {
        var o = II(t).labelEl;
        o &&
          (o.setStyle(e.label.style),
          i(o, {shape: e.label.shape, position: e.label.position}),
          LI(o, n));
      },
      _renderHandle: function(t) {
        if (!this._dragging && this.updateHandleTransform) {
          var e,
            i = this._axisPointerModel,
            n = this._api.getZr(),
            o = this._handle,
            a = i.getModel('handle'),
            r = i.get('status');
          if (!a.get('show') || !r || 'hide' === r)
            return o && n.remove(o), void (this._handle = null);
          this._handle ||
            ((e = !0),
            (o = this._handle = wl(a.get('icon'), {
              cursor: 'move',
              draggable: !0,
              onmousemove: function(t) {
                jt(t.event);
              },
              onmousedown: AI(this._onHandleDragMove, this, 0, 0),
              drift: AI(this._onHandleDragMove, this),
              ondragend: AI(this._onHandleDragEnd, this),
            })),
            n.add(o)),
            PI(o, i, !1);
          o.setStyle(
            a.getItemStyle(null, [
              'color',
              'borderColor',
              'borderWidth',
              'opacity',
              'shadowColor',
              'shadowBlur',
              'shadowOffsetX',
              'shadowOffsetY',
            ]),
          );
          var s = a.get('size');
          R(s) || (s = [s, s]),
            o.attr('scale', [s[0] / 2, s[1] / 2]),
            Ec(
              this,
              '_doDispatchAxisPointer',
              a.get('throttle') || 0,
              'fixRate',
            ),
            this._moveHandleToValue(t, e);
        }
      },
      _moveHandleToValue: function(t, e) {
        CI(
          this._axisPointerModel,
          !e && this._moveAnimation,
          this._handle,
          kI(
            this.getHandleTransform(t, this._axisModel, this._axisPointerModel),
          ),
        );
      },
      _onHandleDragMove: function(t, e) {
        var i = this._handle;
        if (i) {
          this._dragging = !0;
          var n = this.updateHandleTransform(
            kI(i),
            [t, e],
            this._axisModel,
            this._axisPointerModel,
          );
          (this._payloadInfo = n),
            i.stopAnimation(),
            i.attr(kI(n)),
            (II(i).lastProp = null),
            this._doDispatchAxisPointer();
        }
      },
      _doDispatchAxisPointer: function() {
        if (this._handle) {
          var t = this._payloadInfo,
            e = this._axisModel;
          this._api.dispatchAction({
            type: 'updateAxisPointer',
            x: t.cursorPoint[0],
            y: t.cursorPoint[1],
            tooltipOption: t.tooltipOption,
            axesInfo: [{axisDim: e.axis.dim, axisIndex: e.componentIndex}],
          });
        }
      },
      _onHandleDragEnd: function(t) {
        if (((this._dragging = !1), this._handle)) {
          var e = this._axisPointerModel.get('value');
          this._moveHandleToValue(e),
            this._api.dispatchAction({type: 'hideTip'});
        }
      },
      getHandleTransform: null,
      updateHandleTransform: null,
      clear: function(t) {
        (this._lastValue = null), (this._lastStatus = null);
        var e = t.getZr(),
          i = this._group,
          n = this._handle;
        e &&
          i &&
          ((this._lastGraphicKey = null),
          i && e.remove(i),
          n && e.remove(n),
          (this._group = null),
          (this._handle = null),
          (this._payloadInfo = null));
      },
      doClear: function() {},
      buildLabel: function(t, e, i) {
        return {x: t[(i = i || 0)], y: t[1 - i], width: e[i], height: e[1 - i]};
      },
    }).constructor = DI),
  );
  var FI = DI.extend({
    makeElOption: function(t, e, i, n, o) {
      var a = i.axis,
        r = a.grid,
        s = n.get('type'),
        l = WI(r, a)
          .getOtherAxis(a)
          .getGlobalExtent(),
        u = a.toGlobalCoord(a.dataToCoord(e, !0));
      if (s && 'none' !== s) {
        var h = NI(n),
          c = HI[s](a, u, l);
        (c.style = h), (t.graphicKey = c.type), (t.pointer = c);
      }
      zI(e, t, Av(r.model, i), i, n, o);
    },
    getHandleTransform: function(t, e, i) {
      var n = Av(e.axis.grid.model, e, {labelInside: !1});
      return (
        (n.labelMargin = i.get('handle.margin')),
        {
          position: RI(e.axis, t, n),
          rotation: n.rotation + (n.labelDirection < 0 ? Math.PI : 0),
        }
      );
    },
    updateHandleTransform: function(t, e, i, n) {
      var o = i.axis,
        a = o.grid,
        r = o.getGlobalExtent(!0),
        s = WI(a, o)
          .getOtherAxis(o)
          .getGlobalExtent(),
        l = 'x' === o.dim ? 0 : 1,
        u = t.position;
      (u[l] += e[l]),
        (u[l] = Math.min(r[1], u[l])),
        (u[l] = Math.max(r[0], u[l]));
      var h = (s[1] + s[0]) / 2,
        c = [h, h];
      c[l] = u[l];
      return {
        position: u,
        rotation: t.rotation,
        cursorPoint: c,
        tooltipOption: [{verticalAlign: 'middle'}, {align: 'center'}][l],
      };
    },
  });
  function WI(t, e) {
    var i = {};
    return (i[e.dim + 'AxisIndex'] = e.index), t.getCartesian(i);
  }
  var HI = {
    line: function(t, e, i) {
      return {
        type: 'Line',
        subPixelOptimize: !0,
        shape: BI([e, i[0]], [e, i[1]], ZI(t)),
      };
    },
    shadow: function(t, e, i) {
      var n = Math.max(1, t.getBandWidth()),
        o = i[1] - i[0];
      return {type: 'Rect', shape: VI([e - n / 2, i[0]], [n, o], ZI(t))};
    },
  };
  function ZI(t) {
    return 'x' === t.dim ? 0 : 1;
  }
  Sv.registerAxisPointerClass('CartesianAxisPointer', FI),
    Mf(function(t) {
      if (t) {
        (t.axisPointer && 0 !== t.axisPointer.length) || (t.axisPointer = {});
        var e = t.axisPointer.link;
        e && !R(e) && (t.axisPointer.link = [e]);
      }
    }),
    If(Ed.PROCESSOR.STATISTIC, function(t, e) {
      t.getComponent('axisPointer').coordSysAxesInfo = yv(t, e);
    }),
    Tf(
      {
        type: 'updateAxisPointer',
        event: 'updateAxisPointer',
        update: ':updateAxisPointer',
      },
      function(t, e, i) {
        var n = t.currTrigger,
          r = [t.x, t.y],
          o = t,
          a = t.dispatchAction || A(i.dispatchAction, i),
          s = e.getComponent('axisPointer').coordSysAxesInfo;
        if (s) {
          vI(r) &&
            (r = uI({seriesIndex: o.seriesIndex, dataIndex: o.dataIndex}, e)
              .point);
          var l = vI(r),
            u = o.axesInfo,
            h = s.axesInfo,
            c = 'leave' === n || vI(r),
            d = {},
            f = {},
            p = {list: [], map: {}},
            g = {showPointer: cI(pI, f), showTooltip: cI(gI, p)};
          hI(s.coordSysMap, function(t, e) {
            var a = l || t.containPoint(r);
            hI(s.coordSysAxesInfo[e], function(t, e) {
              var i = t.axis,
                n = (function(t, e) {
                  for (var i = 0; i < (t || []).length; i++) {
                    var n = t[i];
                    if (
                      e.axis.dim === n.axisDim &&
                      e.axis.model.componentIndex === n.axisIndex
                    )
                      return n;
                  }
                })(u, t);
              if (!c && a && (!u || n)) {
                var o = n && n.value;
                null != o || l || (o = i.pointToData(r)),
                  null != o && fI(t, o, g, !1, d);
              }
            });
          });
          var m = {};
          return (
            hI(h, function(o, t) {
              var a = o.linkGroup;
              a &&
                !f[t] &&
                hI(a.axesInfo, function(t, e) {
                  var i = f[e];
                  if (t !== o && i) {
                    var n = i.value;
                    a.mapper &&
                      (n = o.axis.scale.parse(a.mapper(n, mI(t), mI(o)))),
                      (m[o.key] = n);
                  }
                });
            }),
            hI(m, function(t, e) {
              fI(h[e], t, g, !0, d);
            }),
            (function(o, t, e) {
              var a = (e.axesInfo = []);
              hI(t, function(t, e) {
                var i = t.axisPointerModel.option,
                  n = o[e];
                n
                  ? (t.useHandle || (i.status = 'show'),
                    (i.value = n.value),
                    (i.seriesDataIndices = (n.payloadBatch || []).slice()))
                  : t.useHandle || (i.status = 'hide'),
                  'show' === i.status &&
                    a.push({
                      axisDim: t.axis.dim,
                      axisIndex: t.axis.model.componentIndex,
                      value: i.value,
                    });
              });
            })(f, h, d),
            (function(t, e, i, n) {
              if (vI(e) || !t.list.length) return n({type: 'hideTip'});
              var o =
                ((t.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] ||
                {};
              n({
                type: 'showTip',
                escapeConnect: !0,
                x: e[0],
                y: e[1],
                tooltipOption: i.tooltipOption,
                position: i.position,
                dataIndexInside: o.dataIndexInside,
                dataIndex: o.dataIndex,
                seriesIndex: o.seriesIndex,
                dataByCoordSys: t.list,
              });
            })(p, r, t, a),
            (function(t, e, i) {
              var n = i.getZr(),
                o = 'axisPointerLastHighlights',
                a = dI(n)[o] || {},
                r = (dI(n)[o] = {});
              hI(t, function(t, e) {
                var i = t.axisPointerModel.option;
                'show' === i.status &&
                  hI(i.seriesDataIndices, function(t) {
                    var e = t.seriesIndex + ' | ' + t.dataIndex;
                    r[e] = t;
                  });
              });
              var s = [],
                l = [];
              E(a, function(t, e) {
                r[e] || l.push(t);
              }),
                E(r, function(t, e) {
                  a[e] || s.push(t);
                }),
                l.length &&
                  i.dispatchAction({
                    type: 'downplay',
                    escapeConnect: !0,
                    batch: l,
                  }),
                s.length &&
                  i.dispatchAction({
                    type: 'highlight',
                    escapeConnect: !0,
                    batch: s,
                  });
            })(h, 0, i),
            d
          );
        }
      },
    );
  var UI = ['x', 'y'],
    XI = ['width', 'height'],
    YI = DI.extend({
      makeElOption: function(t, e, i, n, o) {
        var a = i.axis,
          r = a.coordinateSystem,
          s = KI(r, 1 - qI(a)),
          l = r.dataToPoint(e)[0],
          u = n.get('type');
        if (u && 'none' !== u) {
          var h = NI(n),
            c = jI[u](a, l, s);
          (c.style = h), (t.graphicKey = c.type), (t.pointer = c);
        }
        zI(e, t, oI(i), i, n, o);
      },
      getHandleTransform: function(t, e, i) {
        var n = oI(e, {labelInside: !1});
        return (
          (n.labelMargin = i.get('handle.margin')),
          {
            position: RI(e.axis, t, n),
            rotation: n.rotation + (n.labelDirection < 0 ? Math.PI : 0),
          }
        );
      },
      updateHandleTransform: function(t, e, i, n) {
        var o = i.axis,
          a = o.coordinateSystem,
          r = qI(o),
          s = KI(a, r),
          l = t.position;
        (l[r] += e[r]),
          (l[r] = Math.min(s[1], l[r])),
          (l[r] = Math.max(s[0], l[r]));
        var u = KI(a, 1 - r),
          h = (u[1] + u[0]) / 2,
          c = [h, h];
        return (
          (c[r] = l[r]),
          {
            position: l,
            rotation: t.rotation,
            cursorPoint: c,
            tooltipOption: {verticalAlign: 'middle'},
          }
        );
      },
    }),
    jI = {
      line: function(t, e, i) {
        return {
          type: 'Line',
          subPixelOptimize: !0,
          shape: BI([e, i[0]], [e, i[1]], qI(t)),
        };
      },
      shadow: function(t, e, i) {
        var n = t.getBandWidth(),
          o = i[1] - i[0];
        return {type: 'Rect', shape: VI([e - n / 2, i[0]], [n, o], qI(t))};
      },
    };
  function qI(t) {
    return t.isHorizontal() ? 0 : 1;
  }
  function KI(t, e) {
    var i = t.getRect();
    return [i[UI[e]], i[UI[e]] + i[XI[e]]];
  }
  Sv.registerAxisPointerClass('SingleAxisPointer', YI), Nf({type: 'single'});
  var $I = cc.extend({
    type: 'series.themeRiver',
    dependencies: ['singleAxis'],
    nameMap: null,
    init: function(t) {
      $I.superApply(this, 'init', arguments),
        (this.legendVisualProvider = new iy(
          A(this.getData, this),
          A(this.getRawData, this),
        ));
    },
    fixData: function(t) {
      var e = t.length,
        i = na(t, function(t) {
          return t[2];
        }),
        n = [];
      i.buckets.each(function(t, e) {
        n.push({name: e, dataList: t});
      });
      for (var o = n.length, a = -1, r = -1, s = 0; s < o; ++s) {
        var l = n[s].dataList.length;
        a < l && ((a = l), (r = s));
      }
      for (var u = 0; u < o; ++u)
        if (u !== r)
          for (var h = n[u].name, c = 0; c < a; ++c) {
            for (
              var d = n[r].dataList[c][0],
                f = n[u].dataList.length,
                p = -1,
                g = 0;
              g < f;
              ++g
            ) {
              if (n[u].dataList[g][0] === d) {
                p = g;
                break;
              }
            }
            -1 === p &&
              ((t[e] = []), (t[e][0] = d), (t[e][1] = 0), (t[e][2] = h), e++);
          }
      return t;
    },
    getInitialData: function(t, e) {
      for (
        var i = e
            .queryComponents({
              mainType: 'singleAxis',
              index: this.get('singleAxisIndex'),
              id: this.get('singleAxisId'),
            })[0]
            .get('type'),
          n = I(t.data, function(t) {
            return void 0 !== t[2];
          }),
          o = this.fixData(n || []),
          a = [],
          r = (this.nameMap = et()),
          s = 0,
          l = 0;
        l < o.length;
        ++l
      )
        a.push(o[l][2]), r.get(o[l][2]) || (r.set(o[l][2], s), s++);
      var u = gp(o, {
          coordDimensions: ['single'],
          dimensionsDefine: [
            {name: 'time', type: Ff(i)},
            {name: 'value', type: 'float'},
            {name: 'name', type: 'ordinal'},
          ],
          encodeDefine: {single: 0, value: 1, itemName: 2},
        }),
        h = new Qf(u, this);
      return h.initData(o), h;
    },
    getLayerSeries: function() {
      for (var i = this.getData(), t = i.count(), e = [], n = 0; n < t; ++n)
        e[n] = n;
      var o = i.mapDimension('single'),
        a = na(e, function(t) {
          return i.get('name', t);
        }),
        r = [];
      return (
        a.buckets.each(function(t, e) {
          t.sort(function(t, e) {
            return i.get(o, t) - i.get(o, e);
          }),
            r.push({name: e, indices: t});
        }),
        r
      );
    },
    getAxisTooltipData: function(t, e, i) {
      R(t) || (t = t ? [t] : []);
      for (
        var n,
          o = this.getData(),
          a = this.getLayerSeries(),
          r = [],
          s = a.length,
          l = 0;
        l < s;
        ++l
      ) {
        for (
          var u = Number.MAX_VALUE, h = -1, c = a[l].indices.length, d = 0;
          d < c;
          ++d
        ) {
          var f = o.get(t[0], a[l].indices[d]),
            p = Math.abs(f - e);
          p <= u && ((n = f), (u = p), (h = a[l].indices[d]));
        }
        r.push(h);
      }
      return {dataIndices: r, nestestValue: n};
    },
    formatTooltip: function(t) {
      var e = this.getData(),
        i = e.getName(t),
        n = e.get(e.mapDimension('value'), t);
      return (!isNaN(n) && null != n) || (n = '-'), lu(i + ' : ' + n);
    },
    defaultOption: {
      zlevel: 0,
      z: 2,
      coordinateSystem: 'singleAxis',
      boundaryGap: ['10%', '10%'],
      singleAxisIndex: 0,
      animationEasing: 'linear',
      label: {
        margin: 4,
        show: !0,
        position: 'left',
        color: '#000',
        fontSize: 11,
      },
      emphasis: {label: {show: !0}},
    },
  });
  Ef({
    type: 'themeRiver',
    init: function() {
      this._layers = [];
    },
    render: function(b, t, e) {
      var S = b.getData(),
        M = this.group,
        I = b.getLayerSeries(),
        i = S.getLayout('layoutInfo'),
        n = i.rect,
        o = i.boundaryGap;
      function a(t) {
        return t.name;
      }
      M.attr('position', [0, n.y + o[0]]);
      var r = new zf(this._layersSeries || [], I, a, a),
        T = {};
      function s(t, e, i) {
        var n = this._layers;
        if ('remove' !== t) {
          for (
            var o, a, r, s = [], l = [], u = I[e].indices, h = 0;
            h < u.length;
            h++
          ) {
            var c = S.getItemLayout(u[h]),
              d = c.x,
              f = c.y0,
              p = c.y;
            s.push([d, f]),
              l.push([d, f + p]),
              (o = S.getItemVisual(u[h], 'color'));
          }
          var g = S.getItemLayout(u[0]),
            m = S.getItemModel(u[h - 1]),
            v = m.getModel('label'),
            y = v.get('margin');
          if ('add' === t) {
            var x = (T[e] = new ki());
            (a = new Am({
              shape: {
                points: s,
                stackedOnPoints: l,
                smooth: 0.4,
                stackedOnSmooth: 0.4,
                smoothConstraint: !1,
              },
              z2: 0,
            })),
              (r = new jr({style: {x: g.x - y, y: g.y0 + g.y / 2}})),
              x.add(a),
              x.add(r),
              M.add(x),
              a.setClipPath(
                (function(t, e, i) {
                  var n = new us({
                    shape: {
                      x: t.x - 10,
                      y: t.y - 10,
                      width: 0,
                      height: t.height + 20,
                    },
                  });
                  return (
                    gl(
                      n,
                      {shape: {width: t.width + 20, height: t.height + 20}},
                      e,
                      i,
                    ),
                    n
                  );
                })(a.getBoundingRect(), b, function() {
                  a.removeClipPath();
                }),
              );
          } else {
            x = n[i];
            (a = x.childAt(0)),
              (r = x.childAt(1)),
              M.add(x),
              (T[e] = x),
              pl(a, {shape: {points: s, stackedOnPoints: l}}, b),
              pl(r, {style: {x: g.x - y, y: g.y0 + g.y / 2}}, b);
          }
          var _ = m.getModel('emphasis.itemStyle'),
            w = m.getModel('itemStyle');
          rl(r.style, v, {
            text: v.get('show')
              ? b.getFormattedLabel(u[h - 1], 'normal') || S.getName(u[h - 1])
              : null,
            textVerticalAlign: 'middle',
          }),
            a.setStyle(P({fill: o}, w.getItemStyle(['color']))),
            tl(a, _.getItemStyle());
        } else M.remove(n[e]);
      }
      r
        .add(A(s, this, 'add'))
        .update(A(s, this, 'update'))
        .remove(A(s, this, 'remove'))
        .execute(),
        (this._layersSeries = I),
        (this._layers = T);
    },
    dispose: function() {},
  });
  function JI(i, t, e) {
    if (i.count())
      for (
        var n,
          o = t.coordinateSystem,
          a = t.getLayerSeries(),
          r = i.mapDimension('single'),
          s = i.mapDimension('value'),
          l = O(a, function(t) {
            return O(t.indices, function(t) {
              var e = o.dataToPoint(i.get(r, t));
              return (e[1] = i.get(s, t)), e;
            });
          }),
          u = (function(t) {
            for (
              var e = t.length,
                i = t[0].length,
                n = [],
                o = [],
                a = 0,
                r = {},
                s = 0;
              s < i;
              ++s
            ) {
              for (var l = 0, u = 0; l < e; ++l) u += t[l][s][1];
              a < u && (a = u), n.push(u);
            }
            for (var h = 0; h < i; ++h) o[h] = (a - n[h]) / 2;
            for (var c = (a = 0); c < i; ++c) {
              var d = n[c] + o[c];
              a < d && (a = d);
            }
            return (r.y0 = o), (r.max = a), r;
          })(l),
          h = u.y0,
          c = e / u.max,
          d = a.length,
          f = a[0].indices.length,
          p = 0;
        p < f;
        ++p
      ) {
        (n = h[p] * c),
          i.setItemLayout(a[0].indices[p], {
            layerIndex: 0,
            x: l[0][p][0],
            y0: n,
            y: l[0][p][1] * c,
          });
        for (var g = 1; g < d; ++g)
          (n += l[g - 1][p][1] * c),
            i.setItemLayout(a[g].indices[p], {
              layerIndex: g,
              x: l[g][p][0],
              y0: n,
              y: l[g][p][1] * c,
            });
      }
  }
  Df(function(t, e) {
    t.eachSeriesByType('themeRiver', function(t) {
      var e = t.getData(),
        i = t.coordinateSystem,
        n = {},
        o = i.getRect();
      n.rect = o;
      var a = t.get('boundaryGap'),
        r = i.getAxis();
      ((n.boundaryGap = a), 'horizontal' === r.orient)
        ? ((a[0] = Vl(a[0], o.height)),
          (a[1] = Vl(a[1], o.height)),
          JI(e, t, o.height - a[0] - a[1]))
        : ((a[0] = Vl(a[0], o.width)),
          (a[1] = Vl(a[1], o.width)),
          JI(e, t, o.width - a[0] - a[1]));
      e.setLayout('layoutInfo', n);
    });
  }),
    Cf(function(t) {
      t.eachSeriesByType('themeRiver', function(o) {
        var a = o.getData(),
          r = o.getRawData(),
          s = o.get('color'),
          l = et();
        a.each(function(t) {
          l.set(a.getRawIndex(t), t);
        }),
          r.each(function(t) {
            var e = r.getName(t),
              i = s[(o.nameMap.get(e) - 1) % s.length];
            r.setItemVisual(t, 'color', i);
            var n = l.get(t);
            null != n && a.setItemVisual(n, 'color', i);
          });
      });
    }),
    If(my('themeRiver')),
    cc.extend({
      type: 'series.sunburst',
      _viewRoot: null,
      getInitialData: function(t, e) {
        var i = {name: t.name, children: t.data};
        !(function i(t) {
          var n = 0;
          E(t.children, function(t) {
            i(t);
            var e = t.value;
            R(e) && (e = e[0]), (n += e);
          });
          var e = t.value;
          R(e) && (e = e[0]);
          (null != e && !isNaN(e)) || (e = n);
          e < 0 && (e = 0);
          R(t.value) ? (t.value[0] = e) : (t.value = e);
        })(i);
        var n = t.levels || [],
          o = {};
        return (o.levels = n), Ox.createTree(i, this, o).data;
      },
      optionUpdated: function() {
        this.resetViewRoot();
      },
      getDataParams: function(t) {
        var e = cc.prototype.getDataParams.apply(this, arguments),
          i = this.getData().tree.getNodeByDataIndex(t);
        return (e.treePathInfo = t_(i, this)), e;
      },
      defaultOption: {
        zlevel: 0,
        z: 2,
        center: ['50%', '50%'],
        radius: [0, '75%'],
        clockwise: !0,
        startAngle: 90,
        minAngle: 0,
        percentPrecision: 2,
        stillShowZeroSum: !0,
        highlightPolicy: 'descendant',
        nodeClick: 'rootToNode',
        renderLabelForZeroData: !1,
        label: {
          rotate: 'radial',
          show: !0,
          opacity: 1,
          align: 'center',
          position: 'inside',
          distance: 5,
          silent: !0,
        },
        itemStyle: {
          borderWidth: 1,
          borderColor: 'white',
          borderType: 'solid',
          shadowBlur: 0,
          shadowColor: 'rgba(0, 0, 0, 0.2)',
          shadowOffsetX: 0,
          shadowOffsetY: 0,
          opacity: 1,
        },
        highlight: {itemStyle: {opacity: 1}},
        downplay: {itemStyle: {opacity: 0.5}, label: {opacity: 0.6}},
        animationType: 'expansion',
        animationDuration: 1e3,
        animationDurationUpdate: 500,
        animationEasing: 'cubicOut',
        data: [],
        levels: [],
        sort: 'desc',
      },
      getViewRoot: function() {
        return this._viewRoot;
      },
      resetViewRoot: function(t) {
        t ? (this._viewRoot = t) : (t = this._viewRoot);
        var e = this.getRawData().tree.root;
        (t && (t === e || e.contains(t))) || (this._viewRoot = e);
      },
    });
  var QI = 'none',
    tT = 'ancestor',
    eT = 'self',
    iT = 2,
    nT = 4;
  function oT(t, e, i) {
    ki.call(this);
    var n = new Jr({z2: iT});
    n.seriesIndex = e.seriesIndex;
    var o = new jr({z2: nT, silent: t.getModel('label').get('silent')});
    function a() {
      o.ignore = o.hoverIgnore;
    }
    function r() {
      o.ignore = o.normalIgnore;
    }
    this.add(n),
      this.add(o),
      this.updateData(!0, t, 'normal', e, i),
      this.on('emphasis', a)
        .on('normal', r)
        .on('mouseover', a)
        .on('mouseout', r);
  }
  var aT = oT.prototype;
  (aT.updateData = function(t, e, i, n, o) {
    ((this.node = e).piece = this),
      (n = n || this._seriesModel),
      (o = o || this._ecModel);
    var a = this.childAt(0);
    a.dataIndex = e.dataIndex;
    var r = e.getModel(),
      s = e.getLayout(),
      l = P({}, s);
    l.label = null;
    var u = (function(t, e, i) {
      var n = t.getVisual('color'),
        o = t.getVisual('visualMeta');
      (o && 0 !== o.length) || (n = null);
      var a = t.getModel('itemStyle').get('color');
      {
        if (a) return a;
        if (n) return n;
        if (0 === t.depth) return i.option.color[0];
        var r = i.option.color.length;
        a =
          i.option.color[
            (function(t) {
              var e = t;
              for (; 1 < e.depth; ) e = e.parentNode;
              return w(t.getAncestors()[0].children, e);
            })(t) % r
          ];
      }
      return a;
    })(e, 0, o);
    !(function(t, e, i) {
      e.getData().setItemVisual(t.dataIndex, 'color', i);
    })(e, n, u);
    var h,
      c = r.getModel('itemStyle').getItemStyle();
    'normal' === i
      ? (h = c)
      : (h = m(r.getModel(i + '.itemStyle').getItemStyle(), c));
    (h = C({lineJoin: 'bevel', fill: h.fill || u}, h)),
      t
        ? (a.setShape(l),
          (a.shape.r = s.r0),
          pl(a, {shape: {r: s.r}}, n, e.dataIndex),
          a.useStyle(h))
        : ('object' == typeof h.fill && h.fill.type) ||
          ('object' == typeof a.style.fill && a.style.fill.type)
        ? (pl(a, {shape: l}, n), a.useStyle(h))
        : pl(a, {shape: l, style: h}, n),
      this._updateLabel(n, u, i);
    var d = r.getShallow('cursor');
    if ((d && a.attr('cursor', d), t)) {
      var f = n.getShallow('highlightPolicy');
      this._initEvents(a, e, n, f);
    }
    (this._seriesModel = n || this._seriesModel),
      (this._ecModel = o || this._ecModel),
      tl(this);
  }),
    (aT.onEmphasis = function(e) {
      var i = this;
      this.node.hostTree.root.eachNode(function(t) {
        t.piece &&
          (i.node === t
            ? t.piece.updateData(!1, t, 'emphasis')
            : !(function(t, e, i) {
                return (
                  i !== QI &&
                  (i === eT
                    ? t === e
                    : i === tT
                    ? t === e || t.isAncestorOf(e)
                    : t === e || t.isDescendantOf(e))
                );
              })(t, i.node, e)
            ? e !== QI && t.piece.childAt(0).trigger('downplay')
            : t.piece.childAt(0).trigger('highlight'));
      });
    }),
    (aT.onNormal = function() {
      this.node.hostTree.root.eachNode(function(t) {
        t.piece && t.piece.updateData(!1, t, 'normal');
      });
    }),
    (aT.onHighlight = function() {
      this.updateData(!1, this.node, 'highlight');
    }),
    (aT.onDownplay = function() {
      this.updateData(!1, this.node, 'downplay');
    }),
    (aT._updateLabel = function(t, e, i) {
      var n = this.node.getModel(),
        o = n.getModel('label'),
        a = 'normal' === i || 'emphasis' === i ? o : n.getModel(i + '.label'),
        r = n.getModel('emphasis.label'),
        s = Z(
          t.getFormattedLabel(this.node.dataIndex, i, null, null, 'label'),
          this.node.name,
        );
      !1 === S('show') && (s = '');
      var l = this.node.getLayout(),
        u = a.get('minAngle');
      null == u && (u = o.get('minAngle')), (u = (u / 180) * Math.PI);
      var h = l.endAngle - l.startAngle;
      null != u && Math.abs(h) < u && (s = '');
      var c = this.childAt(1);
      ol(c.style, c.hoverStyle || {}, o, r, {
        defaultText: a.getShallow('show') ? s : null,
        autoColor: e,
        useInsideStyle: !0,
      });
      var d,
        f = (l.startAngle + l.endAngle) / 2,
        p = Math.cos(f),
        g = Math.sin(f),
        m = S('position'),
        v = S('distance') || 0,
        y = S('align');
      'outside' === m
        ? ((d = l.r + v), (y = f > Math.PI / 2 ? 'right' : 'left'))
        : y && 'center' !== y
        ? 'left' === y
          ? ((d = l.r0 + v), f > Math.PI / 2 && (y = 'right'))
          : 'right' === y && ((d = l.r - v), f > Math.PI / 2 && (y = 'left'))
        : ((d = (l.r + l.r0) / 2), (y = 'center')),
        c.attr('style', {
          text: s,
          textAlign: y,
          textVerticalAlign: S('verticalAlign') || 'middle',
          opacity: S('opacity'),
        });
      var x = d * p + l.cx,
        _ = d * g + l.cy;
      c.attr('position', [x, _]);
      var w = S('rotate'),
        b = 0;
      function S(t) {
        var e = a.get(t);
        return null == e ? o.get(t) : e;
      }
      'radial' === w
        ? (b = -f) < -Math.PI / 2 && (b += Math.PI)
        : 'tangential' === w
        ? (b = Math.PI / 2 - f) > Math.PI / 2
          ? (b -= Math.PI)
          : b < -Math.PI / 2 && (b += Math.PI)
        : 'number' == typeof w && (b = (w * Math.PI) / 180),
        c.attr('rotation', b);
    }),
    (aT._initEvents = function(t, e, i, n) {
      t.off('mouseover')
        .off('mouseout')
        .off('emphasis')
        .off('normal');
      function o() {
        r.onEmphasis(n);
      }
      function a() {
        r.onNormal();
      }
      var r = this;
      i.isAnimationEnabled() &&
        t
          .on('mouseover', o)
          .on('mouseout', a)
          .on('emphasis', o)
          .on('normal', a)
          .on('downplay', function() {
            r.onDownplay();
          })
          .on('highlight', function() {
            r.onHighlight();
          });
    }),
    b(oT, ki);
  Mc.extend({
    type: 'sunburst',
    init: function() {},
    render: function(o, a, t, e) {
      var n = this;
      (this.seriesModel = o), (this.api = t), (this.ecModel = a);
      var r = o.getData(),
        s = r.tree.root,
        i = o.getViewRoot(),
        l = this.group,
        u = o.get('renderLabelForZeroData'),
        h = [];
      i.eachNode(function(t) {
        h.push(t);
      });
      var c = this._oldChildren || [];
      if (
        ((function(i, n) {
          if (0 === i.length && 0 === n.length) return;
          function t(t) {
            return t.getId();
          }
          function e(t, e) {
            !(function(t, e) {
              u || !t || t.getValue() || (t = null);
              if (t !== s && e !== s)
                if (e && e.piece)
                  t
                    ? (e.piece.updateData(!1, t, 'normal', o, a),
                      r.setItemGraphicEl(t.dataIndex, e.piece))
                    : (function(t) {
                        if (!t) return;
                        t.piece && (l.remove(t.piece), (t.piece = null));
                      })(e);
                else if (t) {
                  var i = new oT(t, o, a);
                  l.add(i), r.setItemGraphicEl(t.dataIndex, i);
                }
            })(null == t ? null : i[t], null == e ? null : n[e]);
          }
          new zf(n, i, t, t)
            .add(e)
            .update(e)
            .remove(L(e, null))
            .execute();
        })(h, c),
        (function(t, e) {
          if (0 < e.depth) {
            n.virtualPiece
              ? n.virtualPiece.updateData(!1, t, 'normal', o, a)
              : ((n.virtualPiece = new oT(t, o, a)), l.add(n.virtualPiece)),
              e.piece._onclickEvent &&
                e.piece.off('click', e.piece._onclickEvent);
            var i = function(t) {
              n._rootToNode(e.parentNode);
            };
            (e.piece._onclickEvent = i), n.virtualPiece.on('click', i);
          } else
            n.virtualPiece &&
              (l.remove(n.virtualPiece), (n.virtualPiece = null));
        })(s, i),
        e && e.highlight && e.highlight.piece)
      ) {
        var d = o.getShallow('highlightPolicy');
        e.highlight.piece.onEmphasis(d);
      } else if (e && e.unhighlight) {
        var f = this.virtualPiece;
        !f && s.children.length && (f = s.children[0].piece), f && f.onNormal();
      }
      this._initEvents(), (this._oldChildren = h);
    },
    dispose: function() {},
    _initEvents: function() {
      function t(o) {
        var a = !1;
        r.seriesModel.getViewRoot().eachNode(function(t) {
          if (!a && t.piece && t.piece.childAt(0) === o.target) {
            var e = t.getModel().get('nodeClick');
            if ('rootToNode' === e) r._rootToNode(t);
            else if ('link' === e) {
              var i = t.getModel(),
                n = i.get('link');
              if (n) yu(n, i.get('target', !0) || '_blank');
            }
            a = !0;
          }
        });
      }
      var r = this;
      this.group._onclickEvent &&
        this.group.off('click', this.group._onclickEvent),
        this.group.on('click', t),
        (this.group._onclickEvent = t);
    },
    _rootToNode: function(t) {
      t !== this.seriesModel.getViewRoot() &&
        this.api.dispatchAction({
          type: 'sunburstRootToNode',
          from: this.uid,
          seriesId: this.seriesModel.id,
          targetNode: t,
        });
    },
    containPoint: function(t, e) {
      var i = e.getData().getItemLayout(0);
      if (i) {
        var n = t[0] - i.cx,
          o = t[1] - i.cy,
          a = Math.sqrt(n * n + o * o);
        return a <= i.r && a >= i.r0;
      }
    },
  });
  var rT = 'sunburstRootToNode';
  Tf({type: rT, update: 'updateView'}, function(o, t) {
    t.eachComponent(
      {mainType: 'series', subType: 'sunburst', query: o},
      function(t, e) {
        var i = $x(o, [rT], t);
        if (i) {
          var n = t.getViewRoot();
          n && (o.direction = Qx(n, i.node) ? 'rollUp' : 'drillDown'),
            t.resetViewRoot(i.node);
        }
      },
    );
  });
  var sT = 'sunburstHighlight';
  Tf({type: sT, update: 'updateView'}, function(n, t) {
    t.eachComponent(
      {mainType: 'series', subType: 'sunburst', query: n},
      function(t, e) {
        var i = $x(n, [sT], t);
        i && (n.highlight = i.node);
      },
    );
  });
  Tf({type: 'sunburstUnhighlight', update: 'updateView'}, function(i, t) {
    t.eachComponent(
      {mainType: 'series', subType: 'sunburst', query: i},
      function(t, e) {
        i.unhighlight = !0;
      },
    );
  });
  var lT = Math.PI / 180;
  function uT(t, e) {
    if ('function' == typeof e) return t.sort(e);
    var n = 'asc' === e;
    return t.sort(function(t, e) {
      var i = (t.getValue() - e.getValue()) * (n ? 1 : -1);
      return 0 == i ? (t.dataIndex - e.dataIndex) * (n ? -1 : 1) : i;
    });
  }
  function hT(a, r) {
    return (
      (r = r || [0, 0]),
      O(
        ['x', 'y'],
        function(t, e) {
          var i = this.getAxis(t),
            n = r[e],
            o = a[e] / 2;
          return 'category' === i.type
            ? i.getBandWidth()
            : Math.abs(i.dataToCoord(n - o) - i.dataToCoord(n + o));
        },
        this,
      )
    );
  }
  Cf(L(uy, 'sunburst')),
    Df(
      L(function(t, e, C, i) {
        e.eachSeriesByType(t, function(t) {
          var e = t.get('center'),
            i = t.get('radius');
          R(i) || (i = [0, i]), R(e) || (e = [e, e]);
          var n = C.getWidth(),
            o = C.getHeight(),
            h = Math.min(n, o),
            c = Vl(e[0], n),
            d = Vl(e[1], o),
            f = Vl(i[0], h / 2),
            a = Vl(i[1], h / 2),
            r = -t.get('startAngle') * lT,
            p = t.get('minAngle') * lT,
            g = t.getData().tree.root,
            s = t.getViewRoot(),
            m = s.depth,
            l = t.get('sort');
          null != l &&
            !(function e(t, i) {
              var n = t.children || [];
              t.children = uT(n, i);
              n.length &&
                E(t.children, function(t) {
                  e(t, i);
                });
            })(s, l);
          var u = 0;
          E(s.children, function(t) {
            isNaN(t.getValue()) || u++;
          });
          var v = s.getValue(),
            y = (Math.PI / (v || u)) * 2,
            x = 0 < s.depth,
            _ = s.height - (x ? -1 : 1),
            w = (a - f) / (_ || 1),
            b = t.get('clockwise'),
            S = t.get('stillShowZeroSum'),
            M = b ? 1 : -1,
            I = function(t, e) {
              if (t) {
                var i = e;
                if (t !== g) {
                  var n = t.getValue(),
                    o = 0 === v && S ? y : n * y;
                  o < p && (o = p), (i = e + M * o);
                  var a = t.depth - m - (x ? -1 : 1),
                    r = f + w * a,
                    s = f + w * (1 + a),
                    l = t.getModel();
                  null != l.get('r0') && (r = Vl(l.get('r0'), h / 2)),
                    null != l.get('r') && (s = Vl(l.get('r'), h / 2)),
                    t.setLayout({
                      angle: o,
                      startAngle: e,
                      endAngle: i,
                      clockwise: b,
                      cx: c,
                      cy: d,
                      r0: r,
                      r: s,
                    });
                }
                if (t.children && t.children.length) {
                  var u = 0;
                  E(t.children, function(t) {
                    u += I(t, e + u);
                  });
                }
                return i - e;
              }
            };
          if (x) {
            var T = f,
              A = f + w,
              D = 2 * Math.PI;
            g.setLayout({
              angle: D,
              startAngle: r,
              endAngle: r + D,
              clockwise: b,
              cx: c,
              cy: d,
              r0: T,
              r: A,
            });
          }
          I(s, r);
        });
      }, 'sunburst'),
    ),
    If(L(my, 'sunburst'));
  function cT(a, r) {
    return (
      (r = r || [0, 0]),
      O(
        [0, 1],
        function(t) {
          var e = r[t],
            i = a[t] / 2,
            n = [],
            o = [];
          return (
            (n[t] = e - i),
            (o[t] = e + i),
            (n[1 - t] = o[1 - t] = r[1 - t]),
            Math.abs(this.dataToPoint(n)[t] - this.dataToPoint(o)[t])
          );
        },
        this,
      )
    );
  }
  function dT(t, e) {
    var i = this.getAxis(),
      n = e instanceof Array ? e[0] : e,
      o = (t instanceof Array ? t[0] : t) / 2;
    return 'category' === i.type
      ? i.getBandWidth()
      : Math.abs(i.dataToCoord(n - o) - i.dataToCoord(n + o));
  }
  function fT(s, l) {
    return O(
      ['Radius', 'Angle'],
      function(t, e) {
        var i = this['get' + t + 'Axis'](),
          n = l[e],
          o = s[e] / 2,
          a = 'dataTo' + t,
          r =
            'category' === i.type
              ? i.getBandWidth()
              : Math.abs(i[a](n - o) - i[a](n + o));
        return 'Angle' === t && (r = (r * Math.PI) / 180), r;
      },
      this,
    );
  }
  var pT = Ts,
    gT = ['itemStyle'],
    mT = ['emphasis', 'itemStyle'],
    vT = ['label'],
    yT = ['emphasis', 'label'],
    xT = 'e\0\0',
    _T = {
      cartesian2d: function(e) {
        var t = e.grid.getRect();
        return {
          coordSys: {
            type: 'cartesian2d',
            x: t.x,
            y: t.y,
            width: t.width,
            height: t.height,
          },
          api: {
            coord: function(t) {
              return e.dataToPoint(t);
            },
            size: A(hT, e),
          },
        };
      },
      geo: function(e) {
        var t = e.getBoundingRect();
        return {
          coordSys: {
            type: 'geo',
            x: t.x,
            y: t.y,
            width: t.width,
            height: t.height,
            zoom: e.getZoom(),
          },
          api: {
            coord: function(t) {
              return e.dataToPoint(t);
            },
            size: A(cT, e),
          },
        };
      },
      singleAxis: function(e) {
        var t = e.getRect();
        return {
          coordSys: {
            type: 'singleAxis',
            x: t.x,
            y: t.y,
            width: t.width,
            height: t.height,
          },
          api: {
            coord: function(t) {
              return e.dataToPoint(t);
            },
            size: A(dT, e),
          },
        };
      },
      polar: function(o) {
        var a = o.getRadiusAxis(),
          r = o.getAngleAxis(),
          t = a.getExtent();
        return (
          t[0] > t[1] && t.reverse(),
          {
            coordSys: {type: 'polar', cx: o.cx, cy: o.cy, r: t[1], r0: t[0]},
            api: {
              coord: A(function(t) {
                var e = a.dataToRadius(t[0]),
                  i = r.dataToAngle(t[1]),
                  n = o.coordToPoint([e, i]);
                return n.push(e, (i * Math.PI) / 180), n;
              }),
              size: A(fT, o),
            },
          }
        );
      },
      calendar: function(i) {
        var t = i.getRect(),
          e = i.getRangeInfo();
        return {
          coordSys: {
            type: 'calendar',
            x: t.x,
            y: t.y,
            width: t.width,
            height: t.height,
            cellWidth: i.getCellWidth(),
            cellHeight: i.getCellHeight(),
            rangeInfo: {
              start: e.start,
              end: e.end,
              weeks: e.weeks,
              dayCount: e.allDay,
            },
          },
          api: {
            coord: function(t, e) {
              return i.dataToPoint(t, e);
            },
          },
        };
      },
    };
  function wT(t, e, i, n, o) {
    null == i[t] || o || ((e[t] = i[t]), (i[t] = n[t]));
  }
  function bT(a, r, e, t) {
    var i = a.get('renderItem'),
      n = a.coordinateSystem,
      o = {};
    n &&
      (D &&
        (q(i, 'series.render is required.'),
        q(
          n.prepareCustoms || _T[n.type],
          'This coordSys does not support custom series.',
        )),
      (o = n.prepareCustoms ? n.prepareCustoms() : _T[n.type](n)));
    var s,
      l,
      u,
      h,
      c,
      d = C(
        {
          getWidth: t.getWidth,
          getHeight: t.getHeight,
          getZr: t.getZr,
          getDevicePixelRatio: t.getDevicePixelRatio,
          value: function(t, e) {
            return null == e && (e = s), r.get(r.getDimension(t || 0), e);
          },
          style: function(t, e) {
            null == e && (e = s), g(e);
            var i = l.getModel(gT).getItemStyle();
            null != c && (i.fill = c);
            var n = r.getItemVisual(e, 'opacity');
            null != n && (i.opacity = n);
            var o = t ? AT(t, u) : u;
            return (
              rl(i, o, null, {autoColor: c, isRectText: !0}),
              (i.text = o.getShallow('show')
                ? U(a.getFormattedLabel(e, 'normal'), Jg(r, e))
                : null),
              t && DT(i, t),
              i
            );
          },
          styleEmphasis: function(t, e) {
            null == e && (e = s), g(e);
            var i = l.getModel(mT).getItemStyle(),
              n = t ? AT(t, h) : h;
            return (
              rl(i, n, null, {isRectText: !0}, !0),
              (i.text = n.getShallow('show')
                ? X(
                    a.getFormattedLabel(e, 'emphasis'),
                    a.getFormattedLabel(e, 'normal'),
                    Jg(r, e),
                  )
                : null),
              t && DT(i, t),
              i
            );
          },
          visual: function(t, e) {
            return null == e && (e = s), r.getItemVisual(e, t);
          },
          barLayout: function(t) {
            if (n.getBaseAxis) {
              return (function(t) {
                var e = [],
                  i = t.axis;
                if ('category' === i.type) {
                  for (var n = i.getBandWidth(), o = 0; o < t.count; o++)
                    e.push(
                      C({bandWidth: n, axisKey: 'axis0', stackId: Rp + o}, t),
                    );
                  var a = Wp(e),
                    r = [];
                  for (o = 0; o < t.count; o++) {
                    var s = a.axis0[Rp + o];
                    (s.offsetCenter = s.offset + s.width / 2), r.push(s);
                  }
                  return r;
                }
              })(C({axis: n.getBaseAxis()}, t));
            }
          },
          currentSeriesIndices: function() {
            return e.getCurrentSeriesIndices();
          },
          font: function(t) {
            return dl(t, e);
          },
        },
        o.api || {},
      ),
      f = {
        context: {},
        seriesId: a.id,
        seriesName: a.name,
        seriesIndex: a.seriesIndex,
        coordSys: o.coordSys,
        dataInsideLength: r.count(),
        encode: (function(o) {
          var a = {};
          return (
            E(o.dimensions, function(t, e) {
              var i = o.getDimensionInfo(t);
              if (!i.isExtraCoord) {
                var n = i.coordDim;
                (a[n] = a[n] || [])[i.coordDimIndex] = e;
              }
            }),
            a
          );
        })(a.getData()),
      },
      p = !0;
    return function(t, e) {
      return (
        (s = t),
        (p = !0),
        i &&
          i(
            C(
              {
                dataIndexInside: t,
                dataIndex: r.getRawIndex(t),
                actionType: e ? e.type : null,
              },
              f,
            ),
            d,
          )
      );
    };
    function g(t) {
      null == t && (t = s),
        p &&
          ((l = r.getItemModel(t)),
          (u = l.getModel(vT)),
          (h = l.getModel(yT)),
          (c = r.getItemVisual(t, 'color')),
          (p = !1));
    }
  }
  function ST(t, e, i, n, o, a) {
    return (t = MT(t, e, i, n, o, a, !0)) && a.setItemGraphicEl(e, t), t;
  }
  function MT(t, e, i, n, o, a, r) {
    var s = !i,
      l = (i = i || {}).type,
      u = i.shape,
      h = i.style;
    if (
      (t &&
        (s ||
          (null != l && l !== t.__customGraphicType) ||
          ('path' === l &&
            (function(t) {
              return (
                t && (t.hasOwnProperty('pathData') || t.hasOwnProperty('d'))
              );
            })(u) &&
            LT(u) !== t.__customPathData) ||
          ('image' === l &&
            kT(h, 'image') &&
            h.image !== t.__customImagePath) ||
          ('text' === l && kT(u, 'text') && h.text !== t.__customText)) &&
        (o.remove(t), (t = null)),
      !s)
    ) {
      var c = !t;
      return (
        (function(e, t, i, n, o, a, r) {
          var s = {},
            l = i.style || {};
          if (
            (i.shape && (s.shape = k(i.shape)),
            i.position && (s.position = i.position.slice()),
            i.scale && (s.scale = i.scale.slice()),
            i.origin && (s.origin = i.origin.slice()),
            i.rotation && (s.rotation = i.rotation),
            'image' === e.type && i.style)
          ) {
            var u = (s.style = {});
            E(['x', 'y', 'width', 'height'], function(t) {
              wT(t, u, l, e.style, a);
            });
          }
          if ('text' === e.type && i.style) {
            u = s.style = {};
            E(['x', 'y'], function(t) {
              wT(t, u, l, e.style, a);
            }),
              !l.hasOwnProperty('textFill') && l.fill && (l.textFill = l.fill),
              !l.hasOwnProperty('textStroke') &&
                l.stroke &&
                (l.textStroke = l.stroke);
          }
          if ('group' !== e.type && (e.useStyle(l), a)) {
            e.style.opacity = 0;
            var h = l.opacity;
            null == h && (h = 1), gl(e, {style: {opacity: h}}, n, t);
          }
          a ? e.attr(s) : pl(e, s, n, t),
            i.hasOwnProperty('z2') && e.attr('z2', i.z2 || 0),
            i.hasOwnProperty('silent') && e.attr('silent', i.silent),
            i.hasOwnProperty('invisible') && e.attr('invisible', i.invisible),
            i.hasOwnProperty('ignore') && e.attr('ignore', i.ignore),
            i.hasOwnProperty('info') && e.attr('info', i.info);
          var c = i.styleEmphasis;
          js(e, c), r && el(e, !1 !== c);
        })(
          (t =
            t ||
            (function(t) {
              var e,
                i = t.type;
              if ('path' === i) {
                var n = t.shape,
                  o =
                    null != n.width && null != n.height
                      ? {
                          x: n.x || 0,
                          y: n.y || 0,
                          width: n.width,
                          height: n.height,
                        }
                      : null,
                  a = LT(n);
                (e = Es(a, null, o, n.layout || 'center')).__customPathData = a;
              } else if ('image' === i)
                (e = new eo({})).__customImagePath = t.style.image;
              else if ('text' === i)
                (e = new jr({})).__customText = t.style.text;
              else if ('group' === i) e = new ki();
              else {
                if ('compoundPath' === i)
                  throw new Error('"compoundPath" is not supported yet.');
                var r = Os(i);
                D && q(r, 'graphic type "' + i + '" can not be found.'),
                  (e = new r());
              }
              return (e.__customGraphicType = i), (e.name = t.name), e;
            })(i)),
          e,
          i,
          n,
          0,
          c,
          r,
        ),
        'group' === l &&
          (function(t, e, i, n, o) {
            var a = i.children,
              r = a ? a.length : 0,
              s = i.$mergeChildren,
              l = 'byName' === s || i.diffChildrenByName,
              u = !1 === s;
            if (!r && !l && !u) return;
            if (l)
              return (function(t) {
                new zf(t.oldChildren, t.newChildren, IT, IT, t)
                  .add(TT)
                  .update(TT)
                  .remove(CT)
                  .execute();
              })({
                oldChildren: t.children() || [],
                newChildren: a || [],
                dataIndex: e,
                animatableModel: n,
                group: t,
                data: o,
              });
            u && t.removeAll();
            for (var h = 0; h < r; h++)
              a[h] && MT(t.childAt(h), e, a[h], n, t, o);
            D &&
              q(
                !u || t.childCount() === h,
                'MUST NOT contain empty item in children array when `group.$mergeChildren` is `false`.',
              );
          })(t, e, i, n, a),
        o.add(t),
        t
      );
    }
  }
  function IT(t, e) {
    var i = t && t.name;
    return null != i ? i : xT + e;
  }
  function TT(t, e) {
    var i = this.context,
      n = null != t ? i.newChildren[t] : null;
    MT(
      null != e ? i.oldChildren[e] : null,
      i.dataIndex,
      n,
      i.animatableModel,
      i.group,
      i.data,
    );
  }
  function AT(i, t) {
    var n = new Pl({}, t);
    return (
      E(pT, function(t, e) {
        i.hasOwnProperty(t) && (n.option[e] = i[t]);
      }),
      n
    );
  }
  function DT(t, e) {
    for (var i in e)
      (!e.hasOwnProperty(i) && pT.hasOwnProperty(i)) || (t[i] = e[i]);
  }
  function CT(t) {
    var e = this.context,
      i = e.oldChildren[t];
    i && e.group.remove(i);
  }
  function LT(t) {
    return t && (t.pathData || t.d);
  }
  function kT(t, e) {
    return t && t.hasOwnProperty(e);
  }
  function PT(t) {
    return t.get('stack') || '__ec_stack_' + t.seriesIndex;
  }
  function NT(t, e) {
    return e.dim + t.model.componentIndex;
  }
  function OT(t, e) {
    Yg.call(this, 'radius', t, e), (this.type = 'category');
  }
  cc.extend({
    type: 'series.custom',
    dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],
    defaultOption: {
      coordinateSystem: 'cartesian2d',
      zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      useTransform: !0,
      clip: !1,
    },
    getInitialData: function(t, e) {
      return bp(this.getSource(), this);
    },
    getDataParams: function(t, e, i) {
      var n = cc.prototype.getDataParams.apply(this, arguments);
      return i && (n.info = i.info), n;
    },
  }),
    Mc.extend({
      type: 'custom',
      _data: null,
      render: function(i, t, e, n) {
        var o = this._data,
          a = i.getData(),
          r = this.group,
          s = bT(i, a, t, e);
        a.diff(o)
          .add(function(t) {
            ST(null, t, s(t, n), i, r, a);
          })
          .update(function(t, e) {
            ST(o.getItemGraphicEl(e), t, s(t, n), i, r, a);
          })
          .remove(function(t) {
            var e = o.getItemGraphicEl(t);
            e && r.remove(e);
          })
          .execute();
        var l = i.get('clip', !0) ? Lm(i.coordinateSystem, !1, i) : null;
        l ? r.setClipPath(l) : r.removeClipPath(), (this._data = a);
      },
      incrementalPrepareRender: function(t, e, i) {
        this.group.removeAll(), (this._data = null);
      },
      incrementalRender: function(t, e, i, n, o) {
        var a = e.getData(),
          r = bT(e, a, i, n);
        function s(t) {
          t.isGroup || ((t.incremental = !0), (t.useHoverLayer = !0));
        }
        for (var l = t.start; l < t.end; l++) {
          ST(null, l, r(l, o), e, this.group, a).traverse(s);
        }
      },
      dispose: nt,
      filterForExposedEvent: function(t, e, i, n) {
        var o = e.element;
        if (null == o || i.name === o) return !0;
        for (; (i = i.parent) && i !== this.group; )
          if (i.name === o) return !0;
        return !1;
      },
    }),
    (OT.prototype = {
      constructor: OT,
      pointToData: function(t, e) {
        return this.polar.pointToData(t, e)['radius' === this.dim ? 0 : 1];
      },
      dataToRadius: Yg.prototype.dataToCoord,
      radiusToData: Yg.prototype.coordToData,
    }),
    b(OT, Yg);
  var ET = $o();
  function RT(t, e) {
    (e = e || [0, 360]), Yg.call(this, 'angle', t, e), (this.type = 'category');
  }
  (RT.prototype = {
    constructor: RT,
    pointToData: function(t, e) {
      return this.polar.pointToData(t, e)['radius' === this.dim ? 0 : 1];
    },
    dataToAngle: Yg.prototype.dataToCoord,
    angleToData: Yg.prototype.coordToData,
    calculateCategoryInterval: function() {
      var t = this.getLabelModel(),
        e = this.scale,
        i = e.getExtent(),
        n = e.count();
      if (i[1] - i[0] < 1) return 0;
      var o = i[0],
        a = this.dataToCoord(o + 1) - this.dataToCoord(o),
        r = Math.abs(a),
        s = vn(o, t.getFont(), 'center', 'top'),
        l = Math.max(s.height, 7) / r;
      isNaN(l) && (l = 1 / 0);
      var u = Math.max(0, Math.floor(l)),
        h = ET(this.model),
        c = h.lastAutoInterval,
        d = h.lastTickCount;
      return (
        null != c &&
        null != d &&
        Math.abs(c - u) <= 1 &&
        Math.abs(d - n) <= 1 &&
        u < c
          ? (u = c)
          : ((h.lastTickCount = n), (h.lastAutoInterval = u)),
        u
      );
    },
  }),
    b(RT, Yg);
  function zT(t) {
    (this.name = t || ''),
      (this.cx = 0),
      (this.cy = 0),
      (this._radiusAxis = new OT()),
      (this._angleAxis = new RT()),
      (this._radiusAxis.polar = this._angleAxis.polar = this);
  }
  zT.prototype = {
    type: 'polar',
    axisPointerEnabled: !0,
    constructor: zT,
    dimensions: ['radius', 'angle'],
    model: null,
    containPoint: function(t) {
      var e = this.pointToCoord(t);
      return this._radiusAxis.contain(e[0]) && this._angleAxis.contain(e[1]);
    },
    containData: function(t) {
      return (
        this._radiusAxis.containData(t[0]) && this._angleAxis.containData(t[1])
      );
    },
    getAxis: function(t) {
      return this['_' + t + 'Axis'];
    },
    getAxes: function() {
      return [this._radiusAxis, this._angleAxis];
    },
    getAxesByScale: function(t) {
      var e = [],
        i = this._angleAxis,
        n = this._radiusAxis;
      return (
        i.scale.type === t && e.push(i), n.scale.type === t && e.push(n), e
      );
    },
    getAngleAxis: function() {
      return this._angleAxis;
    },
    getRadiusAxis: function() {
      return this._radiusAxis;
    },
    getOtherAxis: function(t) {
      var e = this._angleAxis;
      return t === e ? this._radiusAxis : e;
    },
    getBaseAxis: function() {
      return (
        this.getAxesByScale('ordinal')[0] ||
        this.getAxesByScale('time')[0] ||
        this.getAngleAxis()
      );
    },
    getTooltipAxes: function(t) {
      var e = null != t && 'auto' !== t ? this.getAxis(t) : this.getBaseAxis();
      return {baseAxes: [e], otherAxes: [this.getOtherAxis(e)]};
    },
    dataToPoint: function(t, e) {
      return this.coordToPoint([
        this._radiusAxis.dataToRadius(t[0], e),
        this._angleAxis.dataToAngle(t[1], e),
      ]);
    },
    pointToData: function(t, e) {
      var i = this.pointToCoord(t);
      return [
        this._radiusAxis.radiusToData(i[0], e),
        this._angleAxis.angleToData(i[1], e),
      ];
    },
    pointToCoord: function(t) {
      var e = t[0] - this.cx,
        i = t[1] - this.cy,
        n = this.getAngleAxis(),
        o = n.getExtent(),
        a = Math.min(o[0], o[1]),
        r = Math.max(o[0], o[1]);
      n.inverse ? (a = r - 360) : (r = a + 360);
      var s = Math.sqrt(e * e + i * i);
      (e /= s), (i /= s);
      for (
        var l = (Math.atan2(-i, e) / Math.PI) * 180, u = l < a ? 1 : -1;
        l < a || r < l;

      )
        l += 360 * u;
      return [s, l];
    },
    coordToPoint: function(t) {
      var e = t[0],
        i = (t[1] / 180) * Math.PI;
      return [Math.cos(i) * e + this.cx, -Math.sin(i) * e + this.cy];
    },
    getArea: function() {
      var t = this.getAngleAxis(),
        e = this.getRadiusAxis()
          .getExtent()
          .slice();
      e[0] > e[1] && e.reverse();
      var i = t.getExtent(),
        n = Math.PI / 180;
      return {
        cx: this.cx,
        cy: this.cy,
        r0: e[0],
        r: e[1],
        startAngle: -i[0] * n,
        endAngle: -i[1] * n,
        clockwise: t.inverse,
        contain: function(t, e) {
          var i = t - this.cx,
            n = e - this.cy,
            o = i * i + n * n,
            a = this.r,
            r = this.r0;
          return o <= a * a && r * r <= o;
        },
      };
    },
  };
  var BT = Ou.extend({
    type: 'polarAxis',
    axis: null,
    getCoordSysModel: function() {
      return this.ecModel.queryComponents({
        mainType: 'polar',
        index: this.option.polarIndex,
        id: this.option.polarId,
      })[0];
    },
  });
  m(BT.prototype, xg);
  var VT = {splitNumber: 5};
  function GT(t, e) {
    return e.type || (e.data ? 'category' : 'value');
  }
  function FT(t, e) {
    var i = this,
      n = i.getAngleAxis(),
      o = i.getRadiusAxis();
    if (
      (n.scale.setExtent(1 / 0, -1 / 0),
      o.scale.setExtent(1 / 0, -1 / 0),
      t.eachSeries(function(t) {
        if (t.coordinateSystem === i) {
          var e = t.getData();
          E(e.mapDimension('radius', !0), function(t) {
            o.scale.unionExtentFromData(e, wp(e, t));
          }),
            E(e.mapDimension('angle', !0), function(t) {
              n.scale.unionExtentFromData(e, wp(e, t));
            });
        }
      }),
      fg(n.scale, n.model),
      fg(o.scale, o.model),
      'category' === n.type && !n.onBand)
    ) {
      var a = n.getExtent(),
        r = 360 / n.scale.count();
      n.inverse ? (a[1] += r) : (a[1] -= r), n.setExtent(a[0], a[1]);
    }
  }
  function WT(t, e) {
    if (
      ((t.type = e.get('type')),
      (t.scale = pg(e)),
      (t.onBand = e.get('boundaryGap') && 'category' === t.type),
      (t.inverse = e.get('inverse')),
      'angleAxis' === e.mainType)
    ) {
      t.inverse ^= e.get('clockwise');
      var i = e.get('startAngle');
      t.setExtent(i, i + (t.inverse ? -360 : 360));
    }
    (e.axis = t).model = e;
  }
  Ym('angle', BT, GT, {
    startAngle: 90,
    clockwise: !0,
    splitNumber: 12,
    axisLabel: {rotate: !1},
  }),
    Ym('radius', BT, GT, VT),
    Pf({
      type: 'polar',
      dependencies: ['polarAxis', 'angleAxis'],
      coordinateSystem: null,
      findAxisModel: function(t) {
        var e;
        return (
          this.ecModel.eachComponent(
            t,
            function(t) {
              t.getCoordSysModel() === this && (e = t);
            },
            this,
          ),
          e
        );
      },
      defaultOption: {zlevel: 0, z: 0, center: ['50%', '50%'], radius: '80%'},
    }),
    dh.register('polar', {
      dimensions: zT.prototype.dimensions,
      create: function(i, s) {
        var l = [];
        return (
          i.eachComponent('polar', function(t, e) {
            var i = new zT(e);
            i.update = FT;
            var n = i.getRadiusAxis(),
              o = i.getAngleAxis(),
              a = t.findAxisModel('radiusAxis'),
              r = t.findAxisModel('angleAxis');
            WT(n, a),
              WT(o, r),
              (function(t, e, i) {
                var n = e.get('center'),
                  o = i.getWidth(),
                  a = i.getHeight();
                (t.cx = Vl(n[0], o)), (t.cy = Vl(n[1], a));
                var r = t.getRadiusAxis(),
                  s = Math.min(o, a) / 2,
                  l = e.get('radius');
                null == l ? (l = [0, '100%']) : R(l) || (l = [0, l]),
                  (l = [Vl(l[0], s), Vl(l[1], s)]),
                  r.inverse ? r.setExtent(l[1], l[0]) : r.setExtent(l[0], l[1]);
              })(i, t, s),
              l.push(i),
              ((t.coordinateSystem = i).model = t);
          }),
          i.eachSeries(function(t) {
            if ('polar' === t.get('coordinateSystem')) {
              var e = i.queryComponents({
                mainType: 'polar',
                index: t.get('polarIndex'),
                id: t.get('polarId'),
              })[0];
              if (D && !e)
                throw new Error(
                  'Polar "' +
                    Z(t.get('polarIndex'), t.get('polarId'), 0) +
                    '" not found',
                );
              t.coordinateSystem = e.coordinateSystem;
            }
          }),
          l
        );
      },
    });
  var HT = [
    'axisLine',
    'axisLabel',
    'axisTick',
    'minorTick',
    'splitLine',
    'minorSplitLine',
    'splitArea',
  ];
  function ZT(t, e, i) {
    e[1] > e[0] && (e = e.slice().reverse());
    var n = t.coordToPoint([e[0], i]),
      o = t.coordToPoint([e[1], i]);
    return {x1: n[0], y1: n[1], x2: o[0], y2: o[1]};
  }
  function UT(t) {
    return t.getRadiusAxis().inverse ? 0 : 1;
  }
  function XT(t) {
    var e = t[0],
      i = t[t.length - 1];
    e && i && Math.abs(Math.abs(e.coord - i.coord) - 360) < 1e-4 && t.pop();
  }
  Sv.extend({
    type: 'angleAxis',
    axisPointerClass: 'PolarAxisPointer',
    render: function(e, t) {
      if ((this.group.removeAll(), e.get('show'))) {
        var i = e.axis,
          n = i.polar,
          o = n.getRadiusAxis().getExtent(),
          a = i.getTicksCoords(),
          r = i.getMinorTicksCoords(),
          s = O(i.getViewLabels(), function(t) {
            return ((t = k(t)).coord = i.dataToCoord(t.tickValue)), t;
          });
        XT(s),
          XT(a),
          E(
            HT,
            function(t) {
              !e.get(t + '.show') ||
                (i.scale.isBlank() && 'axisLine' !== t) ||
                this['_' + t](e, n, a, r, o, s);
            },
            this,
          );
      }
    },
    _axisLine: function(t, e, i, n, o) {
      var a,
        r = t.getModel('axisLine.lineStyle'),
        s = UT(e),
        l = s ? 0 : 1;
      ((a =
        0 === o[l]
          ? new Kr({
              shape: {cx: e.cx, cy: e.cy, r: o[s]},
              style: r.getLineStyle(),
              z2: 1,
              silent: !0,
            })
          : new Qr({
              shape: {cx: e.cx, cy: e.cy, r: o[s], r0: o[l]},
              style: r.getLineStyle(),
              z2: 1,
              silent: !0,
            })).style.fill = null),
        this.group.add(a);
    },
    _axisTick: function(t, e, i, n, o) {
      var a = t.getModel('axisTick'),
        r = (a.get('inside') ? -1 : 1) * a.get('length'),
        s = o[UT(e)],
        l = O(i, function(t) {
          return new cs({shape: ZT(e, [s, s + r], t.coord)});
        });
      this.group.add(
        Bs(l, {
          style: C(a.getModel('lineStyle').getLineStyle(), {
            stroke: t.get('axisLine.lineStyle.color'),
          }),
        }),
      );
    },
    _minorTick: function(t, e, i, n, o) {
      if (n.length) {
        for (
          var a = t.getModel('axisTick'),
            r = t.getModel('minorTick'),
            s = (a.get('inside') ? -1 : 1) * r.get('length'),
            l = o[UT(e)],
            u = [],
            h = 0;
          h < n.length;
          h++
        )
          for (var c = 0; c < n[h].length; c++)
            u.push(new cs({shape: ZT(e, [l, l + s], n[h][c].coord)}));
        this.group.add(
          Bs(u, {
            style: C(
              r.getModel('lineStyle').getLineStyle(),
              C(a.getLineStyle(), {stroke: t.get('axisLine.lineStyle.color')}),
            ),
          }),
        );
      }
    },
    _axisLabel: function(c, d, t, e, f, i) {
      var p = c.getCategories(!0),
        g = c.getModel('axisLabel'),
        m = g.get('margin'),
        v = c.get('triggerEvent');
      E(
        i,
        function(t, e) {
          var i = g,
            n = t.tickValue,
            o = f[UT(d)],
            a = d.coordToPoint([o + m, t.coord]),
            r = d.cx,
            s = d.cy,
            l =
              Math.abs(a[0] - r) / o < 0.3
                ? 'center'
                : a[0] > r
                ? 'left'
                : 'right',
            u =
              Math.abs(a[1] - s) / o < 0.3
                ? 'middle'
                : a[1] > s
                ? 'top'
                : 'bottom';
          p &&
            p[n] &&
            p[n].textStyle &&
            (i = new Pl(p[n].textStyle, g, g.ecModel));
          var h = new jr({silent: rv.isLabelSilent(c)});
          this.group.add(h),
            rl(h.style, i, {
              x: a[0],
              y: a[1],
              textFill: i.getTextColor() || c.get('axisLine.lineStyle.color'),
              text: t.formattedLabel,
              textAlign: l,
              textVerticalAlign: u,
            }),
            v &&
              ((h.eventData = rv.makeAxisEventDataBase(c)),
              (h.eventData.targetType = 'axisLabel'),
              (h.eventData.value = t.rawLabel));
        },
        this,
      );
    },
    _splitLine: function(t, e, i, n, o) {
      var a = t.getModel('splitLine').getModel('lineStyle'),
        r = a.get('color'),
        s = 0;
      r = r instanceof Array ? r : [r];
      for (var l = [], u = 0; u < i.length; u++) {
        var h = s++ % r.length;
        (l[h] = l[h] || []), l[h].push(new cs({shape: ZT(e, o, i[u].coord)}));
      }
      for (u = 0; u < l.length; u++)
        this.group.add(
          Bs(l[u], {
            style: C({stroke: r[u % r.length]}, a.getLineStyle()),
            silent: !0,
            z: t.get('z'),
          }),
        );
    },
    _minorSplitLine: function(t, e, i, n, o) {
      if (n.length) {
        for (
          var a = t.getModel('minorSplitLine').getModel('lineStyle'),
            r = [],
            s = 0;
          s < n.length;
          s++
        )
          for (var l = 0; l < n[s].length; l++)
            r.push(new cs({shape: ZT(e, o, n[s][l].coord)}));
        this.group.add(
          Bs(r, {style: a.getLineStyle(), silent: !0, z: t.get('z')}),
        );
      }
    },
    _splitArea: function(t, e, i, n, o) {
      if (i.length) {
        var a = t.getModel('splitArea').getModel('areaStyle'),
          r = a.get('color'),
          s = 0;
        r = r instanceof Array ? r : [r];
        for (
          var l = [],
            u = Math.PI / 180,
            h = -i[0].coord * u,
            c = Math.min(o[0], o[1]),
            d = Math.max(o[0], o[1]),
            f = t.get('clockwise'),
            p = 1;
          p < i.length;
          p++
        ) {
          var g = s++ % r.length;
          (l[g] = l[g] || []),
            l[g].push(
              new Jr({
                shape: {
                  cx: e.cx,
                  cy: e.cy,
                  r0: c,
                  r: d,
                  startAngle: h,
                  endAngle: -i[p].coord * u,
                  clockwise: f,
                },
                silent: !0,
              }),
            ),
            (h = -i[p].coord * u);
        }
        for (p = 0; p < l.length; p++)
          this.group.add(
            Bs(l[p], {
              style: C({fill: r[p % r.length]}, a.getAreaStyle()),
              silent: !0,
            }),
          );
      }
    },
  });
  var YT = ['axisLine', 'axisTickLabel', 'axisName'],
    jT = ['splitLine', 'splitArea', 'minorSplitLine'];
  Sv.extend({
    type: 'radiusAxis',
    axisPointerClass: 'PolarAxisPointer',
    render: function(e, t) {
      if ((this.group.removeAll(), e.get('show'))) {
        var i = e.axis,
          n = i.polar,
          o = n.getAngleAxis(),
          a = i.getTicksCoords(),
          r = i.getMinorTicksCoords(),
          s = o.getExtent()[0],
          l = i.getExtent(),
          u = (function(t, e, i) {
            return {
              position: [t.cx, t.cy],
              rotation: (i / 180) * Math.PI,
              labelDirection: -1,
              tickDirection: -1,
              nameDirection: 1,
              labelRotate: e.getModel('axisLabel').get('rotate'),
              z2: 1,
            };
          })(n, e, s),
          h = new rv(e, u);
        E(YT, h.add, h),
          this.group.add(h.getGroup()),
          E(
            jT,
            function(t) {
              e.get(t + '.show') &&
                !i.scale.isBlank() &&
                this['_' + t](e, n, s, l, a, r);
            },
            this,
          );
      }
    },
    _splitLine: function(t, e, i, n, o) {
      var a = t.getModel('splitLine').getModel('lineStyle'),
        r = a.get('color'),
        s = 0;
      r = r instanceof Array ? r : [r];
      for (var l = [], u = 0; u < o.length; u++) {
        var h = s++ % r.length;
        (l[h] = l[h] || []),
          l[h].push(new Kr({shape: {cx: e.cx, cy: e.cy, r: o[u].coord}}));
      }
      for (u = 0; u < l.length; u++)
        this.group.add(
          Bs(l[u], {
            style: C({stroke: r[u % r.length], fill: null}, a.getLineStyle()),
            silent: !0,
          }),
        );
    },
    _minorSplitLine: function(t, e, i, n, o, a) {
      if (a.length) {
        for (
          var r = t.getModel('minorSplitLine').getModel('lineStyle'),
            s = [],
            l = 0;
          l < a.length;
          l++
        )
          for (var u = 0; u < a[l].length; u++)
            s.push(new Kr({shape: {cx: e.cx, cy: e.cy, r: a[l][u].coord}}));
        this.group.add(
          Bs(s, {style: C({fill: null}, r.getLineStyle()), silent: !0}),
        );
      }
    },
    _splitArea: function(t, e, i, n, o) {
      if (o.length) {
        var a = t.getModel('splitArea').getModel('areaStyle'),
          r = a.get('color'),
          s = 0;
        r = r instanceof Array ? r : [r];
        for (var l = [], u = o[0].coord, h = 1; h < o.length; h++) {
          var c = s++ % r.length;
          (l[c] = l[c] || []),
            l[c].push(
              new Jr({
                shape: {
                  cx: e.cx,
                  cy: e.cy,
                  r0: u,
                  r: o[h].coord,
                  startAngle: 0,
                  endAngle: 2 * Math.PI,
                },
                silent: !0,
              }),
            ),
            (u = o[h].coord);
        }
        for (h = 0; h < l.length; h++)
          this.group.add(
            Bs(l[h], {
              style: C({fill: r[h % r.length]}, a.getAreaStyle()),
              silent: !0,
            }),
          );
      }
    },
  });
  var qT = DI.extend({
    makeElOption: function(t, e, i, n, o) {
      var a = i.axis;
      'angle' === a.dim && (this.animationThreshold = Math.PI / 18);
      var r,
        s = a.polar,
        l = s.getOtherAxis(a).getExtent();
      r = a['dataTo' + mu(a.dim)](e);
      var u = n.get('type');
      if (u && 'none' !== u) {
        var h = NI(n),
          c = KT[u](a, s, r, l, h);
        (c.style = h), (t.graphicKey = c.type), (t.pointer = c);
      }
      var d = n.get('label.margin');
      OI(
        t,
        i,
        n,
        o,
        (function(t, e, i, n, o) {
          var a = e.axis,
            r = a.dataToCoord(t),
            s = n.getAngleAxis().getExtent()[0];
          s = (s / 180) * Math.PI;
          var l,
            u,
            h,
            c = n.getRadiusAxis().getExtent();
          if ('radius' === a.dim) {
            var d = se();
            de(d, d, s), ce(d, d, [n.cx, n.cy]), (l = vl([r, -o], d));
            var f = e.getModel('axisLabel').get('rotate') || 0,
              p = rv.innerTextLayout(s, (f * Math.PI) / 180, -1);
            (u = p.textAlign), (h = p.textVerticalAlign);
          } else {
            var g = c[1];
            l = n.coordToPoint([g + o, r]);
            var m = n.cx,
              v = n.cy;
            (u =
              Math.abs(l[0] - m) / g < 0.3
                ? 'center'
                : l[0] > m
                ? 'left'
                : 'right'),
              (h =
                Math.abs(l[1] - v) / g < 0.3
                  ? 'middle'
                  : l[1] > v
                  ? 'top'
                  : 'bottom');
          }
          return {position: l, align: u, verticalAlign: h};
        })(e, i, 0, s, d),
      );
    },
  });
  var KT = {
    line: function(t, e, i, n, o) {
      return 'angle' === t.dim
        ? {
            type: 'Line',
            shape: BI(e.coordToPoint([n[0], i]), e.coordToPoint([n[1], i])),
          }
        : {type: 'Circle', shape: {cx: e.cx, cy: e.cy, r: i}};
    },
    shadow: function(t, e, i, n, o) {
      var a = Math.max(1, t.getBandWidth()),
        r = Math.PI / 180;
      return 'angle' === t.dim
        ? {
            type: 'Sector',
            shape: GI(
              e.cx,
              e.cy,
              n[0],
              n[1],
              (-i - a / 2) * r,
              (a / 2 - i) * r,
            ),
          }
        : {
            type: 'Sector',
            shape: GI(e.cx, e.cy, i - a / 2, i + a / 2, 0, 2 * Math.PI),
          };
    },
  };
  function $T(n, t) {
    (t.update = 'updateView'),
      Tf(t, function(t, e) {
        var i = {};
        return (
          e.eachComponent({mainType: 'geo', query: t}, function(e) {
            e[n](t.name),
              E(e.coordinateSystem.regions, function(t) {
                i[t.name] = e.isSelected(t.name) || !1;
              });
          }),
          {selected: i, name: t.name}
        );
      });
  }
  Sv.registerAxisPointerClass('PolarAxisPointer', qT),
    Df(
      L(function(t, e, i) {
        var N = {},
          O = (function(t) {
            var g = {};
            E(t, function(t, e) {
              var i = t.getData(),
                n = t.coordinateSystem,
                o = n.getBaseAxis(),
                a = NT(n, o),
                r = o.getExtent(),
                s =
                  'category' === o.type
                    ? o.getBandWidth()
                    : Math.abs(r[1] - r[0]) / i.count(),
                l = g[a] || {
                  bandWidth: s,
                  remainedWidth: s,
                  autoWidthCount: 0,
                  categoryGap: '20%',
                  gap: '30%',
                  stacks: {},
                },
                u = l.stacks;
              g[a] = l;
              var h = PT(t);
              u[h] || l.autoWidthCount++,
                (u[h] = u[h] || {width: 0, maxWidth: 0});
              var c = Vl(t.get('barWidth'), s),
                d = Vl(t.get('barMaxWidth'), s),
                f = t.get('barGap'),
                p = t.get('barCategoryGap');
              c &&
                !u[h].width &&
                ((c = Math.min(l.remainedWidth, c)),
                (u[h].width = c),
                (l.remainedWidth -= c)),
                d && (u[h].maxWidth = d),
                null != f && (l.gap = f),
                null != p && (l.categoryGap = p);
            });
            var d = {};
            return (
              E(g, function(t, i) {
                d[i] = {};
                var e = t.stacks,
                  n = t.bandWidth,
                  o = Vl(t.categoryGap, n),
                  a = Vl(t.gap, 1),
                  r = t.remainedWidth,
                  s = t.autoWidthCount,
                  l = (r - o) / (s + (s - 1) * a);
                (l = Math.max(l, 0)),
                  E(e, function(t, e) {
                    var i = t.maxWidth;
                    i &&
                      i < l &&
                      ((i = Math.min(i, r)),
                      t.width && (i = Math.min(i, t.width)),
                      (r -= i),
                      (t.width = i),
                      s--);
                  }),
                  (l = (r - o) / (s + (s - 1) * a)),
                  (l = Math.max(l, 0));
                var u,
                  h = 0;
                E(e, function(t, e) {
                  t.width || (t.width = l), (h += (u = t).width * (1 + a));
                }),
                  u && (h -= u.width * a);
                var c = -h / 2;
                E(e, function(t, e) {
                  (d[i][e] = d[i][e] || {offset: c, width: t.width}),
                    (c += t.width * (1 + a));
                });
              }),
              d
            );
          })(
            I(e.getSeriesByType(t), function(t) {
              return (
                !e.isSeriesFiltered(t) &&
                t.coordinateSystem &&
                'polar' === t.coordinateSystem.type
              );
            }),
          );
        e.eachSeriesByType(
          t,
          function(t) {
            if ('polar' === t.coordinateSystem.type) {
              var e = t.getData(),
                i = t.coordinateSystem,
                n = i.getBaseAxis(),
                o = NT(i, n),
                a = PT(t),
                r = O[o][a],
                s = r.offset,
                l = r.width,
                u = i.getOtherAxis(n),
                h = t.coordinateSystem.cx,
                c = t.coordinateSystem.cy,
                d = t.get('barMinHeight') || 0,
                f = t.get('barMinAngle') || 0;
              N[a] = N[a] || [];
              for (
                var p = e.mapDimension(u.dim),
                  g = e.mapDimension(n.dim),
                  m = _p(e, p),
                  v = 'radius' !== n.dim || !t.get('roundCap', !0),
                  y = u.getExtent()[0],
                  x = 0,
                  _ = e.count();
                x < _;
                x++
              ) {
                var w,
                  b,
                  S,
                  M,
                  I = e.get(p, x),
                  T = e.get(g, x),
                  A = 0 <= I ? 'p' : 'n',
                  D = y;
                if (
                  (m && (N[a][T] || (N[a][T] = {p: y, n: y}), (D = N[a][T][A])),
                  'radius' === u.dim)
                ) {
                  var C = u.dataToRadius(I) - y,
                    L = n.dataToAngle(T);
                  Math.abs(C) < d && (C = (C < 0 ? -1 : 1) * d),
                    (b = (w = D) + C),
                    (M = (S = L - s) - l),
                    m && (N[a][T][A] = b);
                } else {
                  var k = u.dataToAngle(I, v) - y,
                    P = n.dataToRadius(T);
                  Math.abs(k) < f && (k = (k < 0 ? -1 : 1) * f),
                    (b = (w = P + s) + l),
                    (M = (S = D) + k),
                    m && (N[a][T][A] = M);
                }
                e.setItemLayout(x, {
                  cx: h,
                  cy: c,
                  r0: w,
                  r: b,
                  startAngle: (-S * Math.PI) / 180,
                  endAngle: (-M * Math.PI) / 180,
                });
              }
            }
          },
          this,
        );
      }, 'bar'),
    ),
    Nf({type: 'polar'}),
    S(
      Ou.extend({
        type: 'geo',
        coordinateSystem: null,
        layoutMode: 'box',
        init: function(t) {
          Ou.prototype.init.apply(this, arguments), Ho(t, 'label', ['show']);
        },
        optionUpdated: function() {
          var t = this.option,
            i = this;
          (t.regions = bx.getFilledRegions(t.regions, t.map, t.nameMap)),
            (this._optionModelMap = M(
              t.regions || [],
              function(t, e) {
                return e.name && t.set(e.name, new Pl(e, i)), t;
              },
              et(),
            )),
            this.updateSelectedMap(t.regions);
        },
        defaultOption: {
          zlevel: 0,
          z: 0,
          show: !0,
          left: 'center',
          top: 'center',
          aspectScale: null,
          silent: !1,
          map: '',
          boundingCoords: null,
          center: null,
          zoom: 1,
          scaleLimit: null,
          label: {show: !1, color: '#000'},
          itemStyle: {borderWidth: 0.5, borderColor: '#444', color: '#eee'},
          emphasis: {
            label: {show: !0, color: 'rgb(100,0,0)'},
            itemStyle: {color: 'rgba(255,215,0,0.8)'},
          },
          regions: [],
        },
        getRegionModel: function(t) {
          return (
            this._optionModelMap.get(t) || new Pl(null, this, this.ecModel)
          );
        },
        getFormattedLabel: function(t, e) {
          var i = this.getRegionModel(t).get(
              'label' + ('normal' === e ? '.' : e + '.') + 'formatter',
            ),
            n = {name: t};
          return 'function' == typeof i
            ? ((n.status = e), i(n))
            : 'string' == typeof i
            ? i.replace('{a}', null != t ? t : '')
            : void 0;
        },
        setZoom: function(t) {
          this.option.zoom = t;
        },
        setCenter: function(t) {
          this.option.center = t;
        },
      }),
      ey,
    ),
    Nf({
      type: 'geo',
      init: function(t, e) {
        var i = new sx(e, !0);
        (this._mapDraw = i), this.group.add(i.group);
      },
      render: function(t, e, i, n) {
        if (!n || 'geoToggleSelect' !== n.type || n.from !== this.uid) {
          var o = this._mapDraw;
          t.get('show')
            ? o.draw(t, e, i, this, n)
            : this._mapDraw.group.removeAll(),
            (this.group.silent = t.get('silent'));
        }
      },
      dispose: function() {
        this._mapDraw && this._mapDraw.remove();
      },
    }),
    $T('toggleSelected', {type: 'geoToggleSelect', event: 'geoselectchanged'}),
    $T('select', {type: 'geoSelect', event: 'geoselected'}),
    $T('unSelect', {type: 'geoUnSelect', event: 'geounselected'});
  function JT(t, e, i) {
    this._model = t;
  }
  function QT(t, e, i, n) {
    var o = i.calendarModel,
      a = i.seriesModel,
      r = o ? o.coordinateSystem : a ? a.coordinateSystem : null;
    return r === this ? r[t](n) : null;
  }
  (JT.prototype = {
    constructor: JT,
    type: 'calendar',
    dimensions: ['time', 'value'],
    getDimensionsInfo: function() {
      return [{name: 'time', type: 'time'}, 'value'];
    },
    getRangeInfo: function() {
      return this._rangeInfo;
    },
    getModel: function() {
      return this._model;
    },
    getRect: function() {
      return this._rect;
    },
    getCellWidth: function() {
      return this._sw;
    },
    getCellHeight: function() {
      return this._sh;
    },
    getOrient: function() {
      return this._orient;
    },
    getFirstDayOfWeek: function() {
      return this._firstDayOfWeek;
    },
    getDateInfo: function(t) {
      var e = (t = Kl(t)).getFullYear(),
        i = t.getMonth() + 1;
      i = i < 10 ? '0' + i : i;
      var n = t.getDate();
      n = n < 10 ? '0' + n : n;
      var o = t.getDay();
      return {
        y: e,
        m: i,
        d: n,
        day: (o = Math.abs((o + 7 - this.getFirstDayOfWeek()) % 7)),
        time: t.getTime(),
        formatedDate: e + '-' + i + '-' + n,
        date: t,
      };
    },
    getNextNDay: function(t, e) {
      return (
        0 === (e = e || 0) ||
          (t = new Date(this.getDateInfo(t).time)).setDate(t.getDate() + e),
        this.getDateInfo(t)
      );
    },
    update: function(t, e) {
      (this._firstDayOfWeek = +this._model
        .getModel('dayLabel')
        .get('firstDay')),
        (this._orient = this._model.get('orient')),
        (this._lineWidth =
          this._model.getModel('itemStyle').getItemStyle().lineWidth || 0),
        (this._rangeInfo = this._getRangeInfo(this._initRangeOption()));
      var i = this._rangeInfo.weeks || 1,
        n = ['width', 'height'],
        o = this._model.get('cellSize').slice(),
        a = this._model.getBoxLayoutParams(),
        r = 'horizontal' === this._orient ? [i, 7] : [7, i];
      E([0, 1], function(t) {
        u(o, t) && (a[n[t]] = o[t] * r[t]);
      });
      var s = {width: e.getWidth(), height: e.getHeight()},
        l = (this._rect = Iu(a, s));
      function u(t, e) {
        return null != t[e] && 'auto' !== t[e];
      }
      E([0, 1], function(t) {
        u(o, t) || (o[t] = l[n[t]] / r[t]);
      }),
        (this._sw = o[0]),
        (this._sh = o[1]);
    },
    dataToPoint: function(t, e) {
      R(t) && (t = t[0]), null == e && (e = !0);
      var i = this.getDateInfo(t),
        n = this._rangeInfo,
        o = i.formatedDate;
      if (e && !(i.time >= n.start.time && i.time < n.end.time + 864e5))
        return [NaN, NaN];
      var a = i.day,
        r = this._getRangeInfo([n.start.time, o]).nthWeek;
      return 'vertical' === this._orient
        ? [
            this._rect.x + a * this._sw + this._sw / 2,
            this._rect.y + r * this._sh + this._sh / 2,
          ]
        : [
            this._rect.x + r * this._sw + this._sw / 2,
            this._rect.y + a * this._sh + this._sh / 2,
          ];
    },
    pointToData: function(t) {
      var e = this.pointToDate(t);
      return e && e.time;
    },
    dataToRect: function(t, e) {
      var i = this.dataToPoint(t, e);
      return {
        contentShape: {
          x: i[0] - (this._sw - this._lineWidth) / 2,
          y: i[1] - (this._sh - this._lineWidth) / 2,
          width: this._sw - this._lineWidth,
          height: this._sh - this._lineWidth,
        },
        center: i,
        tl: [i[0] - this._sw / 2, i[1] - this._sh / 2],
        tr: [i[0] + this._sw / 2, i[1] - this._sh / 2],
        br: [i[0] + this._sw / 2, i[1] + this._sh / 2],
        bl: [i[0] - this._sw / 2, i[1] + this._sh / 2],
      };
    },
    pointToDate: function(t) {
      var e = Math.floor((t[0] - this._rect.x) / this._sw) + 1,
        i = Math.floor((t[1] - this._rect.y) / this._sh) + 1,
        n = this._rangeInfo.range;
      return 'vertical' === this._orient
        ? this._getDateByWeeksAndDay(i, e - 1, n)
        : this._getDateByWeeksAndDay(e, i - 1, n);
    },
    convertToPixel: L(QT, 'dataToPoint'),
    convertFromPixel: L(QT, 'pointToData'),
    _initRangeOption: function() {
      var t = this._model.get('range'),
        e = t;
      if (
        (R(e) && 1 === e.length && (e = e[0]),
        /^\d{4}$/.test(e) && (t = [e + '-01-01', e + '-12-31']),
        /^\d{4}[\/|-]\d{1,2}$/.test(e))
      ) {
        var i = this.getDateInfo(e),
          n = i.date;
        n.setMonth(n.getMonth() + 1);
        var o = this.getNextNDay(n, -1);
        t = [i.formatedDate, o.formatedDate];
      }
      /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(e) && (t = [e, e]);
      var a = this._getRangeInfo(t);
      return a.start.time > a.end.time && t.reverse(), t;
    },
    _getRangeInfo: function(t) {
      var e;
      (t = [this.getDateInfo(t[0]), this.getDateInfo(t[1])])[0].time >
        t[1].time && ((e = !0), t.reverse());
      var i = Math.floor(t[1].time / 864e5) - Math.floor(t[0].time / 864e5) + 1,
        n = new Date(t[0].time),
        o = n.getDate(),
        a = t[1].date.getDate();
      n.setDate(o + i - 1);
      var r = n.getDate();
      if (r !== a)
        for (
          var s = 0 < n.getTime() - t[1].time ? 1 : -1;
          (r = n.getDate()) !== a && 0 < (n.getTime() - t[1].time) * s;

        )
          (i -= s), n.setDate(r - s);
      var l = Math.floor((i + t[0].day + 6) / 7),
        u = e ? 1 - l : l - 1;
      return (
        e && t.reverse(),
        {
          range: [t[0].formatedDate, t[1].formatedDate],
          start: t[0],
          end: t[1],
          allDay: i,
          weeks: l,
          nthWeek: u,
          fweek: t[0].day,
          lweek: t[1].day,
        }
      );
    },
    _getDateByWeeksAndDay: function(t, e, i) {
      var n = this._getRangeInfo(i);
      if (
        t > n.weeks ||
        (0 === t && e < n.fweek) ||
        (t === n.weeks && e > n.lweek)
      )
        return !1;
      var o = 7 * (t - 1) - n.fweek + e,
        a = new Date(n.start.time);
      return a.setDate(n.start.d + o), this.getDateInfo(a);
    },
  }),
    (JT.dimensions = JT.prototype.dimensions),
    (JT.getDimensionsInfo = JT.prototype.getDimensionsInfo),
    (JT.create = function(i, n) {
      var o = [];
      return (
        i.eachComponent('calendar', function(t) {
          var e = new JT(t, i, n);
          o.push(e), (t.coordinateSystem = e);
        }),
        i.eachSeries(function(t) {
          'calendar' === t.get('coordinateSystem') &&
            (t.coordinateSystem = o[t.get('calendarIndex') || 0]);
        }),
        o
      );
    }),
    dh.register('calendar', JT);
  var tA = Ou.extend({
    type: 'calendar',
    coordinateSystem: null,
    defaultOption: {
      zlevel: 0,
      z: 2,
      left: 80,
      top: 60,
      cellSize: 20,
      orient: 'horizontal',
      splitLine: {
        show: !0,
        lineStyle: {color: '#000', width: 1, type: 'solid'},
      },
      itemStyle: {color: '#fff', borderWidth: 1, borderColor: '#ccc'},
      dayLabel: {
        show: !0,
        firstDay: 0,
        position: 'start',
        margin: '50%',
        nameMap: 'en',
        color: '#000',
      },
      monthLabel: {
        show: !0,
        position: 'start',
        margin: 5,
        align: 'center',
        nameMap: 'en',
        formatter: null,
        color: '#000',
      },
      yearLabel: {
        show: !0,
        position: null,
        margin: 30,
        formatter: null,
        color: '#ccc',
        fontFamily: 'sans-serif',
        fontWeight: 'bolder',
        fontSize: 20,
      },
    },
    init: function(t, e, i, n) {
      var o = Du(t);
      tA.superApply(this, 'init', arguments), eA(t, o);
    },
    mergeOption: function(t, e) {
      tA.superApply(this, 'mergeOption', arguments), eA(this.option, t);
    },
  });
  function eA(t, e) {
    var i = t.cellSize;
    R(i) ? 1 === i.length && (i[1] = i[0]) : (i = t.cellSize = [i, i]);
    var n = O([0, 1], function(t) {
      return (
        (function(t, e) {
          return (
            null != t[bu[e][0]] || (null != t[bu[e][1]] && null != t[bu[e][2]])
          );
        })(e, t) && (i[t] = 'auto'),
        null != i[t] && 'auto' !== i[t]
      );
    });
    Au(t, e, {type: 'box', ignoreSize: n});
  }
  var iA = {
      EN: [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec',
      ],
      CN: [
        '一月',
        '二月',
        '三月',
        '四月',
        '五月',
        '六月',
        '七月',
        '八月',
        '九月',
        '十月',
        '十一月',
        '十二月',
      ],
    },
    nA = {
      EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
      CN: ['日', '一', '二', '三', '四', '五', '六'],
    };
  Nf({
    type: 'calendar',
    _tlpoints: null,
    _blpoints: null,
    _firstDayOfMonth: null,
    _firstDayPoints: null,
    render: function(t, e, i) {
      var n = this.group;
      n.removeAll();
      var o = t.coordinateSystem,
        a = o.getRangeInfo(),
        r = o.getOrient();
      this._renderDayRect(t, a, n),
        this._renderLines(t, a, r, n),
        this._renderYearText(t, a, r, n),
        this._renderMonthText(t, r, n),
        this._renderWeekText(t, a, r, n);
    },
    _renderDayRect: function(t, e, i) {
      for (
        var n = t.coordinateSystem,
          o = t.getModel('itemStyle').getItemStyle(),
          a = n.getCellWidth(),
          r = n.getCellHeight(),
          s = e.start.time;
        s <= e.end.time;
        s = n.getNextNDay(s, 1).time
      ) {
        var l = n.dataToRect([s], !1).tl,
          u = new us({
            shape: {x: l[0], y: l[1], width: a, height: r},
            cursor: 'default',
            style: o,
          });
        i.add(u);
      }
    },
    _renderLines: function(i, t, n, o) {
      var a = this,
        r = i.coordinateSystem,
        s = i.getModel('splitLine.lineStyle').getLineStyle(),
        l = i.get('splitLine.show'),
        e = s.lineWidth;
      (this._tlpoints = []),
        (this._blpoints = []),
        (this._firstDayOfMonth = []),
        (this._firstDayPoints = []);
      for (var u = t.start, h = 0; u.time <= t.end.time; h++) {
        d(u.formatedDate),
          0 === h && (u = r.getDateInfo(t.start.y + '-' + t.start.m));
        var c = u.date;
        c.setMonth(c.getMonth() + 1), (u = r.getDateInfo(c));
      }
      function d(t) {
        a._firstDayOfMonth.push(r.getDateInfo(t)),
          a._firstDayPoints.push(r.dataToRect([t], !1).tl);
        var e = a._getLinePointsOfOneWeek(i, t, n);
        a._tlpoints.push(e[0]),
          a._blpoints.push(e[e.length - 1]),
          l && a._drawSplitline(e, s, o);
      }
      d(r.getNextNDay(t.end.time, 1).formatedDate),
        l && this._drawSplitline(a._getEdgesPoints(a._tlpoints, e, n), s, o),
        l && this._drawSplitline(a._getEdgesPoints(a._blpoints, e, n), s, o);
    },
    _getEdgesPoints: function(t, e, i) {
      var n = [t[0].slice(), t[t.length - 1].slice()],
        o = 'horizontal' === i ? 0 : 1;
      return (n[0][o] = n[0][o] - e / 2), (n[1][o] = n[1][o] + e / 2), n;
    },
    _drawSplitline: function(t, e, i) {
      var n = new ns({z2: 20, shape: {points: t}, style: e});
      i.add(n);
    },
    _getLinePointsOfOneWeek: function(t, e, i) {
      var n = t.coordinateSystem;
      e = n.getDateInfo(e);
      for (var o = [], a = 0; a < 7; a++) {
        var r = n.getNextNDay(e.time, a),
          s = n.dataToRect([r.time], !1);
        (o[2 * r.day] = s.tl),
          (o[2 * r.day + 1] = s['horizontal' === i ? 'bl' : 'tr']);
      }
      return o;
    },
    _formatterLabel: function(t, e) {
      return 'string' == typeof t && t
        ? du(t, e)
        : 'function' == typeof t
        ? t(e)
        : e.nameMap;
    },
    _yearTextPositionControl: function(t, e, i, n, o) {
      e = e.slice();
      var a = ['center', 'bottom'];
      'bottom' === n
        ? ((e[1] += o), (a = ['center', 'top']))
        : 'left' === n
        ? (e[0] -= o)
        : 'right' === n
        ? ((e[0] += o), (a = ['center', 'top']))
        : (e[1] -= o);
      var r = 0;
      return (
        ('left' !== n && 'right' !== n) || (r = Math.PI / 2),
        {
          rotation: r,
          position: e,
          style: {textAlign: a[0], textVerticalAlign: a[1]},
        }
      );
    },
    _renderYearText: function(t, e, i, n) {
      var o = t.getModel('yearLabel');
      if (o.get('show')) {
        var a = o.get('margin'),
          r = o.get('position');
        r = r || ('horizontal' !== i ? 'top' : 'left');
        var s = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]],
          l = (s[0][0] + s[1][0]) / 2,
          u = (s[0][1] + s[1][1]) / 2,
          h = 'horizontal' === i ? 0 : 1,
          c = {
            top: [l, s[h][1]],
            bottom: [l, s[1 - h][1]],
            left: [s[1 - h][0], u],
            right: [s[h][0], u],
          },
          d = e.start.y;
        +e.end.y > +e.start.y && (d = d + '-' + e.end.y);
        var f = o.get('formatter'),
          p = {start: e.start.y, end: e.end.y, nameMap: d},
          g = this._formatterLabel(f, p),
          m = new jr({z2: 30});
        rl(m.style, o, {text: g}),
          m.attr(this._yearTextPositionControl(m, c[r], i, r, a)),
          n.add(m);
      }
    },
    _monthTextPositionControl: function(t, e, i, n, o) {
      var a = 'left',
        r = 'top',
        s = t[0],
        l = t[1];
      return (
        'horizontal' === i
          ? ((l += o), e && (a = 'center'), 'start' === n && (r = 'bottom'))
          : ((s += o), e && (r = 'middle'), 'start' === n && (a = 'right')),
        {x: s, y: l, textAlign: a, textVerticalAlign: r}
      );
    },
    _renderMonthText: function(t, e, i) {
      var n = t.getModel('monthLabel');
      if (n.get('show')) {
        var o = n.get('nameMap'),
          a = n.get('margin'),
          r = n.get('position'),
          s = n.get('align'),
          l = [this._tlpoints, this._blpoints];
        B(o) && (o = iA[o.toUpperCase()] || []);
        var u = 'start' === r ? 0 : 1,
          h = 'horizontal' === e ? 0 : 1;
        a = 'start' === r ? -a : a;
        for (var c = 'center' === s, d = 0; d < l[u].length - 1; d++) {
          var f = l[u][d].slice(),
            p = this._firstDayOfMonth[d];
          if (c) {
            var g = this._firstDayPoints[d];
            f[h] = (g[h] + l[0][d + 1][h]) / 2;
          }
          var m = n.get('formatter'),
            v = o[+p.m - 1],
            y = {
              yyyy: p.y,
              yy: (p.y + '').slice(2),
              MM: p.m,
              M: +p.m,
              nameMap: v,
            },
            x = this._formatterLabel(m, y),
            _ = new jr({z2: 30});
          P(
            rl(_.style, n, {text: x}),
            this._monthTextPositionControl(f, c, e, r, a),
          ),
            i.add(_);
        }
      }
    },
    _weekTextPositionControl: function(t, e, i, n, o) {
      var a = 'center',
        r = 'middle',
        s = t[0],
        l = t[1],
        u = 'start' === i;
      return (
        'horizontal' === e
          ? ((s = s + n + ((u ? 1 : -1) * o[0]) / 2),
            (a = u ? 'right' : 'left'))
          : ((l = l + n + ((u ? 1 : -1) * o[1]) / 2),
            (r = u ? 'bottom' : 'top')),
        {x: s, y: l, textAlign: a, textVerticalAlign: r}
      );
    },
    _renderWeekText: function(t, e, i, n) {
      var o = t.getModel('dayLabel');
      if (o.get('show')) {
        var a = t.coordinateSystem,
          r = o.get('position'),
          s = o.get('nameMap'),
          l = o.get('margin'),
          u = a.getFirstDayOfWeek();
        B(s) && (s = nA[s.toUpperCase()] || []);
        var h = a.getNextNDay(e.end.time, 7 - e.lweek).time,
          c = [a.getCellWidth(), a.getCellHeight()];
        (l = Vl(l, c['horizontal' === i ? 0 : 1])),
          'start' === r &&
            ((h = a.getNextNDay(e.start.time, -(7 + e.fweek)).time), (l = -l));
        for (var d = 0; d < 7; d++) {
          var f,
            p = a.getNextNDay(h, d),
            g = a.dataToRect([p.time], !1).center;
          f = Math.abs((d + u) % 7);
          var m = new jr({z2: 30});
          P(
            rl(m.style, o, {text: s[f]}),
            this._weekTextPositionControl(g, i, r, l, c),
          ),
            n.add(m);
        }
      }
    },
  });
  var oA = {path: null, compoundPath: null, group: ki, image: eo, text: jr};
  Mf(function(t) {
    var e = t.graphic;
    R(e)
      ? e[0] && e[0].elements
        ? (t.graphic = [t.graphic[0]])
        : (t.graphic = [{elements: e}])
      : e && !e.elements && (t.graphic = [{elements: [e]}]);
  });
  var aA = Pf({
    type: 'graphic',
    defaultOption: {elements: [], parentId: null},
    _elOptionsToUpdate: null,
    mergeOption: function(t) {
      var e = this.option.elements;
      (this.option.elements = null),
        aA.superApply(this, 'mergeOption', arguments),
        (this.option.elements = e);
    },
    optionUpdated: function(t, e) {
      var i = this.option,
        n = (e ? i : t).elements,
        o = (i.elements = e ? [] : i.elements),
        a = [];
      this._flatten(n, a);
      var r = Xo(o, a);
      Yo(r);
      var s = (this._elOptionsToUpdate = []);
      E(
        r,
        function(t, e) {
          var i = t.option;
          D && q(V(i) || t.exist, 'Empty graphic option definition'),
            i &&
              (s.push(i),
              (function(t, e) {
                var i = t.exist;
                if (
                  ((e.id = t.keyInfo.id),
                  !e.type && i && (e.type = i.type),
                  null == e.parentId)
                ) {
                  var n = e.parentOption;
                  n ? (e.parentId = n.id) : i && (e.parentId = i.parentId);
                }
                e.parentOption = null;
              })(t, i),
              (function(t, e, i) {
                var n = P({}, i),
                  o = t[e],
                  a = i.$action || 'merge';
                if ('merge' === a)
                  if (o) {
                    if (D) {
                      var r = i.type;
                      q(
                        !r || o.type === r,
                        'Please set $action: "replace" to change `type`',
                      );
                    }
                    m(o, n, !0), Au(o, n, {ignoreSize: !0}), Cu(i, o);
                  } else t[e] = n;
                else
                  'replace' === a
                    ? (t[e] = n)
                    : 'remove' === a && o && (t[e] = null);
              })(o, e, i),
              (function(t, e) {
                if (!t) return;
                (t.hv = e.hv = [
                  lA(e, ['left', 'right']),
                  lA(e, ['top', 'bottom']),
                ]),
                  'group' === t.type &&
                    (null == t.width && (t.width = e.width = 0),
                    null == t.height && (t.height = e.height = 0));
              })(o[e], i));
        },
        this,
      );
      for (var l = o.length - 1; 0 <= l; l--)
        null == o[l] ? o.splice(l, 1) : delete o[l].$action;
    },
    _flatten: function(t, i, n) {
      E(
        t,
        function(t) {
          if (t) {
            n && (t.parentOption = n), i.push(t);
            var e = t.children;
            'group' === t.type && e && this._flatten(e, i, t),
              delete t.children;
          }
        },
        this,
      );
    },
    useElOptionsToUpdate: function() {
      var t = this._elOptionsToUpdate;
      return (this._elOptionsToUpdate = null), t;
    },
  });
  function rA(t, e, i, n) {
    var o = i.type;
    D && q(o, 'graphic type MUST be set');
    var a = oA.hasOwnProperty(o) ? oA[o] : Os(o);
    D && q(a, 'graphic type can not be found');
    var r = new a(i);
    e.add(r), n.set(t, r), (r.__ecGraphicId = t);
  }
  function sA(t, e) {
    var i = t && t.parent;
    i &&
      ('group' === t.type &&
        t.traverse(function(t) {
          sA(t, e);
        }),
      e.removeKey(t.__ecGraphicId),
      i.remove(t));
  }
  function lA(e, t) {
    var i;
    return (
      E(t, function(t) {
        null != e[t] && 'auto' !== e[t] && (i = !0);
      }),
      i
    );
  }
  Nf({
    type: 'graphic',
    init: function(t, e) {
      (this._elMap = et()), this._lastGraphicModel;
    },
    render: function(t, e, i) {
      t !== this._lastGraphicModel && this._clear(),
        (this._lastGraphicModel = t),
        this._updateElements(t),
        this._relocate(t, i);
    },
    _updateElements: function(u) {
      var t = u.useElOptionsToUpdate();
      if (t) {
        var h = this._elMap,
          c = this.group;
        E(t, function(t) {
          var e = t.$action,
            i = t.id,
            n = h.get(i),
            o = t.parentId,
            a = null != o ? h.get(o) : c,
            r = t.style;
          'text' === t.type &&
            r &&
            (t.hv && t.hv[1] && (r.textVerticalAlign = r.textBaseline = null),
            !r.hasOwnProperty('textFill') && r.fill && (r.textFill = r.fill),
            !r.hasOwnProperty('textStroke') &&
              r.stroke &&
              (r.textStroke = r.stroke));
          var s = (function(e) {
            return (
              (e = P({}, e)),
              E(
                ['id', 'parentId', '$action', 'hv', 'bounding'].concat(wu),
                function(t) {
                  delete e[t];
                },
              ),
              e
            );
          })(t);
          D && n && q(a === n.parent, 'Changing parent is not supported.'),
            e && 'merge' !== e
              ? 'replace' === e
                ? (sA(n, h), rA(i, a, s, h))
                : 'remove' === e && sA(n, h)
              : n
              ? n.attr(s)
              : rA(i, a, s, h);
          var l = h.get(i);
          l &&
            ((l.__ecGraphicWidthOption = t.width),
            (l.__ecGraphicHeightOption = t.height),
            (function(t, e) {
              var i = t.eventData;
              t.silent ||
                t.ignore ||
                i ||
                (i = t.eventData = {
                  componentType: 'graphic',
                  componentIndex: e.componentIndex,
                  name: t.name,
                });
              i && (i.info = t.info);
            })(l, u));
        });
      }
    },
    _relocate: function(t, e) {
      for (
        var i = t.option.elements,
          n = this.group,
          o = this._elMap,
          a = e.getWidth(),
          r = e.getHeight(),
          s = 0;
        s < i.length;
        s++
      ) {
        var l = i[s];
        if ((h = o.get(l.id)) && h.isGroup) {
          var u = (c = h.parent) === n;
          (h.__ecGraphicWidth =
            Vl(h.__ecGraphicWidthOption, u ? a : c.__ecGraphicWidth) || 0),
            (h.__ecGraphicHeight =
              Vl(h.__ecGraphicHeightOption, u ? r : c.__ecGraphicHeight) || 0);
        }
      }
      for (s = i.length - 1; 0 <= s; s--) {
        var h, c;
        l = i[s];
        if ((h = o.get(l.id)))
          Tu(
            h,
            l,
            (c = h.parent) === n
              ? {width: a, height: r}
              : {width: c.__ecGraphicWidth, height: c.__ecGraphicHeight},
            null,
            {hv: l.hv, boundingMode: l.bounding},
          );
      }
    },
    _clear: function() {
      var e = this._elMap;
      e.each(function(t) {
        sA(t, e);
      }),
        (this._elMap = et());
    },
    dispose: function() {
      this._clear();
    },
  });
  var uA = {};
  function hA(t, e) {
    uA[t] = e;
  }
  function cA(t) {
    return uA[t];
  }
  var dA = Pf({
    type: 'toolbox',
    layoutMode: {type: 'box', ignoreSize: !0},
    optionUpdated: function() {
      dA.superApply(this, 'optionUpdated', arguments),
        E(this.option.feature, function(t, e) {
          var i = cA(e);
          i && m(t, i.defaultOption);
        });
    },
    defaultOption: {
      show: !0,
      z: 6,
      zlevel: 0,
      orient: 'horizontal',
      left: 'right',
      top: 'top',
      backgroundColor: 'transparent',
      borderColor: '#ccc',
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemSize: 15,
      itemGap: 8,
      showTitle: !0,
      iconStyle: {borderColor: '#666', color: 'none'},
      emphasis: {iconStyle: {borderColor: '#3E98C5'}},
      tooltip: {show: !1},
    },
  });
  function fA(t, e) {
    var i = au(e.get('padding')),
      n = e.getItemStyle(['color', 'opacity']);
    return (
      (n.fill = e.get('backgroundColor')),
      (t = new us({
        shape: {
          x: t.x - i[3],
          y: t.y - i[0],
          width: t.width + i[1] + i[3],
          height: t.height + i[0] + i[2],
          r: e.get('borderRadius'),
        },
        style: n,
        silent: !0,
        z2: -1,
      }))
    );
  }
  Nf({
    type: 'toolbox',
    render: function(h, c, d, l) {
      var f = this.group;
      if ((f.removeAll(), h.get('show'))) {
        var p = +h.get('itemSize'),
          u = h.get('feature') || {},
          g = this._features || (this._features = {}),
          m = [];
        E(u, function(t, e) {
          m.push(e);
        }),
          new zf(this._featureNames || [], m)
            .add(t)
            .update(t)
            .remove(L(t, null))
            .execute(),
          (this._featureNames = m),
          (function(t, e, i) {
            var n = e.getBoxLayoutParams(),
              o = e.get('padding'),
              a = {width: i.getWidth(), height: i.getHeight()},
              r = Iu(n, a, o);
            Mu(e.get('orient'), t, e.get('itemGap'), r.width, r.height),
              Tu(t, n, a, o);
          })(f, h, d),
          f.add(fA(f.getBoundingRect(), h)),
          f.eachChild(function(t) {
            var e = t.__title,
              i = t.hoverStyle;
            if (i && e) {
              var n = vn(e, Cn(i)),
                o = t.position[0] + f.position[0],
                a = !1;
              t.position[1] + f.position[1] + p + n.height > d.getHeight() &&
                ((i.textPosition = 'top'), (a = !0));
              var r = a ? -5 - n.height : p + 8;
              o + n.width / 2 > d.getWidth()
                ? ((i.textPosition = ['100%', r]), (i.textAlign = 'right'))
                : o - n.width / 2 < 0 &&
                  ((i.textPosition = [0, r]), (i.textAlign = 'left'));
            }
          });
      }
      function t(t, e) {
        var i,
          n = m[t],
          o = m[e],
          a = u[n],
          r = new Pl(a, h, h.ecModel);
        if (
          (l &&
            null != l.newTitle &&
            l.featureName === n &&
            (a.title = l.newTitle),
          n && !o)
        ) {
          if (
            (function(t) {
              return 0 === t.indexOf('my');
            })(n)
          )
            i = {model: r, onclick: r.option.onclick, featureName: n};
          else {
            var s = cA(n);
            if (!s) return;
            i = new s(r, c, d);
          }
          g[n] = i;
        } else {
          if (!(i = g[o])) return;
          (i.model = r), (i.ecModel = c), (i.api = d);
        }
        n || !o
          ? r.get('show') && !i.unusable
            ? ((function(o, a, t) {
                var r = o.getModel('iconStyle'),
                  s = o.getModel('emphasis.iconStyle'),
                  e = a.getIcons ? a.getIcons() : o.get('icon'),
                  l = o.get('title') || {};
                if ('string' == typeof e) {
                  var i = e,
                    n = l;
                  (l = {}), ((e = {})[t] = i), (l[t] = n);
                }
                var u = (o.iconPaths = {});
                E(e, function(t, e) {
                  var i = wl(
                    t,
                    {},
                    {x: -p / 2, y: -p / 2, width: p, height: p},
                  );
                  i.setStyle(r.getItemStyle()),
                    (i.hoverStyle = s.getItemStyle()),
                    i.setStyle({
                      text: l[e],
                      textAlign: s.get('textAlign'),
                      textBorderRadius: s.get('textBorderRadius'),
                      textPadding: s.get('textPadding'),
                      textFill: null,
                    });
                  var n = h.getModel('tooltip');
                  n &&
                    n.get('show') &&
                    i.attr(
                      'tooltip',
                      P(
                        {
                          content: l[e],
                          formatter:
                            n.get('formatter', !0) ||
                            function() {
                              return l[e];
                            },
                          formatterParams: {
                            componentType: 'toolbox',
                            name: e,
                            title: l[e],
                            $vars: ['name', 'title'],
                          },
                          position: n.get('position', !0) || 'bottom',
                        },
                        n.option,
                      ),
                    ),
                    tl(i),
                    h.get('showTitle') &&
                      ((i.__title = l[e]),
                      i
                        .on('mouseover', function() {
                          var t = s.getItemStyle(),
                            e =
                              'vertical' === h.get('orient')
                                ? null == h.get('right')
                                  ? 'right'
                                  : 'left'
                                : null == h.get('bottom')
                                ? 'bottom'
                                : 'top';
                          i.setStyle({
                            textFill:
                              s.get('textFill') || t.fill || t.stroke || '#000',
                            textBackgroundColor: s.get('textBackgroundColor'),
                            textPosition: s.get('textPosition') || e,
                          });
                        })
                        .on('mouseout', function() {
                          i.setStyle({
                            textFill: null,
                            textBackgroundColor: null,
                          });
                        })),
                    i.trigger(o.get('iconStatus.' + e) || 'normal'),
                    f.add(i),
                    i.on('click', A(a.onclick, a, c, d, e)),
                    (u[e] = i);
                });
              })(r, i, n),
              (r.setIconStatus = function(t, e) {
                var i = this.option,
                  n = this.iconPaths;
                (i.iconStatus = i.iconStatus || {}),
                  (i.iconStatus[t] = e),
                  n[t] && n[t].trigger(e);
              }),
              i.render && i.render(r, c, d, l))
            : i.remove && i.remove(c, d)
          : i.dispose && i.dispose(c, d);
      }
    },
    updateView: function(t, e, i, n) {
      E(this._features, function(t) {
        t.updateView && t.updateView(t.model, e, i, n);
      });
    },
    remove: function(e, i) {
      E(this._features, function(t) {
        t.remove && t.remove(e, i);
      }),
        this.group.removeAll();
    },
    dispose: function(e, i) {
      E(this._features, function(t) {
        t.dispose && t.dispose(e, i);
      });
    },
  });
  var pA = Bc.toolbox.saveAsImage;
  function gA(t) {
    this.model = t;
  }
  (gA.defaultOption = {
    show: !0,
    icon:
      'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',
    title: pA.title,
    type: 'png',
    connectedBackgroundColor: '#fff',
    name: '',
    excludeComponents: ['toolbox'],
    pixelRatio: 1,
    lang: pA.lang.slice(),
  }),
    (gA.prototype.unusable = !v.canvasSupported),
    (gA.prototype.onclick = function(t, e) {
      var i = this.model,
        n = i.get('name') || t.get('title.0.text') || 'echarts',
        o =
          'svg' === e.getZr().painter.getType()
            ? 'svg'
            : i.get('type', !0) || 'png',
        a = e.getConnectedDataURL({
          type: o,
          backgroundColor:
            i.get('backgroundColor', !0) || t.get('backgroundColor') || '#fff',
          connectedBackgroundColor: i.get('connectedBackgroundColor'),
          excludeComponents: i.get('excludeComponents'),
          pixelRatio: i.get('pixelRatio'),
        });
      if ('function' != typeof MouseEvent || v.browser.ie || v.browser.edge)
        if (window.navigator.msSaveOrOpenBlob) {
          for (
            var r = atob(a.split(',')[1]), s = r.length, l = new Uint8Array(s);
            s--;

          )
            l[s] = r.charCodeAt(s);
          var u = new Blob([l]);
          window.navigator.msSaveOrOpenBlob(u, n + '.' + o);
        } else {
          var h = i.get('lang'),
            c =
              '<body style="margin:0;"><img src="' +
              a +
              '" style="max-width:100%;" title="' +
              ((h && h[0]) || '') +
              '" /></body>';
          window.open().document.write(c);
        }
      else {
        var d = document.createElement('a');
        (d.download = n + '.' + o), (d.target = '_blank'), (d.href = a);
        var f = new MouseEvent('click', {
          view: window,
          bubbles: !0,
          cancelable: !1,
        });
        d.dispatchEvent(f);
      }
    }),
    hA('saveAsImage', gA);
  var mA = Bc.toolbox.magicType,
    vA = '__ec_magicType_stack__';
  function yA(t) {
    this.model = t;
  }
  yA.defaultOption = {
    show: !0,
    type: [],
    icon: {
      line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',
      bar:
        'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',
      stack:
        'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',
    },
    title: k(mA.title),
    option: {},
    seriesIndex: {},
  };
  var xA = yA.prototype;
  xA.getIcons = function() {
    var t = this.model,
      e = t.get('icon'),
      i = {};
    return (
      E(t.get('type'), function(t) {
        e[t] && (i[t] = e[t]);
      }),
      i
    );
  };
  var _A = {
      line: function(t, e, i, n) {
        if ('bar' === t)
          return m(
            {
              id: e,
              type: 'line',
              data: i.get('data'),
              stack: i.get('stack'),
              markPoint: i.get('markPoint'),
              markLine: i.get('markLine'),
            },
            n.get('option.line') || {},
            !0,
          );
      },
      bar: function(t, e, i, n) {
        if ('line' === t)
          return m(
            {
              id: e,
              type: 'bar',
              data: i.get('data'),
              stack: i.get('stack'),
              markPoint: i.get('markPoint'),
              markLine: i.get('markLine'),
            },
            n.get('option.bar') || {},
            !0,
          );
      },
      stack: function(t, e, i, n) {
        var o = i.get('stack') === vA;
        if ('line' === t || 'bar' === t)
          return (
            n.setIconStatus('stack', o ? 'normal' : 'emphasis'),
            m({id: e, stack: o ? '' : vA}, n.get('option.stack') || {}, !0)
          );
      },
    },
    wA = [['line', 'bar'], ['stack']];
  (xA.onclick = function(u, t, h) {
    var c = this.model,
      e = c.get('seriesIndex.' + h);
    if (_A[h]) {
      var i,
        d = {series: []};
      if (
        (E(wA, function(t) {
          0 <= w(t, h) &&
            E(t, function(t) {
              c.setIconStatus(t, 'normal');
            });
        }),
        c.setIconStatus(h, 'emphasis'),
        u.eachComponent(
          {mainType: 'series', query: null == e ? null : {seriesIndex: e}},
          function(t) {
            var e = t.subType,
              i = t.id,
              n = _A[h](e, i, t, c);
            n && (C(n, t.option), d.series.push(n));
            var o = t.coordinateSystem;
            if (
              o &&
              'cartesian2d' === o.type &&
              ('line' === h || 'bar' === h)
            ) {
              var a = o.getAxesByScale('ordinal')[0];
              if (a) {
                var r = a.dim + 'Axis',
                  s = u.queryComponents({
                    mainType: r,
                    index: t.get(name + 'Index'),
                    id: t.get(name + 'Id'),
                  })[0].componentIndex;
                d[r] = d[r] || [];
                for (var l = 0; l <= s; l++) d[r][s] = d[r][s] || {};
                d[r][s].boundaryGap = 'bar' === h;
              }
            }
          },
        ),
        'stack' === h)
      )
        i =
          d.series && d.series[0] && d.series[0].stack === vA
            ? m({stack: mA.title.tiled}, mA.title)
            : k(mA.title);
      t.dispatchAction({
        type: 'changeMagicType',
        currentType: h,
        newOption: d,
        newTitle: i,
        featureName: 'magicType',
      });
    }
  }),
    Tf(
      {
        type: 'changeMagicType',
        event: 'magicTypeChanged',
        update: 'prepareAndUpdate',
      },
      function(t, e) {
        e.mergeOption(t.newOption);
      },
    ),
    hA('magicType', yA);
  var bA = Bc.toolbox.dataView,
    SA = new Array(60).join('-'),
    MA = '\t';
  function IA(t) {
    var e = (function(t) {
      var o = {},
        a = [],
        r = [];
      return (
        t.eachRawSeries(function(t) {
          var e = t.coordinateSystem;
          if (!e || ('cartesian2d' !== e.type && 'polar' !== e.type)) a.push(t);
          else {
            var i = e.getBaseAxis();
            if ('category' === i.type) {
              var n = i.dim + '_' + i.index;
              o[n] ||
                ((o[n] = {
                  categoryAxis: i,
                  valueAxis: e.getOtherAxis(i),
                  series: [],
                }),
                r.push({axisDim: i.dim, axisIndex: i.index})),
                o[n].series.push(t);
            } else a.push(t);
          }
        }),
        {seriesGroupByCategoryAxis: o, other: a, meta: r}
      );
    })(t);
    return {
      value: I(
        [
          (function(t) {
            var h = [];
            return (
              E(t, function(t, e) {
                var i = t.categoryAxis,
                  n = t.valueAxis.dim,
                  o = [' '].concat(
                    O(t.series, function(t) {
                      return t.name;
                    }),
                  ),
                  a = [i.model.getCategories()];
                E(t.series, function(t) {
                  a.push(
                    t.getRawData().mapArray(n, function(t) {
                      return t;
                    }),
                  );
                });
                for (var r = [o.join(MA)], s = 0; s < a[0].length; s++) {
                  for (var l = [], u = 0; u < a.length; u++) l.push(a[u][s]);
                  r.push(l.join(MA));
                }
                h.push(r.join('\n'));
              }),
              h.join('\n\n' + SA + '\n\n')
            );
          })(e.seriesGroupByCategoryAxis),
          (function(t) {
            return O(t, function(t) {
              var o = t.getRawData(),
                a = [t.name],
                r = [];
              return (
                o.each(o.dimensions, function() {
                  for (
                    var t = arguments.length,
                      e = arguments[t - 1],
                      i = o.getName(e),
                      n = 0;
                    n < t - 1;
                    n++
                  )
                    r[n] = arguments[n];
                  a.push((i ? i + MA : '') + r.join(MA));
                }),
                a.join('\n')
              );
            }).join('\n\n' + SA + '\n\n');
          })(e.other),
        ],
        function(t) {
          return t.replace(/[\n\t\s]/g, '');
        },
      ).join('\n\n' + SA + '\n\n'),
      meta: e.meta,
    };
  }
  function TA(t) {
    return t.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
  }
  var AA = new RegExp('[' + MA + ']+', 'g');
  function DA(t, a) {
    var e = t.split(new RegExp('\n*' + SA + '\n*', 'g')),
      r = {series: []};
    return (
      E(e, function(t, e) {
        if (
          (function(t) {
            if (0 <= t.slice(0, t.indexOf('\n')).indexOf(MA)) return !0;
          })(t)
        ) {
          var i = (function(t) {
              for (
                var e = t.split(/\n+/g),
                  i = [],
                  n = O(TA(e.shift()).split(AA), function(t) {
                    return {name: t, data: []};
                  }),
                  o = 0;
                o < e.length;
                o++
              ) {
                var a = TA(e[o]).split(AA);
                i.push(a.shift());
                for (var r = 0; r < a.length; r++)
                  n[r] && (n[r].data[o] = a[r]);
              }
              return {series: n, categories: i};
            })(t),
            n = a[e],
            o = n.axisDim + 'Axis';
          n &&
            ((r[o] = r[o] || []),
            (r[o][n.axisIndex] = {data: i.categories}),
            (r.series = r.series.concat(i.series)));
        } else {
          i = (function(t) {
            for (
              var e = t.split(/\n+/g), i = TA(e.shift()), n = [], o = 0;
              o < e.length;
              o++
            ) {
              var a,
                r = TA(e[o]).split(AA),
                s = '',
                l = !1;
              a = isNaN(r[0])
                ? ((l = !0),
                  (s = r[0]),
                  (r = r.slice(1)),
                  (n[o] = {name: s, value: []}),
                  n[o].value)
                : (n[o] = []);
              for (var u = 0; u < r.length; u++) a.push(+r[u]);
              1 === a.length && (l ? (n[o].value = a[0]) : (n[o] = a[0]));
            }
            return {name: i, data: n};
          })(t);
          r.series.push(i);
        }
      }),
      r
    );
  }
  function CA(t) {
    (this._dom = null), (this.model = t);
  }
  (CA.defaultOption = {
    show: !0,
    readOnly: !1,
    optionToContent: null,
    contentToOption: null,
    icon:
      'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',
    title: k(bA.title),
    lang: k(bA.lang),
    backgroundColor: '#fff',
    textColor: '#000',
    textareaColor: '#fff',
    textareaBorderColor: '#333',
    buttonColor: '#c23531',
    buttonTextColor: '#fff',
  }),
    (CA.prototype.onclick = function(t, e) {
      var i = e.getDom(),
        n = this.model;
      this._dom && i.removeChild(this._dom);
      var o = document.createElement('div');
      (o.style.cssText =
        'position:absolute;left:5px;top:5px;bottom:5px;right:5px;'),
        (o.style.backgroundColor = n.get('backgroundColor') || '#fff');
      var a = document.createElement('h4'),
        r = n.get('lang') || [];
      (a.innerHTML = r[0] || n.get('title')),
        (a.style.cssText = 'margin: 10px 20px;'),
        (a.style.color = n.get('textColor'));
      var s = document.createElement('div'),
        l = document.createElement('textarea');
      s.style.cssText = 'display:block;width:100%;overflow:auto;';
      var u = n.get('optionToContent'),
        h = n.get('contentToOption'),
        c = IA(t);
      if ('function' == typeof u) {
        var d = u(e.getOption());
        'string' == typeof d ? (s.innerHTML = d) : W(d) && s.appendChild(d);
      } else
        s.appendChild(l),
          (l.readOnly = n.get('readOnly')),
          (l.style.cssText =
            'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;'),
          (l.style.color = n.get('textColor')),
          (l.style.borderColor = n.get('textareaBorderColor')),
          (l.style.backgroundColor = n.get('textareaColor')),
          (l.value = c.value);
      var f = c.meta,
        p = document.createElement('div');
      p.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';
      var g =
          'float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px',
        m = document.createElement('div'),
        v = document.createElement('div');
      (g += ';background-color:' + n.get('buttonColor')),
        (g += ';color:' + n.get('buttonTextColor'));
      var y = this;
      function x() {
        i.removeChild(o), (y._dom = null);
      }
      Yt(m, 'click', x),
        Yt(v, 'click', function() {
          var t;
          try {
            t = 'function' == typeof h ? h(s, e.getOption()) : DA(l.value, f);
          } catch (t) {
            throw (x(), new Error('Data view format error ' + t));
          }
          t && e.dispatchAction({type: 'changeDataView', newOption: t}), x();
        }),
        (m.innerHTML = r[1]),
        (v.innerHTML = r[2]),
        (v.style.cssText = g),
        (m.style.cssText = g),
        n.get('readOnly') || p.appendChild(v),
        p.appendChild(m),
        o.appendChild(a),
        o.appendChild(s),
        o.appendChild(p),
        (s.style.height = i.clientHeight - 80 + 'px'),
        i.appendChild(o),
        (this._dom = o);
    }),
    (CA.prototype.remove = function(t, e) {
      this._dom && e.getDom().removeChild(this._dom);
    }),
    (CA.prototype.dispose = function(t, e) {
      this.remove(t, e);
    }),
    hA('dataView', CA),
    Tf(
      {
        type: 'changeDataView',
        event: 'dataViewChanged',
        update: 'prepareAndUpdate',
      },
      function(t, n) {
        var o = [];
        E(t.newOption.series, function(t) {
          var e = n.getSeriesByName(t.name)[0];
          if (e) {
            var i = e.get('data');
            o.push({
              name: t.name,
              data: (function(t, n) {
                return O(t, function(t, e) {
                  var i = n && n[e];
                  return V(i) && !R(i)
                    ? (V(t) && !R(t) && (t = t.value), C({value: t}, i))
                    : t;
                });
              })(t.data, i),
            });
          } else o.push(P({type: 'scatter'}, t));
        }),
          n.mergeOption(C({series: o}, t.newOption));
      },
    );
  var LA = E,
    kA = w,
    PA = L,
    NA = ['dataToPoint', 'pointToData'],
    OA = [
      'grid',
      'xAxis',
      'yAxis',
      'geo',
      'graph',
      'polar',
      'radiusAxis',
      'angleAxis',
      'bmap',
    ];
  function EA(t, e, i) {
    var n = (this._targetInfoList = []),
      o = {},
      a = BA(e, t);
    LA(VA, function(t, e) {
      (i && i.include && !(0 <= kA(i.include, e))) || t(a, n, o);
    });
  }
  var RA = EA.prototype;
  function zA(t) {
    return t[0] > t[1] && t.reverse(), t;
  }
  function BA(t, e) {
    return Qo(t, e, {includeMainTypes: OA});
  }
  (RA.setOutputRanges = function(t, e) {
    this.matchOutputRanges(t, e, function(t, e, i) {
      if (((t.coordRanges || (t.coordRanges = [])).push(e), !t.coordRange)) {
        t.coordRange = e;
        var n = WA[t.brushType](0, i, e);
        t.__rangeOffset = {
          offset: ZA[t.brushType](n.values, t.range, [1, 1]),
          xyMinMax: n.xyMinMax,
        };
      }
    });
  }),
    (RA.matchOutputRanges = function(t, n, o) {
      LA(
        t,
        function(i) {
          var t = this.findTargetInfo(i, n);
          t &&
            !0 !== t &&
            E(t.coordSyses, function(t) {
              var e = WA[i.brushType](1, t, i.range);
              o(i, e.values, t, n);
            });
        },
        this,
      );
    }),
    (RA.setInputRanges = function(t, o) {
      LA(
        t,
        function(t) {
          var e = this.findTargetInfo(t, o);
          if (
            (D &&
              (q(
                !e || !0 === e || t.coordRange,
                'coordRange must be specified when coord index specified.',
              ),
              q(
                !e || !0 !== e || t.range,
                'range must be specified in global brush.',
              )),
            (t.range = t.range || []),
            e && !0 !== e)
          ) {
            t.panelId = e.panelId;
            var i = WA[t.brushType](0, e.coordSys, t.coordRange),
              n = t.__rangeOffset;
            t.range = n
              ? ZA[t.brushType](
                  i.values,
                  n.offset,
                  (function(t, e) {
                    var i = XA(t),
                      n = XA(e),
                      o = [i[0] / n[0], i[1] / n[1]];
                    return (
                      isNaN(o[0]) && (o[0] = 1), isNaN(o[1]) && (o[1] = 1), o
                    );
                  })(i.xyMinMax, n.xyMinMax),
                )
              : i.values;
          }
        },
        this,
      );
    }),
    (RA.makePanelOpts = function(i, n) {
      return O(this._targetInfoList, function(t) {
        var e = t.getPanelRect();
        return {
          panelId: t.panelId,
          defaultBrushType: n && n(t),
          clipPath: lS(e),
          isTargetByCursor: hS(e, i, t.coordSysModel),
          getLinearBrushOtherExtent: uS(e),
        };
      });
    }),
    (RA.controlSeries = function(t, e, i) {
      var n = this.findTargetInfo(t, i);
      return !0 === n || (n && 0 <= kA(n.coordSyses, e.coordinateSystem));
    }),
    (RA.findTargetInfo = function(t, e) {
      for (
        var i = this._targetInfoList, n = BA(e, t), o = 0;
        o < i.length;
        o++
      ) {
        var a = i[o],
          r = t.panelId;
        if (r) {
          if (a.panelId === r) return a;
        } else for (o = 0; o < GA.length; o++) if (GA[o](n, a)) return a;
      }
      return !0;
    });
  var VA = {
      grid: function(t, n) {
        var o = t.xAxisModels,
          a = t.yAxisModels,
          e = t.gridModels,
          i = et(),
          r = {},
          s = {};
        (o || a || e) &&
          (LA(o, function(t) {
            var e = t.axis.grid.model;
            i.set(e.id, e), (r[e.id] = !0);
          }),
          LA(a, function(t) {
            var e = t.axis.grid.model;
            i.set(e.id, e), (s[e.id] = !0);
          }),
          LA(e, function(t) {
            i.set(t.id, t), (r[t.id] = !0), (s[t.id] = !0);
          }),
          i.each(function(t) {
            var e = t.coordinateSystem,
              i = [];
            LA(e.getCartesians(), function(t, e) {
              (0 <= kA(o, t.getAxis('x').model) ||
                0 <= kA(a, t.getAxis('y').model)) &&
                i.push(t);
            }),
              n.push({
                panelId: 'grid--' + t.id,
                gridModel: t,
                coordSysModel: t,
                coordSys: i[0],
                coordSyses: i,
                getPanelRect: FA.grid,
                xAxisDeclared: r[t.id],
                yAxisDeclared: s[t.id],
              });
          }));
      },
      geo: function(t, i) {
        LA(t.geoModels, function(t) {
          var e = t.coordinateSystem;
          i.push({
            panelId: 'geo--' + t.id,
            geoModel: t,
            coordSysModel: t,
            coordSys: e,
            coordSyses: [e],
            getPanelRect: FA.geo,
          });
        });
      },
    },
    GA = [
      function(t, e) {
        var i = t.xAxisModel,
          n = t.yAxisModel,
          o = t.gridModel;
        return (
          !o && i && (o = i.axis.grid.model),
          !o && n && (o = n.axis.grid.model),
          o && o === e.gridModel
        );
      },
      function(t, e) {
        var i = t.geoModel;
        return i && i === e.geoModel;
      },
    ],
    FA = {
      grid: function() {
        return this.coordSys.grid.getRect().clone();
      },
      geo: function() {
        var t = this.coordSys,
          e = t.getBoundingRect().clone();
        return e.applyTransform(ml(t)), e;
      },
    },
    WA = {
      lineX: PA(HA, 0),
      lineY: PA(HA, 1),
      rect: function(t, e, i) {
        var n = e[NA[t]]([i[0][0], i[1][0]]),
          o = e[NA[t]]([i[0][1], i[1][1]]),
          a = [zA([n[0], o[0]]), zA([n[1], o[1]])];
        return {values: a, xyMinMax: a};
      },
      polygon: function(i, n, t) {
        var o = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
        return {
          values: O(t, function(t) {
            var e = n[NA[i]](t);
            return (
              (o[0][0] = Math.min(o[0][0], e[0])),
              (o[1][0] = Math.min(o[1][0], e[1])),
              (o[0][1] = Math.max(o[0][1], e[0])),
              (o[1][1] = Math.max(o[1][1], e[1])),
              e
            );
          }),
          xyMinMax: o,
        };
      },
    };
  function HA(t, e, i, n) {
    D &&
      q(
        'cartesian2d' === i.type,
        'lineX/lineY brush is available only in cartesian2d.',
      );
    var o = i.getAxis(['x', 'y'][t]),
      a = zA(
        O([0, 1], function(t) {
          return e
            ? o.coordToData(o.toLocalCoord(n[t]))
            : o.toGlobalCoord(o.dataToCoord(n[t]));
        }),
      ),
      r = [];
    return (r[t] = a), (r[1 - t] = [NaN, NaN]), {values: a, xyMinMax: r};
  }
  var ZA = {
    lineX: PA(UA, 0),
    lineY: PA(UA, 1),
    rect: function(t, e, i) {
      return [
        [t[0][0] - i[0] * e[0][0], t[0][1] - i[0] * e[0][1]],
        [t[1][0] - i[1] * e[1][0], t[1][1] - i[1] * e[1][1]],
      ];
    },
    polygon: function(t, i, n) {
      return O(t, function(t, e) {
        return [t[0] - n[0] * i[e][0], t[1] - n[1] * i[e][1]];
      });
    },
  };
  function UA(t, e, i, n) {
    return [e[0] - n[t] * i[0], e[1] - n[t] * i[1]];
  }
  function XA(t) {
    return t ? [t[0][1] - t[0][0], t[1][1] - t[1][0]] : [NaN, NaN];
  }
  var YA = E,
    jA = '\0_ec_hist_store';
  function qA(t) {
    var e = t[jA];
    return (e = e || (t[jA] = [{}]));
  }
  Ou.registerSubTypeDefaulter('dataZoom', function() {
    return 'slider';
  });
  var KA = ['cartesian2d', 'polar', 'singleAxis'];
  var $A,
    JA,
    QA,
    tD,
    eD =
      ((JA = ['axisIndex', 'axis', 'index', 'id']),
      (QA = O(
        ($A = ($A = ['x', 'y', 'z', 'radius', 'angle', 'single']).slice()),
        mu,
      )),
      (tD = O((JA = (JA || []).slice()), mu)),
      function(o, a) {
        E($A, function(t, e) {
          for (var i = {name: t, capital: QA[e]}, n = 0; n < JA.length; n++)
            i[JA[n]] = t + tD[n];
          o.call(a, i);
        });
      });
  function iD(o, a, r) {
    return function(t) {
      var e,
        i = {nodes: [], records: {}};
      if (
        (a(function(t) {
          i.records[t.name] = {};
        }),
        !t)
      )
        return i;
      for (s(t, i); (e = !1), o(n), e; );
      function n(t) {
        !(function(t, e) {
          return 0 <= w(e.nodes, t);
        })(t, i) &&
          (function(t, i) {
            var n = !1;
            return (
              a(function(e) {
                E(r(t, e) || [], function(t) {
                  i.records[e.name][t] && (n = !0);
                });
              }),
              n
            );
          })(t, i) &&
          (s(t, i), (e = !0));
      }
      return i;
    };
    function s(t, i) {
      i.nodes.push(t),
        a(function(e) {
          E(r(t, e) || [], function(t) {
            i.records[e.name][t] = !0;
          });
        });
    }
  }
  function nD(t, e, i, n) {
    (this._dimName = t),
      (this._axisIndex = e),
      this._valueWindow,
      this._percentWindow,
      this._dataExtent,
      this._minMaxSpan,
      (this.ecModel = n),
      (this._dataZoomModel = i);
  }
  var oD = E,
    aD = Fl;
  function rD(t, e) {
    var i = t.getAxisModel(),
      n = t._percentWindow,
      o = t._valueWindow;
    if (n) {
      var a = Zl(o, [0, 500]);
      a = Math.min(a, 20);
      var r = e || (0 === n[0] && 100 === n[1]);
      i.setRange(r ? null : +o[0].toFixed(a), r ? null : +o[1].toFixed(a));
    }
  }
  nD.prototype = {
    constructor: nD,
    hostedBy: function(t) {
      return this._dataZoomModel === t;
    },
    getDataValueWindow: function() {
      return this._valueWindow.slice();
    },
    getDataPercentWindow: function() {
      return this._percentWindow.slice();
    },
    getTargetSeriesModels: function() {
      var n = [],
        o = this.ecModel;
      return (
        o.eachSeries(function(t) {
          if (
            (function(t) {
              return 0 <= w(KA, t);
            })(t.get('coordinateSystem'))
          ) {
            var e = this._dimName,
              i = o.queryComponents({
                mainType: e + 'Axis',
                index: t.get(e + 'AxisIndex'),
                id: t.get(e + 'AxisId'),
              })[0];
            this._axisIndex === (i && i.componentIndex) && n.push(t);
          }
        }, this),
        n
      );
    },
    getAxisModel: function() {
      return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);
    },
    getOtherAxisModel: function() {
      var t,
        e,
        i,
        n = this._dimName,
        o = this.ecModel,
        a = this.getAxisModel();
      return (
        (t =
          'x' === n || 'y' === n
            ? ((e = 'gridIndex'), 'x' === n ? 'y' : 'x')
            : ((e = 'polarIndex'), 'angle' === n ? 'radius' : 'angle')),
        o.eachComponent(t + 'Axis', function(t) {
          (t.get(e) || 0) === (a.get(e) || 0) && (i = t);
        }),
        i
      );
    },
    getMinMaxSpan: function() {
      return k(this._minMaxSpan);
    },
    calculateDataWindow: function(o) {
      var a,
        r = this._dataExtent,
        s = this.getAxisModel().axis.scale,
        l = this._dataZoomModel.getRangePropMode(),
        u = [0, 100],
        h = [],
        c = [];
      oD(['start', 'end'], function(t, e) {
        var i = o[t],
          n = o[t + 'Value'];
        'percent' === l[e]
          ? (null == i && (i = u[e]), (n = s.parse(Bl(i, u, r))))
          : ((a = !0), (i = Bl((n = null == n ? r[e] : s.parse(n)), r, u))),
          (c[e] = n),
          (h[e] = i);
      }),
        aD(c),
        aD(h);
      var d = this._minMaxSpan;
      function t(t, e, i, n, o) {
        var a = o ? 'Span' : 'ValueSpan';
        ab(0, t, i, 'all', d['min' + a], d['max' + a]);
        for (var r = 0; r < 2; r++)
          (e[r] = Bl(t[r], i, n, !0)), o && (e[r] = s.parse(e[r]));
      }
      return (
        a ? t(c, h, r, u, !1) : t(h, c, u, r, !0),
        {valueWindow: c, percentWindow: h}
      );
    },
    reset: function(t) {
      if (t === this._dataZoomModel) {
        var e = this.getTargetSeriesModels();
        (this._dataExtent = (function(t, e, i) {
          var n = [1 / 0, -1 / 0];
          oD(i, function(t) {
            var i = t.getData();
            i &&
              oD(i.mapDimension(e, !0), function(t) {
                var e = i.getApproximateExtent(t);
                e[0] < n[0] && (n[0] = e[0]), e[1] > n[1] && (n[1] = e[1]);
              });
          }),
            n[1] < n[0] && (n = [NaN, NaN]);
          return (
            (function(t, e) {
              var i = t.getAxisModel(),
                n = i.getMin(!0),
                o = 'category' === i.get('type'),
                a = o && i.getCategories().length;
              null != n && 'dataMin' !== n && 'function' != typeof n
                ? (e[0] = n)
                : o && (e[0] = 0 < a ? 0 : NaN);
              var r = i.getMax(!0);
              null != r && 'dataMax' !== r && 'function' != typeof r
                ? (e[1] = r)
                : o && (e[1] = 0 < a ? a - 1 : NaN);
              i.get('scale', !0) ||
                (0 < e[0] && (e[0] = 0), e[1] < 0 && (e[1] = 0));
            })(t, n),
            n
          );
        })(this, this._dimName, e)),
          (function(n) {
            var o = (n._minMaxSpan = {}),
              a = n._dataZoomModel,
              r = n._dataExtent;
            oD(['min', 'max'], function(t) {
              var e = a.get(t + 'Span'),
                i = a.get(t + 'ValueSpan');
              null != i && (i = n.getAxisModel().axis.scale.parse(i)),
                null != i
                  ? (e = Bl(r[0] + i, r, [0, 100], !0))
                  : null != e && (i = Bl(e, [0, 100], r, !0) - r[0]),
                (o[t + 'Span'] = e),
                (o[t + 'ValueSpan'] = i);
            });
          })(this);
        var i = this.calculateDataWindow(t.settledOption);
        (this._valueWindow = i.valueWindow),
          (this._percentWindow = i.percentWindow),
          rD(this);
      }
    },
    restore: function(t) {
      t === this._dataZoomModel &&
        ((this._valueWindow = this._percentWindow = null), rD(this, !0));
    },
    filterData: function(t, e) {
      if (t === this._dataZoomModel) {
        var n = this._dimName,
          i = this.getTargetSeriesModels(),
          o = t.get('filterMode'),
          c = this._valueWindow;
        'none' !== o &&
          oD(i, function(i) {
            var u = i.getData(),
              h = u.mapDimension(n, !0);
            h.length &&
              ('weakFilter' === o
                ? u.filterSelf(function(t) {
                    for (var e, i, n, o = 0; o < h.length; o++) {
                      var a = u.get(h[o], t),
                        r = !isNaN(a),
                        s = a < c[0],
                        l = a > c[1];
                      if (r && !s && !l) return !0;
                      r && (n = !0), s && (e = !0), l && (i = !0);
                    }
                    return n && e && i;
                  })
                : oD(h, function(t) {
                    if ('empty' === o)
                      i.setData(
                        (u = u.map(t, function(t) {
                          return (function(t) {
                            return t >= c[0] && t <= c[1];
                          })(t)
                            ? t
                            : NaN;
                        })),
                      );
                    else {
                      var e = {};
                      (e[t] = c), u.selectRange(e);
                    }
                  }),
              oD(h, function(t) {
                u.setApproximateExtent(c, t);
              }));
          });
      }
    },
  };
  var sD = E,
    lD = eD,
    uD = Pf({
      type: 'dataZoom',
      dependencies: [
        'xAxis',
        'yAxis',
        'zAxis',
        'radiusAxis',
        'angleAxis',
        'singleAxis',
        'series',
      ],
      defaultOption: {
        zlevel: 0,
        z: 4,
        orient: null,
        xAxisIndex: null,
        yAxisIndex: null,
        filterMode: 'filter',
        throttle: null,
        start: 0,
        end: 100,
        startValue: null,
        endValue: null,
        minSpan: null,
        maxSpan: null,
        minValueSpan: null,
        maxValueSpan: null,
        rangeMode: null,
      },
      init: function(t, e, i) {
        (this._dataIntervalByAxis = {}),
          (this._dataInfo = {}),
          (this._axisProxies = {}),
          this.textStyleModel,
          (this._autoThrottle = !0),
          (this._rangePropMode = ['percent', 'percent']);
        var n = hD(t);
        (this.settledOption = n),
          this.mergeDefaultAndTheme(t, i),
          this.doInit(n);
      },
      mergeOption: function(t) {
        var e = hD(t);
        m(this.option, t, !0), m(this.settledOption, e, !0), this.doInit(e);
      },
      doInit: function(t) {
        var i = this.option;
        v.canvasSupported || (i.realtime = !1),
          this._setDefaultThrottle(t),
          cD(this, t);
        var n = this.settledOption;
        sD(
          [['start', 'startValue'], ['end', 'endValue']],
          function(t, e) {
            'value' === this._rangePropMode[e] && (i[t[0]] = n[t[0]] = null);
          },
          this,
        ),
          (this.textStyleModel = this.getModel('textStyle')),
          this._resetTarget(),
          this._giveAxisProxies();
      },
      _giveAxisProxies: function() {
        var r = this._axisProxies;
        this.eachTargetAxis(function(t, e, i, n) {
          var o = this.dependentModels[t.axis][e],
            a =
              o.__dzAxisProxy || (o.__dzAxisProxy = new nD(t.name, e, this, n));
          r[t.name + '_' + e] = a;
        }, this);
      },
      _resetTarget: function() {
        var i = this.option,
          t = this._judgeAutoMode();
        lD(function(t) {
          var e = t.axisIndex;
          i[e] = Wo(i[e]);
        }, this),
          'axisIndex' === t
            ? this._autoSetAxisIndex()
            : 'orient' === t && this._autoSetOrient();
      },
      _judgeAutoMode: function() {
        var e = this.option,
          i = !1;
        lD(function(t) {
          null != e[t.axisIndex] && (i = !0);
        }, this);
        var t = e.orient;
        return null == t && i
          ? 'orient'
          : i
          ? void 0
          : (null == t && (e.orient = 'horizontal'), 'axisIndex');
      },
      _autoSetAxisIndex: function() {
        var a = !0,
          e = this.get('orient', !0),
          r = this.option,
          t = this.dependentModels;
        if (a) {
          var i = 'vertical' === e ? 'y' : 'x';
          t[i + 'Axis'].length
            ? ((r[i + 'AxisIndex'] = [0]), (a = !1))
            : sD(t.singleAxis, function(t) {
                a &&
                  t.get('orient', !0) === e &&
                  ((r.singleAxisIndex = [t.componentIndex]), (a = !1));
              });
        }
        a &&
          lD(function(t) {
            if (a) {
              var e = [],
                i = this.dependentModels[t.axis];
              if (i.length && !e.length)
                for (var n = 0, o = i.length; n < o; n++)
                  'category' === i[n].get('type') && e.push(n);
              (r[t.axisIndex] = e).length && (a = !1);
            }
          }, this),
          a &&
            this.ecModel.eachSeries(function(a) {
              this._isSeriesHasAllAxesTypeOf(a, 'value') &&
                lD(function(t) {
                  var e = r[t.axisIndex],
                    i = a.get(t.axisIndex),
                    n = a.get(t.axisId),
                    o = a.ecModel.queryComponents({
                      mainType: t.axis,
                      index: i,
                      id: n,
                    })[0];
                  if (D && !o)
                    throw new Error(t.axis + ' "' + Z(i, n, 0) + '" not found');
                  w(e, (i = o.componentIndex)) < 0 && e.push(i);
                });
            }, this);
      },
      _autoSetOrient: function() {
        var e;
        this.eachTargetAxis(function(t) {
          e = e || t.name;
        }, this),
          (this.option.orient = 'y' === e ? 'vertical' : 'horizontal');
      },
      _isSeriesHasAllAxesTypeOf: function(n, o) {
        var a = !0;
        return (
          lD(function(t) {
            var e = n.get(t.axisIndex),
              i = this.dependentModels[t.axis][e];
            (i && i.get('type') === o) || (a = !1);
          }, this),
          a
        );
      },
      _setDefaultThrottle: function(t) {
        if (
          (t.hasOwnProperty('throttle') && (this._autoThrottle = !1),
          this._autoThrottle)
        ) {
          var e = this.ecModel.option;
          this.option.throttle =
            e.animation && 0 < e.animationDurationUpdate ? 100 : 20;
        }
      },
      getFirstTargetAxisModel: function() {
        var i;
        return (
          lD(function(t) {
            if (null == i) {
              var e = this.get(t.axisIndex);
              e.length && (i = this.dependentModels[t.axis][e[0]]);
            }
          }, this),
          i
        );
      },
      eachTargetAxis: function(i, n) {
        var o = this.ecModel;
        lD(function(e) {
          sD(
            this.get(e.axisIndex),
            function(t) {
              i.call(n, e, t, this, o);
            },
            this,
          );
        }, this);
      },
      getAxisProxy: function(t, e) {
        return this._axisProxies[t + '_' + e];
      },
      getAxisModel: function(t, e) {
        var i = this.getAxisProxy(t, e);
        return i && i.getAxisModel();
      },
      setRawRange: function(e) {
        var i = this.option,
          n = this.settledOption;
        sD(
          [['start', 'startValue'], ['end', 'endValue']],
          function(t) {
            (null == e[t[0]] && null == e[t[1]]) ||
              ((i[t[0]] = n[t[0]] = e[t[0]]), (i[t[1]] = n[t[1]] = e[t[1]]));
          },
          this,
        ),
          cD(this, e);
      },
      setCalculatedRange: function(e) {
        var i = this.option;
        sD(['start', 'startValue', 'end', 'endValue'], function(t) {
          i[t] = e[t];
        });
      },
      getPercentRange: function() {
        var t = this.findRepresentativeAxisProxy();
        if (t) return t.getDataPercentWindow();
      },
      getValueRange: function(t, e) {
        if (null != t || null != e)
          return this.getAxisProxy(t, e).getDataValueWindow();
        var i = this.findRepresentativeAxisProxy();
        return i ? i.getDataValueWindow() : void 0;
      },
      findRepresentativeAxisProxy: function(t) {
        if (t) return t.__dzAxisProxy;
        var e = this._axisProxies;
        for (var i in e)
          if (e.hasOwnProperty(i) && e[i].hostedBy(this)) return e[i];
        for (var i in e)
          if (e.hasOwnProperty(i) && !e[i].hostedBy(this)) return e[i];
      },
      getRangePropMode: function() {
        return this._rangePropMode.slice();
      },
    });
  function hD(e) {
    var i = {};
    return (
      sD(['start', 'end', 'startValue', 'endValue', 'throttle'], function(t) {
        e.hasOwnProperty(t) && (i[t] = e[t]);
      }),
      i
    );
  }
  function cD(t, o) {
    var a = t._rangePropMode,
      r = t.get('rangeMode');
    sD([['start', 'startValue'], ['end', 'endValue']], function(t, e) {
      var i = null != o[t[0]],
        n = null != o[t[1]];
      i && !n
        ? (a[e] = 'percent')
        : !i && n
        ? (a[e] = 'value')
        : r
        ? (a[e] = r[e])
        : i && (a[e] = 'percent');
    });
  }
  var dD = xc.extend({
    type: 'dataZoom',
    render: function(t, e, i, n) {
      (this.dataZoomModel = t), (this.ecModel = e), (this.api = i);
    },
    getTargetCoordInfo: function() {
      var t = this.dataZoomModel,
        o = this.ecModel,
        a = {};
      return (
        t.eachTargetAxis(function(t, e) {
          var i = o.getComponent(t.axis, e);
          if (i) {
            var n = i.getCoordSysModel();
            n &&
              (function(t, e, i, n) {
                for (var o, a = 0; a < i.length; a++)
                  if (i[a].model === t) {
                    o = i[a];
                    break;
                  }
                o || i.push((o = {model: t, axisModels: [], coordIndex: n}));
                o.axisModels.push(e);
              })(n, i, a[n.mainType] || (a[n.mainType] = []), n.componentIndex);
          }
        }, this),
        a
      );
    },
  });
  uD.extend({type: 'dataZoom.select'}),
    dD.extend({type: 'dataZoom.select'}),
    If({
      getTargetSeries: function(t) {
        var n = et();
        return (
          t.eachComponent('dataZoom', function(t) {
            t.eachTargetAxis(function(t, e, i) {
              E(i.getAxisProxy(t.name, e).getTargetSeriesModels(), function(t) {
                n.set(t.uid, t);
              });
            });
          }),
          n
        );
      },
      modifyOutputEnd: !0,
      overallReset: function(t, n) {
        t.eachComponent('dataZoom', function(t) {
          t.eachTargetAxis(function(t, e, i) {
            i.getAxisProxy(t.name, e).reset(i, n);
          }),
            t.eachTargetAxis(function(t, e, i) {
              i.getAxisProxy(t.name, e).filterData(i, n);
            });
        }),
          t.eachComponent('dataZoom', function(t) {
            var e = t.findRepresentativeAxisProxy(),
              i = e.getDataPercentWindow(),
              n = e.getDataValueWindow();
            t.setCalculatedRange({
              start: i[0],
              end: i[1],
              startValue: n[0],
              endValue: n[1],
            });
          });
      },
    }),
    Tf('dataZoom', function(i, t) {
      var n = iD(A(t.eachComponent, t, 'dataZoom'), eD, function(t, e) {
          return t.get(e.axisIndex);
        }),
        o = [];
      t.eachComponent({mainType: 'dataZoom', query: i}, function(t, e) {
        o.push.apply(o, n(t).nodes);
      }),
        E(o, function(t, e) {
          t.setRawRange({
            start: i.start,
            end: i.end,
            startValue: i.startValue,
            endValue: i.endValue,
          });
        });
    });
  var fD = Bc.toolbox.dataZoom,
    pD = E;
  function gD(t, e, i) {
    (this._brushController = new Pb(i.getZr()))
      .on('brush', A(this._onBrush, this))
      .mount(),
      this._isZoomActive;
  }
  gD.defaultOption = {
    show: !0,
    filterMode: 'filter',
    icon: {
      zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',
      back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26',
    },
    title: k(fD.title),
  };
  var mD = gD.prototype;
  (mD.render = function(t, e, i, n) {
    (this.model = t),
      (this.ecModel = e),
      (this.api = i),
      (function(t, e, i, n, o) {
        var a = i._isZoomActive;
        n &&
          'takeGlobalCursor' === n.type &&
          (a = 'dataZoomSelect' === n.key && n.dataZoomSelectActive);
        (i._isZoomActive = a),
          t.setIconStatus('zoom', a ? 'emphasis' : 'normal');
        var r = new EA(yD(t.option), e, {include: ['grid']});
        i._brushController
          .setPanels(
            r.makePanelOpts(o, function(t) {
              return t.xAxisDeclared && !t.yAxisDeclared
                ? 'lineX'
                : !t.xAxisDeclared && t.yAxisDeclared
                ? 'lineY'
                : 'rect';
            }),
          )
          .enableBrush(
            !!a && {
              brushType: 'auto',
              brushStyle: {lineWidth: 0, fill: 'rgba(0,0,0,0.2)'},
            },
          );
      })(t, e, this, n, i),
      (function(t, e) {
        t.setIconStatus(
          'back',
          1 <
            (function(t) {
              return qA(t).length;
            })(e)
            ? 'emphasis'
            : 'normal',
        );
      })(t, e);
  }),
    (mD.onclick = function(t, e, i) {
      vD[i].call(this);
    }),
    (mD.remove = function(t, e) {
      this._brushController.unmount();
    }),
    (mD.dispose = function(t, e) {
      this._brushController.dispose();
    });
  var vD = {
    zoom: function() {
      var t = !this._isZoomActive;
      this.api.dispatchAction({
        type: 'takeGlobalCursor',
        key: 'dataZoomSelect',
        dataZoomSelectActive: t,
      });
    },
    back: function() {
      this._dispatchZoomAction(
        (function(t) {
          var n = qA(t),
            e = n[n.length - 1];
          1 < n.length && n.pop();
          var o = {};
          return (
            YA(e, function(t, e) {
              for (var i = n.length - 1; 0 <= i; i--) {
                if ((t = n[i][e])) {
                  o[e] = t;
                  break;
                }
              }
            }),
            o
          );
        })(this.ecModel),
      );
    },
  };
  function yD(e) {
    var i = {};
    return (
      E(['xAxisIndex', 'yAxisIndex'], function(t) {
        (i[t] = e[t]),
          null == i[t] && (i[t] = 'all'),
          (!1 !== i[t] && 'none' !== i[t]) || (i[t] = []);
      }),
      i
    );
  }
  (mD._onBrush = function(t, e) {
    if (e.isEnd && t.length) {
      var s = {},
        l = this.ecModel;
      this._brushController.updateCovers([]),
        new EA(yD(this.model.option), l, {include: ['grid']}).matchOutputRanges(
          t,
          l,
          function(t, e, i) {
            if ('cartesian2d' === i.type) {
              var n = t.brushType;
              'rect' === n
                ? (o('x', i, e[0]), o('y', i, e[1]))
                : o({lineX: 'x', lineY: 'y'}[n], i, e);
            }
          },
        ),
        (function(a, t) {
          var r = qA(a);
          YA(t, function(t, e) {
            for (var i = r.length - 1; 0 <= i; i--) {
              if (r[i][e]) break;
            }
            if (i < 0) {
              var n = a.queryComponents({
                mainType: 'dataZoom',
                subType: 'select',
                id: e,
              })[0];
              if (n) {
                var o = n.getPercentRange();
                r[0][e] = {dataZoomId: e, start: o[0], end: o[1]};
              }
            }
          }),
            r.push(t);
        })(l, s),
        this._dispatchZoomAction(s);
    }
    function o(t, e, i) {
      var n = e.getAxis(t),
        o = n.model,
        a = (function(e, i, t) {
          var n;
          return (
            t.eachComponent({mainType: 'dataZoom', subType: 'select'}, function(
              t,
            ) {
              t.getAxisModel(e, i.componentIndex) && (n = t);
            }),
            n
          );
        })(t, o, l),
        r = a.findRepresentativeAxisProxy(o).getMinMaxSpan();
      (null == r.minValueSpan && null == r.maxValueSpan) ||
        (i = ab(
          0,
          i.slice(),
          n.scale.getExtent(),
          0,
          r.minValueSpan,
          r.maxValueSpan,
        )),
        a && (s[a.id] = {dataZoomId: a.id, startValue: i[0], endValue: i[1]});
    }
  }),
    (mD._dispatchZoomAction = function(t) {
      var i = [];
      pD(t, function(t, e) {
        i.push(k(t));
      }),
        i.length &&
          this.api.dispatchAction({type: 'dataZoom', from: this.uid, batch: i});
    }),
    hA('dataZoom', gD),
    Mf(function(s) {
      if (s) {
        var l = s.dataZoom || (s.dataZoom = []);
        R(l) || (s.dataZoom = l = [l]);
        var t = s.toolbox;
        if (t && (R(t) && (t = t[0]), t && t.feature)) {
          var e = t.feature.dataZoom;
          i('xAxis', e), i('yAxis', e);
        }
      }
      function i(n, o) {
        if (o) {
          var a = n + 'Index',
            r = o[a];
          null == r ||
            'all' === r ||
            R(r) ||
            (r = !1 === r || 'none' === r ? [] : [r]),
            (function(t, e) {
              var i = s[t];
              R(i) || (i = i ? [i] : []);
              pD(i, e);
            })(n, function(t, e) {
              if (null == r || 'all' === r || -1 !== w(r, e)) {
                var i = {
                  type: 'select',
                  $fromToolbox: !0,
                  filterMode: o.filterMode || 'filter',
                  id: '\0_ec_\0toolbox-dataZoom_' + n + e,
                };
                (i[a] = e), l.push(i);
              }
            });
        }
      }
    });
  var xD = Bc.toolbox.restore;
  function _D(t) {
    this.model = t;
  }
  (_D.defaultOption = {
    show: !0,
    icon:
      'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',
    title: xD.title,
  }),
    (_D.prototype.onclick = function(t, e, i) {
      !(function(t) {
        t[jA] = null;
      })(t),
        e.dispatchAction({type: 'restore', from: this.uid});
    }),
    hA('restore', _D),
    Tf(
      {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},
      function(t, e) {
        e.resetOption('recreate');
      },
    ),
    Pf({
      type: 'tooltip',
      dependencies: ['axisPointer'],
      defaultOption: {
        zlevel: 0,
        z: 60,
        show: !0,
        showContent: !0,
        trigger: 'item',
        triggerOn: 'mousemove|click',
        alwaysShowContent: !1,
        displayMode: 'single',
        renderMode: 'auto',
        confine: !1,
        showDelay: 0,
        hideDelay: 100,
        transitionDuration: 0.4,
        enterable: !1,
        backgroundColor: 'rgba(50,50,50,0.7)',
        borderColor: '#333',
        borderRadius: 4,
        borderWidth: 0,
        padding: 5,
        extraCssText: '',
        axisPointer: {
          type: 'line',
          axis: 'auto',
          animation: 'auto',
          animationDurationUpdate: 200,
          animationEasingUpdate: 'exponentialOut',
          crossStyle: {color: '#999', width: 1, type: 'dashed', textStyle: {}},
        },
        textStyle: {color: '#fff', fontSize: 14},
      },
    });
  var wD = E,
    bD = ou,
    SD = ['', '-webkit-', '-moz-', '-o-'];
  function MD(o) {
    var a = [],
      t = o.get('transitionDuration'),
      e = o.get('backgroundColor'),
      i = o.getModel('textStyle'),
      n = o.get('padding');
    return (
      t &&
        a.push(
          (function(t) {
            var e = 'cubic-bezier(0.23, 1, 0.32, 1)',
              i = 'left ' + t + 's ' + e + ',top ' + t + 's ' + e;
            return O(SD, function(t) {
              return t + 'transition:' + i;
            }).join(';');
          })(t),
        ),
      e &&
        (v.canvasSupported
          ? a.push('background-Color:' + e)
          : (a.push('background-Color:#' + Xe(e)),
            a.push('filter:alpha(opacity=70)'))),
      wD(['width', 'color', 'radius'], function(t) {
        var e = 'border-' + t,
          i = bD(e),
          n = o.get(i);
        null != n && a.push(e + ':' + n + ('color' === t ? '' : 'px'));
      }),
      a.push(
        (function(i) {
          var n = [],
            t = i.get('fontSize'),
            e = i.getTextColor();
          return (
            e && n.push('color:' + e),
            n.push('font:' + i.getFont()),
            t && n.push('line-height:' + Math.round((3 * t) / 2) + 'px'),
            wD(['decoration', 'align'], function(t) {
              var e = i.get(t);
              e && n.push('text-' + t + ':' + e);
            }),
            n.join(';')
          );
        })(i),
      ),
      null != n && a.push('padding:' + au(n).join('px ') + 'px'),
      a.join(';') + ';'
    );
  }
  function ID(t, e, i, n, o) {
    var a = e && e.painter;
    if (i) {
      var r = a && a.getViewportRoot();
      r &&
        (function(t, e, i, n, o) {
          Bt(zt, e, n, o, !0) && Bt(t, i, zt[0], zt[1]);
        })(t, r, document.body, n, o);
    } else {
      (t[0] = n), (t[1] = o);
      var s = a && a.getViewportRootOffset();
      s && ((t[0] += s.offsetLeft), (t[1] += s.offsetTop));
    }
  }
  function TD(t, e, i) {
    if (v.wxa) return null;
    var n = document.createElement('div');
    (n.domBelongToZr = !0), (this.el = n);
    var o = (this._zr = e.getZr()),
      a = (this._appendToBody = i && i.appendToBody);
    (this._styleCoord = [0, 0]),
      ID(this._styleCoord, o, a, e.getWidth() / 2, e.getHeight() / 2),
      a ? document.body.appendChild(n) : t.appendChild(n),
      (this._container = t),
      (this._show = !1),
      this._hideTimeout;
    var r = this;
    (n.onmouseenter = function() {
      r._enterable && (clearTimeout(r._hideTimeout), (r._show = !0)),
        (r._inContent = !0);
    }),
      (n.onmousemove = function(t) {
        if (((t = t || window.event), !r._enterable)) {
          var e = o.handler;
          Xt(o.painter.getViewportRoot(), t, !0), e.dispatch('mousemove', t);
        }
      }),
      (n.onmouseleave = function() {
        r._enterable && r._show && r.hideLater(r._hideDelay),
          (r._inContent = !1);
      });
  }
  function AD(t) {
    (this._zr = t.getZr()), (this._show = !1), this._hideTimeout;
  }
  (TD.prototype = {
    constructor: TD,
    _enterable: !0,
    update: function() {
      var t = this._container,
        e = t.currentStyle || document.defaultView.getComputedStyle(t),
        i = t.style;
      'absolute' !== i.position &&
        'absolute' !== e.position &&
        (i.position = 'relative');
    },
    show: function(t) {
      clearTimeout(this._hideTimeout);
      var e = this.el,
        i = this._styleCoord;
      (e.style.cssText =
        'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;' +
        MD(t) +
        ';left:' +
        i[0] +
        'px;top:' +
        i[1] +
        'px;' +
        (t.get('extraCssText') || '')),
        (e.style.display = e.innerHTML ? 'block' : 'none'),
        (e.style.pointerEvents = this._enterable ? 'auto' : 'none'),
        (this._show = !0);
    },
    setContent: function(t) {
      this.el.innerHTML = null == t ? '' : t;
    },
    setEnterable: function(t) {
      this._enterable = t;
    },
    getSize: function() {
      var t = this.el;
      return [t.clientWidth, t.clientHeight];
    },
    moveTo: function(t, e) {
      var i = this._styleCoord;
      ID(i, this._zr, this._appendToBody, t, e);
      var n = this.el.style;
      (n.left = i[0] + 'px'), (n.top = i[1] + 'px');
    },
    hide: function() {
      (this.el.style.display = 'none'), (this._show = !1);
    },
    hideLater: function(t) {
      !this._show ||
        (this._inContent && this._enterable) ||
        (t
          ? ((this._hideDelay = t),
            (this._show = !1),
            (this._hideTimeout = setTimeout(A(this.hide, this), t)))
          : this.hide());
    },
    isShow: function() {
      return this._show;
    },
    dispose: function() {
      this.el.parentNode.removeChild(this.el);
    },
    getOuterSize: function() {
      var t = this.el.clientWidth,
        e = this.el.clientHeight;
      if (document.defaultView && document.defaultView.getComputedStyle) {
        var i = document.defaultView.getComputedStyle(this.el);
        i &&
          ((t +=
            parseInt(i.borderLeftWidth, 10) + parseInt(i.borderRightWidth, 10)),
          (e +=
            parseInt(i.borderTopWidth, 10) +
            parseInt(i.borderBottomWidth, 10)));
      }
      return {width: t, height: e};
    },
  }),
    (AD.prototype = {
      constructor: AD,
      _enterable: !0,
      update: function() {},
      show: function(t) {
        this._hideTimeout && clearTimeout(this._hideTimeout),
          this.el.attr('show', !0),
          (this._show = !0);
      },
      setContent: function(t, e, i) {
        this.el && this._zr.remove(this.el);
        for (var n = {}, o = t, a = '{marker', r = o.indexOf(a); 0 <= r; ) {
          var s = o.indexOf('|}'),
            l = o.substr(r + a.length, s - r - a.length);
          -1 < l.indexOf('sub')
            ? (n['marker' + l] = {
                textWidth: 4,
                textHeight: 4,
                textBorderRadius: 2,
                textBackgroundColor: e[l],
                textOffset: [3, 0],
              })
            : (n['marker' + l] = {
                textWidth: 10,
                textHeight: 10,
                textBorderRadius: 5,
                textBackgroundColor: e[l],
              }),
            (r = (o = o.substr(s + 1)).indexOf('{marker'));
        }
        (this.el = new jr({
          style: {
            rich: n,
            text: t,
            textLineHeight: 20,
            textBackgroundColor: i.get('backgroundColor'),
            textBorderRadius: i.get('borderRadius'),
            textFill: i.get('textStyle.color'),
            textPadding: i.get('padding'),
          },
          z: i.get('z'),
        })),
          this._zr.add(this.el);
        var u = this;
        this.el.on('mouseover', function() {
          u._enterable && (clearTimeout(u._hideTimeout), (u._show = !0)),
            (u._inContent = !0);
        }),
          this.el.on('mouseout', function() {
            u._enterable && u._show && u.hideLater(u._hideDelay),
              (u._inContent = !1);
          });
      },
      setEnterable: function(t) {
        this._enterable = t;
      },
      getSize: function() {
        var t = this.el.getBoundingRect();
        return [t.width, t.height];
      },
      moveTo: function(t, e) {
        this.el && this.el.attr('position', [t, e]);
      },
      hide: function() {
        this.el && this.el.hide(), (this._show = !1);
      },
      hideLater: function(t) {
        !this._show ||
          (this._inContent && this._enterable) ||
          (t
            ? ((this._hideDelay = t),
              (this._show = !1),
              (this._hideTimeout = setTimeout(A(this.hide, this), t)))
            : this.hide());
      },
      isShow: function() {
        return this._show;
      },
      getOuterSize: function() {
        var t = this.getSize();
        return {width: t[0], height: t[1]};
      },
    });
  var DD = A,
    CD = E,
    LD = Vl,
    kD = new us({shape: {x: -1, y: -1, width: 2, height: 2}});
  function PD(t) {
    for (var e = t.pop(); t.length; ) {
      var i = t.pop();
      i &&
        (Pl.isInstance(i) && (i = i.get('tooltip', !0)),
        'string' == typeof i && (i = {formatter: i}),
        (e = new Pl(i, e, e.ecModel)));
    }
    return e;
  }
  function ND(t, e) {
    return t.dispatchAction || A(e.dispatchAction, e);
  }
  function OD(t) {
    return 'center' === t || 'middle' === t;
  }
  Nf({
    type: 'tooltip',
    init: function(t, e) {
      if (!v.node) {
        var i,
          n = t.getComponent('tooltip'),
          o = n.get('renderMode');
        (this._renderMode = ia(o)),
          'html' === this._renderMode
            ? ((i = new TD(e.getDom(), e, {
                appendToBody: n.get('appendToBody', !0),
              })),
              (this._newLine = '<br/>'))
            : ((i = new AD(e)), (this._newLine = '\n')),
          (this._tooltipContent = i);
      }
    },
    render: function(t, e, i) {
      if (!v.node) {
        this.group.removeAll(),
          (this._tooltipModel = t),
          (this._ecModel = e),
          (this._api = i),
          (this._lastDataByCoordSys = null),
          (this._alwaysShowContent = t.get('alwaysShowContent'));
        var n = this._tooltipContent;
        n.update(),
          n.setEnterable(t.get('enterable')),
          this._initGlobalListener(),
          this._keepShow();
      }
    },
    _initGlobalListener: function() {
      var n = this._tooltipModel.get('triggerOn');
      _I(
        'itemTooltip',
        this._api,
        DD(function(t, e, i) {
          'none' !== n &&
            (0 <= n.indexOf(t)
              ? this._tryShow(e, i)
              : 'leave' === t && this._hide(i));
        }, this),
      );
    },
    _keepShow: function() {
      var t = this._tooltipModel,
        e = this._ecModel,
        i = this._api;
      if (
        null != this._lastX &&
        null != this._lastY &&
        'none' !== t.get('triggerOn')
      ) {
        var n = this;
        clearTimeout(this._refreshUpdateTimeout),
          (this._refreshUpdateTimeout = setTimeout(function() {
            i.isDisposed() ||
              n.manuallyShowTip(t, e, i, {x: n._lastX, y: n._lastY});
          }));
      }
    },
    manuallyShowTip: function(t, e, i, n) {
      if (n.from !== this.uid && !v.node) {
        var o = ND(n, i);
        this._ticket = '';
        var a = n.dataByCoordSys;
        if (n.tooltip && null != n.x && null != n.y) {
          var r = kD;
          (r.position = [n.x, n.y]),
            r.update(),
            (r.tooltip = n.tooltip),
            this._tryShow({offsetX: n.x, offsetY: n.y, target: r}, o);
        } else if (a)
          this._tryShow(
            {
              offsetX: n.x,
              offsetY: n.y,
              position: n.position,
              dataByCoordSys: n.dataByCoordSys,
              tooltipOption: n.tooltipOption,
            },
            o,
          );
        else if (null != n.seriesIndex) {
          if (this._manuallyAxisShowTip(t, e, i, n)) return;
          var s = uI(n, e),
            l = s.point[0],
            u = s.point[1];
          null != l &&
            null != u &&
            this._tryShow(
              {offsetX: l, offsetY: u, position: n.position, target: s.el},
              o,
            );
        } else
          null != n.x &&
            null != n.y &&
            (i.dispatchAction({type: 'updateAxisPointer', x: n.x, y: n.y}),
            this._tryShow(
              {
                offsetX: n.x,
                offsetY: n.y,
                position: n.position,
                target: i.getZr().findHover(n.x, n.y).target,
              },
              o,
            ));
      }
    },
    manuallyHideTip: function(t, e, i, n) {
      var o = this._tooltipContent;
      !this._alwaysShowContent &&
        this._tooltipModel &&
        o.hideLater(this._tooltipModel.get('hideDelay')),
        (this._lastX = this._lastY = null),
        n.from !== this.uid && this._hide(ND(n, i));
    },
    _manuallyAxisShowTip: function(t, e, i, n) {
      var o = n.seriesIndex,
        a = n.dataIndex,
        r = e.getComponent('axisPointer').coordSysAxesInfo;
      if (null != o && null != a && null != r) {
        var s = e.getSeriesByIndex(o);
        if (s)
          if (
            'axis' ===
            (t = PD([
              s.getData().getItemModel(a),
              s,
              (s.coordinateSystem || {}).model,
              t,
            ])).get('trigger')
          )
            return (
              i.dispatchAction({
                type: 'updateAxisPointer',
                seriesIndex: o,
                dataIndex: a,
                position: n.position,
              }),
              !0
            );
      }
    },
    _tryShow: function(t, e) {
      var i = t.target;
      if (this._tooltipModel) {
        (this._lastX = t.offsetX), (this._lastY = t.offsetY);
        var n = t.dataByCoordSys;
        n && n.length
          ? this._showAxisTooltip(n, t)
          : i && null != i.dataIndex
          ? ((this._lastDataByCoordSys = null),
            this._showSeriesItemTooltip(t, i, e))
          : i && i.tooltip
          ? ((this._lastDataByCoordSys = null),
            this._showComponentItemTooltip(t, i, e))
          : ((this._lastDataByCoordSys = null), this._hide(e));
      }
    },
    _showOrMove: function(t, e) {
      var i = t.get('showDelay');
      (e = A(e, this)),
        clearTimeout(this._showTimout),
        0 < i ? (this._showTimout = setTimeout(e, i)) : e();
    },
    _showAxisTooltip: function(t, e) {
      var d = this._ecModel,
        i = this._tooltipModel,
        n = [e.offsetX, e.offsetY],
        o = [],
        f = [],
        a = PD([e.tooltipOption, i]),
        p = this._renderMode,
        r = this._newLine,
        g = {};
      CD(
        t,
        function(t) {
          CD(t.dataByAxis, function(s) {
            var l = d.getComponent(s.axisDim + 'Axis', s.axisIndex),
              u = s.value,
              h = [];
            if (l && null != u) {
              var c = EI(u, l.axis, d, s.seriesDataIndices, s.valueLabelOpt);
              E(s.seriesDataIndices, function(t) {
                var e = d.getSeriesByIndex(t.seriesIndex),
                  i = t.dataIndexInside,
                  n = e && e.getDataParams(i);
                if (
                  ((n.axisDim = s.axisDim),
                  (n.axisIndex = s.axisIndex),
                  (n.axisType = s.axisType),
                  (n.axisId = s.axisId),
                  (n.axisValue = mg(l.axis, u)),
                  (n.axisValueLabel = c),
                  n)
                ) {
                  f.push(n);
                  var o,
                    a = e.formatTooltip(i, !0, null, p);
                  if (V(a)) {
                    o = a.html;
                    var r = a.markers;
                    m(g, r);
                  } else o = a;
                  h.push(o);
                }
              });
              var t = c;
              'html' !== p
                ? o.push(h.join(r))
                : o.push((t ? lu(t) + r : '') + h.join(r));
            }
          });
        },
        this,
      ),
        o.reverse(),
        (o = o.join(this._newLine + this._newLine));
      var s = e.position;
      this._showOrMove(a, function() {
        this._updateContentNotChangedOnAxis(t)
          ? this._updatePosition(a, s, n[0], n[1], this._tooltipContent, f)
          : this._showTooltipContent(
              a,
              o,
              f,
              Math.random(),
              n[0],
              n[1],
              s,
              void 0,
              g,
            );
      });
    },
    _showSeriesItemTooltip: function(t, e, i) {
      var n = this._ecModel,
        o = e.seriesIndex,
        a = n.getSeriesByIndex(o),
        r = e.dataModel || a,
        s = e.dataIndex,
        l = e.dataType,
        u = r.getData(l),
        h = PD([
          u.getItemModel(s),
          r,
          a && (a.coordinateSystem || {}).model,
          this._tooltipModel,
        ]),
        c = h.get('trigger');
      if (null == c || 'item' === c) {
        var d,
          f,
          p = r.getDataParams(s, l),
          g = r.formatTooltip(s, !1, l, this._renderMode);
        f = V(g) ? ((d = g.html), g.markers) : ((d = g), null);
        var m = 'item_' + r.name + '_' + s;
        this._showOrMove(h, function() {
          this._showTooltipContent(
            h,
            d,
            p,
            m,
            t.offsetX,
            t.offsetY,
            t.position,
            t.target,
            f,
          );
        }),
          i({
            type: 'showTip',
            dataIndexInside: s,
            dataIndex: u.getRawIndex(s),
            seriesIndex: o,
            from: this.uid,
          });
      }
    },
    _showComponentItemTooltip: function(t, e, i) {
      var n = e.tooltip;
      if ('string' == typeof n) {
        n = {content: n, formatter: n};
      }
      var o = new Pl(n, this._tooltipModel, this._ecModel),
        a = o.get('content'),
        r = Math.random();
      this._showOrMove(o, function() {
        this._showTooltipContent(
          o,
          a,
          o.get('formatterParams') || {},
          r,
          t.offsetX,
          t.offsetY,
          t.position,
          e,
        );
      }),
        i({type: 'showTip', from: this.uid});
    },
    _showTooltipContent: function(i, t, n, e, o, a, r, s, l) {
      if (((this._ticket = ''), i.get('showContent') && i.get('show'))) {
        var u = this._tooltipContent,
          h = i.get('formatter');
        r = r || i.get('position');
        var c = t;
        if (h && 'string' == typeof h) c = cu(h, n, !0);
        else if ('function' == typeof h) {
          var d = DD(function(t, e) {
            t === this._ticket &&
              (u.setContent(e, l, i),
              this._updatePosition(i, r, o, a, u, n, s));
          }, this);
          (this._ticket = e), (c = h(n, e, d));
        }
        u.setContent(c, l, i),
          u.show(i),
          this._updatePosition(i, r, o, a, u, n, s);
      }
    },
    _updatePosition: function(t, e, i, n, o, a, r) {
      var s = this._api.getWidth(),
        l = this._api.getHeight();
      e = e || t.get('position');
      var u = o.getSize(),
        h = t.get('align'),
        c = t.get('verticalAlign'),
        d = r && r.getBoundingRect().clone();
      if (
        (r && d.applyTransform(r.transform),
        'function' == typeof e &&
          (e = e([i, n], a, o.el, d, {
            viewSize: [s, l],
            contentSize: u.slice(),
          })),
        R(e))
      )
        (i = LD(e[0], s)), (n = LD(e[1], l));
      else if (V(e)) {
        (e.width = u[0]), (e.height = u[1]);
        var f = Iu(e, {width: s, height: l});
        (i = f.x), (n = f.y), (c = h = null);
      } else if ('string' == typeof e && r) {
        (i = (p = (function(t, e, i) {
          var n = i[0],
            o = i[1],
            a = 0,
            r = 0,
            s = e.width,
            l = e.height;
          switch (t) {
            case 'inside':
              (a = e.x + s / 2 - n / 2), (r = e.y + l / 2 - o / 2);
              break;
            case 'top':
              (a = e.x + s / 2 - n / 2), (r = e.y - o - 5);
              break;
            case 'bottom':
              (a = e.x + s / 2 - n / 2), (r = e.y + l + 5);
              break;
            case 'left':
              (a = e.x - n - 5), (r = e.y + l / 2 - o / 2);
              break;
            case 'right':
              (a = e.x + s + 5), (r = e.y + l / 2 - o / 2);
          }
          return [a, r];
        })(e, d, u))[0]),
          (n = p[1]);
      } else {
        var p;
        (i = (p = (function(t, e, i, n, o, a, r) {
          var s = i.getOuterSize(),
            l = s.width,
            u = s.height;
          null != a && (n < t + l + a ? (t -= l + a) : (t += a));
          null != r && (o < e + u + r ? (e -= u + r) : (e += r));
          return [t, e];
        })(i, n, o, s, l, h ? null : 20, c ? null : 20))[0]),
          (n = p[1]);
      }
      h && (i -= OD(h) ? u[0] / 2 : 'right' === h ? u[0] : 0),
        c && (n -= OD(c) ? u[1] / 2 : 'bottom' === c ? u[1] : 0),
        t.get('confine') &&
          ((i = (p = (function(t, e, i, n, o) {
            var a = i.getOuterSize(),
              r = a.width,
              s = a.height;
            return (
              (t = Math.min(t + r, n) - r),
              (e = Math.min(e + s, o) - s),
              (t = Math.max(t, 0)),
              (e = Math.max(e, 0)),
              [t, e]
            );
          })(i, n, o, s, l))[0]),
          (n = p[1]));
      o.moveTo(i, n);
    },
    _updateContentNotChangedOnAxis: function(n) {
      var t = this._lastDataByCoordSys,
        r = !!t && t.length === n.length;
      return (
        r &&
          CD(t, function(t, e) {
            var i = t.dataByAxis || {},
              a = (n[e] || {}).dataByAxis || [];
            (r &= i.length === a.length) &&
              CD(i, function(t, e) {
                var i = a[e] || {},
                  n = t.seriesDataIndices || [],
                  o = i.seriesDataIndices || [];
                (r &=
                  t.value === i.value &&
                  t.axisType === i.axisType &&
                  t.axisId === i.axisId &&
                  n.length === o.length) &&
                  CD(n, function(t, e) {
                    var i = o[e];
                    r &=
                      t.seriesIndex === i.seriesIndex &&
                      t.dataIndex === i.dataIndex;
                  });
              });
          }),
        (this._lastDataByCoordSys = n),
        !!r
      );
    },
    _hide: function(t) {
      (this._lastDataByCoordSys = null), t({type: 'hideTip', from: this.uid});
    },
    dispose: function(t, e) {
      v.node || (this._tooltipContent.dispose(), SI('itemTooltip', e));
    },
  }),
    Tf(
      {type: 'showTip', event: 'showTip', update: 'tooltip:manuallyShowTip'},
      function() {},
    ),
    Tf(
      {type: 'hideTip', event: 'hideTip', update: 'tooltip:manuallyHideTip'},
      function() {},
    );
  var ED = ['rect', 'polygon', 'keep', 'clear'];
  var RD = E;
  function zD(t) {
    if (t) for (var e in t) if (t.hasOwnProperty(e)) return !0;
  }
  function BD(t, e, a) {
    var i = {};
    return (
      RD(e, function(n) {
        var o = (i[n] = (function() {
          function t() {}
          return (t.prototype.__hidden = t.prototype), new t();
        })());
        RD(t[n], function(t, e) {
          if (b_.isValidType(e)) {
            var i = {type: e, visual: t};
            a && a(i, n),
              (o[e] = new b_(i)),
              'opacity' === e &&
                (((i = k(i)).type = 'colorAlpha'),
                (o.__hidden.__alphaForOpacity = new b_(i)));
          }
        });
      }),
      i
    );
  }
  function VD(e, i, t) {
    var n;
    E(t, function(t) {
      i.hasOwnProperty(t) && zD(i[t]) && (n = !0);
    }),
      n &&
        E(t, function(t) {
          i.hasOwnProperty(t) && zD(i[t]) ? (e[t] = k(i[t])) : delete e[t];
        });
  }
  var GD = {
    lineX: FD(0),
    lineY: FD(1),
    rect: {
      point: function(t, e, i) {
        return t && i.boundingRect.contain(t[0], t[1]);
      },
      rect: function(t, e, i) {
        return t && i.boundingRect.intersect(t);
      },
    },
    polygon: {
      point: function(t, e, i) {
        return (
          t && i.boundingRect.contain(t[0], t[1]) && Ng(i.range, t[0], t[1])
        );
      },
      rect: function(t, e, i) {
        var n = i.range;
        if (!t || n.length <= 1) return !1;
        var o = t.x,
          a = t.y,
          r = t.width,
          s = t.height,
          l = n[0];
        return (
          !!(
            Ng(n, o, a) ||
            Ng(n, o + r, a) ||
            Ng(n, o, a + s) ||
            Ng(n, o + r, a + s) ||
            Li.create(t).contain(l[0], l[1]) ||
            bl(o, a, o + r, a, n) ||
            bl(o, a, o, a + s, n) ||
            bl(o + r, a, o + r, a + s, n) ||
            bl(o, a + s, o + r, a + s, n)
          ) || void 0
        );
      },
    },
  };
  function FD(a) {
    var r = ['x', 'y'],
      s = ['width', 'height'];
    return {
      point: function(t, e, i) {
        if (t) {
          var n = i.range;
          return WD(t[a], n);
        }
      },
      rect: function(t, e, i) {
        if (t) {
          var n = i.range,
            o = [t[r[a]], t[r[a]] + t[s[a]]];
          return (
            o[1] < o[0] && o.reverse(),
            WD(o[0], n) || WD(o[1], n) || WD(n[0], o) || WD(n[1], o)
          );
        }
      },
    };
  }
  function WD(t, e) {
    return e[0] <= t && t <= e[1];
  }
  var HD = ['inBrush', 'outOfBrush'],
    ZD = '__ecBrushSelect',
    UD = '__ecInBrushSelectEvent',
    XD = Ed.VISUAL.BRUSH;
  function YD(e) {
    e.eachComponent({mainType: 'brush'}, function(t) {
      (t.brushTargetManager = new EA(t.option, e)).setInputRanges(t.areas, e);
    });
  }
  function jD(t, e) {
    if (!t.isDisposed()) {
      var i = t.getZr();
      (i[UD] = !0),
        t.dispatchAction({type: 'brushSelect', batch: e}),
        (i[UD] = !1);
    }
  }
  function qD(t, e, i, n) {
    for (var o = 0, a = e.length; o < a; o++) {
      var r = e[o];
      if (t[r.brushType](n, i, r.selectors, r)) return !0;
    }
  }
  function KD(t) {
    var r = t.brushSelector;
    if (B(r)) {
      var e = [];
      return (
        E(GD, function(a, t) {
          e[t] = function(t, e, i, n) {
            var o = e.getItemLayout(t);
            return a[r](o, i, n);
          };
        }),
        e
      );
    }
    if (z(r)) {
      var i = {};
      return (
        E(GD, function(t, e) {
          i[e] = r;
        }),
        i
      );
    }
    return r;
  }
  Df(XD, function(t, e, i) {
    t.eachComponent({mainType: 'brush'}, function(t) {
      i &&
        'takeGlobalCursor' === i.type &&
        t.setBrushOption('brush' === i.key ? i.brushOption : {brushType: !1});
    }),
      YD(t);
  }),
    Cf(XD, function(p, t, e) {
      var o,
        g,
        m = [];
      p.eachComponent({mainType: 'brush'}, function(a, t) {
        var s = {
          brushId: a.id,
          brushIndex: t,
          brushName: a.name,
          areas: k(a.areas),
          selected: [],
        };
        m.push(s);
        var e = a.option,
          i = e.brushLink,
          n = [],
          l = [],
          u = [],
          h = 0;
        t || ((o = e.throttleType), (g = e.throttleDelay));
        var r = O(a.areas, function(t) {
            return (function(i) {
              var n = (i.selectors = {});
              return (
                E(GD[i.brushType], function(e, t) {
                  n[t] = function(t) {
                    return e(t, n, i);
                  };
                }),
                i
              );
            })(C({boundingRect: $D[t.brushType](t)}, t));
          }),
          c = BD(a.option, HD, function(t) {
            t.mappingMethod = 'fixed';
          });
        function d(t) {
          return 'all' === i || n[t];
        }
        function f(t) {
          return !!t.length;
        }
        R(i) &&
          E(i, function(t) {
            n[t] = 1;
          }),
          p.eachSeries(function(t, e) {
            var i = (u[e] = []);
            'parallel' === t.subType
              ? (function(t, e) {
                  var i = t.coordinateSystem;
                  (h |= i.hasAxisBrushed()),
                    d(e) &&
                      i.eachActiveState(t.getData(), function(t, e) {
                        'active' === t && (l[e] = 1);
                      });
                })(t, e)
              : (function(e, t, i) {
                  var n = KD(e);
                  if (
                    !n ||
                    (function(t, e) {
                      var i = t.option.seriesIndex;
                      return (
                        null != i &&
                        'all' !== i &&
                        (R(i) ? w(i, e) < 0 : e !== i)
                      );
                    })(a, t)
                  )
                    return;
                  if (
                    (E(r, function(t) {
                      n[t.brushType] &&
                        a.brushTargetManager.controlSeries(t, e, p) &&
                        i.push(t),
                        (h |= f(i));
                    }),
                    d(t) && f(i))
                  ) {
                    var o = e.getData();
                    o.each(function(t) {
                      qD(n, i, o, t) && (l[t] = 1);
                    });
                  }
                })(t, e, i);
          }),
          p.eachSeries(function(t, e) {
            var i = {
              seriesId: t.id,
              seriesIndex: e,
              seriesName: t.name,
              dataIndex: [],
            };
            s.selected.push(i);
            var n = KD(t),
              o = u[e],
              a = t.getData(),
              r = d(e)
                ? function(t) {
                    return l[t]
                      ? (i.dataIndex.push(a.getRawIndex(t)), 'inBrush')
                      : 'outOfBrush';
                  }
                : function(t) {
                    return qD(n, o, a, t)
                      ? (i.dataIndex.push(a.getRawIndex(t)), 'inBrush')
                      : 'outOfBrush';
                  };
            (d(e) ? h : f(o)) &&
              (function(t, u, h, c, d, f) {
                var p,
                  g = {};
                function m(t) {
                  return h.getItemVisual(p, t);
                }
                function v(t, e) {
                  h.setItemVisual(p, t, e);
                }
                function e(t, e) {
                  p = null == f ? t : e;
                  var i = h.getRawDataItem(p);
                  if (!i || !1 !== i.visualMap)
                    for (
                      var n = c.call(d, t),
                        o = u[n],
                        a = g[n],
                        r = 0,
                        s = a.length;
                      r < s;
                      r++
                    ) {
                      var l = a[r];
                      o[l] && o[l].applyVisual(t, m, v);
                    }
                }
                E(t, function(t) {
                  var e = b_.prepareVisualTypes(u[t]);
                  g[t] = e;
                }),
                  null == f ? h.each(e) : h.each([f], e);
              })(HD, c, a, r);
          });
      }),
        (function(t, e, i, n, o) {
          if (!o) return;
          var a = t.getZr();
          if (a[UD]) return;
          a[ZD] || (a[ZD] = jD);
          Ec(a, ZD, i, e)(t, n);
        })(t, o, g, m, e);
    });
  var $D = {
    lineX: nt,
    lineY: nt,
    rect: function(t) {
      return JD(t.range);
    },
    polygon: function(t) {
      for (var e, i = t.range, n = 0, o = i.length; n < o; n++) {
        e = e || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
        var a = i[n];
        a[0] < e[0][0] && (e[0][0] = a[0]),
          a[0] > e[0][1] && (e[0][1] = a[0]),
          a[1] < e[1][0] && (e[1][0] = a[1]),
          a[1] > e[1][1] && (e[1][1] = a[1]);
      }
      return e && JD(e);
    },
  };
  function JD(t) {
    return new Li(t[0][0], t[1][0], t[0][1] - t[0][0], t[1][1] - t[1][0]);
  }
  var QD = ['#ddd'];
  Pf({
    type: 'brush',
    dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],
    defaultOption: {
      toolbox: null,
      brushLink: null,
      seriesIndex: 'all',
      geoIndex: null,
      xAxisIndex: null,
      yAxisIndex: null,
      brushType: 'rect',
      brushMode: 'single',
      transformable: !0,
      brushStyle: {
        borderWidth: 1,
        color: 'rgba(120,140,180,0.3)',
        borderColor: 'rgba(120,140,180,0.8)',
      },
      throttleType: 'fixRate',
      throttleDelay: 0,
      removeOnClick: !0,
      z: 1e4,
    },
    areas: [],
    brushType: null,
    brushOption: {},
    coordInfoList: [],
    optionUpdated: function(t, e) {
      var i = this.option;
      e || VD(i, t, ['inBrush', 'outOfBrush']);
      var n = (i.inBrush = i.inBrush || {});
      (i.outOfBrush = i.outOfBrush || {color: QD}),
        n.hasOwnProperty('liftZ') || (n.liftZ = 5);
    },
    setAreas: function(t) {
      D &&
        (q(R(t)),
        E(t, function(t) {
          q(t.brushType, 'Illegal areas');
        })),
        t &&
          (this.areas = O(
            t,
            function(t) {
              return tC(this.option, t);
            },
            this,
          ));
    },
    setBrushOption: function(t) {
      (this.brushOption = tC(this.option, t)),
        (this.brushType = this.brushOption.brushType);
    },
  });
  function tC(t, e) {
    return m(
      {
        brushType: t.brushType,
        brushMode: t.brushMode,
        transformable: t.transformable,
        brushStyle: new Pl(t.brushStyle).getItemStyle(),
        removeOnClick: t.removeOnClick,
        z: t.z,
      },
      e,
      !0,
    );
  }
  function eC(t, e, i, n) {
    (n && n.$from === t.id) ||
      this._brushController
        .setPanels(t.brushTargetManager.makePanelOpts(i))
        .enableBrush(t.brushOption)
        .updateCovers(t.areas.slice());
  }
  Nf({
    type: 'brush',
    init: function(t, e) {
      (this.ecModel = t),
        (this.api = e),
        this.model,
        (this._brushController = new Pb(e.getZr()))
          .on('brush', A(this._onBrush, this))
          .mount();
    },
    render: function(t) {
      return (this.model = t), eC.apply(this, arguments);
    },
    updateTransform: function(t, e) {
      return YD(e), eC.apply(this, arguments);
    },
    updateView: eC,
    dispose: function() {
      this._brushController.dispose();
    },
    _onBrush: function(t, e) {
      var i = this.model.id;
      this.model.brushTargetManager.setOutputRanges(t, this.ecModel),
        (e.isEnd && !e.removeOnClick) ||
          this.api.dispatchAction({
            type: 'brush',
            brushId: i,
            areas: k(t),
            $from: i,
          }),
        e.isEnd &&
          this.api.dispatchAction({
            type: 'brushEnd',
            brushId: i,
            areas: k(t),
            $from: i,
          });
    },
  }),
    Tf({type: 'brush', event: 'brush'}, function(e, t) {
      t.eachComponent({mainType: 'brush', query: e}, function(t) {
        t.setAreas(e.areas);
      });
    }),
    Tf(
      {type: 'brushSelect', event: 'brushSelected', update: 'none'},
      function() {},
    ),
    Tf({type: 'brushEnd', event: 'brushEnd', update: 'none'}, function() {});
  var iC = Bc.toolbox.brush;
  function nC(t, e, i) {
    (this.model = t),
      (this.ecModel = e),
      (this.api = i),
      this._brushType,
      this._brushMode;
  }
  nC.defaultOption = {
    show: !0,
    type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],
    icon: {
      rect:
        'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',
      polygon:
        'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',
      lineX:
        'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',
      lineY:
        'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',
      keep:
        'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',
      clear:
        'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2',
    },
    title: k(iC.title),
  };
  var oC = nC.prototype;
  (oC.render = oC.updateView = function(e, t, i) {
    var n, o, a;
    t.eachComponent({mainType: 'brush'}, function(t) {
      (n = t.brushType),
        (o = t.brushOption.brushMode || 'single'),
        (a |= t.areas.length);
    }),
      (this._brushType = n),
      (this._brushMode = o),
      E(e.get('type', !0), function(t) {
        e.setIconStatus(
          t,
          ('keep' === t
          ? 'multiple' === o
          : 'clear' === t
          ? a
          : t === n)
            ? 'emphasis'
            : 'normal',
        );
      });
  }),
    (oC.getIcons = function() {
      var t = this.model,
        e = t.get('icon', !0),
        i = {};
      return (
        E(t.get('type', !0), function(t) {
          e[t] && (i[t] = e[t]);
        }),
        i
      );
    }),
    (oC.onclick = function(t, e, i) {
      var n = this._brushType,
        o = this._brushMode;
      'clear' === i
        ? (e.dispatchAction({type: 'axisAreaSelect', intervals: []}),
          e.dispatchAction({type: 'brush', command: 'clear', areas: []}))
        : e.dispatchAction({
            type: 'takeGlobalCursor',
            key: 'brush',
            brushOption: {
              brushType: 'keep' === i ? n : n !== i && i,
              brushMode:
                'keep' === i ? ('multiple' === o ? 'single' : 'multiple') : o,
            },
          });
    }),
    hA('brush', nC),
    Mf(function(t, e) {
      var i = t && t.brush;
      if ((R(i) || (i = i ? [i] : []), i.length)) {
        var n = [];
        E(i, function(t) {
          var e = t.hasOwnProperty('toolbox') ? t.toolbox : [];
          e instanceof Array && (n = n.concat(e));
        });
        var o = t && t.toolbox;
        R(o) && (o = o[0]), o || ((o = {feature: {}}), (t.toolbox = [o]));
        var a = o.feature || (o.feature = {}),
          r = a.brush || (a.brush = {}),
          s = r.type || (r.type = []);
        s.push.apply(s, n),
          (function(i) {
            var e = {};
            E(i, function(t) {
              e[t] = 1;
            }),
              (i.length = 0),
              E(e, function(t, e) {
                i.push(e);
              });
          })(s),
          e && !s.length && s.push.apply(s, ED);
      }
    }),
    Pf({
      type: 'title',
      layoutMode: {type: 'box', ignoreSize: !0},
      defaultOption: {
        zlevel: 0,
        z: 6,
        show: !0,
        text: '',
        target: 'blank',
        subtext: '',
        subtarget: 'blank',
        left: 0,
        top: 0,
        backgroundColor: 'rgba(0,0,0,0)',
        borderColor: '#ccc',
        borderWidth: 0,
        padding: 5,
        itemGap: 10,
        textStyle: {fontSize: 18, fontWeight: 'bolder', color: '#333'},
        subtextStyle: {color: '#aaa'},
      },
    }),
    Nf({
      type: 'title',
      render: function(t, e, i) {
        if ((this.group.removeAll(), t.get('show'))) {
          var n = this.group,
            o = t.getModel('textStyle'),
            a = t.getModel('subtextStyle'),
            r = t.get('textAlign'),
            s = U(t.get('textBaseline'), t.get('textVerticalAlign')),
            l = new jr({
              style: rl(
                {},
                o,
                {text: t.get('text'), textFill: o.getTextColor()},
                {disableBox: !0},
              ),
              z2: 10,
            }),
            u = l.getBoundingRect(),
            h = t.get('subtext'),
            c = new jr({
              style: rl(
                {},
                a,
                {
                  text: h,
                  textFill: a.getTextColor(),
                  y: u.height + t.get('itemGap'),
                  textVerticalAlign: 'top',
                },
                {disableBox: !0},
              ),
              z2: 10,
            }),
            d = t.get('link'),
            f = t.get('sublink'),
            p = t.get('triggerEvent', !0);
          (l.silent = !d && !p),
            (c.silent = !f && !p),
            d &&
              l.on('click', function() {
                yu(d, '_' + t.get('target'));
              }),
            f &&
              c.on('click', function() {
                yu(d, '_' + t.get('subtarget'));
              }),
            (l.eventData = c.eventData = p
              ? {componentType: 'title', componentIndex: t.componentIndex}
              : null),
            n.add(l),
            h && n.add(c);
          var g = n.getBoundingRect(),
            m = t.getBoxLayoutParams();
          (m.width = g.width), (m.height = g.height);
          var v = Iu(
            m,
            {width: i.getWidth(), height: i.getHeight()},
            t.get('padding'),
          );
          r ||
            ('middle' === (r = t.get('left') || t.get('right')) &&
              (r = 'center'),
            'right' === r
              ? (v.x += v.width)
              : 'center' === r && (v.x += v.width / 2)),
            s ||
              ('center' === (s = t.get('top') || t.get('bottom')) &&
                (s = 'middle'),
              'bottom' === s
                ? (v.y += v.height)
                : 'middle' === s && (v.y += v.height / 2),
              (s = s || 'top')),
            n.attr('position', [v.x, v.y]);
          var y = {textAlign: r, textVerticalAlign: s};
          l.setStyle(y), c.setStyle(y), (g = n.getBoundingRect());
          var x = v.margin,
            _ = t.getItemStyle(['color', 'opacity']);
          _.fill = t.get('backgroundColor');
          var w = new us({
            shape: {
              x: g.x - x[3],
              y: g.y - x[0],
              width: g.width + x[1] + x[3],
              height: g.height + x[0] + x[2],
              r: t.get('borderRadius'),
            },
            style: _,
            subPixelOptimize: !0,
            silent: !0,
          });
          n.add(w);
        }
      },
    });
  function aC(t) {
    var e = t.itemStyle || (t.itemStyle = {}),
      i = e.emphasis || (e.emphasis = {}),
      n = t.label || t.label || {},
      o = n.normal || (n.normal = {}),
      a = {normal: 1, emphasis: 1};
    E(n, function(t, e) {
      a[e] || rC(o, e) || (o[e] = t);
    }),
      i.label && !rC(n, 'emphasis') && ((n.emphasis = i.label), delete i.label);
  }
  function rC(t, e) {
    return t.hasOwnProperty(e);
  }
  Ou.registerSubTypeDefaulter('timeline', function() {
    return 'slider';
  }),
    Tf(
      {
        type: 'timelineChange',
        event: 'timelineChanged',
        update: 'prepareAndUpdate',
      },
      function(t, e) {
        var i = e.getComponent('timeline');
        return (
          i &&
            null != t.currentIndex &&
            (i.setCurrentIndex(t.currentIndex),
            !i.get('loop', !0) && i.isIndexMax() && i.setPlayState(!1)),
          e.resetOption('timeline'),
          C({currentIndex: i.option.currentIndex}, t)
        );
      },
    ),
    Tf(
      {
        type: 'timelinePlayChange',
        event: 'timelinePlayChanged',
        update: 'update',
      },
      function(t, e) {
        var i = e.getComponent('timeline');
        i && null != t.playState && i.setPlayState(t.playState);
      },
    );
  var sC = Ou.extend({
    type: 'timeline',
    layoutMode: 'box',
    defaultOption: {
      zlevel: 0,
      z: 4,
      show: !0,
      axisType: 'time',
      realtime: !0,
      left: '20%',
      top: null,
      right: '20%',
      bottom: 0,
      width: null,
      height: 40,
      padding: 5,
      controlPosition: 'left',
      autoPlay: !1,
      rewind: !1,
      loop: !0,
      playInterval: 2e3,
      currentIndex: 0,
      itemStyle: {},
      label: {color: '#000'},
      data: [],
    },
    init: function(t, e, i) {
      this._data,
        this._names,
        this.mergeDefaultAndTheme(t, i),
        this._initData();
    },
    mergeOption: function(t) {
      sC.superApply(this, 'mergeOption', arguments), this._initData();
    },
    setCurrentIndex: function(t) {
      null == t && (t = this.option.currentIndex);
      var e = this._data.count();
      this.option.loop
        ? (t = ((t % e) + e) % e)
        : (e <= t && (t = e - 1), t < 0 && (t = 0)),
        (this.option.currentIndex = t);
    },
    getCurrentIndex: function() {
      return this.option.currentIndex;
    },
    isIndexMax: function() {
      return this.getCurrentIndex() >= this._data.count() - 1;
    },
    setPlayState: function(t) {
      this.option.autoPlay = !!t;
    },
    getPlayState: function() {
      return !!this.option.autoPlay;
    },
    _initData: function() {
      var t = this.option,
        e = t.data || [],
        i = t.axisType,
        o = (this._names = []);
      if ('category' === i) {
        var a = [];
        E(e, function(t, e) {
          var i,
            n = Uo(t);
          V(t) ? ((i = k(t)).value = e) : (i = e),
            a.push(i),
            B(n) || (null != n && !isNaN(n)) || (n = ''),
            o.push(n + '');
        }),
          (e = a);
      }
      var n = {category: 'ordinal', time: 'time'}[i] || 'number';
      (this._data = new Qf([{name: 'value', type: n}], this)).initData(e, o);
    },
    getData: function() {
      return this._data;
    },
    getCategories: function() {
      if ('category' === this.get('axisType')) return this._names.slice();
    },
  });
  S(
    sC.extend({
      type: 'timeline.slider',
      defaultOption: {
        backgroundColor: 'rgba(0,0,0,0)',
        borderColor: '#ccc',
        borderWidth: 0,
        orient: 'horizontal',
        inverse: !1,
        tooltip: {trigger: 'item'},
        symbol: 'emptyCircle',
        symbolSize: 10,
        lineStyle: {show: !0, width: 2, color: '#304654'},
        label: {
          position: 'auto',
          show: !0,
          interval: 'auto',
          rotate: 0,
          color: '#304654',
        },
        itemStyle: {color: '#304654', borderWidth: 1},
        checkpointStyle: {
          symbol: 'circle',
          symbolSize: 13,
          color: '#c23531',
          borderWidth: 5,
          borderColor: 'rgba(194,53,49, 0.5)',
          animation: !0,
          animationDuration: 300,
          animationEasing: 'quinticInOut',
        },
        controlStyle: {
          show: !0,
          showPlayBtn: !0,
          showPrevBtn: !0,
          showNextBtn: !0,
          itemSize: 22,
          itemGap: 12,
          position: 'left',
          playIcon:
            'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',
          stopIcon:
            'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',
          nextIcon:
            'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',
          prevIcon:
            'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',
          color: '#304654',
          borderColor: '#304654',
          borderWidth: 1,
        },
        emphasis: {
          label: {show: !0, color: '#c23531'},
          itemStyle: {color: '#c23531'},
          controlStyle: {
            color: '#c23531',
            borderColor: '#c23531',
            borderWidth: 2,
          },
        },
        data: [],
      },
    }),
    Kh,
  );
  function lC(t, e, i, n) {
    Yg.call(this, t, e, i), (this.type = n || 'value'), (this.model = null);
  }
  var uC = xc.extend({type: 'timeline'});
  (lC.prototype = {
    constructor: lC,
    getLabelModel: function() {
      return this.model.getModel('label');
    },
    isHorizontal: function() {
      return 'horizontal' === this.model.get('orient');
    },
  }),
    b(lC, Yg);
  var hC = A,
    cC = E,
    dC = Math.PI;
  function fC(t, e, i, n, o, a) {
    var r = e.get('color');
    o
      ? (o.setColor(r), i.add(o), a && a.onUpdate(o))
      : ((o = Dg(t.get('symbol'), -1, -1, 2, 2, r)).setStyle(
          'strokeNoScale',
          !0,
        ),
        i.add(o),
        a && a.onCreate(o));
    var s = e.getItemStyle(['color', 'symbol', 'symbolSize']);
    o.setStyle(s), (n = m({rectHover: !0, z2: 100}, n, !0));
    var l = t.get('symbolSize');
    ((l = l instanceof Array ? l.slice() : [+l, +l])[0] /= 2),
      (l[1] /= 2),
      (n.scale = l);
    var u = t.get('symbolOffset');
    if (u) {
      var h = (n.position = n.position || [0, 0]);
      (h[0] += Vl(u[0], l[0])), (h[1] += Vl(u[1], l[1]));
    }
    var c = t.get('symbolRotate');
    return (
      (n.rotation = ((c || 0) * Math.PI) / 180 || 0),
      o.attr(n),
      o.updateTransform(),
      o
    );
  }
  function pC(t, e, i, n, o) {
    if (!t.dragging) {
      var a = n.getModel('checkpointStyle'),
        r = i.dataToCoord(n.getData().get(['value'], e));
      o || !a.get('animation', !0)
        ? t.attr({position: [r, 0]})
        : (t.stopAnimation(!0),
          t.animateTo(
            {position: [r, 0]},
            a.get('animationDuration', !0),
            a.get('animationEasing', !0),
          ));
    }
  }
  uC.extend({
    type: 'timeline.slider',
    init: function(t, e) {
      (this.api = e),
        this._axis,
        this._viewRect,
        this._timer,
        this._currentPointer,
        this._mainGroup,
        this._labelGroup;
    },
    render: function(e, t, i, n) {
      if (
        ((this.model = e),
        (this.api = i),
        (this.ecModel = t),
        this.group.removeAll(),
        e.get('show', !0))
      ) {
        var o = this._layout(e, i),
          a = this._createGroup('mainGroup'),
          r = this._createGroup('labelGroup'),
          s = (this._axis = this._createAxis(o, e));
        (e.formatTooltip = function(t) {
          return lu(s.scale.getLabel(t));
        }),
          cC(
            ['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'],
            function(t) {
              this['_render' + t](o, a, s, e);
            },
            this,
          ),
          this._renderAxisLabel(o, r, s, e),
          this._position(o, e);
      }
      this._doPlayStop();
    },
    remove: function() {
      this._clearTimer(), this.group.removeAll();
    },
    dispose: function() {
      this._clearTimer();
    },
    _layout: function(t, e) {
      var i = t.get('label.position'),
        n = t.get('orient'),
        o = (function(t, e) {
          return Iu(
            t.getBoxLayoutParams(),
            {width: e.getWidth(), height: e.getHeight()},
            t.get('padding'),
          );
        })(t, e);
      null == i || 'auto' === i
        ? (i =
            'horizontal' === n
              ? o.y + o.height / 2 < e.getHeight() / 2
                ? '-'
                : '+'
              : o.x + o.width / 2 < e.getWidth() / 2
              ? '+'
              : '-')
        : isNaN(i) &&
          (i = {
            horizontal: {top: '-', bottom: '+'},
            vertical: {left: '-', right: '+'},
          }[n][i]);
      var a,
        r,
        s,
        l,
        u = {
          horizontal: 'center',
          vertical: 0 <= i || '+' === i ? 'left' : 'right',
        },
        h = {
          horizontal: 0 <= i || '+' === i ? 'top' : 'bottom',
          vertical: 'middle',
        },
        c = {horizontal: 0, vertical: dC / 2},
        d = 'vertical' === n ? o.height : o.width,
        f = t.getModel('controlStyle'),
        p = f.get('show', !0),
        g = p ? f.get('itemSize') : 0,
        m = p ? f.get('itemGap') : 0,
        v = g + m,
        y = t.get('label.rotate') || 0;
      y = (y * dC) / 180;
      var x = f.get('position', !0),
        _ = p && f.get('showPlayBtn', !0),
        w = p && f.get('showPrevBtn', !0),
        b = p && f.get('showNextBtn', !0),
        S = 0,
        M = d;
      return (
        'left' === x || 'bottom' === x
          ? (_ && ((a = [0, 0]), (S += v)), w && ((r = [S, 0]), (S += v)))
          : (_ && ((a = [M - g, 0]), (M -= v)), w && ((r = [0, 0]), (S += v))),
        b && ((s = [M - g, 0]), (M -= v)),
        (l = [S, M]),
        t.get('inverse') && l.reverse(),
        {
          viewRect: o,
          mainLength: d,
          orient: n,
          rotation: c[n],
          labelRotation: y,
          labelPosOpt: i,
          labelAlign: t.get('label.align') || u[n],
          labelBaseline:
            t.get('label.verticalAlign') || t.get('label.baseline') || h[n],
          playPosition: a,
          prevBtnPosition: r,
          nextBtnPosition: s,
          axisExtent: l,
          controlSize: g,
          controlGap: m,
        }
      );
    },
    _position: function(t, e) {
      var i = this._mainGroup,
        n = this._labelGroup,
        o = t.viewRect;
      if ('vertical' === t.orient) {
        var a = se(),
          r = o.x,
          s = o.y + o.height;
        ce(a, a, [-r, -s]),
          de(a, a, -dC / 2),
          ce(a, a, [r, s]),
          (o = o.clone()).applyTransform(a);
      }
      var l = m(o),
        u = m(i.getBoundingRect()),
        h = m(n.getBoundingRect()),
        c = i.position,
        d = n.position;
      d[0] = c[0] = l[0][0];
      var f,
        p = t.labelPosOpt;
      isNaN(p)
        ? (v(c, u, l, 1, (f = '+' === p ? 0 : 1)), v(d, h, l, 1, 1 - f))
        : (v(c, u, l, 1, (f = 0 <= p ? 0 : 1)), (d[1] = c[1] + p));
      function g(t) {
        var e = t.position;
        t.origin = [l[0][0] - e[0], l[1][0] - e[1]];
      }
      function m(t) {
        return [[t.x, t.x + t.width], [t.y, t.y + t.height]];
      }
      function v(t, e, i, n, o) {
        t[n] += i[n][o] - e[n][o];
      }
      i.attr('position', c),
        n.attr('position', d),
        (i.rotation = n.rotation = t.rotation),
        g(i),
        g(n);
    },
    _createAxis: function(t, e) {
      var i = e.getData(),
        n = e.get('axisType'),
        o = pg(e, n);
      o.getTicks = function() {
        return i.mapArray(['value'], function(t) {
          return t;
        });
      };
      var a = i.getDataExtent('value');
      o.setExtent(a[0], a[1]), o.niceTicks();
      var r = new lC('value', o, t.axisExtent, n);
      return (r.model = e), r;
    },
    _createGroup: function(t) {
      var e = (this['_' + t] = new ki());
      return this.group.add(e), e;
    },
    _renderAxisLine: function(t, e, i, n) {
      var o = i.getExtent();
      n.get('lineStyle.show') &&
        e.add(
          new cs({
            shape: {x1: o[0], y1: 0, x2: o[1], y2: 0},
            style: P(
              {lineCap: 'round'},
              n.getModel('lineStyle').getLineStyle(),
            ),
            silent: !0,
            z2: 1,
          }),
        );
    },
    _renderAxisTick: function(t, s, l, u) {
      var h = u.getData(),
        e = l.scale.getTicks();
      cC(
        e,
        function(t) {
          var e = l.dataToCoord(t),
            i = h.getItemModel(t),
            n = i.getModel('itemStyle'),
            o = i.getModel('emphasis.itemStyle'),
            a = {position: [e, 0], onclick: hC(this._changeTimeline, this, t)},
            r = fC(i, n, s, a);
          tl(r, o.getItemStyle()),
            i.get('tooltip')
              ? ((r.dataIndex = t), (r.dataModel = u))
              : (r.dataIndex = r.dataModel = null);
        },
        this,
      );
    },
    _renderAxisLabel: function(s, l, u, t) {
      if (u.getLabelModel().get('show')) {
        var h = t.getData(),
          e = u.getViewLabels();
        cC(
          e,
          function(t) {
            var e = t.tickValue,
              i = h.getItemModel(e),
              n = i.getModel('label'),
              o = i.getModel('emphasis.label'),
              a = u.dataToCoord(t.tickValue),
              r = new jr({
                position: [a, 0],
                rotation: s.labelRotation - s.rotation,
                onclick: hC(this._changeTimeline, this, e),
                silent: !1,
              });
            rl(r.style, n, {
              text: t.formattedLabel,
              textAlign: s.labelAlign,
              textVerticalAlign: s.labelBaseline,
            }),
              l.add(r),
              tl(r, rl({}, o));
          },
          this,
        );
      }
    },
    _renderControl: function(t, a, e, r) {
      var s = t.controlSize,
        l = t.rotation,
        u = r.getModel('controlStyle').getItemStyle(),
        h = r.getModel('emphasis.controlStyle').getItemStyle(),
        c = [0, -s / 2, s, s],
        i = r.getPlayState(),
        n = r.get('inverse', !0);
      function o(t, e, i, n) {
        if (t) {
          var o = (function(t, e, i, n) {
            return Es(
              t.get(e).replace(/^path:\/\//, ''),
              k(n || {}),
              new Li(i[0], i[1], i[2], i[3]),
              'center',
            );
          })(r, e, c, {
            position: t,
            origin: [s / 2, 0],
            rotation: n ? -l : 0,
            rectHover: !0,
            style: u,
            onclick: i,
          });
          a.add(o), tl(o, h);
        }
      }
      o(
        t.nextBtnPosition,
        'controlStyle.nextIcon',
        hC(this._changeTimeline, this, n ? '-' : '+'),
      ),
        o(
          t.prevBtnPosition,
          'controlStyle.prevIcon',
          hC(this._changeTimeline, this, n ? '+' : '-'),
        ),
        o(
          t.playPosition,
          'controlStyle.' + (i ? 'stopIcon' : 'playIcon'),
          hC(this._handlePlayClick, this, !i),
          !0,
        );
    },
    _renderCurrentPointer: function(t, e, i, n) {
      var o = n.getData(),
        a = n.getCurrentIndex(),
        r = o.getItemModel(a).getModel('checkpointStyle'),
        s = this,
        l = {
          onCreate: function(t) {
            (t.draggable = !0),
              (t.drift = hC(s._handlePointerDrag, s)),
              (t.ondragend = hC(s._handlePointerDragend, s)),
              pC(t, a, i, n, !0);
          },
          onUpdate: function(t) {
            pC(t, a, i, n);
          },
        };
      this._currentPointer = fC(
        r,
        r,
        this._mainGroup,
        {},
        this._currentPointer,
        l,
      );
    },
    _handlePlayClick: function(t) {
      this._clearTimer(),
        this.api.dispatchAction({
          type: 'timelinePlayChange',
          playState: t,
          from: this.uid,
        });
    },
    _handlePointerDrag: function(t, e, i) {
      this._clearTimer(), this._pointerChangeTimeline([i.offsetX, i.offsetY]);
    },
    _handlePointerDragend: function(t) {
      this._pointerChangeTimeline([t.offsetX, t.offsetY], !0);
    },
    _pointerChangeTimeline: function(t, e) {
      var i = this._toAxisCoord(t)[0],
        n = Fl(this._axis.getExtent().slice());
      i > n[1] && (i = n[1]),
        i < n[0] && (i = n[0]),
        (this._currentPointer.position[0] = i),
        this._currentPointer.dirty();
      var o = this._findNearestTick(i),
        a = this.model;
      (e || (o !== a.getCurrentIndex() && a.get('realtime'))) &&
        this._changeTimeline(o);
    },
    _doPlayStop: function() {
      this._clearTimer(),
        this.model.getPlayState() &&
          (this._timer = setTimeout(
            hC(function() {
              var t = this.model;
              this._changeTimeline(
                t.getCurrentIndex() + (t.get('rewind', !0) ? -1 : 1),
              );
            }, this),
            this.model.get('playInterval'),
          ));
    },
    _toAxisCoord: function(t) {
      return vl(t, this._mainGroup.getLocalTransform(), !0);
    },
    _findNearestTick: function(o) {
      var a,
        t = this.model.getData(),
        r = 1 / 0,
        s = this._axis;
      return (
        t.each(['value'], function(t, e) {
          var i = s.dataToCoord(t),
            n = Math.abs(i - o);
          n < r && ((r = n), (a = e));
        }),
        a
      );
    },
    _clearTimer: function() {
      this._timer && (clearTimeout(this._timer), (this._timer = null));
    },
    _changeTimeline: function(t) {
      var e = this.model.getCurrentIndex();
      '+' === t ? (t = e + 1) : '-' === t && (t = e - 1),
        this.api.dispatchAction({
          type: 'timelineChange',
          currentIndex: t,
          from: this.uid,
        });
    },
  }),
    Mf(function(t) {
      var e = t && t.timeline;
      R(e) || (e = e ? [e] : []),
        E(e, function(t) {
          t &&
            (function(t) {
              var e = t.type,
                i = {number: 'value', time: 'time'};
              i[e] && ((t.axisType = i[e]), delete t.type);
              if ((aC(t), rC(t, 'controlPosition'))) {
                var n = t.controlStyle || (t.controlStyle = {});
                rC(n, 'position') || (n.position = t.controlPosition),
                  'none' !== n.position ||
                    rC(n, 'show') ||
                    ((n.show = !1), delete n.position),
                  delete t.controlPosition;
              }
              E(t.data || [], function(t) {
                V(t) &&
                  !R(t) &&
                  (!rC(t, 'value') && rC(t, 'name') && (t.value = t.name),
                  aC(t));
              });
            })(t);
        });
    });
  var gC = nu,
    mC = lu;
  function vC(t) {
    Ho(t, 'label', ['show']);
  }
  var yC = Pf({
    type: 'marker',
    dependencies: ['series', 'grid', 'polar', 'geo'],
    init: function(t, e, i) {
      if (D && 'marker' === this.type)
        throw new Error(
          'Marker component is abstract component. Use markLine, markPoint, markArea instead.',
        );
      this.mergeDefaultAndTheme(t, i), this._mergeOption(t, i, !1, !0);
    },
    isAnimationEnabled: function() {
      if (v.node) return !1;
      var t = this.__hostSeries;
      return this.getShallow('animation') && t && t.isAnimationEnabled();
    },
    mergeOption: function(t, e) {
      this._mergeOption(t, e, !1, !1);
    },
    _mergeOption: function(t, n, e, o) {
      var a = this.constructor,
        r = this.mainType + 'Model';
      e ||
        n.eachSeries(function(t) {
          var e = t.get(this.mainType, !0),
            i = t[r];
          e && e.data
            ? (i
                ? i._mergeOption(e, n, !0)
                : (o && vC(e),
                  E(e.data, function(t) {
                    t instanceof Array ? (vC(t[0]), vC(t[1])) : vC(t);
                  }),
                  P((i = new a(e, this, n)), {
                    mainType: this.mainType,
                    seriesIndex: t.seriesIndex,
                    name: t.name,
                    createdBySelf: !0,
                  }),
                  (i.__hostSeries = t)),
              (t[r] = i))
            : (t[r] = null);
        }, this);
    },
    formatTooltip: function(t) {
      var e = this.getData(),
        i = this.getRawValue(t),
        n = R(i) ? O(i, gC).join(', ') : gC(i),
        o = e.getName(t),
        a = mC(this.name);
      return (
        (null == i && !o) || (a += '<br />'),
        o && ((a += mC(o)), null != i && (a += ' : ')),
        null != i && (a += mC(n)),
        a
      );
    },
    getData: function() {
      return this._data;
    },
    setData: function(t) {
      this._data = t;
    },
  });
  S(yC, Kh),
    yC.extend({
      type: 'markPoint',
      defaultOption: {
        zlevel: 0,
        z: 5,
        symbol: 'pin',
        symbolSize: 50,
        tooltip: {trigger: 'item'},
        label: {show: !0, position: 'inside'},
        itemStyle: {borderWidth: 2},
        emphasis: {label: {show: !0}},
      },
    });
  var xC = w;
  function _C(t, e, i, n, o, a) {
    var r = [],
      s = _p(e, n) ? e.getCalculationInfo('stackResultDimension') : n,
      l = AC(e, s, t),
      u = e.indicesOfNearest(s, l)[0];
    (r[o] = e.get(i, u)), (r[a] = e.get(s, u));
    var h = e.get(n, u),
      c = Wl(e.get(n, u));
    return 0 <= (c = Math.min(c, 20)) && (r[a] = +r[a].toFixed(c)), [r, h];
  }
  var wC = L,
    bC = {min: wC(_C, 'min'), max: wC(_C, 'max'), average: wC(_C, 'average')};
  function SC(t, e) {
    var i = t.getData(),
      n = t.coordinateSystem;
    if (
      e &&
      !(function(t) {
        return !isNaN(parseFloat(t.x)) && !isNaN(parseFloat(t.y));
      })(e) &&
      !R(e.coord) &&
      n
    ) {
      var o = n.dimensions,
        a = MC(e, i, n, t);
      if ((e = k(e)).type && bC[e.type] && a.baseAxis && a.valueAxis) {
        var r = xC(o, a.baseAxis.dim),
          s = xC(o, a.valueAxis.dim),
          l = bC[e.type](i, a.baseDataDim, a.valueDataDim, r, s);
        (e.coord = l[0]), (e.value = l[1]);
      } else {
        for (
          var u = [
              null != e.xAxis ? e.xAxis : e.radiusAxis,
              null != e.yAxis ? e.yAxis : e.angleAxis,
            ],
            h = 0;
          h < 2;
          h++
        )
          bC[u[h]] && (u[h] = AC(i, i.mapDimension(o[h]), u[h]));
        e.coord = u;
      }
    }
    return e;
  }
  function MC(t, e, i, n) {
    var o = {};
    return (
      null != t.valueIndex || null != t.valueDim
        ? ((o.valueDataDim =
            null != t.valueIndex ? e.getDimension(t.valueIndex) : t.valueDim),
          (o.valueAxis = i.getAxis(
            (function(t, e) {
              var i = t.getData(),
                n = i.dimensions;
              e = i.getDimension(e);
              for (var o = 0; o < n.length; o++) {
                var a = i.getDimensionInfo(n[o]);
                if (a.name === e) return a.coordDim;
              }
            })(n, o.valueDataDim),
          )),
          (o.baseAxis = i.getOtherAxis(o.valueAxis)),
          (o.baseDataDim = e.mapDimension(o.baseAxis.dim)))
        : ((o.baseAxis = n.getBaseAxis()),
          (o.valueAxis = i.getOtherAxis(o.baseAxis)),
          (o.baseDataDim = e.mapDimension(o.baseAxis.dim)),
          (o.valueDataDim = e.mapDimension(o.valueAxis.dim))),
      o
    );
  }
  function IC(t, e) {
    return (
      !(
        t &&
        t.containData &&
        e.coord &&
        !(function(t) {
          return !(isNaN(parseFloat(t.x)) && isNaN(parseFloat(t.y)));
        })(e)
      ) || t.containData(e.coord)
    );
  }
  function TC(t, e, i, n) {
    return n < 2 ? t.coord && t.coord[n] : t.value;
  }
  function AC(t, e, i) {
    if ('average' !== i)
      return 'median' === i
        ? t.getMedian(e)
        : t.getDataExtent(e, !0)['max' === i ? 1 : 0];
    var n = 0,
      o = 0;
    return (
      t.each(e, function(t, e) {
        isNaN(t) || ((n += t), o++);
      }),
      n / o
    );
  }
  var DC = Nf({
    type: 'marker',
    init: function() {
      this.markerGroupMap = et();
    },
    render: function(t, i, n) {
      var e = this.markerGroupMap;
      e.each(function(t) {
        t.__keep = !1;
      });
      var o = this.type + 'Model';
      i.eachSeries(function(t) {
        var e = t[o];
        e && this.renderSeries(t, e, i, n);
      }, this),
        e.each(function(t) {
          t.__keep || this.group.remove(t.group);
        }, this);
    },
    renderSeries: function() {},
  });
  function CC(s, l, u) {
    var h = l.coordinateSystem;
    s.each(function(t) {
      var e,
        i = s.getItemModel(t),
        n = Vl(i.get('x'), u.getWidth()),
        o = Vl(i.get('y'), u.getHeight());
      if (isNaN(n) || isNaN(o)) {
        if (l.getMarkerPosition)
          e = l.getMarkerPosition(s.getValues(s.dimensions, t));
        else if (h) {
          var a = s.get(h.dimensions[0], t),
            r = s.get(h.dimensions[1], t);
          e = h.dataToPoint([a, r]);
        }
      } else e = [n, o];
      isNaN(n) || (e[0] = n), isNaN(o) || (e[1] = o), s.setItemLayout(t, e);
    });
  }
  DC.extend({
    type: 'markPoint',
    updateTransform: function(t, e, i) {
      e.eachSeries(function(t) {
        var e = t.markPointModel;
        e &&
          (CC(e.getData(), t, i),
          this.markerGroupMap.get(t.id).updateLayout(e));
      }, this);
    },
    renderSeries: function(t, l, e, i) {
      var n = t.coordinateSystem,
        o = t.id,
        u = t.getData(),
        a = this.markerGroupMap,
        r = a.get(o) || a.set(o, new um()),
        h = (function(t, e, i) {
          var n;
          n = t
            ? O(t && t.dimensions, function(t) {
                return C(
                  {name: t},
                  e.getData().getDimensionInfo(e.getData().mapDimension(t)) ||
                    {},
                );
              })
            : [{name: 'value', type: 'float'}];
          var o = new Qf(n, i),
            a = O(i.get('data'), L(SC, e));
          t && (a = I(a, L(IC, t)));
          return (
            o.initData(
              a,
              null,
              t
                ? TC
                : function(t) {
                    return t.value;
                  },
            ),
            o
          );
        })(n, t, l);
      l.setData(h),
        CC(l.getData(), t, i),
        h.each(function(t) {
          var e = h.getItemModel(t),
            i = e.getShallow('symbol'),
            n = e.getShallow('symbolSize'),
            o = z(i),
            a = z(n);
          if (o || a) {
            var r = l.getRawValue(t),
              s = l.getDataParams(t);
            o && (i = i(r, s)), a && (n = n(r, s));
          }
          h.setItemVisual(t, {
            symbol: i,
            symbolSize: n,
            color: e.get('itemStyle.color') || u.getVisual('color'),
          });
        }),
        r.updateData(h),
        this.group.add(r.group),
        h.eachItemGraphicEl(function(t) {
          t.traverse(function(t) {
            t.dataModel = l;
          });
        }),
        (r.__keep = !0),
        (r.group.silent = l.get('silent') || t.get('silent'));
    },
  }),
    Mf(function(t) {
      t.markPoint = t.markPoint || {};
    }),
    yC.extend({
      type: 'markLine',
      defaultOption: {
        zlevel: 0,
        z: 5,
        symbol: ['circle', 'arrow'],
        symbolSize: [8, 16],
        precision: 2,
        tooltip: {trigger: 'item'},
        label: {show: !0, position: 'end', distance: 5},
        lineStyle: {type: 'dashed'},
        emphasis: {label: {show: !0}, lineStyle: {width: 3}},
        animationEasing: 'linear',
      },
    });
  function LC(t, e, i, n) {
    var o = t.getData(),
      a = n.type;
    if (
      !R(n) &&
      ('min' === a ||
        'max' === a ||
        'average' === a ||
        'median' === a ||
        null != n.xAxis ||
        null != n.yAxis)
    ) {
      var r, s;
      if (null != n.yAxis || null != n.xAxis)
        (r = e.getAxis(null != n.yAxis ? 'y' : 'x')), (s = Z(n.yAxis, n.xAxis));
      else {
        var l = MC(n, o, e, t);
        (r = l.valueAxis), (s = AC(o, wp(o, l.valueDataDim), a));
      }
      var u = 'x' === r.dim ? 0 : 1,
        h = 1 - u,
        c = k(n),
        d = {};
      (c.type = null),
        (c.coord = []),
        (d.coord = []),
        (c.coord[h] = -1 / 0),
        (d.coord[h] = 1 / 0);
      var f = i.get('precision');
      0 <= f && 'number' == typeof s && (s = +s.toFixed(Math.min(f, 20))),
        (c.coord[u] = d.coord[u] = s),
        (n = [c, d, {type: a, valueIndex: n.valueIndex, value: s}]);
    }
    return (
      ((n = [SC(t, n[0]), SC(t, n[1]), P({}, n[2])])[2].type = n[2].type || ''),
      m(n[2], n[0]),
      m(n[2], n[1]),
      n
    );
  }
  function kC(t) {
    return !isNaN(t) && !isFinite(t);
  }
  function PC(t, e, i, n) {
    var o = 1 - t,
      a = n.dimensions[t];
    return (
      kC(e[o]) && kC(i[o]) && e[t] === i[t] && n.getAxis(a).containData(e[t])
    );
  }
  function NC(t, e) {
    if ('cartesian2d' === t.type) {
      var i = e[0].coord,
        n = e[1].coord;
      if (i && n && (PC(1, i, n, t) || PC(0, i, n, t))) return !0;
    }
    return IC(t, e[0]) && IC(t, e[1]);
  }
  function OC(t, e, i, n, o) {
    var a,
      r = n.coordinateSystem,
      s = t.getItemModel(e),
      l = Vl(s.get('x'), o.getWidth()),
      u = Vl(s.get('y'), o.getHeight());
    if (isNaN(l) || isNaN(u)) {
      if (n.getMarkerPosition)
        a = n.getMarkerPosition(t.getValues(t.dimensions, e));
      else {
        var h = r.dimensions,
          c = t.get(h[0], e),
          d = t.get(h[1], e);
        a = r.dataToPoint([c, d]);
      }
      if ('cartesian2d' === r.type) {
        var f = r.getAxis('x'),
          p = r.getAxis('y');
        h = r.dimensions;
        kC(t.get(h[0], e))
          ? (a[0] = f.toGlobalCoord(f.getExtent()[i ? 0 : 1]))
          : kC(t.get(h[1], e)) &&
            (a[1] = p.toGlobalCoord(p.getExtent()[i ? 0 : 1]));
      }
      isNaN(l) || (a[0] = l), isNaN(u) || (a[1] = u);
    } else a = [l, u];
    t.setItemLayout(e, a);
  }
  DC.extend({
    type: 'markLine',
    updateTransform: function(t, e, a) {
      e.eachSeries(function(e) {
        var t = e.markLineModel;
        if (t) {
          var i = t.getData(),
            n = t.__from,
            o = t.__to;
          n.each(function(t) {
            OC(n, t, !0, e, a), OC(o, t, !1, e, a);
          }),
            i.each(function(t) {
              i.setItemLayout(t, [n.getItemLayout(t), o.getItemLayout(t)]);
            }),
            this.markerGroupMap.get(e.id).updateLayout();
        }
      }, this);
    },
    renderSeries: function(o, i, t, a) {
      var e = o.coordinateSystem,
        n = o.id,
        r = o.getData(),
        s = this.markerGroupMap,
        l = s.get(n) || s.set(n, new ww());
      this.group.add(l.group);
      var u = (function(t, e, i) {
          var n;
          n = t
            ? O(t && t.dimensions, function(t) {
                return C(
                  {name: t},
                  e.getData().getDimensionInfo(e.getData().mapDimension(t)) ||
                    {},
                );
              })
            : [{name: 'value', type: 'float'}];
          var o = new Qf(n, i),
            a = new Qf(n, i),
            r = new Qf([], i),
            s = O(i.get('data'), L(LC, e, t, i));
          t && (s = I(s, L(NC, t)));
          var l = t
            ? TC
            : function(t) {
                return t.value;
              };
          return (
            o.initData(
              O(s, function(t) {
                return t[0];
              }),
              null,
              l,
            ),
            a.initData(
              O(s, function(t) {
                return t[1];
              }),
              null,
              l,
            ),
            r.initData(
              O(s, function(t) {
                return t[2];
              }),
            ),
            (r.hasItemOption = !0),
            {from: o, to: a, line: r}
          );
        })(e, o, i),
        h = u.from,
        c = u.to,
        d = u.line;
      (i.__from = h), (i.__to = c), i.setData(d);
      var f = i.get('symbol'),
        p = i.get('symbolSize');
      function g(t, e, i) {
        var n = t.getItemModel(e);
        OC(t, e, i, o, a),
          t.setItemVisual(e, {
            symbolSize: n.get('symbolSize') || p[i ? 0 : 1],
            symbol: n.get('symbol', !0) || f[i ? 0 : 1],
            color: n.get('itemStyle.color') || r.getVisual('color'),
          });
      }
      R(f) || (f = [f, f]),
        'number' == typeof p && (p = [p, p]),
        u.from.each(function(t) {
          g(h, t, !0), g(c, t, !1);
        }),
        d.each(function(t) {
          var e = d.getItemModel(t).get('lineStyle.color');
          d.setItemVisual(t, {color: e || h.getItemVisual(t, 'color')}),
            d.setItemLayout(t, [h.getItemLayout(t), c.getItemLayout(t)]),
            d.setItemVisual(t, {
              fromSymbolSize: h.getItemVisual(t, 'symbolSize'),
              fromSymbol: h.getItemVisual(t, 'symbol'),
              toSymbolSize: c.getItemVisual(t, 'symbolSize'),
              toSymbol: c.getItemVisual(t, 'symbol'),
            });
        }),
        l.updateData(d),
        u.line.eachItemGraphicEl(function(t, e) {
          t.traverse(function(t) {
            t.dataModel = i;
          });
        }),
        (l.__keep = !0),
        (l.group.silent = i.get('silent') || o.get('silent'));
    },
  }),
    Mf(function(t) {
      t.markLine = t.markLine || {};
    }),
    yC.extend({
      type: 'markArea',
      defaultOption: {
        zlevel: 0,
        z: 1,
        tooltip: {trigger: 'item'},
        animation: !1,
        label: {show: !0, position: 'top'},
        itemStyle: {borderWidth: 0},
        emphasis: {label: {show: !0, position: 'top'}},
      },
    });
  function EC(t, e, i, n) {
    var o = SC(t, n[0]),
      a = SC(t, n[1]),
      r = Z,
      s = o.coord,
      l = a.coord;
    (s[0] = r(s[0], -1 / 0)),
      (s[1] = r(s[1], -1 / 0)),
      (l[0] = r(l[0], 1 / 0)),
      (l[1] = r(l[1], 1 / 0));
    var u = g([{}, o, a]);
    return (
      (u.coord = [o.coord, a.coord]),
      (u.x0 = o.x),
      (u.y0 = o.y),
      (u.x1 = a.x),
      (u.y1 = a.y),
      u
    );
  }
  function RC(t) {
    return !isNaN(t) && !isFinite(t);
  }
  function zC(t, e, i) {
    var n = 1 - t;
    return RC(e[n]) && RC(i[n]);
  }
  function BC(t, e) {
    var i = e.coord[0],
      n = e.coord[1];
    return (
      !(
        'cartesian2d' !== t.type ||
        !i ||
        !n ||
        (!zC(1, i, n) && !zC(0, i, n))
      ) ||
      (IC(t, {coord: i, x: e.x0, y: e.y0}) ||
        IC(t, {coord: n, x: e.x1, y: e.y1}))
    );
  }
  function VC(t, e, i, n, o) {
    var a,
      r = n.coordinateSystem,
      s = t.getItemModel(e),
      l = Vl(s.get(i[0]), o.getWidth()),
      u = Vl(s.get(i[1]), o.getHeight());
    if (isNaN(l) || isNaN(u)) {
      if (n.getMarkerPosition) a = n.getMarkerPosition(t.getValues(i, e));
      else {
        var h = [(f = t.get(i[0], e)), (p = t.get(i[1], e))];
        r.clampData && r.clampData(h, h), (a = r.dataToPoint(h, !0));
      }
      if ('cartesian2d' === r.type) {
        var c = r.getAxis('x'),
          d = r.getAxis('y'),
          f = t.get(i[0], e),
          p = t.get(i[1], e);
        RC(f)
          ? (a[0] = c.toGlobalCoord(c.getExtent()['x0' === i[0] ? 0 : 1]))
          : RC(p) &&
            (a[1] = d.toGlobalCoord(d.getExtent()['y0' === i[1] ? 0 : 1]));
      }
      isNaN(l) || (a[0] = l), isNaN(u) || (a[1] = u);
    } else a = [l, u];
    return a;
  }
  var GC = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];
  DC.extend({
    type: 'markArea',
    updateTransform: function(t, e, o) {
      e.eachSeries(function(i) {
        var t = i.markAreaModel;
        if (t) {
          var n = t.getData();
          n.each(function(e) {
            var t = O(GC, function(t) {
              return VC(n, e, t, i, o);
            });
            n.setItemLayout(e, t), n.getItemGraphicEl(e).setShape('points', t);
          });
        }
      }, this);
    },
    renderSeries: function(i, r, t, n) {
      var e = i.coordinateSystem,
        o = i.id,
        a = i.getData(),
        s = this.markerGroupMap,
        l = s.get(o) || s.set(o, {group: new ki()});
      this.group.add(l.group), (l.__keep = !0);
      var u = (function(t, i, e) {
        var n, o;
        o = t
          ? ((n = O(t && t.dimensions, function(t) {
              var e = i.getData();
              return C({name: t}, e.getDimensionInfo(e.mapDimension(t)) || {});
            })),
            new Qf(
              O(['x0', 'y0', 'x1', 'y1'], function(t, e) {
                return {name: t, type: n[e % 2].type};
              }),
              e,
            ))
          : new Qf((n = [{name: 'value', type: 'float'}]), e);
        var a = O(e.get('data'), L(EC, i, t, e));
        t && (a = I(a, L(BC, t)));
        var r = t
          ? function(t, e, i, n) {
              return t.coord[Math.floor(n / 2)][n % 2];
            }
          : function(t) {
              return t.value;
            };
        return o.initData(a, null, r), (o.hasItemOption = !0), o;
      })(e, i, r);
      r.setData(u),
        u.each(function(e) {
          u.setItemLayout(
            e,
            O(GC, function(t) {
              return VC(u, e, t, i, n);
            }),
          ),
            u.setItemVisual(e, {color: a.getVisual('color')});
        }),
        u
          .diff(l.__data)
          .add(function(t) {
            var e = new is({shape: {points: u.getItemLayout(t)}});
            u.setItemGraphicEl(t, e), l.group.add(e);
          })
          .update(function(t, e) {
            var i = l.__data.getItemGraphicEl(e);
            pl(i, {shape: {points: u.getItemLayout(t)}}, r, t),
              l.group.add(i),
              u.setItemGraphicEl(t, i);
          })
          .remove(function(t) {
            var e = l.__data.getItemGraphicEl(t);
            l.group.remove(e);
          })
          .execute(),
        u.eachItemGraphicEl(function(t, e) {
          var i = u.getItemModel(e),
            n = i.getModel('label'),
            o = i.getModel('emphasis.label'),
            a = u.getItemVisual(e, 'color');
          t.useStyle(
            C(i.getModel('itemStyle').getItemStyle(), {
              fill: Je(a, 0.4),
              stroke: a,
            }),
          ),
            (t.hoverStyle = i.getModel('emphasis.itemStyle').getItemStyle()),
            ol(t.style, t.hoverStyle, n, o, {
              labelFetcher: r,
              labelDataIndex: e,
              defaultText: u.getName(e) || '',
              isRectText: !0,
              autoColor: a,
            }),
            tl(t, {}),
            (t.dataModel = r);
        }),
        (l.__data = u),
        (l.group.silent = r.get('silent') || i.get('silent'));
    },
  }),
    Mf(function(t) {
      t.markArea = t.markArea || {};
    });
  var FC = Bc.legend.selector,
    WC = {
      all: {type: 'all', title: k(FC.all)},
      inverse: {type: 'inverse', title: k(FC.inverse)},
    },
    HC = Pf({
      type: 'legend.plain',
      dependencies: ['series'],
      layoutMode: {type: 'box', ignoreSize: !0},
      init: function(t, e, i) {
        this.mergeDefaultAndTheme(t, i),
          (t.selected = t.selected || {}),
          this._updateSelector(t);
      },
      mergeOption: function(t) {
        HC.superCall(this, 'mergeOption', t), this._updateSelector(t);
      },
      _updateSelector: function(t) {
        var i = t.selector;
        !0 === i && (i = t.selector = ['all', 'inverse']),
          R(i) &&
            E(i, function(t, e) {
              B(t) && (t = {type: t}), (i[e] = m(t, WC[t.type]));
            });
      },
      optionUpdated: function() {
        this._updateData(this.ecModel);
        var t = this._data;
        if (t[0] && 'single' === this.get('selectedMode')) {
          for (var e = !1, i = 0; i < t.length; i++) {
            var n = t[i].get('name');
            if (this.isSelected(n)) {
              this.select(n), (e = !0);
              break;
            }
          }
          e || this.select(t[0].get('name'));
        }
      },
      _updateData: function(o) {
        var a = [],
          r = [];
        o.eachRawSeries(function(t) {
          var e,
            i = t.name;
          if ((r.push(i), t.legendVisualProvider)) {
            var n = t.legendVisualProvider.getAllNames();
            o.isSeriesFiltered(t) || (r = r.concat(n)),
              n.length ? (a = a.concat(n)) : (e = !0);
          } else e = !0;
          e && jo(t) && a.push(t.name);
        }),
          (this._availableNames = r);
        var t = O(
          this.get('data') || a,
          function(t) {
            return (
              ('string' != typeof t && 'number' != typeof t) || (t = {name: t}),
              new Pl(t, this, this.ecModel)
            );
          },
          this,
        );
        this._data = t;
      },
      getData: function() {
        return this._data;
      },
      select: function(t) {
        var e = this.option.selected;
        'single' === this.get('selectedMode') &&
          E(this._data, function(t) {
            e[t.get('name')] = !1;
          });
        e[t] = !0;
      },
      unSelect: function(t) {
        'single' !== this.get('selectedMode') && (this.option.selected[t] = !1);
      },
      toggleSelected: function(t) {
        var e = this.option.selected;
        e.hasOwnProperty(t) || (e[t] = !0),
          this[e[t] ? 'unSelect' : 'select'](t);
      },
      allSelect: function() {
        var t = this._data,
          e = this.option.selected;
        E(t, function(t) {
          e[t.get('name', !0)] = !0;
        });
      },
      inverseSelect: function() {
        var t = this._data,
          i = this.option.selected;
        E(t, function(t) {
          var e = t.get('name', !0);
          i.hasOwnProperty(e) || (i[e] = !0), (i[e] = !i[e]);
        });
      },
      isSelected: function(t) {
        var e = this.option.selected;
        return (
          !(e.hasOwnProperty(t) && !e[t]) && 0 <= w(this._availableNames, t)
        );
      },
      getOrient: function() {
        return 'vertical' === this.get('orient')
          ? {index: 1, name: 'vertical'}
          : {index: 0, name: 'horizontal'};
      },
      defaultOption: {
        zlevel: 0,
        z: 4,
        show: !0,
        orient: 'horizontal',
        left: 'center',
        top: 0,
        align: 'auto',
        backgroundColor: 'rgba(0,0,0,0)',
        borderColor: '#ccc',
        borderRadius: 0,
        borderWidth: 0,
        padding: 5,
        itemGap: 10,
        itemWidth: 25,
        itemHeight: 14,
        inactiveColor: '#ccc',
        inactiveBorderColor: '#ccc',
        itemStyle: {borderWidth: 0},
        textStyle: {color: '#333'},
        selectedMode: !0,
        selector: !1,
        selectorLabel: {
          show: !0,
          borderRadius: 10,
          padding: [3, 5, 3, 5],
          fontSize: 12,
          fontFamily: ' sans-serif',
          color: '#666',
          borderWidth: 1,
          borderColor: '#666',
        },
        emphasis: {
          selectorLabel: {show: !0, color: '#eee', backgroundColor: '#666'},
        },
        selectorPosition: 'auto',
        selectorItemGap: 7,
        selectorButtonGap: 10,
        tooltip: {show: !1},
      },
    });
  function ZC(t, e, i) {
    var o,
      a = {},
      r = 'toggleSelected' === t;
    return (
      i.eachComponent('legend', function(n) {
        r && null != o
          ? n[o ? 'select' : 'unSelect'](e.name)
          : 'allSelect' === t || 'inverseSelect' === t
          ? n[t]()
          : (n[t](e.name), (o = n.isSelected(e.name))),
          E(n.getData(), function(t) {
            var e = t.get('name');
            if ('\n' !== e && '' !== e) {
              var i = n.isSelected(e);
              a.hasOwnProperty(e) ? (a[e] = a[e] && i) : (a[e] = i);
            }
          });
      }),
      'allSelect' === t || 'inverseSelect' === t
        ? {selected: a}
        : {name: e.name, selected: a}
    );
  }
  Tf('legendToggleSelect', 'legendselectchanged', L(ZC, 'toggleSelected')),
    Tf('legendAllSelect', 'legendselectall', L(ZC, 'allSelect')),
    Tf('legendInverseSelect', 'legendinverseselect', L(ZC, 'inverseSelect')),
    Tf('legendSelect', 'legendselected', L(ZC, 'select')),
    Tf('legendUnSelect', 'legendunselected', L(ZC, 'unSelect'));
  var UC = L,
    XC = E,
    YC = ki,
    jC = Nf({
      type: 'legend.plain',
      newlineDisabled: !1,
      init: function() {
        this.group.add((this._contentGroup = new YC())),
          this._backgroundEl,
          this.group.add((this._selectorGroup = new YC())),
          (this._isFirstRender = !0);
      },
      getContentGroup: function() {
        return this._contentGroup;
      },
      getSelectorGroup: function() {
        return this._selectorGroup;
      },
      render: function(t, e, i) {
        var n = this._isFirstRender;
        if (
          ((this._isFirstRender = !1), this.resetInner(), t.get('show', !0))
        ) {
          var o = t.get('align'),
            a = t.get('orient');
          (o && 'auto' !== o) ||
            (o =
              'right' === t.get('left') && 'vertical' === a ? 'right' : 'left');
          var r = t.get('selector', !0),
            s = t.get('selectorPosition', !0);
          !r ||
            (s && 'auto' !== s) ||
            (s = 'horizontal' === a ? 'end' : 'start'),
            this.renderInner(o, t, e, i, r, a, s);
          var l = t.getBoxLayoutParams(),
            u = {width: i.getWidth(), height: i.getHeight()},
            h = t.get('padding'),
            c = Iu(l, u, h),
            d = this.layoutInner(t, o, c, n, r, s),
            f = Iu(C({width: d.width, height: d.height}, l), u, h);
          this.group.attr('position', [f.x - d.x, f.y - d.y]),
            this.group.add((this._backgroundEl = fA(d, t)));
        }
      },
      resetInner: function() {
        this.getContentGroup().removeAll(),
          this._backgroundEl && this.group.remove(this._backgroundEl),
          this.getSelectorGroup().removeAll();
      },
      renderInner: function(u, h, c, d, t, e, i) {
        var f = this.getContentGroup(),
          p = et(),
          g = h.get('selectedMode'),
          m = [];
        c.eachRawSeries(function(t) {
          t.get('legendHoverLink') || m.push(t.id);
        }),
          XC(
            h.getData(),
            function(a, r) {
              var s = a.get('name');
              if (this.newlineDisabled || ('' !== s && '\n' !== s)) {
                var t = c.getSeriesByName(s)[0];
                if (!p.get(s)) {
                  if (t) {
                    var e = t.getData(),
                      i = e.getVisual('color'),
                      n = e.getVisual('borderColor');
                    'function' == typeof i && (i = i(t.getDataParams(0))),
                      'function' == typeof n && (n = n(t.getDataParams(0)));
                    var o = e.getVisual('legendSymbol') || 'roundRect',
                      l = e.getVisual('symbol');
                    this._createItem(s, r, a, h, o, l, u, i, n, g)
                      .on('click', UC(KC, s, null, d, m))
                      .on('mouseover', UC($C, t.name, null, d, m))
                      .on('mouseout', UC(JC, t.name, null, d, m)),
                      p.set(s, !0);
                  } else
                    c.eachRawSeries(function(t) {
                      if (!p.get(s) && t.legendVisualProvider) {
                        var e = t.legendVisualProvider;
                        if (!e.containName(s)) return;
                        var i = e.indexOfName(s),
                          n = e.getItemVisual(i, 'color'),
                          o = e.getItemVisual(i, 'borderColor');
                        this._createItem(
                          s,
                          r,
                          a,
                          h,
                          'roundRect',
                          null,
                          u,
                          n,
                          o,
                          g,
                        )
                          .on('click', UC(KC, null, s, d, m))
                          .on('mouseover', UC($C, null, s, d, m))
                          .on('mouseout', UC(JC, null, s, d, m)),
                          p.set(s, !0);
                      }
                    }, this);
                  D &&
                    (p.get(s) ||
                      console.warn(
                        s +
                          ' series not exists. Legend data should be same with series name or data name.',
                      ));
                }
              } else f.add(new YC({newline: !0}));
            },
            this,
          ),
          t && this._createSelector(t, h, d, e, i);
      },
      _createSelector: function(t, a, r, e, i) {
        var s = this.getSelectorGroup();
        XC(t, function(t) {
          !(function(t) {
            var e = t.type,
              i = new jr({
                style: {x: 0, y: 0, align: 'center', verticalAlign: 'middle'},
                onclick: function() {
                  r.dispatchAction({
                    type:
                      'all' === e ? 'legendAllSelect' : 'legendInverseSelect',
                  });
                },
              });
            s.add(i);
            var n = a.getModel('selectorLabel'),
              o = a.getModel('emphasis.selectorLabel');
            ol(i.style, (i.hoverStyle = {}), n, o, {
              defaultText: t.title,
              isRectText: !1,
            }),
              tl(i);
          })(t);
        });
      },
      _createItem: function(t, e, i, n, o, a, r, s, l, u) {
        var h = n.get('itemWidth'),
          c = n.get('itemHeight'),
          d = n.get('inactiveColor'),
          f = n.get('inactiveBorderColor'),
          p = n.get('symbolKeepAspect'),
          g = n.getModel('itemStyle'),
          m = n.isSelected(t),
          v = new YC(),
          y = i.getModel('textStyle'),
          x = i.get('icon'),
          _ = i.getModel('tooltip'),
          w = _.parentModel,
          b = Dg((o = x || o), 0, 0, h, c, m ? s : d, null == p || p);
        if (
          (v.add(qC(b, o, g, l, f, m)), !x && a && (a !== o || 'none' === a))
        ) {
          var S = 0.8 * c;
          'none' === a && (a = 'circle');
          var M = Dg(
            a,
            (h - S) / 2,
            (c - S) / 2,
            S,
            S,
            m ? s : d,
            null == p || p,
          );
          v.add(qC(M, a, g, l, f, m));
        }
        var I = 'left' === r ? h + 5 : -5,
          T = r,
          A = n.get('formatter'),
          D = t;
        'string' == typeof A && A
          ? (D = A.replace('{name}', null != t ? t : ''))
          : 'function' == typeof A && (D = A(t)),
          v.add(
            new jr({
              style: rl({}, y, {
                text: D,
                x: I,
                y: c / 2,
                textFill: m ? y.getTextColor() : d,
                textAlign: T,
                textVerticalAlign: 'middle',
              }),
            }),
          );
        var C = new us({
          shape: v.getBoundingRect(),
          invisible: !0,
          tooltip: _.get('show')
            ? P(
                {
                  content: t,
                  formatter:
                    w.get('formatter', !0) ||
                    function() {
                      return t;
                    },
                  formatterParams: {
                    componentType: 'legend',
                    legendIndex: n.componentIndex,
                    name: t,
                    $vars: ['name'],
                  },
                },
                _.option,
              )
            : null,
        });
        return (
          v.add(C),
          v.eachChild(function(t) {
            t.silent = !0;
          }),
          (C.silent = !u),
          this.getContentGroup().add(v),
          tl(v),
          (v.__legendDataIndex = e),
          v
        );
      },
      layoutInner: function(t, e, i, n, o, a) {
        var r = this.getContentGroup(),
          s = this.getSelectorGroup();
        Mu(t.get('orient'), r, t.get('itemGap'), i.width, i.height);
        var l = r.getBoundingRect(),
          u = [-l.x, -l.y];
        if (o) {
          Mu('horizontal', s, t.get('selectorItemGap', !0));
          var h = s.getBoundingRect(),
            c = [-h.x, -h.y],
            d = t.get('selectorButtonGap', !0),
            f = t.getOrient().index,
            p = 0 === f ? 'width' : 'height',
            g = 0 === f ? 'height' : 'width',
            m = 0 === f ? 'y' : 'x';
          'end' === a ? (c[f] += l[p] + d) : (u[f] += h[p] + d),
            (c[1 - f] += l[g] / 2 - h[g] / 2),
            s.attr('position', c),
            r.attr('position', u);
          var v = {x: 0, y: 0};
          return (
            (v[p] = l[p] + d + h[p]),
            (v[g] = Math.max(l[g], h[g])),
            (v[m] = Math.min(0, h[m] + c[1 - f])),
            v
          );
        }
        return r.attr('position', u), this.group.getBoundingRect();
      },
      remove: function() {
        this.getContentGroup().removeAll(), (this._isFirstRender = !0);
      },
    });
  function qC(t, e, i, n, o, a) {
    var r;
    return (
      'line' !== e && e.indexOf('empty') < 0
        ? ((r = i.getItemStyle()), (t.style.stroke = n), a || (r.stroke = o))
        : (r = i.getItemStyle(['borderWidth', 'borderColor'])),
      t.setStyle(r)
    );
  }
  function KC(t, e, i, n) {
    JC(t, e, i, n),
      i.dispatchAction({type: 'legendToggleSelect', name: null != t ? t : e}),
      $C(t, e, i, n);
  }
  function $C(t, e, i, n) {
    var o = i.getZr().storage.getDisplayList()[0];
    (o && o.useHoverLayer) ||
      i.dispatchAction({
        type: 'highlight',
        seriesName: t,
        name: e,
        excludeSeriesId: n,
      });
  }
  function JC(t, e, i, n) {
    var o = i.getZr().storage.getDisplayList()[0];
    (o && o.useHoverLayer) ||
      i.dispatchAction({
        type: 'downplay',
        seriesName: t,
        name: e,
        excludeSeriesId: n,
      });
  }
  If(Ed.PROCESSOR.SERIES_FILTER, function(t) {
    var i = t.findComponents({mainType: 'legend'});
    i &&
      i.length &&
      t.filterSeries(function(t) {
        for (var e = 0; e < i.length; e++)
          if (!i[e].isSelected(t.name)) return !1;
        return !0;
      });
  }),
    Ou.registerSubTypeDefaulter('legend', function() {
      return 'plain';
    });
  var QC = HC.extend({
    type: 'legend.scroll',
    setScrollDataIndex: function(t) {
      this.option.scrollDataIndex = t;
    },
    defaultOption: {
      scrollDataIndex: 0,
      pageButtonItemGap: 5,
      pageButtonGap: null,
      pageButtonPosition: 'end',
      pageFormatter: '{current}/{total}',
      pageIcons: {
        horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],
        vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z'],
      },
      pageIconColor: '#2f4554',
      pageIconInactiveColor: '#aaa',
      pageIconSize: 15,
      pageTextStyle: {color: '#333'},
      animationDurationUpdate: 800,
    },
    init: function(t, e, i, n) {
      var o = Du(t);
      QC.superCall(this, 'init', t, e, i, n), tL(this, t, o);
    },
    mergeOption: function(t, e) {
      QC.superCall(this, 'mergeOption', t, e), tL(this, this.option, t);
    },
  });
  function tL(t, e, i) {
    var n = [1, 1];
    (n[t.getOrient().index] = 0), Au(e, i, {type: 'box', ignoreSize: n});
  }
  var eL = ki,
    iL = ['width', 'height'],
    nL = ['x', 'y'],
    oL = jC.extend({
      type: 'legend.scroll',
      newlineDisabled: !0,
      init: function() {
        oL.superCall(this, 'init'),
          (this._currentIndex = 0),
          this.group.add((this._containerGroup = new eL())),
          this._containerGroup.add(this.getContentGroup()),
          this.group.add((this._controllerGroup = new eL())),
          this._showController;
      },
      resetInner: function() {
        oL.superCall(this, 'resetInner'),
          this._controllerGroup.removeAll(),
          this._containerGroup.removeClipPath(),
          (this._containerGroup.__rectSize = null);
      },
      renderInner: function(t, o, e, a, i, n, r) {
        var s = this;
        oL.superCall(this, 'renderInner', t, o, e, a, i, n, r);
        var l = this._controllerGroup,
          u = o.get('pageIconSize', !0);
        R(u) || (u = [u, u]), c('pagePrev', 0);
        var h = o.getModel('pageTextStyle');
        function c(t, e) {
          var i = t + 'DataIndex',
            n = wl(
              o.get('pageIcons', !0)[o.getOrient().name][e],
              {onclick: A(s._pageGo, s, i, o, a)},
              {x: -u[0] / 2, y: -u[1] / 2, width: u[0], height: u[1]},
            );
          (n.name = t), l.add(n);
        }
        l.add(
          new jr({
            name: 'pageText',
            style: {
              textFill: h.getTextColor(),
              font: h.getFont(),
              textVerticalAlign: 'middle',
              textAlign: 'center',
            },
            silent: !0,
          }),
        ),
          c('pageNext', 1);
      },
      layoutInner: function(t, e, i, n, o, a) {
        var r = this.getSelectorGroup(),
          s = t.getOrient().index,
          l = iL[s],
          u = nL[s],
          h = iL[1 - s],
          c = nL[1 - s];
        o && Mu('horizontal', r, t.get('selectorItemGap', !0));
        var d = t.get('selectorButtonGap', !0),
          f = r.getBoundingRect(),
          p = [-f.x, -f.y],
          g = k(i);
        o && (g[l] = i[l] - f[l] - d);
        var m = this._layoutContentAndController(t, n, g, s, l, h, c);
        if (o) {
          if ('end' === a) p[s] += m[l] + d;
          else {
            var v = f[l] + d;
            (p[s] -= v), (m[u] -= v);
          }
          (m[l] += f[l] + d),
            (p[1 - s] += m[c] + m[h] / 2 - f[h] / 2),
            (m[h] = Math.max(m[h], f[h])),
            (m[c] = Math.min(m[c], f[c] + p[1 - s])),
            r.attr('position', p);
        }
        return m;
      },
      _layoutContentAndController: function(t, e, i, n, o, a, r) {
        var s = this.getContentGroup(),
          l = this._containerGroup,
          u = this._controllerGroup;
        Mu(
          t.get('orient'),
          s,
          t.get('itemGap'),
          n ? i.width : null,
          n ? null : i.height,
        ),
          Mu('horizontal', u, t.get('pageButtonItemGap', !0));
        var h = s.getBoundingRect(),
          c = u.getBoundingRect(),
          d = (this._showController = h[o] > i[o]),
          f = [-h.x, -h.y];
        e || (f[n] = s.position[n]);
        var p = [0, 0],
          g = [-c.x, -c.y],
          m = U(t.get('pageButtonGap', !0), t.get('itemGap', !0));
        d &&
          ('end' === t.get('pageButtonPosition', !0)
            ? (g[n] += i[o] - c[o])
            : (p[n] += c[o] + m));
        (g[1 - n] += h[a] / 2 - c[a] / 2),
          s.attr('position', f),
          l.attr('position', p),
          u.attr('position', g);
        var v = {x: 0, y: 0};
        if (
          ((v[o] = d ? i[o] : h[o]),
          (v[a] = Math.max(h[a], c[a])),
          (v[r] = Math.min(0, c[r] + g[1 - n])),
          (l.__rectSize = i[o]),
          d)
        ) {
          var y = {x: 0, y: 0};
          (y[o] = Math.max(i[o] - c[o] - m, 0)),
            (y[a] = v[a]),
            l.setClipPath(new us({shape: y})),
            (l.__rectSize = y[o]);
        } else
          u.eachChild(function(t) {
            t.attr({invisible: !0, silent: !0});
          });
        var x = this._getPageInfo(t);
        return (
          null != x.pageIndex && pl(s, {position: x.contentPosition}, d && t),
          this._updatePageInfoView(t, x),
          v
        );
      },
      _pageGo: function(t, e, i) {
        var n = this._getPageInfo(e)[t];
        null != n &&
          i.dispatchAction({
            type: 'legendScroll',
            scrollDataIndex: n,
            legendId: e.id,
          });
      },
      _updatePageInfoView: function(n, o) {
        var a = this._controllerGroup;
        E(['pagePrev', 'pageNext'], function(t) {
          var e = null != o[t + 'DataIndex'],
            i = a.childOfName(t);
          i &&
            (i.setStyle(
              'fill',
              e
                ? n.get('pageIconColor', !0)
                : n.get('pageIconInactiveColor', !0),
            ),
            (i.cursor = e ? 'pointer' : 'default'));
        });
        var t = a.childOfName('pageText'),
          e = n.get('pageFormatter'),
          i = o.pageIndex,
          r = null != i ? i + 1 : 0,
          s = o.pageCount;
        t &&
          e &&
          t.setStyle(
            'text',
            B(e)
              ? e.replace('{current}', r).replace('{total}', s)
              : e({current: r, total: s}),
          );
      },
      _getPageInfo: function(t) {
        var e = t.get('scrollDataIndex', !0),
          i = this.getContentGroup(),
          n = this._containerGroup.__rectSize,
          o = t.getOrient().index,
          a = iL[o],
          r = nL[o],
          s = this._findTargetItemIndex(e),
          l = i.children(),
          u = l[s],
          h = l.length,
          c = h ? 1 : 0,
          d = {
            contentPosition: i.position.slice(),
            pageCount: c,
            pageIndex: c - 1,
            pagePrevDataIndex: null,
            pageNextDataIndex: null,
          };
        if (!u) return d;
        var f = y(u);
        d.contentPosition[o] = -f.s;
        for (var p = s + 1, g = f, m = f, v = null; p <= h; ++p)
          ((!(v = y(l[p])) && m.e > g.s + n) || (v && !x(v, g.s))) &&
            (g = m.i > g.i ? m : v) &&
            (null == d.pageNextDataIndex && (d.pageNextDataIndex = g.i),
            ++d.pageCount),
            (m = v);
        for (p = s - 1, g = f, m = f, v = null; -1 <= p; --p)
          ((v = y(l[p])) && x(m, v.s)) ||
            !(g.i < m.i) ||
            ((m = g),
            null == d.pagePrevDataIndex && (d.pagePrevDataIndex = g.i),
            ++d.pageCount,
            ++d.pageIndex),
            (g = v);
        return d;
        function y(t) {
          if (t) {
            var e = t.getBoundingRect(),
              i = e[r] + t.position[o];
            return {s: i, e: i + e[a], i: t.__legendDataIndex};
          }
        }
        function x(t, e) {
          return t.e >= e && t.s <= e + n;
        }
      },
      _findTargetItemIndex: function(n) {
        return this._showController
          ? (this.getContentGroup().eachChild(function(t, e) {
              var i = t.__legendDataIndex;
              null == a && null != i && (a = e), i === n && (o = e);
            }),
            null != o ? o : a)
          : 0;
        var o, a;
      },
    });
  Tf('legendScroll', 'legendscroll', function(t, e) {
    var i = t.scrollDataIndex;
    null != i &&
      e.eachComponent(
        {mainType: 'legend', subType: 'scroll', query: t},
        function(t) {
          t.setScrollDataIndex(i);
        },
      );
  });
  uD.extend({
    type: 'dataZoom.slider',
    layoutMode: 'box',
    defaultOption: {
      show: !0,
      right: 'ph',
      top: 'ph',
      width: 'ph',
      height: 'ph',
      left: null,
      bottom: null,
      backgroundColor: 'rgba(47,69,84,0)',
      dataBackground: {
        lineStyle: {color: '#2f4554', width: 0.5, opacity: 0.3},
        areaStyle: {color: 'rgba(47,69,84,0.3)', opacity: 0.3},
      },
      borderColor: '#ddd',
      fillerColor: 'rgba(167,183,204,0.4)',
      handleIcon:
        'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',
      handleSize: '100%',
      handleStyle: {color: '#a7b7cc'},
      labelPrecision: null,
      labelFormatter: null,
      showDetail: !0,
      showDataShadow: 'auto',
      realtime: !0,
      zoomLock: !1,
      textStyle: {color: '#333'},
    },
  });
  var aL = us,
    rL = Bl,
    sL = Fl,
    lL = A,
    uL = E,
    hL = 'horizontal',
    cL = 'vertical',
    dL = ['line', 'bar', 'candlestick', 'scatter'],
    fL = dD.extend({
      type: 'dataZoom.slider',
      init: function(t, e) {
        (this._displayables = {}),
          this._orient,
          this._range,
          this._handleEnds,
          this._size,
          this._handleWidth,
          this._handleHeight,
          this._location,
          this._dragging,
          this._dataShadowInfo,
          (this.api = e);
      },
      render: function(t, e, i, n) {
        fL.superApply(this, 'render', arguments),
          Ec(
            this,
            '_dispatchZoomAction',
            this.dataZoomModel.get('throttle'),
            'fixRate',
          ),
          (this._orient = t.get('orient')),
          !1 !== this.dataZoomModel.get('show')
            ? ((n && 'dataZoom' === n.type && n.from === this.uid) ||
                this._buildView(),
              this._updateView())
            : this.group.removeAll();
      },
      remove: function() {
        fL.superApply(this, 'remove', arguments),
          Rc(this, '_dispatchZoomAction');
      },
      dispose: function() {
        fL.superApply(this, 'dispose', arguments),
          Rc(this, '_dispatchZoomAction');
      },
      _buildView: function() {
        var t = this.group;
        t.removeAll(), this._resetLocation(), this._resetInterval();
        var e = (this._displayables.barGroup = new ki());
        this._renderBackground(),
          this._renderHandle(),
          this._renderDataShadow(),
          t.add(e),
          this._positionGroup();
      },
      _resetLocation: function() {
        var t = this.dataZoomModel,
          e = this.api,
          i = this._findCoordRect(),
          n = {width: e.getWidth(), height: e.getHeight()},
          o =
            this._orient === hL
              ? {
                  right: n.width - i.x - i.width,
                  top: n.height - 30 - 7,
                  width: i.width,
                  height: 30,
                }
              : {right: 7, top: i.y, width: 30, height: i.height},
          a = Du(t.option);
        E(['right', 'top', 'width', 'height'], function(t) {
          'ph' === a[t] && (a[t] = o[t]);
        });
        var r = Iu(a, n, t.padding);
        (this._location = {x: r.x, y: r.y}),
          (this._size = [r.width, r.height]),
          this._orient === cL && this._size.reverse();
      },
      _positionGroup: function() {
        var t = this.group,
          e = this._location,
          i = this._orient,
          n = this.dataZoomModel.getFirstTargetAxisModel(),
          o = n && n.get('inverse'),
          a = this._displayables.barGroup,
          r = (this._dataShadowInfo || {}).otherAxisInverse;
        a.attr(
          i !== hL || o
            ? i === hL && o
              ? {scale: r ? [-1, 1] : [-1, -1]}
              : i !== cL || o
              ? {scale: r ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}
              : {scale: r ? [1, -1] : [1, 1], rotation: Math.PI / 2}
            : {scale: r ? [1, 1] : [1, -1]},
        );
        var s = t.getBoundingRect([a]);
        t.attr('position', [e.x - s.x, e.y - s.y]);
      },
      _getViewExtent: function() {
        return [0, this._size[0]];
      },
      _renderBackground: function() {
        var t = this.dataZoomModel,
          e = this._size,
          i = this._displayables.barGroup;
        i.add(
          new aL({
            silent: !0,
            shape: {x: 0, y: 0, width: e[0], height: e[1]},
            style: {fill: t.get('backgroundColor')},
            z2: -40,
          }),
        ),
          i.add(
            new aL({
              shape: {x: 0, y: 0, width: e[0], height: e[1]},
              style: {fill: 'transparent'},
              z2: 0,
              onclick: A(this._onClickPanelClick, this),
            }),
          );
      },
      _renderDataShadow: function() {
        var t = (this._dataShadowInfo = this._prepareDataShadowInfo());
        if (t) {
          var e = this._size,
            i = t.series,
            n = i.getRawData(),
            o = i.getShadowDim ? i.getShadowDim() : t.otherDim;
          if (null != o) {
            var a = n.getDataExtent(o),
              r = 0.3 * (a[1] - a[0]);
            a = [a[0] - r, a[1] + r];
            var s,
              l = [0, e[1]],
              u = [0, e[0]],
              h = [[e[0], 0], [0, 0]],
              c = [],
              d = u[1] / (n.count() - 1),
              f = 0,
              p = Math.round(n.count() / e[0]);
            n.each([o], function(t, e) {
              if (0 < p && e % p) f += d;
              else {
                var i = null == t || isNaN(t) || '' === t,
                  n = i ? 0 : rL(t, a, l, !0);
                i && !s && e
                  ? (h.push([h[h.length - 1][0], 0]),
                    c.push([c[c.length - 1][0], 0]))
                  : !i && s && (h.push([f, 0]), c.push([f, 0])),
                  h.push([f, n]),
                  c.push([f, n]),
                  (f += d),
                  (s = i);
              }
            });
            var g = this.dataZoomModel;
            this._displayables.barGroup.add(
              new is({
                shape: {points: h},
                style: C(
                  {fill: g.get('dataBackgroundColor')},
                  g.getModel('dataBackground.areaStyle').getAreaStyle(),
                ),
                silent: !0,
                z2: -20,
              }),
            ),
              this._displayables.barGroup.add(
                new ns({
                  shape: {points: c},
                  style: g.getModel('dataBackground.lineStyle').getLineStyle(),
                  silent: !0,
                  z2: -19,
                }),
              );
          }
        }
      },
      _prepareDataShadowInfo: function() {
        var t = this.dataZoomModel,
          s = t.get('showDataShadow');
        if (!1 !== s) {
          var l,
            u = this.ecModel;
          return (
            t.eachTargetAxis(function(a, r) {
              E(
                t.getAxisProxy(a.name, r).getTargetSeriesModels(),
                function(t) {
                  if (!(l || (!0 !== s && w(dL, t.get('type')) < 0))) {
                    var e,
                      i = u.getComponent(a.axis, r).axis,
                      n = (function(t) {
                        return {
                          x: 'y',
                          y: 'x',
                          radius: 'angle',
                          angle: 'radius',
                        }[t];
                      })(a.name),
                      o = t.coordinateSystem;
                    null != n &&
                      o.getOtherAxis &&
                      (e = o.getOtherAxis(i).inverse),
                      (n = t.getData().mapDimension(n)),
                      (l = {
                        thisAxis: i,
                        series: t,
                        thisDim: a.name,
                        otherDim: n,
                        otherAxisInverse: e,
                      });
                  }
                },
                this,
              );
            }, this),
            l
          );
        }
      },
      _renderHandle: function() {
        var t = this._displayables,
          a = (t.handles = []),
          r = (t.handleLabels = []),
          s = this._displayables.barGroup,
          e = this._size,
          l = this.dataZoomModel;
        s.add(
          (t.filler = new aL({
            draggable: !0,
            cursor: pL(this._orient),
            drift: lL(this._onDragMove, this, 'all'),
            ondragstart: lL(this._showDataInfo, this, !0),
            ondragend: lL(this._onDragEnd, this),
            onmouseover: lL(this._showDataInfo, this, !0),
            onmouseout: lL(this._showDataInfo, this, !1),
            style: {fill: l.get('fillerColor'), textPosition: 'inside'},
          })),
        ),
          s.add(
            new aL({
              silent: !0,
              subPixelOptimize: !0,
              shape: {x: 0, y: 0, width: e[0], height: e[1]},
              style: {
                stroke: l.get('dataBackgroundColor') || l.get('borderColor'),
                lineWidth: 1,
                fill: 'rgba(0,0,0,0)',
              },
            }),
          ),
          uL(
            [0, 1],
            function(t) {
              var e = wl(
                  l.get('handleIcon'),
                  {
                    cursor: pL(this._orient),
                    draggable: !0,
                    drift: lL(this._onDragMove, this, t),
                    ondragend: lL(this._onDragEnd, this),
                    onmouseover: lL(this._showDataInfo, this, !0),
                    onmouseout: lL(this._showDataInfo, this, !1),
                  },
                  {x: -1, y: 0, width: 2, height: 2},
                ),
                i = e.getBoundingRect();
              (this._handleHeight = Vl(l.get('handleSize'), this._size[1])),
                (this._handleWidth = (i.width / i.height) * this._handleHeight),
                e.setStyle(l.getModel('handleStyle').getItemStyle());
              var n = l.get('handleColor');
              null != n && (e.style.fill = n), s.add((a[t] = e));
              var o = l.textStyleModel;
              this.group.add(
                (r[t] = new jr({
                  silent: !0,
                  invisible: !0,
                  style: {
                    x: 0,
                    y: 0,
                    text: '',
                    textVerticalAlign: 'middle',
                    textAlign: 'center',
                    textFill: o.getTextColor(),
                    textFont: o.getFont(),
                  },
                  z2: 10,
                })),
              );
            },
            this,
          );
      },
      _resetInterval: function() {
        var t = (this._range = this.dataZoomModel.getPercentRange()),
          e = this._getViewExtent();
        this._handleEnds = [
          rL(t[0], [0, 100], e, !0),
          rL(t[1], [0, 100], e, !0),
        ];
      },
      _updateInterval: function(t, e) {
        var i = this.dataZoomModel,
          n = this._handleEnds,
          o = this._getViewExtent(),
          a = i.findRepresentativeAxisProxy().getMinMaxSpan(),
          r = [0, 100];
        ab(
          e,
          n,
          o,
          i.get('zoomLock') ? 'all' : t,
          null != a.minSpan ? rL(a.minSpan, r, o, !0) : null,
          null != a.maxSpan ? rL(a.maxSpan, r, o, !0) : null,
        );
        var s = this._range,
          l = (this._range = sL([rL(n[0], o, r, !0), rL(n[1], o, r, !0)]));
        return !s || s[0] !== l[0] || s[1] !== l[1];
      },
      _updateView: function(t) {
        var n = this._displayables,
          o = this._handleEnds,
          e = sL(o.slice()),
          a = this._size;
        uL(
          [0, 1],
          function(t) {
            var e = n.handles[t],
              i = this._handleHeight;
            e.attr({scale: [i / 2, i / 2], position: [o[t], a[1] / 2 - i / 2]});
          },
          this,
        ),
          n.filler.setShape({x: e[0], y: 0, width: e[1] - e[0], height: a[1]}),
          this._updateDataInfo(t);
      },
      _updateDataInfo: function(t) {
        var e = this.dataZoomModel,
          a = this._displayables,
          r = a.handleLabels,
          s = this._orient,
          l = ['', ''];
        if (e.get('showDetail')) {
          var i = e.findRepresentativeAxisProxy();
          if (i) {
            var n = i.getAxisModel().axis,
              o = this._range,
              u = t
                ? i.calculateDataWindow({start: o[0], end: o[1]}).valueWindow
                : i.getDataValueWindow();
            l = [this._formatLabel(u[0], n), this._formatLabel(u[1], n)];
          }
        }
        var h = sL(this._handleEnds.slice());
        function c(t) {
          var e = ml(a.handles[t].parent, this.group),
            i = yl(0 === t ? 'right' : 'left', e),
            n = this._handleWidth / 2 + 5,
            o = vl([h[t] + (0 === t ? -n : n), this._size[1] / 2], e);
          r[t].setStyle({
            x: o[0],
            y: o[1],
            textVerticalAlign: s === hL ? 'middle' : i,
            textAlign: s === hL ? i : 'center',
            text: l[t],
          });
        }
        c.call(this, 0), c.call(this, 1);
      },
      _formatLabel: function(t, e) {
        var i = this.dataZoomModel,
          n = i.get('labelFormatter'),
          o = i.get('labelPrecision');
        (null != o && 'auto' !== o) || (o = e.getPixelPrecision());
        var a =
          null == t || isNaN(t)
            ? ''
            : 'category' === e.type || 'time' === e.type
            ? e.scale.getLabel(Math.round(t))
            : t.toFixed(Math.min(o, 20));
        return z(n) ? n(t, a) : B(n) ? n.replace('{value}', a) : a;
      },
      _showDataInfo: function(t) {
        t = this._dragging || t;
        var e = this._displayables.handleLabels;
        e[0].attr('invisible', !t), e[1].attr('invisible', !t);
      },
      _onDragMove: function(t, e, i, n) {
        (this._dragging = !0), jt(n.event);
        var o = vl([e, i], this._displayables.barGroup.getLocalTransform(), !0),
          a = this._updateInterval(t, o[0]),
          r = this.dataZoomModel.get('realtime');
        this._updateView(!r), a && r && this._dispatchZoomAction();
      },
      _onDragEnd: function() {
        (this._dragging = !1),
          this._showDataInfo(!1),
          this.dataZoomModel.get('realtime') || this._dispatchZoomAction();
      },
      _onClickPanelClick: function(t) {
        var e = this._size,
          i = this._displayables.barGroup.transformCoordToLocal(
            t.offsetX,
            t.offsetY,
          );
        if (!(i[0] < 0 || i[0] > e[0] || i[1] < 0 || i[1] > e[1])) {
          var n = this._handleEnds,
            o = (n[0] + n[1]) / 2,
            a = this._updateInterval('all', i[0] - o);
          this._updateView(), a && this._dispatchZoomAction();
        }
      },
      _dispatchZoomAction: function() {
        var t = this._range;
        this.api.dispatchAction({
          type: 'dataZoom',
          from: this.uid,
          dataZoomId: this.dataZoomModel.id,
          start: t[0],
          end: t[1],
        });
      },
      _findCoordRect: function() {
        var i;
        if (
          (uL(this.getTargetCoordInfo(), function(t) {
            if (!i && t.length) {
              var e = t[0].model.coordinateSystem;
              i = e.getRect && e.getRect();
            }
          }),
          !i)
        ) {
          var t = this.api.getWidth(),
            e = this.api.getHeight();
          i = {x: 0.2 * t, y: 0.2 * e, width: 0.6 * t, height: 0.6 * e};
        }
        return i;
      },
    });
  function pL(t) {
    return 'vertical' === t ? 'ns-resize' : 'ew-resize';
  }
  uD.extend({
    type: 'dataZoom.inside',
    defaultOption: {
      disabled: !1,
      zoomLock: !1,
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !1,
      preventDefaultMouseMove: !0,
    },
  });
  var gL = '\0_ec_dataZoom_roams';
  function mL(t, n) {
    var e = yL(t),
      o = n.dataZoomId,
      a = n.coordId;
    E(e, function(t, e) {
      var i = t.dataZoomInfos;
      i[o] && w(n.allCoordIds, a) < 0 && (delete i[o], t.count--);
    }),
      xL(e);
    var i = e[a];
    i ||
      (((i = e[a] = {
        coordId: a,
        dataZoomInfos: {},
        count: 0,
      }).controller = (function(t, r) {
        var e = new Xy(t.getZr());
        return (
          E(['pan', 'zoom', 'scrollMove'], function(a) {
            e.on(a, function(n) {
              var o = [];
              E(r.dataZoomInfos, function(t) {
                if (n.isAvailableBehavior(t.dataZoomModel.option)) {
                  var e = (t.getRange || {})[a],
                    i = e && e(r.controller, n);
                  !t.dataZoomModel.get('disabled', !0) &&
                    i &&
                    o.push({dataZoomId: t.dataZoomId, start: i[0], end: i[1]});
                }
              }),
                o.length && r.dispatchAction(o);
            });
          }),
          e
        );
      })(t, i)),
      (i.dispatchAction = L(_L, t))),
      i.dataZoomInfos[o] || i.count++,
      (i.dataZoomInfos[o] = n);
    var r = (function(t) {
      var n,
        o = {type_true: 2, type_move: 1, type_false: 0, type_undefined: -1},
        a = !0;
      return (
        E(t, function(t) {
          var e = t.dataZoomModel,
            i = !e.get('disabled', !0) && (!e.get('zoomLock', !0) || 'move');
          o['type_' + n] < o['type_' + i] && (n = i),
            (a &= e.get('preventDefaultMouseMove', !0));
        }),
        {
          controlType: n,
          opt: {
            zoomOnMouseWheel: !0,
            moveOnMouseMove: !0,
            moveOnMouseWheel: !0,
            preventDefaultMouseMove: !!a,
          },
        }
      );
    })(i.dataZoomInfos);
    i.controller.enable(r.controlType, r.opt),
      i.controller.setPointerChecker(n.containsPoint),
      Ec(i, 'dispatchAction', n.dataZoomModel.get('throttle', !0), 'fixRate');
  }
  function vL(t) {
    return t.type + '\0_' + t.id;
  }
  function yL(t) {
    var e = t.getZr();
    return e[gL] || (e[gL] = {});
  }
  function xL(i) {
    E(i, function(t, e) {
      t.count || (t.controller.dispose(), delete i[e]);
    });
  }
  function _L(t, e) {
    t.dispatchAction({type: 'dataZoom', batch: e});
  }
  var wL = A,
    bL = dD.extend({
      type: 'dataZoom.inside',
      init: function(t, e) {
        this._range;
      },
      render: function(r, t, s, e) {
        bL.superApply(this, 'render', arguments),
          (this._range = r.getPercentRange()),
          E(
            this.getTargetCoordInfo(),
            function(t, o) {
              var a = O(t, function(t) {
                return vL(t.model);
              });
              E(
                t,
                function(e) {
                  var n = e.model,
                    i = {};
                  E(
                    ['pan', 'zoom', 'scrollMove'],
                    function(t) {
                      i[t] = wL(SL[t], this, e, o);
                    },
                    this,
                  ),
                    mL(s, {
                      coordId: vL(n),
                      allCoordIds: a,
                      containsPoint: function(t, e, i) {
                        return n.coordinateSystem.containPoint([e, i]);
                      },
                      dataZoomId: r.id,
                      dataZoomModel: r,
                      getRange: i,
                    });
                },
                this,
              );
            },
            this,
          );
      },
      dispose: function() {
        !(function(t, i) {
          var e = yL(t);
          E(e, function(t) {
            t.controller.dispose();
            var e = t.dataZoomInfos;
            e[i] && (delete e[i], t.count--);
          }),
            xL(e);
        })(this.api, this.dataZoomModel.id),
          bL.superApply(this, 'dispose', arguments),
          (this._range = null);
      },
    }),
    SL = {
      zoom: function(t, e, i, n) {
        var o = this._range,
          a = o.slice(),
          r = t.axisModels[0];
        if (r) {
          var s = TL[e](null, [n.originX, n.originY], r, i, t),
            l =
              ((0 < s.signal
                ? s.pixelStart + s.pixelLength - s.pixel
                : s.pixel - s.pixelStart) /
                s.pixelLength) *
                (a[1] - a[0]) +
              a[0],
            u = Math.max(1 / n.scale, 0);
          (a[0] = (a[0] - l) * u + l), (a[1] = (a[1] - l) * u + l);
          var h = this.dataZoomModel
            .findRepresentativeAxisProxy()
            .getMinMaxSpan();
          return (
            ab(0, a, [0, 100], 0, h.minSpan, h.maxSpan),
            (this._range = a),
            o[0] !== a[0] || o[1] !== a[1] ? a : void 0
          );
        }
      },
      pan: ML(function(t, e, i, n, o, a) {
        var r = TL[n]([a.oldX, a.oldY], [a.newX, a.newY], e, o, i);
        return (r.signal * (t[1] - t[0]) * r.pixel) / r.pixelLength;
      }),
      scrollMove: ML(function(t, e, i, n, o, a) {
        return (
          TL[n]([0, 0], [a.scrollDelta, a.scrollDelta], e, o, i).signal *
          (t[1] - t[0]) *
          a.scrollDelta
        );
      }),
    };
  function ML(l) {
    return function(t, e, i, n) {
      var o = this._range,
        a = o.slice(),
        r = t.axisModels[0];
      if (r) {
        var s = l(a, r, t, e, i, n);
        return (
          ab(s, a, [0, 100], 'all'),
          (this._range = a),
          o[0] !== a[0] || o[1] !== a[1] ? a : void 0
        );
      }
    };
  }
  function IL(t) {
    var e = t && t.visualMap;
    R(e) || (e = e ? [e] : []),
      AL(e, function(t) {
        if (t) {
          DL(t, 'splitList') &&
            !DL(t, 'pieces') &&
            ((t.pieces = t.splitList), delete t.splitList);
          var e = t.pieces;
          e &&
            R(e) &&
            AL(e, function(t) {
              V(t) &&
                (DL(t, 'start') && !DL(t, 'min') && (t.min = t.start),
                DL(t, 'end') && !DL(t, 'max') && (t.max = t.end));
            });
        }
      });
  }
  var TL = {
      grid: function(t, e, i, n, o) {
        var a = i.axis,
          r = {},
          s = o.model.coordinateSystem.getRect();
        return (
          (t = t || [0, 0]),
          'x' === a.dim
            ? ((r.pixel = e[0] - t[0]),
              (r.pixelLength = s.width),
              (r.pixelStart = s.x),
              (r.signal = a.inverse ? 1 : -1))
            : ((r.pixel = e[1] - t[1]),
              (r.pixelLength = s.height),
              (r.pixelStart = s.y),
              (r.signal = a.inverse ? -1 : 1)),
          r
        );
      },
      polar: function(t, e, i, n, o) {
        var a = i.axis,
          r = {},
          s = o.model.coordinateSystem,
          l = s.getRadiusAxis().getExtent(),
          u = s.getAngleAxis().getExtent();
        return (
          (t = t ? s.pointToCoord(t) : [0, 0]),
          (e = s.pointToCoord(e)),
          'radiusAxis' === i.mainType
            ? ((r.pixel = e[0] - t[0]),
              (r.pixelLength = l[1] - l[0]),
              (r.pixelStart = l[0]),
              (r.signal = a.inverse ? 1 : -1))
            : ((r.pixel = e[1] - t[1]),
              (r.pixelLength = u[1] - u[0]),
              (r.pixelStart = u[0]),
              (r.signal = a.inverse ? -1 : 1)),
          r
        );
      },
      singleAxis: function(t, e, i, n, o) {
        var a = i.axis,
          r = o.model.coordinateSystem.getRect(),
          s = {};
        return (
          (t = t || [0, 0]),
          'horizontal' === a.orient
            ? ((s.pixel = e[0] - t[0]),
              (s.pixelLength = r.width),
              (s.pixelStart = r.x),
              (s.signal = a.inverse ? 1 : -1))
            : ((s.pixel = e[1] - t[1]),
              (s.pixelLength = r.height),
              (s.pixelStart = r.y),
              (s.signal = a.inverse ? -1 : 1)),
          s
        );
      },
    },
    AL = E;
  function DL(t, e) {
    return t && t.hasOwnProperty && t.hasOwnProperty(e);
  }
  Ou.registerSubTypeDefaulter('visualMap', function(t) {
    return t.categories ||
      ((t.pieces ? 0 < t.pieces.length : 0 < t.splitNumber) && !t.calculable)
      ? 'piecewise'
      : 'continuous';
  });
  var CL = Ed.VISUAL.COMPONENT;
  function LL(t, e, i, n) {
    for (
      var o = e.targetVisuals[n],
        a = b_.prepareVisualTypes(o),
        r = {color: t.getData().getVisual('color')},
        s = 0,
        l = a.length;
      s < l;
      s++
    ) {
      var u = a[s],
        h = o['opacity' === u ? '__alphaForOpacity' : u];
      h && h.applyVisual(i, c, d);
    }
    return r.color;
    function c(t) {
      return r[t];
    }
    function d(t, e) {
      r[t] = e;
    }
  }
  Cf(CL, {
    createOnAllSeries: !0,
    reset: function(i, t) {
      var n = [];
      return (
        t.eachComponent('visualMap', function(t) {
          var e = i.pipelineContext;
          !t.isTargetSeries(i) ||
            (e && e.large) ||
            n.push(
              (function(t, f, p, g) {
                var m = {};
                return (
                  E(t, function(t) {
                    var e = b_.prepareVisualTypes(f[t]);
                    m[t] = e;
                  }),
                  {
                    progress: function(t, i) {
                      function e(t) {
                        return i.getItemVisual(o, t);
                      }
                      function n(t, e) {
                        i.setItemVisual(o, t, e);
                      }
                      var o;
                      for (
                        null != g && (g = i.getDimension(g));
                        null != (o = t.next());

                      ) {
                        var a = i.getRawDataItem(o);
                        if (!a || !1 !== a.visualMap)
                          for (
                            var r = null != g ? i.get(g, o, !0) : o,
                              s = p(r),
                              l = f[s],
                              u = m[s],
                              h = 0,
                              c = u.length;
                            h < c;
                            h++
                          ) {
                            var d = u[h];
                            l[d] && l[d].applyVisual(r, e, n);
                          }
                      }
                    },
                  }
                );
              })(
                t.stateList,
                t.targetVisuals,
                A(t.getValueState, t),
                t.getDataDimension(i.getData()),
              ),
            );
        }),
        n
      );
    },
  }),
    Cf(CL, {
      createOnAllSeries: !0,
      reset: function(o, t) {
        var a = o.getData(),
          r = [];
        t.eachComponent('visualMap', function(t) {
          if (t.isTargetSeries(o)) {
            var e = t.getVisualMeta(A(LL, null, o, t)) || {
                stops: [],
                outerColors: [],
              },
              i = t.getDataDimension(a),
              n = a.getDimensionInfo(i);
            null != n && ((e.dimension = n.index), r.push(e));
          }
        }),
          o.getData().setVisual('visualMeta', r);
      },
    });
  var kL = function(t, e, i) {
      var n = k((PL[t] || {})[e]);
      return i && R(n) ? n[n.length - 1] : n;
    },
    PL = {
      color: {active: ['#006edd', '#e0ffff'], inactive: ['rgba(0,0,0,0)']},
      colorHue: {active: [0, 360], inactive: [0, 0]},
      colorSaturation: {active: [0.3, 1], inactive: [0, 0]},
      colorLightness: {active: [0.9, 0.5], inactive: [0, 0]},
      colorAlpha: {active: [0.3, 1], inactive: [0, 0]},
      opacity: {active: [0.3, 1], inactive: [0, 0]},
      symbol: {active: ['circle', 'roundRect', 'diamond'], inactive: ['none']},
      symbolSize: {active: [10, 50], inactive: [0, 0]},
    },
    NL = b_.mapVisual,
    OL = b_.eachVisual,
    EL = R,
    RL = E,
    zL = Fl,
    BL = Bl,
    VL = Pf({
      type: 'visualMap',
      dependencies: ['series'],
      stateList: ['inRange', 'outOfRange'],
      replacableOptionKeys: [
        'inRange',
        'outOfRange',
        'target',
        'controller',
        'color',
      ],
      dataBound: [-1 / 0, 1 / 0],
      layoutMode: {type: 'box', ignoreSize: !0},
      defaultOption: {
        show: !0,
        zlevel: 0,
        z: 4,
        seriesIndex: 'all',
        min: 0,
        max: 200,
        dimension: null,
        inRange: null,
        outOfRange: null,
        left: 0,
        right: null,
        top: null,
        bottom: 0,
        itemWidth: null,
        itemHeight: null,
        inverse: !1,
        orient: 'vertical',
        backgroundColor: 'rgba(0,0,0,0)',
        borderColor: '#ccc',
        contentColor: '#5793f3',
        inactiveColor: '#aaa',
        borderWidth: 0,
        padding: 5,
        textGap: 10,
        precision: 0,
        color: null,
        formatter: null,
        text: null,
        textStyle: {color: '#333'},
      },
      init: function(t, e, i) {
        this._dataExtent,
          (this.targetVisuals = {}),
          (this.controllerVisuals = {}),
          this.textStyleModel,
          this.itemSize,
          this.mergeDefaultAndTheme(t, i);
      },
      optionUpdated: function(t, e) {
        var i = this.option;
        v.canvasSupported || (i.realtime = !1),
          e || VD(i, t, this.replacableOptionKeys),
          (this.textStyleModel = this.getModel('textStyle')),
          this.resetItemSize(),
          this.completeVisualOption();
      },
      resetVisual: function(t) {
        var e = this.stateList;
        (t = A(t, this)),
          (this.controllerVisuals = BD(this.option.controller, e, t)),
          (this.targetVisuals = BD(this.option.target, e, t));
      },
      getTargetSeriesIndices: function() {
        var t = this.option.seriesIndex,
          i = [];
        return (
          null == t || 'all' === t
            ? this.ecModel.eachSeries(function(t, e) {
                i.push(e);
              })
            : (i = Wo(t)),
          i
        );
      },
      eachTargetSeries: function(e, i) {
        E(
          this.getTargetSeriesIndices(),
          function(t) {
            e.call(i, this.ecModel.getSeriesByIndex(t));
          },
          this,
        );
      },
      isTargetSeries: function(e) {
        var i = !1;
        return (
          this.eachTargetSeries(function(t) {
            t === e && (i = !0);
          }),
          i
        );
      },
      formatValueText: function(t, e, i) {
        var n,
          o,
          a = this.option,
          r = a.precision,
          s = this.dataBound,
          l = a.formatter;
        return (
          (i = i || ['<', '>']),
          R(t) && ((t = t.slice()), (n = !0)),
          (o = e ? t : n ? [u(t[0]), u(t[1])] : u(t)),
          B(l)
            ? l
                .replace('{value}', n ? o[0] : o)
                .replace('{value2}', n ? o[1] : o)
            : z(l)
            ? n
              ? l(t[0], t[1])
              : l(t)
            : n
            ? t[0] === s[0]
              ? i[0] + ' ' + o[1]
              : t[1] === s[1]
              ? i[1] + ' ' + o[0]
              : o[0] + ' - ' + o[1]
            : o
        );
        function u(t) {
          return t === s[0]
            ? 'min'
            : t === s[1]
            ? 'max'
            : (+t).toFixed(Math.min(r, 20));
        }
      },
      resetExtent: function() {
        var t = this.option,
          e = zL([t.min, t.max]);
        this._dataExtent = e;
      },
      getDataDimension: function(t) {
        var e = this.option.dimension,
          i = t.dimensions;
        if (null != e || i.length) {
          if (null != e) return t.getDimension(e);
          for (var n = t.dimensions, o = n.length - 1; 0 <= o; o--) {
            var a = n[o];
            if (!t.getDimensionInfo(a).isCalculationCoord) return a;
          }
        }
      },
      getExtent: function() {
        return this._dataExtent.slice();
      },
      completeVisualOption: function() {
        var t = this.ecModel,
          e = this.option,
          i = {inRange: e.inRange, outOfRange: e.outOfRange},
          n = e.target || (e.target = {}),
          o = e.controller || (e.controller = {});
        m(n, i), m(o, i);
        var u = this.isCategory();
        function a(n) {
          EL(e.color) &&
            !n.inRange &&
            (n.inRange = {color: e.color.slice().reverse()}),
            (n.inRange = n.inRange || {color: t.get('gradientColor')}),
            RL(
              this.stateList,
              function(t) {
                var e = n[t];
                if (B(e)) {
                  var i = kL(e, 'active', u);
                  i ? ((n[t] = {}), (n[t][e] = i)) : delete n[t];
                }
              },
              this,
            );
        }
        a.call(this, n),
          a.call(this, o),
          function(t, e, i) {
            var n = t[e],
              o = t[i];
            n &&
              !o &&
              ((o = t[i] = {}),
              RL(n, function(t, e) {
                if (b_.isValidType(e)) {
                  var i = kL(e, 'inactive', u);
                  null != i &&
                    ((o[e] = i),
                    'color' !== e ||
                      o.hasOwnProperty('opacity') ||
                      o.hasOwnProperty('colorAlpha') ||
                      (o.opacity = [0, 0]));
                }
              }));
          }.call(this, n, 'inRange', 'outOfRange'),
          function(a) {
            var r = (a.inRange || {}).symbol || (a.outOfRange || {}).symbol,
              s =
                (a.inRange || {}).symbolSize || (a.outOfRange || {}).symbolSize,
              l = this.get('inactiveColor');
            RL(
              this.stateList,
              function(t) {
                var e = this.itemSize,
                  i = a[t];
                null == (i = i || (a[t] = {color: u ? l : [l]})).symbol &&
                  (i.symbol = (r && k(r)) || (u ? 'roundRect' : ['roundRect'])),
                  null == i.symbolSize &&
                    (i.symbolSize = (s && k(s)) || (u ? e[0] : [e[0], e[0]])),
                  (i.symbol = NL(i.symbol, function(t) {
                    return 'none' === t || 'square' === t ? 'roundRect' : t;
                  }));
                var n = i.symbolSize;
                if (null != n) {
                  var o = -1 / 0;
                  OL(n, function(t) {
                    o < t && (o = t);
                  }),
                    (i.symbolSize = NL(n, function(t) {
                      return BL(t, [0, o], [0, e[0]], !0);
                    }));
                }
              },
              this,
            );
          }.call(this, o);
      },
      resetItemSize: function() {
        this.itemSize = [
          parseFloat(this.get('itemWidth')),
          parseFloat(this.get('itemHeight')),
        ];
      },
      isCategory: function() {
        return !!this.option.categories;
      },
      setSelected: nt,
      getValueState: nt,
      getVisualMeta: nt,
    }),
    GL = [20, 140],
    FL = VL.extend({
      type: 'visualMap.continuous',
      defaultOption: {
        align: 'auto',
        calculable: !1,
        range: null,
        realtime: !0,
        itemHeight: null,
        itemWidth: null,
        hoverLink: !0,
        hoverLinkDataSize: null,
        hoverLinkOnHandle: null,
      },
      optionUpdated: function(t, e) {
        FL.superApply(this, 'optionUpdated', arguments),
          this.resetExtent(),
          this.resetVisual(function(t) {
            (t.mappingMethod = 'linear'), (t.dataExtent = this.getExtent());
          }),
          this._resetRange();
      },
      resetItemSize: function() {
        FL.superApply(this, 'resetItemSize', arguments);
        var t = this.itemSize;
        'horizontal' === this._orient && t.reverse(),
          (null != t[0] && !isNaN(t[0])) || (t[0] = GL[0]),
          (null != t[1] && !isNaN(t[1])) || (t[1] = GL[1]);
      },
      _resetRange: function() {
        var t = this.getExtent(),
          e = this.option.range;
        !e || e.auto
          ? ((t.auto = 1), (this.option.range = t))
          : R(e) &&
            (e[0] > e[1] && e.reverse(),
            (e[0] = Math.max(e[0], t[0])),
            (e[1] = Math.min(e[1], t[1])));
      },
      completeVisualOption: function() {
        VL.prototype.completeVisualOption.apply(this, arguments),
          E(
            this.stateList,
            function(t) {
              var e = this.option.controller[t].symbolSize;
              e && e[0] !== e[1] && (e[0] = 0);
            },
            this,
          );
      },
      setSelected: function(t) {
        (this.option.range = t.slice()), this._resetRange();
      },
      getSelected: function() {
        var t = this.getExtent(),
          e = Fl((this.get('range') || []).slice());
        return (
          e[0] > t[1] && (e[0] = t[1]),
          e[1] > t[1] && (e[1] = t[1]),
          e[0] < t[0] && (e[0] = t[0]),
          e[1] < t[0] && (e[1] = t[0]),
          e
        );
      },
      getValueState: function(t) {
        var e = this.option.range,
          i = this.getExtent();
        return (e[0] <= i[0] || e[0] <= t) && (e[1] >= i[1] || t <= e[1])
          ? 'inRange'
          : 'outOfRange';
      },
      findTargetDataIndices: function(n) {
        var o = [];
        return (
          this.eachTargetSeries(function(t) {
            var i = [],
              e = t.getData();
            e.each(
              this.getDataDimension(e),
              function(t, e) {
                n[0] <= t && t <= n[1] && i.push(e);
              },
              this,
            ),
              o.push({seriesId: t.id, dataIndex: i});
          }, this),
          o
        );
      },
      getVisualMeta: function(i) {
        var t = WL(this, 'outOfRange', this.getExtent()),
          e = WL(this, 'inRange', this.option.range.slice()),
          n = [];
        function o(t, e) {
          n.push({value: t, color: i(t, e)});
        }
        for (
          var a = 0, r = 0, s = e.length, l = t.length;
          r < l && (!e.length || t[r] <= e[0]);
          r++
        )
          t[r] < e[a] && o(t[r], 'outOfRange');
        for (var u = 1; a < s; a++, u = 0)
          u && n.length && o(e[a], 'outOfRange'), o(e[a], 'inRange');
        for (u = 1; r < l; r++)
          (!e.length || e[e.length - 1] < t[r]) &&
            (u && (n.length && o(n[n.length - 1].value, 'outOfRange'), (u = 0)),
            o(t[r], 'outOfRange'));
        var h = n.length;
        return {
          stops: n,
          outerColors: [
            h ? n[0].color : 'transparent',
            h ? n[h - 1].color : 'transparent',
          ],
        };
      },
    });
  function WL(t, e, i) {
    if (i[0] === i[1]) return i.slice();
    for (
      var n = (i[1] - i[0]) / 200, o = i[0], a = [], r = 0;
      r <= 200 && o < i[1];
      r++
    )
      a.push(o), (o += n);
    return a.push(i[1]), a;
  }
  var HL = Nf({
    type: 'visualMap',
    autoPositionValues: {left: 1, right: 1, top: 1, bottom: 1},
    init: function(t, e) {
      (this.ecModel = t), (this.api = e), this.visualMapModel;
    },
    render: function(t, e, i, n) {
      !1 !== (this.visualMapModel = t).get('show')
        ? this.doRender.apply(this, arguments)
        : this.group.removeAll();
    },
    renderBackground: function(t) {
      var e = this.visualMapModel,
        i = au(e.get('padding') || 0),
        n = t.getBoundingRect();
      t.add(
        new us({
          z2: -1,
          silent: !0,
          shape: {
            x: n.x - i[3],
            y: n.y - i[0],
            width: n.width + i[3] + i[1],
            height: n.height + i[0] + i[2],
          },
          style: {
            fill: e.get('backgroundColor'),
            stroke: e.get('borderColor'),
            lineWidth: e.get('borderWidth'),
          },
        }),
      );
    },
    getControllerVisual: function(i, n, o) {
      var t = (o = o || {}).forceState,
        e = this.visualMapModel,
        a = {};
      if (('symbol' === n && (a.symbol = e.get('itemSymbol')), 'color' === n)) {
        var r = e.get('contentColor');
        a.color = r;
      }
      function s(t) {
        return a[t];
      }
      function l(t, e) {
        a[t] = e;
      }
      var u = e.controllerVisuals[t || e.getValueState(i)];
      return (
        E(b_.prepareVisualTypes(u), function(t) {
          var e = u[t];
          o.convertOpacityToAlpha &&
            'opacity' === t &&
            ((t = 'colorAlpha'), (e = u.__alphaForOpacity)),
            b_.dependsOn(t, n) && e && e.applyVisual(i, s, l);
        }),
        a[n]
      );
    },
    positionGroup: function(t) {
      var e = this.visualMapModel,
        i = this.api;
      Tu(t, e.getBoxLayoutParams(), {
        width: i.getWidth(),
        height: i.getHeight(),
      });
    },
    doRender: nt,
  });
  function ZL(t, e, i) {
    var n = t.option,
      o = n.align;
    if (null != o && 'auto' !== o) return o;
    for (
      var a = {width: e.getWidth(), height: e.getHeight()},
        r = 'horizontal' === n.orient ? 1 : 0,
        s = [['left', 'right', 'width'], ['top', 'bottom', 'height']],
        l = s[r],
        u = [0, null, 10],
        h = {},
        c = 0;
      c < 3;
      c++
    )
      (h[s[1 - r][c]] = u[c]), (h[l[c]] = 2 === c ? i[0] : n[l[c]]);
    var d = [['x', 'width', 3], ['y', 'height', 0]][r],
      f = Iu(h, a, n.padding);
    return l[
      (f.margin[d[2]] || 0) + f[d[0]] + 0.5 * f[d[1]] < 0.5 * a[d[1]] ? 0 : 1
    ];
  }
  function UL(t, e) {
    return (
      E(t || [], function(t) {
        null != t.dataIndex &&
          ((t.dataIndexInside = t.dataIndex), (t.dataIndex = null)),
          (t.highlightKey = 'visualMap' + (e ? e.componentIndex : ''));
      }),
      t
    );
  }
  var XL = Bl,
    YL = E,
    jL = Math.min,
    qL = Math.max,
    KL = HL.extend({
      type: 'visualMap.continuous',
      init: function() {
        KL.superApply(this, 'init', arguments),
          (this._shapes = {}),
          (this._dataInterval = []),
          (this._handleEnds = []),
          this._orient,
          this._useHandle,
          (this._hoverLinkDataIndices = []),
          this._dragging,
          this._hovering;
      },
      doRender: function(t, e, i, n) {
        (n && 'selectDataRange' === n.type && n.from === this.uid) ||
          this._buildView();
      },
      _buildView: function() {
        this.group.removeAll();
        var t = this.visualMapModel,
          e = this.group;
        (this._orient = t.get('orient')),
          (this._useHandle = t.get('calculable')),
          this._resetInterval(),
          this._renderBar(e);
        var i = t.get('text');
        this._renderEndsText(e, i, 0),
          this._renderEndsText(e, i, 1),
          this._updateView(!0),
          this.renderBackground(e),
          this._updateView(),
          this._enableHoverLinkToSeries(),
          this._enableHoverLinkFromSeries(),
          this.positionGroup(e);
      },
      _renderEndsText: function(t, e, i) {
        if (e) {
          var n = e[1 - i];
          n = null != n ? n + '' : '';
          var o = this.visualMapModel,
            a = o.get('textGap'),
            r = o.itemSize,
            s = this._shapes.barGroup,
            l = this._applyTransform([r[0] / 2, 0 === i ? -a : r[1] + a], s),
            u = this._applyTransform(0 === i ? 'bottom' : 'top', s),
            h = this._orient,
            c = this.visualMapModel.textStyleModel;
          this.group.add(
            new jr({
              style: {
                x: l[0],
                y: l[1],
                textVerticalAlign: 'horizontal' === h ? 'middle' : u,
                textAlign: 'horizontal' === h ? u : 'center',
                text: n,
                textFont: c.getFont(),
                textFill: c.getTextColor(),
              },
            }),
          );
        }
      },
      _renderBar: function(t) {
        var e = this.visualMapModel,
          i = this._shapes,
          n = e.itemSize,
          o = this._orient,
          a = this._useHandle,
          r = ZL(e, this.api, n),
          s = (i.barGroup = this._createBarGroup(r));
        s.add((i.outOfRange = $L())),
          s.add(
            (i.inRange = $L(
              null,
              a ? QL(this._orient) : null,
              A(this._dragHandle, this, 'all', !1),
              A(this._dragHandle, this, 'all', !0),
            )),
          );
        var l = e.textStyleModel.getTextRect('国'),
          u = qL(l.width, l.height);
        a &&
          ((i.handleThumbs = []),
          (i.handleLabels = []),
          (i.handleLabelPoints = []),
          this._createHandle(s, 0, n, u, o, r),
          this._createHandle(s, 1, n, u, o, r)),
          this._createIndicator(s, n, u, o),
          t.add(s);
      },
      _createHandle: function(t, e, i, n, o) {
        var a = A(this._dragHandle, this, e, !1),
          r = A(this._dragHandle, this, e, !0),
          s = $L(
            (function(t, e) {
              return 0 === t
                ? [[0, 0], [e, 0], [e, -e]]
                : [[0, 0], [e, 0], [e, e]];
            })(e, n),
            QL(this._orient),
            a,
            r,
          );
        (s.position[0] = i[0]), t.add(s);
        var l = this.visualMapModel.textStyleModel,
          u = new jr({
            draggable: !0,
            drift: a,
            onmousemove: function(t) {
              jt(t.event);
            },
            ondragend: r,
            style: {
              x: 0,
              y: 0,
              text: '',
              textFont: l.getFont(),
              textFill: l.getTextColor(),
            },
          });
        this.group.add(u);
        var h = [
            'horizontal' === o ? n / 2 : 1.5 * n,
            'horizontal' === o
              ? 0 === e
                ? -1.5 * n
                : 1.5 * n
              : 0 === e
              ? -n / 2
              : n / 2,
          ],
          c = this._shapes;
        (c.handleThumbs[e] = s),
          (c.handleLabelPoints[e] = h),
          (c.handleLabels[e] = u);
      },
      _createIndicator: function(t, e, i, n) {
        var o = $L([[0, 0]], 'move');
        (o.position[0] = e[0]), o.attr({invisible: !0, silent: !0}), t.add(o);
        var a = this.visualMapModel.textStyleModel,
          r = new jr({
            silent: !0,
            invisible: !0,
            style: {
              x: 0,
              y: 0,
              text: '',
              textFont: a.getFont(),
              textFill: a.getTextColor(),
            },
          });
        this.group.add(r);
        var s = ['horizontal' === n ? i / 2 : 9, 0],
          l = this._shapes;
        (l.indicator = o), (l.indicatorLabel = r), (l.indicatorLabelPoint = s);
      },
      _dragHandle: function(t, e, i, n) {
        if (this._useHandle) {
          if (((this._dragging = !e), !e)) {
            var o = this._applyTransform([i, n], this._shapes.barGroup, !0);
            this._updateInterval(t, o[1]), this._updateView();
          }
          e === !this.visualMapModel.get('realtime') &&
            this.api.dispatchAction({
              type: 'selectDataRange',
              from: this.uid,
              visualMapId: this.visualMapModel.id,
              selected: this._dataInterval.slice(),
            }),
            e
              ? this._hovering || this._clearHoverLinkToSeries()
              : JL(this.visualMapModel) &&
                this._doHoverLinkToSeries(this._handleEnds[t], !1);
        }
      },
      _resetInterval: function() {
        var t = this.visualMapModel,
          e = (this._dataInterval = t.getSelected()),
          i = t.getExtent(),
          n = [0, t.itemSize[1]];
        this._handleEnds = [XL(e[0], i, n, !0), XL(e[1], i, n, !0)];
      },
      _updateInterval: function(t, e) {
        e = e || 0;
        var i = this.visualMapModel,
          n = this._handleEnds,
          o = [0, i.itemSize[1]];
        ab(e, n, o, t, 0);
        var a = i.getExtent();
        this._dataInterval = [XL(n[0], o, a, !0), XL(n[1], o, a, !0)];
      },
      _updateView: function(t) {
        var e = this.visualMapModel,
          i = e.getExtent(),
          n = this._shapes,
          o = [0, e.itemSize[1]],
          a = t ? o : this._handleEnds,
          r = this._createBarVisual(this._dataInterval, i, a, 'inRange'),
          s = this._createBarVisual(i, i, o, 'outOfRange');
        n.inRange
          .setStyle({fill: r.barColor, opacity: r.opacity})
          .setShape('points', r.barPoints),
          n.outOfRange
            .setStyle({fill: s.barColor, opacity: s.opacity})
            .setShape('points', s.barPoints),
          this._updateHandle(a, r);
      },
      _createBarVisual: function(t, e, i, n) {
        var o = {forceState: n, convertOpacityToAlpha: !0},
          a = this._makeColorGradient(t, o),
          r = [
            this.getControllerVisual(t[0], 'symbolSize', o),
            this.getControllerVisual(t[1], 'symbolSize', o),
          ],
          s = this._createBarPoints(i, r);
        return {
          barColor: new ys(0, 0, 0, 1, a),
          barPoints: s,
          handlesColor: [a[0].color, a[a.length - 1].color],
        };
      },
      _makeColorGradient: function(t, e) {
        var i = [],
          n = (t[1] - t[0]) / 100;
        i.push({color: this.getControllerVisual(t[0], 'color', e), offset: 0});
        for (var o = 1; o < 100; o++) {
          var a = t[0] + n * o;
          if (a > t[1]) break;
          i.push({
            color: this.getControllerVisual(a, 'color', e),
            offset: o / 100,
          });
        }
        return (
          i.push({
            color: this.getControllerVisual(t[1], 'color', e),
            offset: 1,
          }),
          i
        );
      },
      _createBarPoints: function(t, e) {
        var i = this.visualMapModel.itemSize;
        return [
          [i[0] - e[0], t[0]],
          [i[0], t[0]],
          [i[0], t[1]],
          [i[0] - e[1], t[1]],
        ];
      },
      _createBarGroup: function(t) {
        var e = this._orient,
          i = this.visualMapModel.get('inverse');
        return new ki(
          'horizontal' !== e || i
            ? 'horizontal' === e && i
              ? {
                  scale: 'bottom' === t ? [-1, 1] : [1, 1],
                  rotation: -Math.PI / 2,
                }
              : 'vertical' !== e || i
              ? {scale: 'left' === t ? [1, 1] : [-1, 1]}
              : {scale: 'left' === t ? [1, -1] : [-1, -1]}
            : {scale: 'bottom' === t ? [1, 1] : [-1, 1], rotation: Math.PI / 2},
        );
      },
      _updateHandle: function(n, o) {
        if (this._useHandle) {
          var a = this._shapes,
            r = this.visualMapModel,
            s = a.handleThumbs,
            l = a.handleLabels;
          YL(
            [0, 1],
            function(t) {
              var e = s[t];
              e.setStyle('fill', o.handlesColor[t]), (e.position[1] = n[t]);
              var i = vl(a.handleLabelPoints[t], ml(e, this.group));
              l[t].setStyle({
                x: i[0],
                y: i[1],
                text: r.formatValueText(this._dataInterval[t]),
                textVerticalAlign: 'middle',
                textAlign: this._applyTransform(
                  'horizontal' === this._orient
                    ? 0 === t
                      ? 'bottom'
                      : 'top'
                    : 'left',
                  a.barGroup,
                ),
              });
            },
            this,
          );
        }
      },
      _showIndicator: function(t, e, i, n) {
        var o = this.visualMapModel,
          a = o.getExtent(),
          r = o.itemSize,
          s = [0, r[1]],
          l = XL(t, a, s, !0),
          u = this._shapes,
          h = u.indicator;
        if (h) {
          (h.position[1] = l),
            h.attr('invisible', !1),
            h.setShape(
              'points',
              (function(t, e, i, n) {
                return t
                  ? [[0, -jL(e, qL(i, 0))], [6, 0], [0, jL(e, qL(n - i, 0))]]
                  : [[0, 0], [5, -5], [5, 5]];
              })(!!i, n, l, r[1]),
            );
          var c = this.getControllerVisual(t, 'color', {
            convertOpacityToAlpha: !0,
          });
          h.setStyle('fill', c);
          var d = vl(u.indicatorLabelPoint, ml(h, this.group)),
            f = u.indicatorLabel;
          f.attr('invisible', !1);
          var p = this._applyTransform('left', u.barGroup),
            g = this._orient;
          f.setStyle({
            text: (i || '') + o.formatValueText(e),
            textVerticalAlign: 'horizontal' === g ? p : 'middle',
            textAlign: 'horizontal' === g ? 'center' : p,
            x: d[0],
            y: d[1],
          });
        }
      },
      _enableHoverLinkToSeries: function() {
        var n = this;
        this._shapes.barGroup
          .on('mousemove', function(t) {
            if (((n._hovering = !0), !n._dragging)) {
              var e = n.visualMapModel.itemSize,
                i = n._applyTransform(
                  [t.offsetX, t.offsetY],
                  n._shapes.barGroup,
                  !0,
                  !0,
                );
              (i[1] = jL(qL(0, i[1]), e[1])),
                n._doHoverLinkToSeries(i[1], 0 <= i[0] && i[0] <= e[0]);
            }
          })
          .on('mouseout', function() {
            (n._hovering = !1), n._dragging || n._clearHoverLinkToSeries();
          });
      },
      _enableHoverLinkFromSeries: function() {
        var t = this.api.getZr();
        this.visualMapModel.option.hoverLink
          ? (t.on('mouseover', this._hoverLinkFromSeriesMouseOver, this),
            t.on('mouseout', this._hideIndicator, this))
          : this._clearHoverLinkFromSeries();
      },
      _doHoverLinkToSeries: function(t, e) {
        var i = this.visualMapModel,
          n = i.itemSize;
        if (i.option.hoverLink) {
          var o = [0, n[1]],
            a = i.getExtent();
          t = jL(qL(o[0], t), o[1]);
          var r = (function(t, e, i) {
              var n = 6,
                o = t.get('hoverLinkDataSize');
              o && (n = XL(o, e, i, !0) / 2);
              return n;
            })(i, a, o),
            s = [t - r, t + r],
            l = XL(t, o, a, !0),
            u = [XL(s[0], o, a, !0), XL(s[1], o, a, !0)];
          s[0] < o[0] && (u[0] = -1 / 0),
            o[1] < s[1] && (u[1] = 1 / 0),
            e &&
              (u[0] === -1 / 0
                ? this._showIndicator(l, u[1], '< ', r)
                : u[1] === 1 / 0
                ? this._showIndicator(l, u[0], '> ', r)
                : this._showIndicator(l, l, '≈ ', r));
          var h = this._hoverLinkDataIndices,
            c = [];
          (e || JL(i)) &&
            (c = this._hoverLinkDataIndices = i.findTargetDataIndices(u));
          var d = (function(t, e) {
            var i = {},
              n = {};
            return o(t || [], i), o(e || [], n, i), [a(i), a(n)];
            function o(t, e, i) {
              for (var n = 0, o = t.length; n < o; n++)
                for (
                  var a = t[n].seriesId,
                    r = Wo(t[n].dataIndex),
                    s = i && i[a],
                    l = 0,
                    u = r.length;
                  l < u;
                  l++
                ) {
                  var h = r[l];
                  s && s[h] ? (s[h] = null) : ((e[a] || (e[a] = {}))[h] = 1);
                }
            }
            function a(t, e) {
              var i = [];
              for (var n in t)
                if (t.hasOwnProperty(n) && null != t[n])
                  if (e) i.push(+n);
                  else {
                    var o = a(t[n], !0);
                    o.length && i.push({seriesId: n, dataIndex: o});
                  }
              return i;
            }
          })(h, c);
          this._dispatchHighDown('downplay', UL(d[0], i)),
            this._dispatchHighDown('highlight', UL(d[1], i));
        }
      },
      _hoverLinkFromSeriesMouseOver: function(t) {
        var e = t.target,
          i = this.visualMapModel;
        if (e && null != e.dataIndex) {
          var n = this.ecModel.getSeriesByIndex(e.seriesIndex);
          if (i.isTargetSeries(n)) {
            var o = n.getData(e.dataType),
              a = o.get(i.getDataDimension(o), e.dataIndex, !0);
            isNaN(a) || this._showIndicator(a, a);
          }
        }
      },
      _hideIndicator: function() {
        var t = this._shapes;
        t.indicator && t.indicator.attr('invisible', !0),
          t.indicatorLabel && t.indicatorLabel.attr('invisible', !0);
      },
      _clearHoverLinkToSeries: function() {
        this._hideIndicator();
        var t = this._hoverLinkDataIndices;
        this._dispatchHighDown('downplay', UL(t, this.visualMapModel)),
          (t.length = 0);
      },
      _clearHoverLinkFromSeries: function() {
        this._hideIndicator();
        var t = this.api.getZr();
        t.off('mouseover', this._hoverLinkFromSeriesMouseOver),
          t.off('mouseout', this._hideIndicator);
      },
      _applyTransform: function(t, e, i, n) {
        var o = ml(e, n ? null : this.group);
        return Il[R(t) ? 'applyTransform' : 'transformDirection'](t, o, i);
      },
      _dispatchHighDown: function(t, e) {
        e && e.length && this.api.dispatchAction({type: t, batch: e});
      },
      dispose: function() {
        this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
      },
      remove: function() {
        this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
      },
    });
  function $L(t, e, i, n) {
    return new is({
      shape: {points: t},
      draggable: !!i,
      cursor: e,
      drift: i,
      onmousemove: function(t) {
        jt(t.event);
      },
      ondragend: n,
    });
  }
  function JL(t) {
    var e = t.get('hoverLinkOnHandle');
    return !!(null == e ? t.get('realtime') : e);
  }
  function QL(t) {
    return 'vertical' === t ? 'ns-resize' : 'ew-resize';
  }
  Tf(
    {type: 'selectDataRange', event: 'dataRangeSelected', update: 'update'},
    function(e, t) {
      t.eachComponent({mainType: 'visualMap', query: e}, function(t) {
        t.setSelected(e.selected);
      });
    },
  ),
    Mf(IL);
  var tk = VL.extend({
      type: 'visualMap.piecewise',
      defaultOption: {
        selected: null,
        minOpen: !1,
        maxOpen: !1,
        align: 'auto',
        itemWidth: 20,
        itemHeight: 14,
        itemSymbol: 'roundRect',
        pieceList: null,
        categories: null,
        splitNumber: 5,
        selectedMode: 'multiple',
        itemGap: 10,
        hoverLink: !0,
        showLabel: null,
      },
      optionUpdated: function(t, e) {
        tk.superApply(this, 'optionUpdated', arguments),
          (this._pieceList = []),
          this.resetExtent();
        var i = (this._mode = this._determineMode());
        ek[this._mode].call(this), this._resetSelected(t, e);
        var n = this.option.categories;
        this.resetVisual(function(t, e) {
          'categories' === i
            ? ((t.mappingMethod = 'category'), (t.categories = k(n)))
            : ((t.dataExtent = this.getExtent()),
              (t.mappingMethod = 'piecewise'),
              (t.pieceList = O(this._pieceList, function(t) {
                t = k(t);
                return 'inRange' !== e && (t.visual = null), t;
              })));
        });
      },
      completeVisualOption: function() {
        var n = this.option,
          i = {},
          t = b_.listVisualTypes(),
          o = this.isCategory();
        function a(t, e, i) {
          return t && t[e] && (V(t[e]) ? t[e].hasOwnProperty(i) : t[e] === i);
        }
        E(n.pieces, function(e) {
          E(t, function(t) {
            e.hasOwnProperty(t) && (i[t] = 1);
          });
        }),
          E(
            i,
            function(t, e) {
              var i = 0;
              E(
                this.stateList,
                function(t) {
                  i |= a(n, t, e) || a(n.target, t, e);
                },
                this,
              ),
                i ||
                  E(this.stateList, function(t) {
                    (n[t] || (n[t] = {}))[e] = kL(
                      e,
                      'inRange' === t ? 'active' : 'inactive',
                      o,
                    );
                  });
            },
            this,
          ),
          VL.prototype.completeVisualOption.apply(this, arguments);
      },
      _resetSelected: function(t, e) {
        var i = this.option,
          n = this._pieceList,
          o = (e ? i : t).selected || {};
        if (
          ((i.selected = o),
          E(
            n,
            function(t, e) {
              var i = this.getSelectedMapKey(t);
              o.hasOwnProperty(i) || (o[i] = !0);
            },
            this,
          ),
          'single' === i.selectedMode)
        ) {
          var a = !1;
          E(
            n,
            function(t, e) {
              var i = this.getSelectedMapKey(t);
              o[i] && (a ? (o[i] = !1) : (a = !0));
            },
            this,
          );
        }
      },
      getSelectedMapKey: function(t) {
        return 'categories' === this._mode ? t.value + '' : t.index + '';
      },
      getPieceList: function() {
        return this._pieceList;
      },
      _determineMode: function() {
        var t = this.option;
        return t.pieces && 0 < t.pieces.length
          ? 'pieces'
          : this.option.categories
          ? 'categories'
          : 'splitNumber';
      },
      setSelected: function(t) {
        this.option.selected = k(t);
      },
      getValueState: function(t) {
        var e = b_.findPieceIndex(t, this._pieceList);
        return null != e &&
          this.option.selected[this.getSelectedMapKey(this._pieceList[e])]
          ? 'inRange'
          : 'outOfRange';
      },
      findTargetDataIndices: function(n) {
        var o = [];
        return (
          this.eachTargetSeries(function(t) {
            var i = [],
              e = t.getData();
            e.each(
              this.getDataDimension(e),
              function(t, e) {
                b_.findPieceIndex(t, this._pieceList) === n && i.push(e);
              },
              this,
            ),
              o.push({seriesId: t.id, dataIndex: i});
          }, this),
          o
        );
      },
      getRepresentValue: function(t) {
        var e;
        if (this.isCategory()) e = t.value;
        else if (null != t.value) e = t.value;
        else {
          var i = t.interval || [];
          e = i[0] === -1 / 0 && i[1] === 1 / 0 ? 0 : (i[0] + i[1]) / 2;
        }
        return e;
      },
      getVisualMeta: function(o) {
        if (!this.isCategory()) {
          var a = [],
            r = [],
            s = this,
            t = this._pieceList.slice();
          if (t.length) {
            var e = t[0].interval[0];
            e !== -1 / 0 && t.unshift({interval: [-1 / 0, e]}),
              (e = t[t.length - 1].interval[1]) !== 1 / 0 &&
                t.push({interval: [e, 1 / 0]});
          } else t.push({interval: [-1 / 0, 1 / 0]});
          var i = -1 / 0;
          return (
            E(
              t,
              function(t) {
                var e = t.interval;
                e &&
                  (e[0] > i && n([i, e[0]], 'outOfRange'),
                  n(e.slice()),
                  (i = e[1]));
              },
              this,
            ),
            {stops: a, outerColors: r}
          );
        }
        function n(t, e) {
          var i = s.getRepresentValue({interval: t});
          e = e || s.getValueState(i);
          var n = o(i, e);
          t[0] === -1 / 0
            ? (r[0] = n)
            : t[1] === 1 / 0
            ? (r[1] = n)
            : a.push({value: t[0], color: n}, {value: t[1], color: n});
        }
      },
    }),
    ek = {
      splitNumber: function() {
        var t = this.option,
          e = this._pieceList,
          i = Math.min(t.precision, 20),
          n = this.getExtent(),
          o = t.splitNumber;
        (o = Math.max(parseInt(o, 10), 1)), (t.splitNumber = o);
        for (var a = (n[1] - n[0]) / o; +a.toFixed(i) !== a && i < 5; ) i++;
        (t.precision = i),
          (a = +a.toFixed(i)),
          t.minOpen && e.push({interval: [-1 / 0, n[0]], close: [0, 0]});
        for (var r = 0, s = n[0]; r < o; s += a, r++) {
          var l = r === o - 1 ? n[1] : s + a;
          e.push({interval: [s, l], close: [1, 1]});
        }
        t.maxOpen && e.push({interval: [n[1], 1 / 0], close: [0, 0]}),
          tu(e),
          E(
            e,
            function(t, e) {
              (t.index = e), (t.text = this.formatValueText(t.interval));
            },
            this,
          );
      },
      categories: function() {
        var t = this.option;
        E(
          t.categories,
          function(t) {
            this._pieceList.push({text: this.formatValueText(t, !0), value: t});
          },
          this,
        ),
          ik(t, this._pieceList);
      },
      pieces: function() {
        var t = this.option,
          d = this._pieceList;
        E(
          t.pieces,
          function(t, e) {
            V(t) || (t = {value: t});
            var i = {text: '', index: e};
            if (
              (null != t.label && (i.text = t.label), t.hasOwnProperty('value'))
            ) {
              var n = (i.value = t.value);
              (i.interval = [n, n]), (i.close = [1, 1]);
            } else {
              for (
                var o = (i.interval = []),
                  a = (i.close = [0, 0]),
                  r = [1, 0, 1],
                  s = [-1 / 0, 1 / 0],
                  l = [],
                  u = 0;
                u < 2;
                u++
              ) {
                for (
                  var h = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][u],
                    c = 0;
                  c < 3 && null == o[u];
                  c++
                )
                  (o[u] = t[h[c]]), (a[u] = r[c]), (l[u] = 2 === c);
                null == o[u] && (o[u] = s[u]);
              }
              l[0] && o[1] === 1 / 0 && (a[0] = 0),
                l[1] && o[0] === -1 / 0 && (a[1] = 0),
                D &&
                  o[0] > o[1] &&
                  console.warn(
                    'Piece ' +
                      e +
                      'is illegal: ' +
                      o +
                      ' lower bound should not greater then uppper bound.',
                  ),
                o[0] === o[1] && a[0] && a[1] && (i.value = o[0]);
            }
            (i.visual = b_.retrieveVisuals(t)), d.push(i);
          },
          this,
        ),
          ik(t, d),
          tu(d),
          E(
            d,
            function(t) {
              var e = t.close,
                i = [['<', '≤'][e[1]], ['>', '≥'][e[0]]];
              t.text =
                t.text ||
                this.formatValueText(
                  null != t.value ? t.value : t.interval,
                  !1,
                  i,
                );
            },
            this,
          );
      },
    };
  function ik(t, e) {
    var i = t.inverse;
    ('vertical' === t.orient ? !i : i) && e.reverse();
  }
  HL.extend({
    type: 'visualMap.piecewise',
    doRender: function() {
      var a = this.group;
      a.removeAll();
      var r = this.visualMapModel,
        s = r.get('textGap'),
        t = r.textStyleModel,
        l = t.getFont(),
        u = t.getTextColor(),
        h = this._getItemAlign(),
        c = r.itemSize,
        e = this._getViewData(),
        i = e.endsText,
        d = Z(r.get('showLabel', !0), !i);
      i && this._renderEndsText(a, i[0], c, d, h),
        E(
          e.viewPieceList,
          function(t) {
            var e = t.piece,
              i = new ki();
            (i.onclick = A(this._onItemClick, this, e)),
              this._enableHoverLink(i, t.indexInModelPieceList);
            var n = r.getRepresentValue(e);
            if ((this._createItemSymbol(i, n, [0, 0, c[0], c[1]]), d)) {
              var o = this.visualMapModel.getValueState(n);
              i.add(
                new jr({
                  style: {
                    x: 'right' === h ? -s : c[0] + s,
                    y: c[1] / 2,
                    text: e.text,
                    textVerticalAlign: 'middle',
                    textAlign: h,
                    textFont: l,
                    textFill: u,
                    opacity: 'outOfRange' === o ? 0.5 : 1,
                  },
                }),
              );
            }
            a.add(i);
          },
          this,
        ),
        i && this._renderEndsText(a, i[1], c, d, h),
        Mu(r.get('orient'), a, r.get('itemGap')),
        this.renderBackground(a),
        this.positionGroup(a);
    },
    _enableHoverLink: function(t, i) {
      function e(t) {
        var e = this.visualMapModel;
        e.option.hoverLink &&
          this.api.dispatchAction({
            type: t,
            batch: UL(e.findTargetDataIndices(i), e),
          });
      }
      t.on('mouseover', A(e, this, 'highlight')).on(
        'mouseout',
        A(e, this, 'downplay'),
      );
    },
    _getItemAlign: function() {
      var t = this.visualMapModel,
        e = t.option;
      if ('vertical' === e.orient) return ZL(t, this.api, t.itemSize);
      var i = e.align;
      return (i && 'auto' !== i) || (i = 'left'), i;
    },
    _renderEndsText: function(t, e, i, n, o) {
      if (e) {
        var a = new ki(),
          r = this.visualMapModel.textStyleModel;
        a.add(
          new jr({
            style: {
              x: n ? ('right' === o ? i[0] : 0) : i[0] / 2,
              y: i[1] / 2,
              textVerticalAlign: 'middle',
              textAlign: n ? o : 'center',
              text: e,
              textFont: r.getFont(),
              textFill: r.getTextColor(),
            },
          }),
        ),
          t.add(a);
      }
    },
    _getViewData: function() {
      var t = this.visualMapModel,
        e = O(t.getPieceList(), function(t, e) {
          return {piece: t, indexInModelPieceList: e};
        }),
        i = t.get('text'),
        n = t.get('orient'),
        o = t.get('inverse');
      return (
        ('horizontal' === n
        ? o
        : !o)
          ? e.reverse()
          : (i = i && i.slice().reverse()),
        {viewPieceList: e, endsText: i}
      );
    },
    _createItemSymbol: function(t, e, i) {
      t.add(
        Dg(
          this.getControllerVisual(e, 'symbol'),
          i[0],
          i[1],
          i[2],
          i[3],
          this.getControllerVisual(e, 'color'),
        ),
      );
    },
    _onItemClick: function(t) {
      var e = this.visualMapModel,
        i = e.option,
        n = k(i.selected),
        o = e.getSelectedMapKey(t);
      'single' === i.selectedMode
        ? ((n[o] = !0),
          E(n, function(t, e) {
            n[e] = e === o;
          }))
        : (n[o] = !n[o]),
        this.api.dispatchAction({
          type: 'selectDataRange',
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: n,
        });
    },
  });
  Mf(IL);
  var nk,
    ok = 'urn:schemas-microsoft-com:vml',
    ak = 'undefined' == typeof window ? null : window,
    rk = !1,
    sk = ak && ak.document;
  function lk(t) {
    return nk(t);
  }
  if (sk && !v.canvasSupported)
    try {
      sk.namespaces.zrvml || sk.namespaces.add('zrvml', ok),
        (nk = function(t) {
          return sk.createElement('<zrvml:' + t + ' class="zrvml">');
        });
    } catch (t) {
      nk = function(t) {
        return sk.createElement('<' + t + ' xmlns="' + ok + '" class="zrvml">');
      };
    }
  var uk,
    hk = ur.CMD,
    ck = Math.round,
    dk = Math.sqrt,
    fk = Math.abs,
    pk = Math.cos,
    gk = Math.sin,
    mk = Math.max;
  if (!v.canvasSupported) {
    var vk = ',',
      yk = 'progid:DXImageTransform.Microsoft',
      xk = 21600,
      _k = xk / 2,
      wk = function(t) {
        (t.style.cssText =
          'position:absolute;left:0;top:0;width:1px;height:1px;'),
          (t.coordsize = xk + ',' + xk),
          (t.coordorigin = '0,0');
      },
      bk = function(t, e, i) {
        return 'rgb(' + [t, e, i].join(',') + ')';
      },
      Sk = function(t, e) {
        e && t && e.parentNode !== t && t.appendChild(e);
      },
      Mk = function(t, e) {
        e && t && e.parentNode === t && t.removeChild(e);
      },
      Ik = function(t, e, i) {
        return 1e5 * (parseFloat(t) || 0) + 1e3 * (parseFloat(e) || 0) + i;
      },
      Tk = qn,
      Ak = function(t, e, i) {
        var n = He(e);
        (i = +i),
          isNaN(i) && (i = 1),
          n && ((t.color = bk(n[0], n[1], n[2])), (t.opacity = i * n[3]));
      },
      Dk = function(t, e, i, n) {
        var o = 'fill' === e,
          a = t.getElementsByTagName(e)[0];
        null != i[e] && 'none' !== i[e] && (o || (!o && i.lineWidth))
          ? ((t[o ? 'filled' : 'stroked'] = 'true'),
            i[e] instanceof ps && Mk(t, a),
            (a = a || lk(e)),
            o
              ? (function(t, e, i) {
                  var n,
                    o,
                    a = e.fill;
                  if (null != a)
                    if (a instanceof ps) {
                      var r,
                        s = 0,
                        l = [0, 0],
                        u = 0,
                        h = 1,
                        c = i.getBoundingRect(),
                        d = c.width,
                        f = c.height;
                      if ('linear' === a.type) {
                        r = 'gradient';
                        var p = i.transform,
                          g = [a.x * d, a.y * f],
                          m = [a.x2 * d, a.y2 * f];
                        p && (Mt(g, g, p), Mt(m, m, p));
                        var v = m[0] - g[0],
                          y = m[1] - g[1];
                        (s = (180 * Math.atan2(v, y)) / Math.PI) < 0 &&
                          (s += 360),
                          s < 1e-6 && (s = 0);
                      } else {
                        r = 'gradientradial';
                        (g = [a.x * d, a.y * f]), (p = i.transform);
                        var x = i.scale,
                          _ = d,
                          w = f;
                        (l = [(g[0] - c.x) / _, (g[1] - c.y) / w]),
                          p && Mt(g, g, p),
                          (_ /= x[0] * xk),
                          (w /= x[1] * xk);
                        var b = mk(_, w);
                        (u = 0 / b), (h = (2 * a.r) / b - u);
                      }
                      var S = a.colorStops.slice();
                      S.sort(function(t, e) {
                        return t.offset - e.offset;
                      });
                      for (
                        var M = S.length, I = [], T = [], A = 0;
                        A < M;
                        A++
                      ) {
                        var D = S[A],
                          C =
                            ((n = D.color),
                            void 0,
                            (o = He(n)),
                            [bk(o[0], o[1], o[2]), o[3]]);
                        T.push(D.offset * h + u + ' ' + C[0]),
                          (0 !== A && A !== M - 1) || I.push(C);
                      }
                      if (2 <= M) {
                        var L = I[0][0],
                          k = I[1][0],
                          P = I[0][1] * e.opacity,
                          N = I[1][1] * e.opacity;
                        (t.type = r),
                          (t.method = 'none'),
                          (t.focus = '100%'),
                          (t.angle = s),
                          (t.color = L),
                          (t.color2 = k),
                          (t.colors = T.join(',')),
                          (t.opacity = N),
                          (t.opacity2 = P);
                      }
                      'radial' === r && (t.focusposition = l.join(','));
                    } else Ak(t, a, e.opacity);
                })(a, i, n)
              : (function(t, e) {
                  e.lineDash && (t.dashstyle = e.lineDash.join(' ')),
                    null == e.stroke ||
                      e.stroke instanceof ps ||
                      Ak(t, e.stroke, e.opacity);
                })(a, i),
            Sk(t, a))
          : ((t[o ? 'filled' : 'stroked'] = 'false'), Mk(t, a));
      },
      Ck = [[], [], []];
    (Lr.prototype.brushVML = function(t) {
      var e = this.style,
        i = this._vmlEl;
      i || ((i = lk('shape')), wk(i), (this._vmlEl = i)),
        Dk(i, 'fill', e, this),
        Dk(i, 'stroke', e, this);
      var n = this.transform,
        o = null != n,
        a = i.getElementsByTagName('stroke')[0];
      if (a) {
        var r = e.lineWidth;
        if (o && !e.strokeNoScale) {
          var s = n[0] * n[3] - n[1] * n[2];
          r *= dk(fk(s));
        }
        a.weight = r + 'px';
      }
      var l = this.path || (this.path = new ur());
      this.__dirtyPath &&
        (l.beginPath(),
        (l.subPixelOptimize = !1),
        this.buildPath(l, this.shape),
        l.toStatic(),
        (this.__dirtyPath = !1)),
        (i.path = (function(t, e) {
          var i,
            n,
            o,
            a,
            r,
            s,
            l = hk.M,
            u = hk.C,
            h = hk.L,
            c = hk.A,
            d = hk.Q,
            f = [],
            p = t.data,
            g = t.len();
          for (a = 0; a < g; ) {
            switch (((n = ''), (i = 0), (o = p[a++]))) {
              case l:
                (n = ' m '),
                  (i = 1),
                  (r = p[a++]),
                  (s = p[a++]),
                  (Ck[0][0] = r),
                  (Ck[0][1] = s);
                break;
              case h:
                (n = ' l '),
                  (i = 1),
                  (r = p[a++]),
                  (s = p[a++]),
                  (Ck[0][0] = r),
                  (Ck[0][1] = s);
                break;
              case d:
              case u:
                (n = ' c '), (i = 3);
                var m,
                  v,
                  y = p[a++],
                  x = p[a++],
                  _ = p[a++],
                  w = p[a++];
                o === d
                  ? ((_ = ((m = _) + 2 * y) / 3),
                    (w = ((v = w) + 2 * x) / 3),
                    (y = (r + 2 * y) / 3),
                    (x = (s + 2 * x) / 3))
                  : ((m = p[a++]), (v = p[a++])),
                  (Ck[0][0] = y),
                  (Ck[0][1] = x),
                  (Ck[1][0] = _),
                  (Ck[1][1] = w),
                  (r = Ck[2][0] = m),
                  (s = Ck[2][1] = v);
                break;
              case c:
                var b = 0,
                  S = 0,
                  M = 1,
                  I = 1,
                  T = 0;
                e &&
                  ((b = e[4]),
                  (S = e[5]),
                  (M = dk(e[0] * e[0] + e[1] * e[1])),
                  (I = dk(e[2] * e[2] + e[3] * e[3])),
                  (T = Math.atan2(-e[1] / I, e[0] / M)));
                var A = p[a++],
                  D = p[a++],
                  C = p[a++],
                  L = p[a++],
                  k = p[a++] + T,
                  P = p[a++] + k + T;
                a++;
                var N = p[a++],
                  O = A + pk(k) * C,
                  E = D + gk(k) * L,
                  R =
                    ((y = A + pk(P) * C),
                    (x = D + gk(P) * L),
                    N ? ' wa ' : ' at ');
                Math.abs(O - y) < 1e-4 &&
                  (0.01 < Math.abs(P - k)
                    ? N && (O += 0.0125)
                    : Math.abs(E - D) < 1e-4
                    ? (N && O < A) || (!N && A < O)
                      ? (x -= 0.0125)
                      : (x += 0.0125)
                    : (N && E < D) || (!N && D < E)
                    ? (y += 0.0125)
                    : (y -= 0.0125)),
                  f.push(
                    R,
                    ck(((A - C) * M + b) * xk - _k),
                    vk,
                    ck(((D - L) * I + S) * xk - _k),
                    vk,
                    ck(((A + C) * M + b) * xk - _k),
                    vk,
                    ck(((D + L) * I + S) * xk - _k),
                    vk,
                    ck((O * M + b) * xk - _k),
                    vk,
                    ck((E * I + S) * xk - _k),
                    vk,
                    ck((y * M + b) * xk - _k),
                    vk,
                    ck((x * I + S) * xk - _k),
                  ),
                  (r = y),
                  (s = x);
                break;
              case hk.R:
                var z = Ck[0],
                  B = Ck[1];
                (z[0] = p[a++]),
                  (z[1] = p[a++]),
                  (B[0] = z[0] + p[a++]),
                  (B[1] = z[1] + p[a++]),
                  e && (Mt(z, z, e), Mt(B, B, e)),
                  (z[0] = ck(z[0] * xk - _k)),
                  (B[0] = ck(B[0] * xk - _k)),
                  (z[1] = ck(z[1] * xk - _k)),
                  (B[1] = ck(B[1] * xk - _k)),
                  f.push(
                    ' m ',
                    z[0],
                    vk,
                    z[1],
                    ' l ',
                    B[0],
                    vk,
                    z[1],
                    ' l ',
                    B[0],
                    vk,
                    B[1],
                    ' l ',
                    z[0],
                    vk,
                    B[1],
                  );
                break;
              case hk.Z:
                f.push(' x ');
            }
            if (0 < i) {
              f.push(n);
              for (var V = 0; V < i; V++) {
                var G = Ck[V];
                e && Mt(G, G, e),
                  f.push(
                    ck(G[0] * xk - _k),
                    vk,
                    ck(G[1] * xk - _k),
                    V < i - 1 ? vk : '',
                  );
              }
            }
          }
          return f.join('');
        })(l, this.transform)),
        (i.style.zIndex = Ik(this.zlevel, this.z, this.z2)),
        Sk(t, i),
        null != e.text
          ? this.drawRectText(t, this.getBoundingRect())
          : this.removeRectText(t);
    }),
      (Lr.prototype.onRemove = function(t) {
        Mk(t, this._vmlEl), this.removeRectText(t);
      }),
      (Lr.prototype.onAdd = function(t) {
        Sk(t, this._vmlEl), this.appendRectText(t);
      });
    (eo.prototype.brushVML = function(t) {
      var e,
        i,
        n = this.style,
        o = n.image;
      if (
        (function(t) {
          return (
            'object' == typeof t &&
            t.tagName &&
            'IMG' === t.tagName.toUpperCase()
          );
        })(o)
      ) {
        var a = o.src;
        if (a === this._imageSrc)
          (e = this._imageWidth), (i = this._imageHeight);
        else {
          var r = o.runtimeStyle,
            s = r.width,
            l = r.height;
          (r.width = 'auto'),
            (r.height = 'auto'),
            (e = o.width),
            (i = o.height),
            (r.width = s),
            (r.height = l),
            (this._imageSrc = a),
            (this._imageWidth = e),
            (this._imageHeight = i);
        }
        o = a;
      } else
        o === this._imageSrc &&
          ((e = this._imageWidth), (i = this._imageHeight));
      if (o) {
        var u = n.x || 0,
          h = n.y || 0,
          c = n.width,
          d = n.height,
          f = n.sWidth,
          p = n.sHeight,
          g = n.sx || 0,
          m = n.sy || 0,
          v = f && p,
          y = this._vmlEl;
        y || ((y = sk.createElement('div')), wk(y), (this._vmlEl = y));
        var x,
          _ = y.style,
          w = !1,
          b = 1,
          S = 1;
        if (
          (this.transform &&
            ((x = this.transform),
            (b = dk(x[0] * x[0] + x[1] * x[1])),
            (S = dk(x[2] * x[2] + x[3] * x[3])),
            (w = x[1] || x[2])),
          w)
        ) {
          var M = [u, h],
            I = [u + c, h],
            T = [u, h + d],
            A = [u + c, h + d];
          Mt(M, M, x), Mt(I, I, x), Mt(T, T, x), Mt(A, A, x);
          var D = mk(M[0], I[0], T[0], A[0]),
            C = mk(M[1], I[1], T[1], A[1]),
            L = [];
          L.push(
            'M11=',
            x[0] / b,
            vk,
            'M12=',
            x[2] / S,
            vk,
            'M21=',
            x[1] / b,
            vk,
            'M22=',
            x[3] / S,
            vk,
            'Dx=',
            ck(u * b + x[4]),
            vk,
            'Dy=',
            ck(h * S + x[5]),
          ),
            (_.padding = '0 ' + ck(D) + 'px ' + ck(C) + 'px 0'),
            (_.filter = yk + '.Matrix(' + L.join('') + ', SizingMethod=clip)');
        } else
          x && ((u = u * b + x[4]), (h = h * S + x[5])),
            (_.filter = ''),
            (_.left = ck(u) + 'px'),
            (_.top = ck(h) + 'px');
        var k = this._imageEl,
          P = this._cropEl;
        k || ((k = sk.createElement('div')), (this._imageEl = k));
        var N = k.style;
        if (v) {
          if (e && i)
            (N.width = ck((b * e * c) / f) + 'px'),
              (N.height = ck((S * i * d) / p) + 'px');
          else {
            var O = new Image(),
              E = this;
            (O.onload = function() {
              (O.onload = null),
                (e = O.width),
                (i = O.height),
                (N.width = ck((b * e * c) / f) + 'px'),
                (N.height = ck((S * i * d) / p) + 'px'),
                (E._imageWidth = e),
                (E._imageHeight = i),
                (E._imageSrc = o);
            }),
              (O.src = o);
          }
          P ||
            (((P = sk.createElement('div')).style.overflow = 'hidden'),
            (this._cropEl = P));
          var R = P.style;
          (R.width = ck((c + (g * c) / f) * b)),
            (R.height = ck((d + (m * d) / p) * S)),
            (R.filter =
              yk +
              '.Matrix(Dx=' +
              ((-g * c) / f) * b +
              ',Dy=' +
              ((-m * d) / p) * S +
              ')'),
            P.parentNode || y.appendChild(P),
            k.parentNode !== P && P.appendChild(k);
        } else
          (N.width = ck(b * c) + 'px'),
            (N.height = ck(S * d) + 'px'),
            y.appendChild(k),
            P && P.parentNode && (y.removeChild(P), (this._cropEl = null));
        var z = '',
          B = n.opacity;
        B < 1 && (z += '.Alpha(opacity=' + ck(100 * B) + ') '),
          (z += yk + '.AlphaImageLoader(src=' + o + ', SizingMethod=scale)'),
          (N.filter = z),
          (y.style.zIndex = Ik(this.zlevel, this.z, this.z2)),
          Sk(t, y),
          null != n.text && this.drawRectText(t, this.getBoundingRect());
      }
    }),
      (eo.prototype.onRemove = function(t) {
        Mk(t, this._vmlEl),
          (this._vmlEl = null),
          (this._cropEl = null),
          (this._imageEl = null),
          this.removeRectText(t);
      }),
      (eo.prototype.onAdd = function(t) {
        Sk(t, this._vmlEl), this.appendRectText(t);
      });
    var Lk,
      kk = 'normal',
      Pk = {},
      Nk = 0,
      Ok = document.createElement('div');
    (uk = function(t, e) {
      var i = sk;
      Lk ||
        (((Lk = i.createElement('div')).style.cssText =
          'position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;'),
        sk.body.appendChild(Lk));
      try {
        Lk.style.font = e;
      } catch (t) {}
      return (
        (Lk.innerHTML = ''),
        Lk.appendChild(i.createTextNode(t)),
        {width: Lk.offsetWidth}
      );
    }),
      (gn['measureText'] = uk);
    for (
      var Ek = new Li(),
        Rk = function(t, e, i, n) {
          var o = this.style;
          this.__dirty && zn(o);
          var a = o.text;
          if ((null != a && (a += ''), a)) {
            if (o.rich) {
              var r = An(a, o);
              a = [];
              for (var s = 0; s < r.lines.length; s++) {
                for (
                  var l = r.lines[s].tokens, u = [], h = 0;
                  h < l.length;
                  h++
                )
                  u.push(l[h].text);
                a.push(u.join(''));
              }
              a = a.join('\n');
            }
            var c,
              d,
              f = o.textAlign,
              p = o.textVerticalAlign,
              g = (function(t) {
                var e = Pk[t];
                if (!e) {
                  100 < Nk && ((Nk = 0), (Pk = {}));
                  var i,
                    n = Ok.style;
                  try {
                    (n.font = t), (i = n.fontFamily.split(',')[0]);
                  } catch (t) {}
                  (e = {
                    style: n.fontStyle || kk,
                    variant: n.fontVariant || kk,
                    weight: n.fontWeight || kk,
                    size: 0 | parseFloat(n.fontSize || 12),
                    family: i || 'Microsoft YaHei',
                  }),
                    (Pk[t] = e),
                    Nk++;
                }
                return e;
              })(o.font),
              m =
                g.style +
                ' ' +
                g.variant +
                ' ' +
                g.weight +
                ' ' +
                g.size +
                'px "' +
                g.family +
                '"';
            i = i || vn(a, m, f, p, o.textPadding, o.textLineHeight);
            var v = this.transform;
            if ((v && !n && (Ek.copy(e), Ek.applyTransform(v), (e = Ek)), n))
              (c = e.x), (d = e.y);
            else {
              var y = o.textPosition;
              if (y instanceof Array)
                (c = e.x + Tk(y[0], e.width)),
                  (d = e.y + Tk(y[1], e.height)),
                  (f = f || 'left');
              else {
                var x = this.calculateTextPosition
                  ? this.calculateTextPosition({}, o, e)
                  : _n({}, o, e);
                (c = x.x),
                  (d = x.y),
                  (f = f || x.textAlign),
                  (p = p || x.textVerticalAlign);
              }
            }
            (c = yn(c, i.width, f)),
              (d = xn(d, i.height, p)),
              (d += i.height / 2);
            var _,
              w,
              b,
              S = lk,
              M = this._textVmlEl;
            M
              ? (w = (_ = (b = M.firstChild).nextSibling).nextSibling)
              : ((M = S('line')),
                (_ = S('path')),
                (w = S('textpath')),
                (b = S('skew')),
                (w.style['v-text-align'] = 'left'),
                wk(M),
                (_.textpathok = !0),
                (w.on = !0),
                (M.from = '0 0'),
                (M.to = '1000 0.05'),
                Sk(M, b),
                Sk(M, _),
                Sk(M, w),
                (this._textVmlEl = M));
            var I = [c, d],
              T = M.style;
            v && n
              ? (Mt(I, I, v),
                (b.on = !0),
                (b.matrix =
                  v[0].toFixed(3) +
                  vk +
                  v[2].toFixed(3) +
                  vk +
                  v[1].toFixed(3) +
                  vk +
                  v[3].toFixed(3) +
                  ',0,0'),
                (b.offset = (ck(I[0]) || 0) + ',' + (ck(I[1]) || 0)),
                (b.origin = '0 0'),
                (T.left = '0px'),
                (T.top = '0px'))
              : ((b.on = !1), (T.left = ck(c) + 'px'), (T.top = ck(d) + 'px')),
              (w.string = (function(t) {
                return String(t)
                  .replace(/&/g, '&amp;')
                  .replace(/"/g, '&quot;');
              })(a));
            try {
              w.style.font = m;
            } catch (t) {}
            Dk(M, 'fill', {fill: o.textFill, opacity: o.opacity}, this),
              Dk(
                M,
                'stroke',
                {
                  stroke: o.textStroke,
                  opacity: o.opacity,
                  lineDash: o.lineDash || null,
                },
                this,
              ),
              (M.style.zIndex = Ik(this.zlevel, this.z, this.z2)),
              Sk(t, M);
          }
        },
        zk = function(t) {
          Mk(t, this._textVmlEl), (this._textVmlEl = null);
        },
        Bk = function(t) {
          Sk(t, this._textVmlEl);
        },
        Vk = [Jn, to, eo, Lr, jr],
        Gk = 0;
      Gk < Vk.length;
      Gk++
    ) {
      var Fk = Vk[Gk].prototype;
      (Fk.drawRectText = Rk),
        (Fk.removeRectText = zk),
        (Fk.appendRectText = Bk);
    }
    (jr.prototype.brushVML = function(t) {
      var e = this.style;
      null != e.text
        ? this.drawRectText(
            t,
            {x: e.x || 0, y: e.y || 0, width: 0, height: 0},
            this.getBoundingRect(),
            !0,
          )
        : this.removeRectText(t);
    }),
      (jr.prototype.onRemove = function(t) {
        this.removeRectText(t);
      }),
      (jr.prototype.onAdd = function(t) {
        this.appendRectText(t);
      });
  }
  function Wk(t) {
    return parseInt(t, 10);
  }
  function Hk(t, e) {
    !(function() {
      if (!rk && sk) {
        rk = !0;
        var t = sk.styleSheets;
        t.length < 31
          ? sk
              .createStyleSheet()
              .addRule('.zrvml', 'behavior:url(#default#VML)')
          : t[0].addRule('.zrvml', 'behavior:url(#default#VML)');
      }
    })(),
      (this.root = t),
      (this.storage = e);
    var i = document.createElement('div'),
      n = document.createElement('div');
    (i.style.cssText =
      'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;'),
      (n.style.cssText = 'position:absolute;left:0;top:0;'),
      t.appendChild(i),
      (this._vmlRoot = n),
      (this._vmlViewport = i),
      this.resize();
    var o = e.delFromStorage,
      a = e.addToStorage;
    (e.delFromStorage = function(t) {
      o.call(e, t), t && t.onRemove && t.onRemove(n);
    }),
      (e.addToStorage = function(t) {
        t.onAdd && t.onAdd(n), a.call(e, t);
      }),
      (this._firstPaint = !0);
  }
  (Hk.prototype = {
    constructor: Hk,
    getType: function() {
      return 'vml';
    },
    getViewportRoot: function() {
      return this._vmlViewport;
    },
    getViewportRootOffset: function() {
      var t = this.getViewportRoot();
      if (t)
        return {offsetLeft: t.offsetLeft || 0, offsetTop: t.offsetTop || 0};
    },
    refresh: function() {
      var t = this.storage.getDisplayList(!0, !0);
      this._paintList(t);
    },
    _paintList: function(t) {
      for (var e = this._vmlRoot, i = 0; i < t.length; i++) {
        var n = t[i];
        n.invisible || n.ignore
          ? (n.__alreadyNotVisible || n.onRemove(e),
            (n.__alreadyNotVisible = !0))
          : (n.__alreadyNotVisible && n.onAdd(e),
            (n.__alreadyNotVisible = !1),
            n.__dirty &&
              (n.beforeBrush && n.beforeBrush(),
              (n.brushVML || n.brush).call(n, e),
              n.afterBrush && n.afterBrush())),
          (n.__dirty = !1);
      }
      this._firstPaint &&
        (this._vmlViewport.appendChild(e), (this._firstPaint = !1));
    },
    resize: function(t, e) {
      (t = null == t ? this._getWidth() : t),
        (e = null == e ? this._getHeight() : e);
      if (this._width !== t || this._height !== e) {
        (this._width = t), (this._height = e);
        var i = this._vmlViewport.style;
        (i.width = t + 'px'), (i.height = e + 'px');
      }
    },
    dispose: function() {
      (this.root.innerHTML = ''),
        (this._vmlRoot = this._vmlViewport = this.storage = null);
    },
    getWidth: function() {
      return this._width;
    },
    getHeight: function() {
      return this._height;
    },
    clear: function() {
      this._vmlViewport && this.root.removeChild(this._vmlViewport);
    },
    _getWidth: function() {
      var t = this.root,
        e = t.currentStyle;
      return (
        ((t.clientWidth || Wk(e.width)) -
          Wk(e.paddingLeft) -
          Wk(e.paddingRight)) |
        0
      );
    },
    _getHeight: function() {
      var t = this.root,
        e = t.currentStyle;
      return (
        ((t.clientHeight || Wk(e.height)) -
          Wk(e.paddingTop) -
          Wk(e.paddingBottom)) |
        0
      );
    },
  }),
    E(
      [
        'getLayer',
        'insertLayer',
        'eachLayer',
        'eachBuiltinLayer',
        'eachOtherLayer',
        'getLayers',
        'modLayer',
        'delLayer',
        'clearLayer',
        'toDataURL',
        'pathToImage',
      ],
      function(t) {
        Hk.prototype[t] = (function(t) {
          return function() {
            xi('In IE8.0 VML mode painter not support method "' + t + '"');
          };
        })(t);
      },
    ),
    Eo('vml', Hk);
  function Zk(t) {
    return document.createElementNS('http://www.w3.org/2000/svg', t);
  }
  var Uk = ur.CMD,
    Xk = Array.prototype.join,
    Yk = 'none',
    jk = Math.round,
    qk = Math.sin,
    Kk = Math.cos,
    $k = Math.PI,
    Jk = 2 * Math.PI,
    Qk = 180 / $k,
    tP = 1e-4;
  function eP(t) {
    return jk(1e4 * t) / 1e4;
  }
  function iP(t) {
    return t < tP && -tP < t;
  }
  function nP(t, e) {
    e && oP(t, 'transform', 'matrix(' + Xk.call(e, ',') + ')');
  }
  function oP(t, e, i) {
    (i && ('linear' === i.type || 'radial' === i.type)) || t.setAttribute(e, i);
  }
  function aP(t, e, i, n) {
    if (
      (function(t, e) {
        var i = e ? t.textFill : t.fill;
        return null != i && i !== Yk;
      })(e, i)
    ) {
      var o = i ? e.textFill : e.fill;
      oP(t, 'fill', (o = 'transparent' === o ? Yk : o)),
        oP(
          t,
          'fill-opacity',
          null != e.fillOpacity ? e.fillOpacity * e.opacity : e.opacity,
        );
    } else oP(t, 'fill', Yk);
    if (
      (function(t, e) {
        var i = e ? t.textStroke : t.stroke;
        return null != i && i !== Yk;
      })(e, i)
    ) {
      var a = i ? e.textStroke : e.stroke;
      oP(t, 'stroke', (a = 'transparent' === a ? Yk : a)),
        oP(
          t,
          'stroke-width',
          (i ? e.textStrokeWidth : e.lineWidth) /
            (!i && e.strokeNoScale ? n.getLineScale() : 1),
        ),
        oP(t, 'paint-order', i ? 'stroke' : 'fill'),
        oP(
          t,
          'stroke-opacity',
          null != e.strokeOpacity ? e.strokeOpacity : e.opacity,
        ),
        e.lineDash
          ? (oP(t, 'stroke-dasharray', e.lineDash.join(',')),
            oP(t, 'stroke-dashoffset', jk(e.lineDashOffset || 0)))
          : oP(t, 'stroke-dasharray', ''),
        e.lineCap && oP(t, 'stroke-linecap', e.lineCap),
        e.lineJoin && oP(t, 'stroke-linejoin', e.lineJoin),
        e.miterLimit && oP(t, 'stroke-miterlimit', e.miterLimit);
    } else oP(t, 'stroke', Yk);
  }
  var rP = {};
  rP.brush = function(t) {
    var e = t.style,
      i = t.__svgEl;
    i || ((i = Zk('path')), (t.__svgEl = i)), t.path || t.createPathProxy();
    var n = t.path;
    if (t.__dirtyPath) {
      n.beginPath(),
        (n.subPixelOptimize = !1),
        t.buildPath(n, t.shape),
        (t.__dirtyPath = !1);
      var o = (function(t) {
        for (var e = [], i = t.data, n = t.len(), o = 0; o < n; ) {
          var a = '',
            r = 0;
          switch (i[o++]) {
            case Uk.M:
              (a = 'M'), (r = 2);
              break;
            case Uk.L:
              (a = 'L'), (r = 2);
              break;
            case Uk.Q:
              (a = 'Q'), (r = 4);
              break;
            case Uk.C:
              (a = 'C'), (r = 6);
              break;
            case Uk.A:
              var s = i[o++],
                l = i[o++],
                u = i[o++],
                h = i[o++],
                c = i[o++],
                d = i[o++],
                f = i[o++],
                p = i[o++],
                g = Math.abs(d),
                m = iP(g - Jk) || (p ? Jk <= d : Jk <= -d),
                v = 0 < d ? d % Jk : (d % Jk) + Jk,
                y = !1;
              y = !!m || (!iP(g) && $k <= v == !!p);
              var x = eP(s + u * Kk(c)),
                _ = eP(l + h * qk(c));
              m &&
                ((d = p ? Jk - 1e-4 : 1e-4 - Jk),
                (y = !0),
                9 === o && e.push('M', x, _));
              var w = eP(s + u * Kk(c + d)),
                b = eP(l + h * qk(c + d));
              e.push('A', eP(u), eP(h), jk(f * Qk), +y, +p, w, b);
              break;
            case Uk.Z:
              a = 'Z';
              break;
            case Uk.R:
              (w = eP(i[o++])), (b = eP(i[o++]));
              var S = eP(i[o++]),
                M = eP(i[o++]);
              e.push(
                'M',
                w,
                b,
                'L',
                w + S,
                b,
                'L',
                w + S,
                b + M,
                'L',
                w,
                b + M,
                'L',
                w,
                b,
              );
          }
          a && e.push(a);
          for (var I = 0; I < r; I++) e.push(eP(i[o++]));
        }
        return e.join(' ');
      })(n);
      o.indexOf('NaN') < 0 && oP(i, 'd', o);
    }
    aP(i, e, !1, t),
      nP(i, t.transform),
      null != e.text ? fP(t, t.getBoundingRect()) : gP(t);
  };
  var sP = {
      brush: function(t) {
        var e = t.style,
          i = e.image;
        i instanceof HTMLImageElement && (i = i.src);
        if (i) {
          var n = e.x || 0,
            o = e.y || 0,
            a = e.width,
            r = e.height,
            s = t.__svgEl;
          s || ((s = Zk('image')), (t.__svgEl = s)),
            i !== t.__imageSrc &&
              ((function(t, e, i) {
                t.setAttributeNS('http://www.w3.org/1999/xlink', e, i);
              })(s, 'href', i),
              (t.__imageSrc = i)),
            oP(s, 'width', a),
            oP(s, 'height', r),
            oP(s, 'x', n),
            oP(s, 'y', o),
            nP(s, t.transform),
            null != e.text ? fP(t, t.getBoundingRect()) : gP(t);
        }
      },
    },
    lP = {},
    uP = new Li(),
    hP = {},
    cP = [],
    dP = {left: 'start', right: 'end', center: 'middle', middle: 'middle'},
    fP = function(t, e) {
      var i = t.style,
        n = t.transform,
        o = t instanceof jr || i.transformText;
      t.__dirty && zn(i);
      var a = i.text;
      if ((null != a && (a += ''), $n(a, i))) {
        null == a && (a = ''),
          !o && n && (uP.copy(e), uP.applyTransform(n), (e = uP));
        var r = t.__textSvgEl;
        r || ((r = Zk('text')), (t.__textSvgEl = r));
        var s = r.style,
          l = i.font || pn,
          u = r.__computedFont;
        l !== r.__styleFont &&
          ((s.font = r.__styleFont = l), (u = r.__computedFont = s.font));
        var h = i.textPadding,
          c = i.textLineHeight,
          d = t.__textCotentBlock;
        (d && !t.__dirtyText) ||
          (d = t.__textCotentBlock = Tn(a, u, h, c, i.truncate));
        var f = d.outerHeight,
          p = d.lineHeight;
        Un(hP, t, i, e);
        var g = hP.baseX,
          m = hP.baseY,
          v = hP.textAlign || 'left',
          y = hP.textVerticalAlign;
        !(function(t, e, i, n, o, a, r) {
          le(cP), e && i && ue(cP, i);
          var s = n.textRotation;
          if (o && s) {
            var l = n.textOrigin;
            'center' === l
              ? ((a = o.width / 2 + o.x), (r = o.height / 2 + o.y))
              : l && ((a = l[0] + o.x), (r = l[1] + o.y)),
              (cP[4] -= a),
              (cP[5] -= r),
              de(cP, cP, s),
              (cP[4] += a),
              (cP[5] += r);
          }
          nP(t, cP);
        })(r, o, n, i, e, g, m);
        var x = g,
          _ = xn(m, f, y);
        h &&
          ((x = (function(t, e, i) {
            return 'right' === e
              ? t - i[1]
              : 'center' === e
              ? t + i[3] / 2 - i[1] / 2
              : t + i[3];
          })(g, v, h)),
          (_ += h[0])),
          (_ += p / 2),
          aP(r, i, !0, t);
        var w = d.canCacheByTextString,
          b = t.__tspanList || (t.__tspanList = []),
          S = b.length;
        if (w && t.__canCacheByTextString && t.__text === a) {
          if (t.__dirtyText && S)
            for (var M = 0; M < S; ++M) pP(b[M], v, x, _ + M * p);
        } else {
          (t.__text = a), (t.__canCacheByTextString = w);
          var I = d.lines,
            T = I.length;
          for (M = 0; M < T; M++) {
            var A = b[M],
              D = I[M];
            A
              ? A.__zrText !== D &&
                ((A.innerHTML = ''), A.appendChild(document.createTextNode(D)))
              : ((A = b[M] = Zk('tspan')),
                r.appendChild(A),
                A.appendChild(document.createTextNode(D))),
              pP(A, v, x, _ + M * p);
          }
          if (T < S) {
            for (; M < S; M++) r.removeChild(b[M]);
            b.length = T;
          }
        }
      }
    };
  function pP(t, e, i, n) {
    oP(t, 'dominant-baseline', 'middle'),
      oP(t, 'text-anchor', dP[e]),
      oP(t, 'x', i),
      oP(t, 'y', n);
  }
  function gP(t) {
    t &&
      t.__textSvgEl &&
      (t.__textSvgEl.parentNode &&
        t.__textSvgEl.parentNode.removeChild(t.__textSvgEl),
      (t.__textSvgEl = null),
      (t.__tspanList = []),
      (t.__text = null));
  }
  function mP() {}
  function vP(t, e) {
    for (var i = 0, n = e.length, o = 0, a = 0; i < n; i++) {
      var r = e[i];
      if (r.removed) {
        for (s = [], l = a; l < a + r.count; l++) s.push(l);
        (r.indices = s), (a += r.count);
      } else {
        for (var s = [], l = o; l < o + r.count; l++) s.push(l);
        (r.indices = s), (o += r.count), r.added || (a += r.count);
      }
    }
    return e;
  }
  (lP.drawRectText = fP),
    (lP.brush = function(t) {
      null != t.style.text ? fP(t, !1) : gP(t);
    }),
    (mP.prototype = {
      diff: function(l, u, t) {
        (t =
          t ||
          function(t, e) {
            return t === e;
          }),
          (this.equals = t);
        var h = this;
        l = l.slice();
        var c = (u = u.slice()).length,
          d = l.length,
          f = 1,
          e = c + d,
          p = [{newPos: -1, components: []}],
          i = this.extractCommon(p[0], u, l, 0);
        if (p[0].newPos + 1 >= c && d <= i + 1) {
          for (var n = [], o = 0; o < u.length; o++) n.push(o);
          return [{indices: n, count: u.length}];
        }
        function a() {
          for (var t = -1 * f; t <= f; t += 2) {
            var e,
              i = p[t - 1],
              n = p[t + 1],
              o = (n ? n.newPos : 0) - t;
            i && (p[t - 1] = void 0);
            var a = i && i.newPos + 1 < c,
              r = n && 0 <= o && o < d;
            if (a || r) {
              if (
                (!a || (r && i.newPos < n.newPos)
                  ? ((e = {
                      newPos: (s = n).newPos,
                      components: s.components.slice(0),
                    }),
                    h.pushComponent(e.components, void 0, !0))
                  : ((e = i).newPos++,
                    h.pushComponent(e.components, !0, void 0)),
                (o = h.extractCommon(e, u, l, t)),
                e.newPos + 1 >= c && d <= o + 1)
              )
                return vP(h, e.components, u, l);
              p[t] = e;
            } else p[t] = void 0;
          }
          var s;
          f++;
        }
        for (; f <= e; ) {
          var r = a();
          if (r) return r;
        }
      },
      pushComponent: function(t, e, i) {
        var n = t[t.length - 1];
        n && n.added === e && n.removed === i
          ? (t[t.length - 1] = {count: n.count + 1, added: e, removed: i})
          : t.push({count: 1, added: e, removed: i});
      },
      extractCommon: function(t, e, i, n) {
        for (
          var o = e.length, a = i.length, r = t.newPos, s = r - n, l = 0;
          r + 1 < o && s + 1 < a && this.equals(e[r + 1], i[s + 1]);

        )
          r++, s++, l++;
        return l && t.components.push({count: l}), (t.newPos = r), s;
      },
      tokenize: function(t) {
        return t.slice();
      },
      join: function(t) {
        return t.slice();
      },
    });
  var yP = new mP();
  function xP(t, e, i, n, o) {
    (this._zrId = t),
      (this._svgRoot = e),
      (this._tagNames = 'string' == typeof i ? [i] : i),
      (this._markLabel = n),
      (this._domName = o || '_dom'),
      (this.nextId = 0);
  }
  function _P(t, e) {
    xP.call(
      this,
      t,
      e,
      ['linearGradient', 'radialGradient'],
      '__gradient_in_use__',
    );
  }
  function wP(t, e) {
    xP.call(this, t, e, 'clipPath', '__clippath_in_use__');
  }
  function bP(t, e) {
    xP.call(this, t, e, ['filter'], '__filter_in_use__', '_shadowDom');
  }
  function SP(t) {
    return (
      t &&
      (t.shadowBlur ||
        t.shadowOffsetX ||
        t.shadowOffsetY ||
        t.textShadowBlur ||
        t.textShadowOffsetX ||
        t.textShadowOffsetY)
    );
  }
  function MP(t) {
    return parseInt(t, 10);
  }
  function IP(t, e) {
    return e && t && e.parentNode !== t;
  }
  function TP(t, e, i) {
    if (IP(t, e) && i) {
      var n = i.nextSibling;
      n ? t.insertBefore(e, n) : t.appendChild(e);
    }
  }
  function AP(t, e) {
    if (IP(t, e)) {
      var i = t.firstChild;
      i ? t.insertBefore(e, i) : t.appendChild(e);
    }
  }
  function DP(t, e) {
    e && t && e.parentNode === t && t.removeChild(e);
  }
  function CP(t) {
    return t.__textSvgEl;
  }
  function LP(t) {
    return t.__svgEl;
  }
  (xP.prototype.createElement = Zk),
    (xP.prototype.getDefs = function(t) {
      var e = this._svgRoot,
        n = this._svgRoot.getElementsByTagName('defs');
      return 0 === n.length
        ? t
          ? ((n = e.insertBefore(this.createElement('defs'), e.firstChild))
              .contains ||
              (n.contains = function(t) {
                var e = n.children;
                if (!e) return !1;
                for (var i = e.length - 1; 0 <= i; --i)
                  if (e[i] === t) return !0;
                return !1;
              }),
            n)
          : null
        : n[0];
    }),
    (xP.prototype.update = function(t, e) {
      if (t) {
        var i = this.getDefs(!1);
        if (t[this._domName] && i.contains(t[this._domName]))
          'function' == typeof e && e(t);
        else {
          var n = this.add(t);
          n && (t[this._domName] = n);
        }
      }
    }),
    (xP.prototype.addDom = function(t) {
      this.getDefs(!0).appendChild(t);
    }),
    (xP.prototype.removeDom = function(t) {
      var e = this.getDefs(!1);
      e &&
        t[this._domName] &&
        (e.removeChild(t[this._domName]), (t[this._domName] = null));
    }),
    (xP.prototype.getDoms = function() {
      var i = this.getDefs(!1);
      if (!i) return [];
      var n = [];
      return (
        E(this._tagNames, function(t) {
          var e = i.getElementsByTagName(t);
          n = n.concat([].slice.call(e));
        }),
        n
      );
    }),
    (xP.prototype.markAllUnused = function() {
      var t = this.getDoms(),
        e = this;
      E(t, function(t) {
        t[e._markLabel] = '0';
      });
    }),
    (xP.prototype.markUsed = function(t) {
      t && (t[this._markLabel] = '1');
    }),
    (xP.prototype.removeUnused = function() {
      var e = this.getDefs(!1);
      if (e) {
        var t = this.getDoms(),
          i = this;
        E(t, function(t) {
          '1' !== t[i._markLabel] && e.removeChild(t);
        });
      }
    }),
    (xP.prototype.getSvgProxy = function(t) {
      return t instanceof Lr
        ? rP
        : t instanceof eo
        ? sP
        : t instanceof jr
        ? lP
        : rP;
    }),
    (xP.prototype.getTextSvgElement = function(t) {
      return t.__textSvgEl;
    }),
    (xP.prototype.getSvgElement = function(t) {
      return t.__svgEl;
    }),
    b(_P, xP),
    (_P.prototype.addWithoutUpdate = function(a, r) {
      if (r && r.style) {
        var s = this;
        E(['fill', 'stroke'], function(t) {
          if (
            r.style[t] &&
            ('linear' === r.style[t].type || 'radial' === r.style[t].type)
          ) {
            var e,
              i = r.style[t],
              n = s.getDefs(!0);
            i._dom
              ? ((e = i._dom), n.contains(i._dom) || s.addDom(e))
              : (e = s.add(i)),
              s.markUsed(r);
            var o = e.getAttribute('id');
            a.setAttribute(t, 'url(#' + o + ')');
          }
        });
      }
    }),
    (_P.prototype.add = function(t) {
      var e;
      if ('linear' === t.type) e = this.createElement('linearGradient');
      else {
        if ('radial' !== t.type) return xi('Illegal gradient type.'), null;
        e = this.createElement('radialGradient');
      }
      return (
        (t.id = t.id || this.nextId++),
        e.setAttribute('id', 'zr' + this._zrId + '-gradient-' + t.id),
        this.updateDom(t, e),
        this.addDom(e),
        e
      );
    }),
    (_P.prototype.update = function(i) {
      var n = this;
      xP.prototype.update.call(this, i, function() {
        var t = i.type,
          e = i._dom.tagName;
        ('linear' === t && 'linearGradient' === e) ||
        ('radial' === t && 'radialGradient' === e)
          ? n.updateDom(i, i._dom)
          : (n.removeDom(i), n.add(i));
      });
    }),
    (_P.prototype.updateDom = function(t, e) {
      if ('linear' === t.type)
        e.setAttribute('x1', t.x),
          e.setAttribute('y1', t.y),
          e.setAttribute('x2', t.x2),
          e.setAttribute('y2', t.y2);
      else {
        if ('radial' !== t.type) return void xi('Illegal gradient type.');
        e.setAttribute('cx', t.x),
          e.setAttribute('cy', t.y),
          e.setAttribute('r', t.r);
      }
      t.global
        ? e.setAttribute('gradientUnits', 'userSpaceOnUse')
        : e.setAttribute('gradientUnits', 'objectBoundingBox'),
        (e.innerHTML = '');
      for (var i = t.colorStops, n = 0, o = i.length; n < o; ++n) {
        var a = this.createElement('stop');
        a.setAttribute('offset', 100 * i[n].offset + '%');
        var r = i[n].color;
        if (r.indexOf(!1)) {
          var s = He(r)[3],
            l = Xe(r);
          a.setAttribute('stop-color', '#' + l),
            a.setAttribute('stop-opacity', s);
        } else a.setAttribute('stop-color', i[n].color);
        e.appendChild(a);
      }
      t._dom = e;
    }),
    (_P.prototype.markUsed = function(t) {
      if (t.style) {
        var e = t.style.fill;
        e && e._dom && xP.prototype.markUsed.call(this, e._dom),
          (e = t.style.stroke) &&
            e._dom &&
            xP.prototype.markUsed.call(this, e._dom);
      }
    }),
    b(wP, xP),
    (wP.prototype.update = function(t) {
      var e = this.getSvgElement(t);
      e && this.updateDom(e, t.__clipPaths, !1);
      var i = this.getTextSvgElement(t);
      i && this.updateDom(i, t.__clipPaths, !0), this.markUsed(t);
    }),
    (wP.prototype.updateDom = function(t, e, i) {
      if (e && 0 < e.length) {
        var n,
          o,
          a = this.getDefs(!0),
          r = e[0],
          s = i ? '_textDom' : '_dom';
        r[s]
          ? ((o = r[s].getAttribute('id')),
            (n = r[s]),
            a.contains(n) || a.appendChild(n))
          : ((o = 'zr' + this._zrId + '-clip-' + this.nextId),
            ++this.nextId,
            (n = this.createElement('clipPath')).setAttribute('id', o),
            a.appendChild(n),
            (r[s] = n));
        var l = this.getSvgProxy(r);
        if (r.transform && r.parent.invTransform && !i) {
          var u = Array.prototype.slice.call(r.transform);
          he(r.transform, r.parent.invTransform, r.transform),
            l.brush(r),
            (r.transform = u);
        } else l.brush(r);
        var h = this.getSvgElement(r);
        (n.innerHTML = ''),
          n.appendChild(h.cloneNode()),
          t.setAttribute('clip-path', 'url(#' + o + ')'),
          1 < e.length && this.updateDom(n, e.slice(1), i);
      } else t && t.setAttribute('clip-path', 'none');
    }),
    (wP.prototype.markUsed = function(t) {
      var e = this;
      t.__clipPaths &&
        E(t.__clipPaths, function(t) {
          t._dom && xP.prototype.markUsed.call(e, t._dom),
            t._textDom && xP.prototype.markUsed.call(e, t._textDom);
        });
    }),
    b(bP, xP),
    (bP.prototype.addWithoutUpdate = function(t, e) {
      if (e && SP(e.style)) {
        var i;
        if (e._shadowDom)
          (i = e._shadowDom),
            this.getDefs(!0).contains(e._shadowDom) || this.addDom(i);
        else i = this.add(e);
        this.markUsed(e);
        var n = i.getAttribute('id');
        t.style.filter = 'url(#' + n + ')';
      }
    }),
    (bP.prototype.add = function(t) {
      var e = this.createElement('filter');
      return (
        (t._shadowDomId = t._shadowDomId || this.nextId++),
        e.setAttribute('id', 'zr' + this._zrId + '-shadow-' + t._shadowDomId),
        this.updateDom(t, e),
        this.addDom(e),
        e
      );
    }),
    (bP.prototype.update = function(t, e) {
      if (SP(e.style)) {
        var i = this;
        xP.prototype.update.call(this, e, function() {
          i.updateDom(e, e._shadowDom);
        });
      } else this.remove(t, e);
    }),
    (bP.prototype.remove = function(t, e) {
      null != e._shadowDomId && (this.removeDom(t), (t.style.filter = ''));
    }),
    (bP.prototype.updateDom = function(t, e) {
      var i = e.getElementsByTagName('feDropShadow');
      i = 0 === i.length ? this.createElement('feDropShadow') : i[0];
      var n,
        o,
        a,
        r,
        s = t.style,
        l = (t.scale && t.scale[0]) || 1,
        u = (t.scale && t.scale[1]) || 1;
      if (s.shadowBlur || s.shadowOffsetX || s.shadowOffsetY)
        (n = s.shadowOffsetX || 0),
          (o = s.shadowOffsetY || 0),
          (a = s.shadowBlur),
          (r = s.shadowColor);
      else {
        if (!s.textShadowBlur) return void this.removeDom(e, s);
        (n = s.textShadowOffsetX || 0),
          (o = s.textShadowOffsetY || 0),
          (a = s.textShadowBlur),
          (r = s.textShadowColor);
      }
      i.setAttribute('dx', n / l),
        i.setAttribute('dy', o / u),
        i.setAttribute('flood-color', r);
      var h = a / 2 / l + ' ' + a / 2 / u;
      i.setAttribute('stdDeviation', h),
        e.setAttribute('x', '-100%'),
        e.setAttribute('y', '-100%'),
        e.setAttribute('width', Math.ceil((a / 2) * 200) + '%'),
        e.setAttribute('height', Math.ceil((a / 2) * 200) + '%'),
        e.appendChild(i),
        (t._shadowDom = e);
    }),
    (bP.prototype.markUsed = function(t) {
      t._shadowDom && xP.prototype.markUsed.call(this, t._shadowDom);
    });
  function kP(t, e, i, n) {
    (this.root = t), (this.storage = e), (this._opts = i = P({}, i || {}));
    var o = Zk('svg');
    o.setAttribute('xmlns', 'http://www.w3.org/2000/svg'),
      o.setAttribute('version', '1.1'),
      o.setAttribute('baseProfile', 'full'),
      (o.style.cssText = 'user-select:none;position:absolute;left:0;top:0;');
    var a = Zk('g');
    o.appendChild(a);
    var r = Zk('g');
    o.appendChild(r),
      (this.gradientManager = new _P(n, r)),
      (this.clipPathManager = new wP(n, r)),
      (this.shadowManager = new bP(n, r));
    var s = document.createElement('div');
    (s.style.cssText = 'overflow:hidden;position:relative'),
      (this._svgDom = o),
      (this._svgRoot = r),
      (this._backgroundRoot = a),
      (this._viewport = s),
      t.appendChild(s),
      s.appendChild(o),
      this.resize(i.width, i.height),
      (this._visibleList = []);
  }
  (kP.prototype = {
    constructor: kP,
    getType: function() {
      return 'svg';
    },
    getViewportRoot: function() {
      return this._viewport;
    },
    getSvgDom: function() {
      return this._svgDom;
    },
    getSvgRoot: function() {
      return this._svgRoot;
    },
    getViewportRootOffset: function() {
      var t = this.getViewportRoot();
      if (t)
        return {offsetLeft: t.offsetLeft || 0, offsetTop: t.offsetTop || 0};
    },
    refresh: function() {
      var t = this.storage.getDisplayList(!0);
      this._paintList(t);
    },
    setBackgroundColor: function(t) {
      this._backgroundRoot &&
        this._backgroundNode &&
        this._backgroundRoot.removeChild(this._backgroundNode);
      var e = Zk('rect');
      e.setAttribute('width', this.getWidth()),
        e.setAttribute('height', this.getHeight()),
        e.setAttribute('x', 0),
        e.setAttribute('y', 0),
        e.setAttribute('id', 0),
        (e.style.fill = t),
        this._backgroundRoot.appendChild(e),
        (this._backgroundNode = e);
    },
    _paintList: function(t) {
      this.gradientManager.markAllUnused(),
        this.clipPathManager.markAllUnused(),
        this.shadowManager.markAllUnused();
      var e,
        i,
        n = this._svgRoot,
        o = this._visibleList,
        a = t.length,
        r = [];
      for (e = 0; e < a; e++) {
        var s = t[e],
          l =
            (i = s) instanceof Lr
              ? rP
              : i instanceof eo
              ? sP
              : i instanceof jr
              ? lP
              : rP,
          u = LP(s) || CP(s);
        s.invisible ||
          (s.__dirty &&
            (l && l.brush(s),
            this.clipPathManager.update(s),
            s.style &&
              (this.gradientManager.update(s.style.fill),
              this.gradientManager.update(s.style.stroke),
              this.shadowManager.update(u, s)),
            (s.__dirty = !1)),
          r.push(s));
      }
      var h,
        c = (function(t, e, i) {
          return yP.diff(t, e, i);
        })(o, r);
      for (e = 0; e < c.length; e++) {
        if ((p = c[e]).removed)
          for (var d = 0; d < p.count; d++) {
            u = LP((s = o[p.indices[d]]));
            var f = CP(s);
            DP(n, u), DP(n, f);
          }
      }
      for (e = 0; e < c.length; e++) {
        var p;
        if ((p = c[e]).added)
          for (d = 0; d < p.count; d++) {
            (u = LP((s = r[p.indices[d]]))), (f = CP(s));
            h ? TP(n, u, h) : AP(n, u),
              u ? TP(n, f, u) : h ? TP(n, f, h) : AP(n, f),
              TP(n, f, u),
              (h = f || u || h),
              this.gradientManager.addWithoutUpdate(u || f, s),
              this.shadowManager.addWithoutUpdate(u || f, s),
              this.clipPathManager.markUsed(s);
          }
        else if (!p.removed)
          for (d = 0; d < p.count; d++) {
            (u = LP((s = r[p.indices[d]]))),
              (f = CP(s)),
              (u = LP(s)),
              (f = CP(s));
            this.gradientManager.markUsed(s),
              this.gradientManager.addWithoutUpdate(u || f, s),
              this.shadowManager.markUsed(s),
              this.shadowManager.addWithoutUpdate(u || f, s),
              this.clipPathManager.markUsed(s),
              f && TP(n, f, u),
              (h = u || f || h);
          }
      }
      this.gradientManager.removeUnused(),
        this.clipPathManager.removeUnused(),
        this.shadowManager.removeUnused(),
        (this._visibleList = r);
    },
    _getDefs: function(t) {
      var n,
        e = this._svgDom;
      return 0 !== (n = e.getElementsByTagName('defs')).length
        ? n[0]
        : t
        ? ((n = e.insertBefore(Zk('defs'), e.firstChild)).contains ||
            (n.contains = function(t) {
              var e = n.children;
              if (!e) return !1;
              for (var i = e.length - 1; 0 <= i; --i) if (e[i] === t) return !0;
              return !1;
            }),
          n)
        : null;
    },
    resize: function(t, e) {
      var i = this._viewport;
      i.style.display = 'none';
      var n = this._opts;
      if (
        (null != t && (n.width = t),
        null != e && (n.height = e),
        (t = this._getSize(0)),
        (e = this._getSize(1)),
        (i.style.display = ''),
        this._width !== t || this._height !== e)
      ) {
        (this._width = t), (this._height = e);
        var o = i.style;
        (o.width = t + 'px'), (o.height = e + 'px');
        var a = this._svgDom;
        a.setAttribute('width', t), a.setAttribute('height', e);
      }
      this._backgroundNode &&
        (this._backgroundNode.setAttribute('width', t),
        this._backgroundNode.setAttribute('height', e));
    },
    getWidth: function() {
      return this._width;
    },
    getHeight: function() {
      return this._height;
    },
    _getSize: function(t) {
      var e = this._opts,
        i = ['width', 'height'][t],
        n = ['clientWidth', 'clientHeight'][t],
        o = ['paddingLeft', 'paddingTop'][t],
        a = ['paddingRight', 'paddingBottom'][t];
      if (null != e[i] && 'auto' !== e[i]) return parseFloat(e[i]);
      var r = this.root,
        s = document.defaultView.getComputedStyle(r);
      return (
        ((r[n] || MP(s[i]) || MP(r.style[i])) -
          (MP(s[o]) || 0) -
          (MP(s[a]) || 0)) |
        0
      );
    },
    dispose: function() {
      (this.root.innerHTML = ''),
        (this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null);
    },
    clear: function() {
      this._viewport && this.root.removeChild(this._viewport);
    },
    toDataURL: function() {
      return (
        this.refresh(),
        'data:image/svg+xml;charset=UTF-8,' +
          encodeURIComponent(this._svgDom.outerHTML.replace(/></g, '>\n\r<'))
      );
    },
  }),
    E(
      [
        'getLayer',
        'insertLayer',
        'eachLayer',
        'eachBuiltinLayer',
        'eachOtherLayer',
        'getLayers',
        'modLayer',
        'delLayer',
        'clearLayer',
        'pathToImage',
      ],
      function(t) {
        kP.prototype[t] = (function(t) {
          return function() {
            xi('In SVG mode painter not support method "' + t + '"');
          };
        })(t);
      },
    ),
    Eo('svg', kP),
    (t.version = '4.8.0'),
    (t.dependencies = Od),
    (t.PRIORITY = Ed),
    (t.init = function(t, e, i) {
      if (D) {
        if (No.replace('.', '') - 0 < Od.zrender.replace('.', '') - 0)
          throw new Error(
            'zrender/src 4.3.1 is too old for ECharts 4.8.0. Current version need ZRender ' +
              Od.zrender +
              '+',
          );
        if (!t) throw new Error('Initialize failed: invalid dom.');
      }
      var n = bf(t);
      if (n)
        return (
          D &&
            console.warn(
              'There is a chart instance already initialized on the dom.',
            ),
          n
        );
      D &&
        (!W(t) ||
          'CANVAS' === t.nodeName.toUpperCase() ||
          ((t.clientWidth || (i && null != i.width)) &&
            (t.clientHeight || (i && null != i.height))) ||
          console.warn(
            "Can't get DOM width or height. Please check dom.clientWidth and dom.clientHeight. They should not be 0.For example, you may need to call this in the callback of window.onload.",
          ));
      var o = new Fd(t, e, i);
      return (
        (o.id = 'ec_' + vf++),
        (gf[o.id] = o),
        ea(t, xf, o.id),
        (function(n) {
          var o = '__connectUpdateStatus';
          function a(t, e) {
            for (var i = 0; i < t.length; i++) {
              t[i][o] = e;
            }
          }
          Ld(lf, function(t, e) {
            n._messageCenter.on(e, function(t) {
              if (mf[n.group] && 0 !== n[o]) {
                if (t && t.escapeConnect) return;
                var e = n.makeActionFromEvent(t),
                  i = [];
                Ld(gf, function(t) {
                  t !== n && t.group === n.group && i.push(t);
                }),
                  a(i, 0),
                  Ld(i, function(t) {
                    1 !== t[o] && t.dispatchAction(e);
                  }),
                  a(i, 2);
              }
            });
          });
        })(o),
        o
      );
    }),
    (t.connect = function(e) {
      if (R(e)) {
        var t = e;
        (e = null),
          Ld(t, function(t) {
            null != t.group && (e = t.group);
          }),
          (e = e || 'g_' + yf++),
          Ld(t, function(t) {
            t.group = e;
          });
      }
      return (mf[e] = !0), e;
    }),
    (t.disConnect = _f),
    (t.disconnect = wf),
    (t.dispose = function(t) {
      'string' == typeof t ? (t = gf[t]) : t instanceof Fd || (t = bf(t)),
        t instanceof Fd && !t.isDisposed() && t.dispose();
    }),
    (t.getInstanceByDom = bf),
    (t.getInstanceById = function(t) {
      return gf[t];
    }),
    (t.registerTheme = Sf),
    (t.registerPreprocessor = Mf),
    (t.registerProcessor = If),
    (t.registerPostUpdate = function(t) {
      cf.push(t);
    }),
    (t.registerAction = Tf),
    (t.registerCoordinateSystem = Af),
    (t.getCoordinateSystemDimensions = function(t) {
      var e = dh.get(t);
      if (e)
        return e.getDimensionsInfo
          ? e.getDimensionsInfo()
          : e.dimensions.slice();
    }),
    (t.registerLayout = Df),
    (t.registerVisual = Cf),
    (t.registerLoading = kf),
    (t.extendComponentModel = Pf),
    (t.extendComponentView = Nf),
    (t.extendSeriesModel = Of),
    (t.extendChartView = Ef),
    (t.setCanvasCreator = function(t) {
      p('createCanvas', t);
    }),
    (t.registerMap = function(t, e, i) {
      Ad.registerMap(t, e, i);
    }),
    (t.getMap = function(t) {
      var e = Ad.retrieveMap(t);
      return (
        e && e[0] && {geoJson: e[0].geoJSON, specialAreas: e[0].specialAreas}
      );
    }),
    (t.dataTool = {}),
    (t.zrender = zo),
    (t.number = iu),
    (t.format = xu),
    (t.throttle = Oc),
    (t.helper = Lg),
    (t.matrix = me),
    (t.vector = At),
    (t.color = ti),
    (t.parseGeoJSON = Rg),
    (t.parseGeoJson = qg),
    (t.util = Kg),
    (t.graphic = $g),
    (t.List = Qf),
    (t.Model = Pl),
    (t.Axis = Yg),
    (t.env = v);
});
